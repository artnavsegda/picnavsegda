

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -356382666 
                                                                                               Wed Sep 09 15:18:44 2015

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   128                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   133                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   134                           	psect	pa_nodes,global,class=CODE,delta=1
   135                           	dabs	1,0xE7E,2,_errataTemp
   136  0000                     tosu	equ	0xFFF
   137                           tosh	equ	0xFFE
   138                           tosl	equ	0xFFD
   139                           pclath	equ	0xFFA
   140                           tblptru	equ	0xFF8
   141                           tblptrh	equ	0xFF7
   142                           tblptrl	equ	0xFF6
   143                           tablat	equ	0xFF5
   144                           prodh	equ	0xFF4
   145                           prodl	equ	0xFF3
   146                           intcon	equ	0xFF2
   147                           indf0	equ	0xFEF
   148                           postinc0	equ	0xFEE
   149                           fsr0h	equ	0xFEA
   150                           fsr0l	equ	0xFE9
   151                           wreg	equ	0xFE8
   152                           indf1	equ	0xFE7
   153                           postinc1	equ	0xFE6
   154                           postdec1	equ	0xFE5
   155                           plusw1	equ	0xFE3
   156                           fsr1h	equ	0xFE2
   157                           fsr1l	equ	0xFE1
   158                           bsr	equ	0xFE0
   159                           indf2	equ	0xFDF
   160                           postinc2	equ	0xFDE
   161                           postdec2	equ	0xFDD
   162                           plusw2	equ	0xFDB
   163                           fsr2h	equ	0xFDA
   164                           fsr2l	equ	0xFD9
   165                           status	equ	0xFD8
   166                           
   167                           	psect	idataCOMRAM
   168  0063C6                     __pidataCOMRAM:
   169                           	opt stack 0
   170                           
   171                           ;initializer for _clientState
   172  0063C6  01                 	db	1
   173                           tosu	equ	0xFFF
   174                           tosh	equ	0xFFE
   175                           tosl	equ	0xFFD
   176                           pclath	equ	0xFFA
   177                           tblptru	equ	0xFF8
   178                           tblptrh	equ	0xFF7
   179                           tblptrl	equ	0xFF6
   180                           tablat	equ	0xFF5
   181                           prodh	equ	0xFF4
   182                           prodl	equ	0xFF3
   183                           intcon	equ	0xFF2
   184                           indf0	equ	0xFEF
   185                           postinc0	equ	0xFEE
   186                           fsr0h	equ	0xFEA
   187                           fsr0l	equ	0xFE9
   188                           wreg	equ	0xFE8
   189                           indf1	equ	0xFE7
   190                           postinc1	equ	0xFE6
   191                           postdec1	equ	0xFE5
   192                           plusw1	equ	0xFE3
   193                           fsr1h	equ	0xFE2
   194                           fsr1l	equ	0xFE1
   195                           bsr	equ	0xFE0
   196                           indf2	equ	0xFDF
   197                           postinc2	equ	0xFDE
   198                           postdec2	equ	0xFDD
   199                           plusw2	equ	0xFDB
   200                           fsr2h	equ	0xFDA
   201                           fsr2l	equ	0xFD9
   202                           status	equ	0xFD8
   203                           
   204                           	psect	smallconst
   205  001000                     __psmallconst:
   206                           	opt stack 0
   207  001000  00                 	db	0
   208  001001                     _dpowers:
   209                           	opt stack 0
   210  001001  0001               	dw	1
   211  001003  000A               	dw	10
   212  001005  0064               	dw	100
   213  001007  03E8               	dw	1000
   214  001009  2710               	dw	10000
   215  00100B                     __end_of_dpowers:
   216                           	opt stack 0
   217  00100B                     _hexpowers:
   218                           	opt stack 0
   219  00100B  0001               	dw	1
   220  00100D  0010               	dw	16
   221  00100F  0100               	dw	256
   222  001011  1000               	dw	4096
   223  001013                     __end_of_hexpowers:
   224                           	opt stack 0
   225  001013                     _dhcpName:
   226                           	opt stack 0
   227  001013  50                 	db	80
   228  001014  49                 	db	73
   229  001015  43                 	db	67
   230  001016  31                 	db	49
   231  001017  38                 	db	56
   232  001018  46                 	db	70
   233  001019  39                 	db	57
   234  00101A  37                 	db	55
   235  00101B  4A                 	db	74
   236  00101C  36                 	db	54
   237  00101D  30                 	db	48
   238  00101E  20                 	db	32
   239  00101F  45                 	db	69
   240  001020  54                 	db	84
   241  001021  48                 	db	72
   242  001022  45                 	db	69
   243  001023  52                 	db	82
   244  001024  4E                 	db	78
   245  001025  45                 	db	69
   246  001026  54                 	db	84
   247  001027  00                 	db	0
   248  001028                     __end_of_dhcpName:
   249                           	opt stack 0
   250  001028                     _broadcastMAC:
   251                           	opt stack 0
   252  001028  FF                 	db	255
   253  001029  FF                 	db	255
   254  00102A  FF                 	db	255
   255  00102B  FF                 	db	255
   256  00102C  FF                 	db	255
   257  00102D  FF                 	db	255
   258  00102E                     __end_of_broadcastMAC:
   259                           	opt stack 0
   260  00102E                     _macAddress:
   261                           	opt stack 0
   262  00102E  00                 	db	0
   263  00102F  DE                 	db	222
   264  001030  AD                 	db	173
   265  001031  00                 	db	0
   266  001032  BE                 	db	190
   267  001033  EF                 	db	239
   268  001034                     __end_of_macAddress:
   269                           	opt stack 0
   270  001034                     _UDP_CallBackTable:
   271                           	opt stack 0
   272  001034  0044               	dw	68
   273  001036  7E                 	db	low _DHCP_Handler
   274  001037  39                 	db	high _DHCP_Handler
   275  001038  00                 	db	low (_DHCP_Handler shr (0+16))
   276  001039                     __end_of_UDP_CallBackTable:
   277                           	opt stack 0
   278  001039                     STR_3:
   279                           
   280                           ; BSR set to: 14
   281  001039  0D                 	db	13
   282  00103A  0A                 	db	10
   283  00103B  0D                 	db	13
   284  00103C  0A                 	db	10
   285  00103D  53                 	db	83	;'S'
   286  00103E  74                 	db	116	;'t'
   287  00103F  61                 	db	97	;'a'
   288  001040  72                 	db	114	;'r'
   289  001041  74                 	db	116	;'t'
   290  001042  69                 	db	105	;'i'
   291  001043  6E                 	db	110	;'n'
   292  001044  67                 	db	103	;'g'
   293  001045  20                 	db	32
   294  001046  53                 	db	83	;'S'
   295  001047  79                 	db	121	;'y'
   296  001048  73                 	db	115	;'s'
   297  001049  6C                 	db	108	;'l'
   298  00104A  6F                 	db	111	;'o'
   299  00104B  67                 	db	103	;'g'
   300  00104C  20                 	db	32
   301  00104D  61                 	db	97	;'a'
   302  00104E  74                 	db	116	;'t'
   303  00104F  20                 	db	32
   304  001050  25                 	db	37
   305  001051  75                 	db	117	;'u'
   306  001052  0D                 	db	13
   307  001053  0A                 	db	10
   308  001054  00                 	db	0
   309  001055                     STR_9:
   310                           
   311                           ; BSR set to: 14
   312  001055  30                 	db	48	;'0'
   313  001056  31                 	db	49	;'1'
   314  001057  32                 	db	50	;'2'
   315  001058  33                 	db	51	;'3'
   316  001059  34                 	db	52	;'4'
   317  00105A  35                 	db	53	;'5'
   318  00105B  36                 	db	54	;'6'
   319  00105C  37                 	db	55	;'7'
   320  00105D  38                 	db	56	;'8'
   321  00105E  39                 	db	57	;'9'
   322  00105F  61                 	db	97	;'a'
   323  001060  62                 	db	98	;'b'
   324  001061  63                 	db	99	;'c'
   325  001062  64                 	db	100	;'d'
   326  001063  65                 	db	101	;'e'
   327  001064  66                 	db	102	;'f'
   328  001065  00                 	db	0
   329  001066                     STR_5:
   330                           
   331                           ; BSR set to: 14
   332  001066  57                 	db	87	;'W'
   333  001067  61                 	db	97	;'a'
   334  001068  69                 	db	105	;'i'
   335  001069  74                 	db	116	;'t'
   336  00106A  69                 	db	105	;'i'
   337  00106B  6E                 	db	110	;'n'
   338  00106C  67                 	db	103	;'g'
   339  00106D  20                 	db	32
   340  00106E  66                 	db	102	;'f'
   341  00106F  6F                 	db	111	;'o'
   342  001070  72                 	db	114	;'r'
   343  001071  20                 	db	32
   344  001072  4C                 	db	76	;'L'
   345  001073  69                 	db	105	;'i'
   346  001074  6E                 	db	110	;'n'
   347  001075  6B                 	db	107	;'k'
   348  001076  00                 	db	0
   349  001077                     STR_1:
   350                           
   351                           ; BSR set to: 14
   352  001077  44                 	db	68	;'D'
   353  001078  4D                 	db	77	;'M'
   354  001079  41                 	db	65	;'A'
   355  00107A  20                 	db	32
   356  00107B  54                 	db	84	;'T'
   357  00107C  49                 	db	73	;'I'
   358  00107D  4D                 	db	77	;'M'
   359  00107E  45                 	db	69	;'E'
   360  00107F  4F                 	db	79	;'O'
   361  001080  55                 	db	85	;'U'
   362  001081  54                 	db	84	;'T'
   363  001082  21                 	db	33
   364  001083  21                 	db	33
   365  001084  21                 	db	33
   366  001085  00                 	db	0
   367  001086                     STR_6:
   368                           
   369                           ; BSR set to: 14
   370  001086  4C                 	db	76	;'L'
   371  001087  69                 	db	105	;'i'
   372  001088  6E                 	db	110	;'n'
   373  001089  6B                 	db	107	;'k'
   374  00108A  20                 	db	32
   375  00108B  73                 	db	115	;'s'
   376  00108C  74                 	db	116	;'t'
   377  00108D  61                 	db	97	;'a'
   378  00108E  72                 	db	114	;'r'
   379  00108F  74                 	db	116	;'t'
   380  001090  65                 	db	101	;'e'
   381  001091  64                 	db	100	;'d'
   382  001092  00                 	db	0
   383  001093                     STR_7:
   384                           
   385                           ; BSR set to: 14
   386  001093  25                 	db	37
   387  001094  64                 	db	100	;'d'
   388  001095  2E                 	db	46
   389  001096  25                 	db	37
   390  001097  64                 	db	100	;'d'
   391  001098  2E                 	db	46
   392  001099  25                 	db	37
   393  00109A  64                 	db	100	;'d'
   394  00109B  2E                 	db	46
   395  00109C  25                 	db	37
   396  00109D  64                 	db	100	;'d'
   397  00109E  00                 	db	0
   398  00109F                     STR_4:
   399                           
   400                           ; BSR set to: 14
   401  00109F  25                 	db	37
   402  0010A0  75                 	db	117	;'u'
   403  0010A1  20                 	db	32
   404  0010A2  3A                 	db	58	;':'
   405  0010A3  20                 	db	32
   406  0010A4  25                 	db	37
   407  0010A5  73                 	db	115	;'s'
   408  0010A6  0D                 	db	13
   409  0010A7  0A                 	db	10
   410  0010A8  00                 	db	0
   411  0010A9                     STR_2:
   412                           
   413                           ; BSR set to: 14
   414  0010A9  25                 	db	37
   415  0010AA  78                 	db	120	;'x'
   416  0010AB  20                 	db	32
   417  0010AC  3A                 	db	58	;':'
   418  0010AD  20                 	db	32
   419  0010AE  25                 	db	37
   420  0010AF  64                 	db	100	;'d'
   421  0010B0  00                 	db	0
   422  0010B1                     STR_8:
   423                           
   424                           ; BSR set to: 14
   425  0010B1  28                 	db	40
   426  0010B2  6E                 	db	110	;'n'
   427  0010B3  75                 	db	117	;'u'
   428  0010B4  6C                 	db	108	;'l'
   429  0010B5  6C                 	db	108	;'l'
   430  0010B6  29                 	db	41
   431  0010B7  00                 	db	0
   432                           
   433                           ; #config settings
   434  0010B8  00                 	db	0	; dummy byte at the end
   435  0000                     tosu	equ	0xFFF
   436                           tosh	equ	0xFFE
   437                           tosl	equ	0xFFD
   438                           pclath	equ	0xFFA
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           prodh	equ	0xFF4
   444                           prodl	equ	0xFF3
   445                           intcon	equ	0xFF2
   446                           indf0	equ	0xFEF
   447                           postinc0	equ	0xFEE
   448                           fsr0h	equ	0xFEA
   449                           fsr0l	equ	0xFE9
   450                           wreg	equ	0xFE8
   451                           indf1	equ	0xFE7
   452                           postinc1	equ	0xFE6
   453                           postdec1	equ	0xFE5
   454                           plusw1	equ	0xFE3
   455                           fsr1h	equ	0xFE2
   456                           fsr1l	equ	0xFE1
   457                           bsr	equ	0xFE0
   458                           indf2	equ	0xFDF
   459                           postinc2	equ	0xFDE
   460                           postdec2	equ	0xFDD
   461                           plusw2	equ	0xFDB
   462                           fsr2h	equ	0xFDA
   463                           fsr2l	equ	0xFD9
   464                           status	equ	0xFD8
   465                           
   466                           	psect	nvBANK2
   467  0002D0                     __pnvBANK2:
   468                           	opt stack 0
   469  0002D0                     _deviceTime:
   470                           	opt stack 0
   471  0002D0                     	ds	4
   472  0002D4                     _localTime:
   473                           	opt stack 0
   474  0002D4                     	ds	4
   475  0000                     _EDMADST	set	3828
   476  0000                     _EDMAND	set	3826
   477  0000                     _EDMAST	set	3824
   478  0000                     _ERXND	set	3818
   479  0000                     _ERXRDPT	set	3820
   480  0000                     _ERXST	set	3816
   481  0000                     _ETXND	set	3814
   482  0000                     _ETXST	set	3812
   483  0000                     _EWRPT	set	3810
   484  0000                     _MAIPG	set	3750
   485  0000                     _MAMXFL	set	3754
   486  0000                     _MIRD	set	3768
   487  0000                     _MIWR	set	3766
   488  0000                     _ECON2	set	3838
   489  0000                     _EIE	set	3835
   490  0000                     _EIEbits	set	3835
   491  0000                     _EPKTCNT	set	3801
   492  0000                     _ERXFCON	set	3800
   493  0000                     _ESTATbits	set	3837
   494  0000                     _MAADR1	set	3716
   495  0000                     _MAADR2	set	3717
   496  0000                     _MAADR3	set	3714
   497  0000                     _MAADR4	set	3715
   498  0000                     _MAADR5	set	3712
   499  0000                     _MAADR6	set	3713
   500  0000                     _MABBIPG	set	3748
   501  0000                     _MACON1	set	3744
   502  0000                     _MACON3	set	3746
   503  0000                     _MACON4	set	3747
   504  0000                     _MICMD	set	3762
   505  0000                     _MICMDbits	set	3762
   506  0000                     _MIREGADR	set	3764
   507  0000                     _MISTATbits	set	3722
   508  0000                     _ERDPT	set	3962
   509  0000                     _TMR1	set	4046
   510  0000                     _ADCON0	set	4034
   511  0000                     _ADCON1	set	4033
   512  0000                     _ADCON2	set	4032
   513  0000                     _ADRESH	set	4036
   514  0000                     _ADRESL	set	4035
   515  0000                     _BAUDCON1	set	3966
   516  0000                     _BAUDCON1bits	set	3966
   517  0000                     _ECON1	set	4050
   518  0000                     _ECON1bits	set	4050
   519  0000                     _EIRbits	set	3936
   520  0000                     _INTCON	set	4082
   521  0000                     _IPR2bits	set	4002
   522  0000                     _LATDbits	set	3980
   523  0000                     _LATE	set	3981
   524  0000                     _LATH	set	3984
   525  0000                     _LATJ	set	3985
   526  0000                     _OSCCON	set	4051
   527  0000                     _OSCTUNE	set	3995
   528  0000                     _PIE2bits	set	4000
   529  0000                     _PIR2bits	set	4001
   530  0000                     _SPBRG1	set	4015
   531  0000                     _SSP1CON1	set	4038
   532  0000                     _SSP1CON1bits	set	4038
   533  0000                     _SSP1STATbits	set	4039
   534  0000                     _TRISA	set	3986
   535  0000                     _TRISAbits	set	3986
   536  0000                     _TRISB	set	3987
   537  0000                     _TRISCbits	set	3988
   538  0000                     _TRISDbits	set	3989
   539  0000                     _TRISE	set	3990
   540  0000                     _TRISH	set	3993
   541  0000                     _TRISJ	set	3994
   542  0000                     _TXREG1	set	4013
   543  0000                     _TXSTA1	set	4012
   544  0000                     _CREN1	set	32092
   545  0000                     _GIE	set	32663
   546  0000                     _GIEH	set	32663
   547  0000                     _GIEL	set	32662
   548  0000                     _IPEN	set	32391
   549  0000                     _LATH0	set	31872
   550  0000                     _LATH1	set	31873
   551  0000                     _LATH2	set	31874
   552  0000                     _SPEN1	set	32095
   553  0000                     _T1CKPS0	set	32364
   554  0000                     _T1CKPS1	set	32365
   555  0000                     _T1OSCEN	set	32363
   556  0000                     _T1SYNC	set	32362
   557  0000                     _TMR1CS	set	32361
   558  0000                     _TMR1IE	set	31976
   559  0000                     _TMR1IF	set	31984
   560  0000                     _TMR1IP	set	31992
   561  0000                     _TMR1ON	set	32360
   562  0000                     _TX1IF	set	31988
   563                           tosu	equ	0xFFF
   564                           tosh	equ	0xFFE
   565                           tosl	equ	0xFFD
   566                           pclath	equ	0xFFA
   567                           tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           prodh	equ	0xFF4
   572                           prodl	equ	0xFF3
   573                           intcon	equ	0xFF2
   574                           indf0	equ	0xFEF
   575                           postinc0	equ	0xFEE
   576                           fsr0h	equ	0xFEA
   577                           fsr0l	equ	0xFE9
   578                           wreg	equ	0xFE8
   579                           indf1	equ	0xFE7
   580                           postinc1	equ	0xFE6
   581                           postdec1	equ	0xFE5
   582                           plusw1	equ	0xFE3
   583                           fsr1h	equ	0xFE2
   584                           fsr1l	equ	0xFE1
   585                           bsr	equ	0xFE0
   586                           indf2	equ	0xFDF
   587                           postinc2	equ	0xFDE
   588                           postdec2	equ	0xFDD
   589                           plusw2	equ	0xFDB
   590                           fsr2h	equ	0xFDA
   591                           fsr2l	equ	0xFD9
   592                           status	equ	0xFD8
   593                           
   594                           	psect	cinit
   595  005B14                     __pcinit:
   596                           	opt stack 0
   597  005B14                     start_initialization:
   598                           	opt stack 0
   599  005B14                     __initialization:
   600                           	opt stack 0
   601                           
   602                           ; Clear objects allocated to BANK3 (104 bytes)
   603  005B14  EE03  F000         	lfsr	0,__pbssBANK3
   604  005B18  0E68               	movlw	104
   605  005B1A                     clear_0:
   606  005B1A  6AEE               	clrf	postinc0,c
   607  005B1C  06E8               	decf	wreg,f,c
   608  005B1E  E1FD               	bnz	clear_0
   609                           
   610                           ; Clear objects allocated to BANK2 (163 bytes)
   611  005B20  EE02  F000         	lfsr	0,__pbssBANK2
   612  005B24  0EA3               	movlw	163
   613  005B26                     clear_1:
   614  005B26  6AEE               	clrf	postinc0,c
   615  005B28  06E8               	decf	wreg,f,c
   616  005B2A  E1FD               	bnz	clear_1
   617                           
   618                           ; Clear objects allocated to BANK1 (47 bytes)
   619  005B2C  EE01  F0BD         	lfsr	0,__pbssBANK1
   620  005B30  0E2F               	movlw	47
   621  005B32                     clear_2:
   622  005B32  6AEE               	clrf	postinc0,c
   623  005B34  06E8               	decf	wreg,f,c
   624  005B36  E1FD               	bnz	clear_2
   625                           
   626                           ; Clear objects allocated to COMRAM (21 bytes)
   627  005B38  EE00  F033         	lfsr	0,__pbssCOMRAM
   628  005B3C  0E15               	movlw	21
   629  005B3E                     clear_3:
   630  005B3E  6AEE               	clrf	postinc0,c
   631  005B40  06E8               	decf	wreg,f,c
   632  005B42  E1FD               	bnz	clear_3
   633                           
   634                           ; Initialize objects allocated to COMRAM (1 bytes)
   635                           ; load TBLPTR registers with __pidataCOMRAM
   636  005B44  0EC6               	movlw	low __pidataCOMRAM
   637  005B46  6EF6               	movwf	tblptrl,c
   638  005B48  0E63               	movlw	high __pidataCOMRAM
   639  005B4A  6EF7               	movwf	tblptrh,c
   640  005B4C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   641  005B4E  6EF8               	movwf	tblptru,c
   642  005B50  0009               	tblrd		*+	;fetch initializer
   643  005B52  CFF5 F048          	movff	tablat,__pdataCOMRAM
   644  005B56                     end_of_initialization:
   645                           	opt stack 0
   646  005B56                     __end_of__initialization:
   647                           	opt stack 0
   648  005B56  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   649  005B58  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   650  005B5A  0100               	movlb	0
   651  005B5C  EF06  F026         	goto	_main	;jump to C main() function
   652                           tosu	equ	0xFFF
   653                           tosh	equ	0xFFE
   654                           tosl	equ	0xFFD
   655                           pclath	equ	0xFFA
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           prodh	equ	0xFF4
   661                           prodl	equ	0xFF3
   662                           intcon	equ	0xFF2
   663                           indf0	equ	0xFEF
   664                           postinc0	equ	0xFEE
   665                           fsr0h	equ	0xFEA
   666                           fsr0l	equ	0xFE9
   667                           wreg	equ	0xFE8
   668                           indf1	equ	0xFE7
   669                           postinc1	equ	0xFE6
   670                           postdec1	equ	0xFE5
   671                           plusw1	equ	0xFE3
   672                           fsr1h	equ	0xFE2
   673                           fsr1l	equ	0xFE1
   674                           bsr	equ	0xFE0
   675                           indf2	equ	0xFDF
   676                           postinc2	equ	0xFDE
   677                           postdec2	equ	0xFDD
   678                           plusw2	equ	0xFDB
   679                           fsr2h	equ	0xFDA
   680                           fsr2l	equ	0xFD9
   681                           status	equ	0xFD8
   682                           
   683                           	psect	bssCOMRAM
   684  000033                     __pbssCOMRAM:
   685                           	opt stack 0
   686  000033                     _dhcpLeaseTime:
   687                           	opt stack 0
   688  000033                     	ds	4
   689  000037                     _ipv4Address:
   690                           	opt stack 0
   691  000037                     	ds	4
   692  00003B                     _receivedRemoteAddress:
   693                           	opt stack 0
   694  00003B                     	ds	4
   695  00003F                     _currentTCB:
   696                           	opt stack 0
   697  00003F                     	ds	2
   698  000041                     _nextPacketPointer:
   699                           	opt stack 0
   700  000041                     	ds	2
   701  000043                     _tcbList:
   702                           	opt stack 0
   703  000043                     	ds	2
   704  000045                     _tcpMss:
   705                           	opt stack 0
   706  000045                     	ds	2
   707  000047                     _tcbListSize:
   708                           	opt stack 0
   709  000047                     	ds	1
   710                           tosu	equ	0xFFF
   711                           tosh	equ	0xFFE
   712                           tosl	equ	0xFFD
   713                           pclath	equ	0xFFA
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           prodh	equ	0xFF4
   719                           prodl	equ	0xFF3
   720                           intcon	equ	0xFF2
   721                           indf0	equ	0xFEF
   722                           postinc0	equ	0xFEE
   723                           fsr0h	equ	0xFEA
   724                           fsr0l	equ	0xFE9
   725                           wreg	equ	0xFE8
   726                           indf1	equ	0xFE7
   727                           postinc1	equ	0xFE6
   728                           postdec1	equ	0xFE5
   729                           plusw1	equ	0xFE3
   730                           fsr1h	equ	0xFE2
   731                           fsr1l	equ	0xFE1
   732                           bsr	equ	0xFE0
   733                           indf2	equ	0xFDF
   734                           postinc2	equ	0xFDE
   735                           postdec2	equ	0xFDD
   736                           plusw2	equ	0xFDB
   737                           fsr2h	equ	0xFDA
   738                           fsr2l	equ	0xFD9
   739                           status	equ	0xFD8
   740                           
   741                           	psect	dataCOMRAM
   742  000048                     __pdataCOMRAM:
   743                           	opt stack 0
   744  000048                     _clientState:
   745                           	opt stack 0
   746  000048                     	ds	1
   747                           tosu	equ	0xFFF
   748                           tosh	equ	0xFFE
   749                           tosl	equ	0xFFD
   750                           pclath	equ	0xFFA
   751                           tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           prodh	equ	0xFF4
   756                           prodl	equ	0xFF3
   757                           intcon	equ	0xFF2
   758                           indf0	equ	0xFEF
   759                           postinc0	equ	0xFEE
   760                           fsr0h	equ	0xFEA
   761                           fsr0l	equ	0xFE9
   762                           wreg	equ	0xFE8
   763                           indf1	equ	0xFE7
   764                           postinc1	equ	0xFE6
   765                           postdec1	equ	0xFE5
   766                           plusw1	equ	0xFE3
   767                           fsr1h	equ	0xFE2
   768                           fsr1l	equ	0xFE1
   769                           bsr	equ	0xFE0
   770                           indf2	equ	0xFDF
   771                           postinc2	equ	0xFDE
   772                           postdec2	equ	0xFDD
   773                           plusw2	equ	0xFDB
   774                           fsr2h	equ	0xFDA
   775                           fsr2l	equ	0xFD9
   776                           status	equ	0xFD8
   777                           
   778                           	psect	bssBANK1
   779  0001BD                     __pbssBANK1:
   780                           	opt stack 0
   781  0001BD                     _ethData:
   782                           	opt stack 0
   783  0001BD                     	ds	7
   784  0001C4                     _ipv4Router:
   785                           	opt stack 0
   786  0001C4                     	ds	4
   787  0001C8                     _ipv4SubnetMask:
   788                           	opt stack 0
   789  0001C8                     	ds	4
   790  0001CC                     _rxPacketStatusVector:
   791                           	opt stack 0
   792  0001CC                     	ds	4
   793  0001D0                     _nextAvailablePort:
   794                           	opt stack 0
   795  0001D0                     	ds	2
   796  0001D2                     _rcvPayloadLen:
   797                           	opt stack 0
   798  0001D2                     	ds	2
   799  0001D4                     _tcpHeader:
   800                           	opt stack 0
   801  0001D4                     	ds	20
   802  0001E8                     _arpTimer:
   803                           	opt stack 0
   804  0001E8                     	ds	4
   805                           tosu	equ	0xFFF
   806                           tosh	equ	0xFFE
   807                           tosl	equ	0xFFD
   808                           pclath	equ	0xFFA
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           prodh	equ	0xFF4
   814                           prodl	equ	0xFF3
   815                           intcon	equ	0xFF2
   816                           indf0	equ	0xFEF
   817                           postinc0	equ	0xFEE
   818                           fsr0h	equ	0xFEA
   819                           fsr0l	equ	0xFE9
   820                           wreg	equ	0xFE8
   821                           indf1	equ	0xFE7
   822                           postinc1	equ	0xFE6
   823                           postdec1	equ	0xFE5
   824                           plusw1	equ	0xFE3
   825                           fsr1h	equ	0xFE2
   826                           fsr1l	equ	0xFE1
   827                           bsr	equ	0xFE0
   828                           indf2	equ	0xFDF
   829                           postinc2	equ	0xFDE
   830                           postdec2	equ	0xFDD
   831                           plusw2	equ	0xFDB
   832                           fsr2h	equ	0xFDA
   833                           fsr2l	equ	0xFD9
   834                           status	equ	0xFD8
   835                           
   836                           	psect	bssBANK2
   837  000200                     __pbssBANK2:
   838                           	opt stack 0
   839  000200                     _led_values:
   840                           	opt stack 0
   841  000200                     	ds	16
   842  000210                     _ipv4DNS:
   843                           	opt stack 0
   844  000210                     	ds	8
   845  000218                     Network_Manage@nowPv:
   846                           	opt stack 0
   847  000218                     	ds	4
   848  00021C                     _dhcpServerId:
   849                           	opt stack 0
   850  00021C                     	ds	4
   851  000220                     _nextSequenceNumber:
   852                           	opt stack 0
   853  000220                     	ds	4
   854  000224                     _remoteIpv4Address:
   855                           	opt stack 0
   856  000224                     	ds	4
   857  000228                     DEMO_TCP_EchoServer@port7TCB:
   858                           	opt stack 0
   859  000228                     	ds	55
   860  00025F                     DEMO_TCP_EchoServer@rxdataPort7:
   861                           	opt stack 0
   862  00025F                     	ds	20
   863  000273                     DEMO_TCP_EchoServer@txdataPort7:
   864                           	opt stack 0
   865  000273                     	ds	20
   866  000287                     _ipv4Header:
   867                           	opt stack 0
   868  000287                     	ds	20
   869  00029B                     _udpHeader:
   870                           	opt stack 0
   871  00029B                     	ds	8
   872                           tosu	equ	0xFFF
   873                           tosh	equ	0xFFE
   874                           tosl	equ	0xFFD
   875                           pclath	equ	0xFFA
   876                           tblptru	equ	0xFF8
   877                           tblptrh	equ	0xFF7
   878                           tblptrl	equ	0xFF6
   879                           tablat	equ	0xFF5
   880                           prodh	equ	0xFF4
   881                           prodl	equ	0xFF3
   882                           intcon	equ	0xFF2
   883                           indf0	equ	0xFEF
   884                           postinc0	equ	0xFEE
   885                           fsr0h	equ	0xFEA
   886                           fsr0l	equ	0xFE9
   887                           wreg	equ	0xFE8
   888                           indf1	equ	0xFE7
   889                           postinc1	equ	0xFE6
   890                           postdec1	equ	0xFE5
   891                           plusw1	equ	0xFE3
   892                           fsr1h	equ	0xFE2
   893                           fsr1l	equ	0xFE1
   894                           bsr	equ	0xFE0
   895                           indf2	equ	0xFDF
   896                           postinc2	equ	0xFDE
   897                           postdec2	equ	0xFDD
   898                           plusw2	equ	0xFDB
   899                           fsr2h	equ	0xFDA
   900                           fsr2l	equ	0xFD9
   901                           status	equ	0xFD8
   902                           
   903                           	psect	bssBANK3
   904  000300                     __pbssBANK3:
   905                           	opt stack 0
   906  000300                     _arpMap:
   907                           	opt stack 0
   908  000300                     	ds	104
   909                           tosu	equ	0xFFF
   910                           tosh	equ	0xFFE
   911                           tosl	equ	0xFFD
   912                           pclath	equ	0xFFA
   913                           tblptru	equ	0xFF8
   914                           tblptrh	equ	0xFF7
   915                           tblptrl	equ	0xFF6
   916                           tablat	equ	0xFF5
   917                           prodh	equ	0xFF4
   918                           prodl	equ	0xFF3
   919                           intcon	equ	0xFF2
   920                           indf0	equ	0xFEF
   921                           postinc0	equ	0xFEE
   922                           fsr0h	equ	0xFEA
   923                           fsr0l	equ	0xFE9
   924                           wreg	equ	0xFE8
   925                           indf1	equ	0xFE7
   926                           postinc1	equ	0xFE6
   927                           postdec1	equ	0xFE5
   928                           plusw1	equ	0xFE3
   929                           fsr1h	equ	0xFE2
   930                           fsr1l	equ	0xFE1
   931                           bsr	equ	0xFE0
   932                           indf2	equ	0xFDF
   933                           postinc2	equ	0xFDE
   934                           postdec2	equ	0xFDD
   935                           plusw2	equ	0xFDB
   936                           fsr2h	equ	0xFDA
   937                           fsr2l	equ	0xFD9
   938                           status	equ	0xFD8
   939                           
   940                           	psect	cstackBANK2
   941  0002A3                     __pcstackBANK2:
   942                           	opt stack 0
   943  0002A3                     main@old_ip:
   944                           	opt stack 0
   945                           
   946                           ; 4 bytes @ 0x0
   947  0002A3                     	ds	4
   948  0002A7                     main@t:
   949                           	opt stack 0
   950                           
   951                           ; 4 bytes @ 0x4
   952  0002A7                     	ds	4
   953  0002AB                     main@no_ip_display:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x8
   957  0002AB                     	ds	1
   958  0002AC                     main@str:
   959                           	opt stack 0
   960                           
   961                           ; 32 bytes @ 0x9
   962  0002AC                     	ds	32
   963  0002CC                     main@ip:
   964                           	opt stack 0
   965                           
   966                           ; 4 bytes @ 0x29
   967  0002CC                     	ds	4
   968                           tosu	equ	0xFFF
   969                           tosh	equ	0xFFE
   970                           tosl	equ	0xFFD
   971                           pclath	equ	0xFFA
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           prodh	equ	0xFF4
   977                           prodl	equ	0xFF3
   978                           intcon	equ	0xFF2
   979                           indf0	equ	0xFEF
   980                           postinc0	equ	0xFEE
   981                           fsr0h	equ	0xFEA
   982                           fsr0l	equ	0xFE9
   983                           wreg	equ	0xFE8
   984                           indf1	equ	0xFE7
   985                           postinc1	equ	0xFE6
   986                           postdec1	equ	0xFE5
   987                           plusw1	equ	0xFE3
   988                           fsr1h	equ	0xFE2
   989                           fsr1l	equ	0xFE1
   990                           bsr	equ	0xFE0
   991                           indf2	equ	0xFDF
   992                           postinc2	equ	0xFDE
   993                           postdec2	equ	0xFDD
   994                           plusw2	equ	0xFDB
   995                           fsr2h	equ	0xFDA
   996                           fsr2l	equ	0xFD9
   997                           status	equ	0xFD8
   998                           
   999                           	psect	cstackBANK1
  1000  000100                     __pcstackBANK1:
  1001                           	opt stack 0
  1002  000100                     ??_TCP_FiniteStateMachine:
  1003                           
  1004                           ; 0 bytes @ 0x0
  1005  000100                     	ds	12
  1006  00010C                     TCP_FiniteStateMachine@ret:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0xC
  1010  00010C                     	ds	1
  1011  00010D                     TCP_FiniteStateMachine@notAckBytes:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0xD
  1015  00010D                     	ds	2
  1016  00010F                     TCP_FiniteStateMachine@event:
  1017                           	opt stack 0
  1018                           
  1019                           ; 1 bytes @ 0xF
  1020  00010F                     	ds	1
  1021  000110                     TCP_FiniteStateMachine@nextState:
  1022                           	opt stack 0
  1023                           
  1024                           ; 1 bytes @ 0x10
  1025  000110                     	ds	1
  1026  000111                     ??_TCP_Update:
  1027  000111                     TCP_Listen@tcbPtr:
  1028                           	opt stack 0
  1029  000111                     TCP_Recv@remoteAddress:
  1030                           	opt stack 0
  1031                           
  1032                           ; 4 bytes @ 0x11
  1033  000111                     	ds	2
  1034  000113                     
  1035                           ; 0 bytes @ 0x13
  1036  000113                     	ds	2
  1037  000115                     TCP_Recv@length:
  1038                           	opt stack 0
  1039  000115                     DEMO_TCP_EchoServer@txLen:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0x15
  1043  000115                     	ds	2
  1044  000117                     ??_TCP_Recv:
  1045  000117                     DEMO_TCP_EchoServer@socket_state:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x17
  1049  000117                     	ds	1
  1050  000118                     DEMO_TCP_EchoServer@rxLen:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x18
  1054  000118                     	ds	1
  1055  000119                     TCP_Update@count:
  1056                           	opt stack 0
  1057                           
  1058                           ; 2 bytes @ 0x19
  1059  000119                     	ds	1
  1060  00011A                     DEMO_TCP_EchoServer@i:
  1061                           	opt stack 0
  1062                           
  1063                           ; 2 bytes @ 0x1A
  1064  00011A                     	ds	1
  1065  00011B                     TCP_Update@tcbPtr:
  1066                           	opt stack 0
  1067                           
  1068                           ; 2 bytes @ 0x1B
  1069  00011B                     	ds	24
  1070  000133                     TCP_Recv@count:
  1071                           	opt stack 0
  1072                           
  1073                           ; 1 bytes @ 0x33
  1074  000133                     	ds	1
  1075  000134                     TCP_Recv@tcbPtr:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0x34
  1079  000134                     	ds	2
  1080  000136                     ??_IPV4_Packet:
  1081                           
  1082                           ; 0 bytes @ 0x36
  1083  000136                     	ds	28
  1084  000152                     IPV4_Packet@hdrLen:
  1085                           	opt stack 0
  1086                           
  1087                           ; 1 bytes @ 0x52
  1088  000152                     	ds	1
  1089  000153                     IPV4_Packet@length:
  1090                           	opt stack 0
  1091                           
  1092                           ; 2 bytes @ 0x53
  1093  000153                     	ds	2
  1094  000155                     IPV4_Packet@cksm:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0x55
  1098  000155                     	ds	2
  1099  000157                     ??_Network_Read:
  1100                           
  1101                           ; 0 bytes @ 0x57
  1102  000157                     	ds	4
  1103  00015B                     Network_Read@debug_str:
  1104                           	opt stack 0
  1105                           
  1106                           ; 80 bytes @ 0x5B
  1107  00015B                     	ds	80
  1108  0001AB                     Network_Read@header:
  1109                           	opt stack 0
  1110                           
  1111                           ; 14 bytes @ 0xAB
  1112  0001AB                     	ds	14
  1113  0001B9                     Network_Manage@now:
  1114                           	opt stack 0
  1115                           
  1116                           ; 4 bytes @ 0xB9
  1117  0001B9                     	ds	4
  1118                           tosu	equ	0xFFF
  1119                           tosh	equ	0xFFE
  1120                           tosl	equ	0xFFD
  1121                           pclath	equ	0xFFA
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           prodh	equ	0xFF4
  1127                           prodl	equ	0xFF3
  1128                           intcon	equ	0xFF2
  1129                           indf0	equ	0xFEF
  1130                           postinc0	equ	0xFEE
  1131                           fsr0h	equ	0xFEA
  1132                           fsr0l	equ	0xFE9
  1133                           wreg	equ	0xFE8
  1134                           indf1	equ	0xFE7
  1135                           postinc1	equ	0xFE6
  1136                           postdec1	equ	0xFE5
  1137                           plusw1	equ	0xFE3
  1138                           fsr1h	equ	0xFE2
  1139                           fsr1l	equ	0xFE1
  1140                           bsr	equ	0xFE0
  1141                           indf2	equ	0xFDF
  1142                           postinc2	equ	0xFDE
  1143                           postdec2	equ	0xFDD
  1144                           plusw2	equ	0xFDB
  1145                           fsr2h	equ	0xFDA
  1146                           fsr2l	equ	0xFD9
  1147                           status	equ	0xFD8
  1148                           
  1149                           	psect	cstackBANK0
  1150  000060                     __pcstackBANK0:
  1151                           	opt stack 0
  1152  000060                     ??_ETH_TxComputeChecksum:
  1153  000060                     ??_ARPV4_Packet:
  1154  000060                     ??_ARPV4_Request:
  1155  000060                     ?_sprintf:
  1156                           	opt stack 0
  1157  000060                     ?_printf:
  1158                           	opt stack 0
  1159  000060                     sprintf@wh:
  1160                           	opt stack 0
  1161                           
  1162                           ; 2 bytes @ 0x0
  1163  000060                     	ds	2
  1164  000062                     sprintf@f:
  1165                           	opt stack 0
  1166                           
  1167                           ; 1 bytes @ 0x2
  1168  000062                     	ds	2
  1169  000064                     printf@f:
  1170                           	opt stack 0
  1171                           
  1172                           ; 1 bytes @ 0x4
  1173  000064                     	ds	1
  1174  000065                     printf@ap:
  1175                           	opt stack 0
  1176                           
  1177                           ; 1 bytes @ 0x5
  1178  000065                     	ds	1
  1179  000066                     printf@pb:
  1180                           	opt stack 0
  1181                           
  1182                           ; 5 bytes @ 0x6
  1183  000066                     	ds	5
  1184  00006B                     ??_IPV4_Send:
  1185  00006B                     sprintf@ap:
  1186                           	opt stack 0
  1187  00006B                     SYSLOG_Write@t:
  1188                           	opt stack 0
  1189  00006B                     SYSLOG_Init@t:
  1190                           	opt stack 0
  1191                           
  1192                           ; 4 bytes @ 0xB
  1193  00006B                     	ds	1
  1194  00006C                     sprintf@pb:
  1195                           	opt stack 0
  1196                           
  1197                           ; 5 bytes @ 0xC
  1198  00006C                     	ds	1
  1199  00006D                     ETH_Copy@len:
  1200                           	opt stack 0
  1201                           
  1202                           ; 2 bytes @ 0xD
  1203  00006D                     	ds	2
  1204  00006F                     IPV4_Send@ret:
  1205                           	opt stack 0
  1206  00006F                     ETH_Copy@timer:
  1207                           	opt stack 0
  1208                           
  1209                           ; 2 bytes @ 0xF
  1210  00006F                     	ds	1
  1211  000070                     IPV4_Send@cksm:
  1212                           	opt stack 0
  1213                           
  1214                           ; 2 bytes @ 0x10
  1215  000070                     	ds	1
  1216  000071                     ETH_Copy@tmp_len:
  1217                           	opt stack 0
  1218                           
  1219                           ; 2 bytes @ 0x11
  1220  000071                     	ds	1
  1221  000072                     IPV4_Send@totalLength:
  1222                           	opt stack 0
  1223                           
  1224                           ; 2 bytes @ 0x12
  1225  000072                     	ds	2
  1226  000074                     ??_UDP_Send:
  1227                           
  1228                           ; 0 bytes @ 0x14
  1229  000074                     	ds	5
  1230  000079                     UDP_Send@cksm:
  1231                           	opt stack 0
  1232                           
  1233                           ; 2 bytes @ 0x19
  1234  000079                     	ds	2
  1235  00007B                     ARPV4_Request@ret:
  1236                           	opt stack 0
  1237  00007B                     UDP_Send@udpLength:
  1238                           	opt stack 0
  1239                           
  1240                           ; 2 bytes @ 0x1B
  1241  00007B                     	ds	1
  1242  00007C                     ARPV4_Request@header:
  1243                           	opt stack 0
  1244                           
  1245                           ; 28 bytes @ 0x1C
  1246  00007C                     	ds	4
  1247  000080                     ARPV4_Packet@length:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0x20
  1251  000080                     	ds	2
  1252  000082                     ARPV4_Packet@mergeFlag:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0x22
  1256  000082                     	ds	1
  1257  000083                     ARPV4_Packet@ret:
  1258                           	opt stack 0
  1259                           
  1260                           ; 1 bytes @ 0x23
  1261  000083                     	ds	1
  1262  000084                     ARPV4_Packet@arpPtr:
  1263                           	opt stack 0
  1264                           
  1265                           ; 2 bytes @ 0x24
  1266  000084                     	ds	2
  1267  000086                     ARPV4_Packet@x:
  1268                           	opt stack 0
  1269                           
  1270                           ; 1 bytes @ 0x26
  1271  000086                     	ds	1
  1272  000087                     ARPV4_Packet@x_1672:
  1273                           	opt stack 0
  1274                           
  1275                           ; 1 bytes @ 0x27
  1276  000087                     	ds	1
  1277  000088                     ARPV4_Packet@entryPointer:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x28
  1281  000088                     	ds	2
  1282  00008A                     ARPV4_Packet@header:
  1283                           	opt stack 0
  1284                           
  1285                           ; 28 bytes @ 0x2A
  1286  00008A                     	ds	14
  1287  000098                     IPv4_Start@targetAddress:
  1288                           	opt stack 0
  1289                           
  1290                           ; 4 bytes @ 0x38
  1291  000098                     	ds	4
  1292  00009C                     IPv4_Start@macAddress:
  1293                           	opt stack 0
  1294                           
  1295                           ; 2 bytes @ 0x3C
  1296  00009C                     	ds	2
  1297  00009E                     IPv4_Start@ret:
  1298                           	opt stack 0
  1299                           
  1300                           ; 1 bytes @ 0x3E
  1301  00009E                     	ds	1
  1302  00009F                     ICMP_EchoReply@ipv4Hdr:
  1303                           	opt stack 0
  1304  00009F                     TCP_Snd@tcbPtr:
  1305                           	opt stack 0
  1306  00009F                     UDP_Start@destIP:
  1307                           	opt stack 0
  1308                           
  1309                           ; 4 bytes @ 0x3F
  1310  00009F                     	ds	2
  1311  0000A1                     ??_ICMP_EchoReply:
  1312  0000A1                     ??_TCP_Snd:
  1313                           
  1314                           ; 0 bytes @ 0x41
  1315  0000A1                     	ds	2
  1316  0000A3                     UDP_Start@srcPort:
  1317                           	opt stack 0
  1318                           
  1319                           ; 2 bytes @ 0x43
  1320  0000A3                     	ds	2
  1321  0000A5                     UDP_Start@dstPort:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0x45
  1325  0000A5                     	ds	2
  1326  0000A7                     DHCP_Request@started:
  1327                           	opt stack 0
  1328                           
  1329                           ; 1 bytes @ 0x47
  1330  0000A7                     	ds	1
  1331  0000A8                     DHCP_Request@type:
  1332                           	opt stack 0
  1333                           
  1334                           ; 1 bytes @ 0x48
  1335  0000A8                     	ds	1
  1336  0000A9                     ICMP_EchoReply@cksm:
  1337                           	opt stack 0
  1338  0000A9                     DHCP_Request@ethMAC:
  1339                           	opt stack 0
  1340                           
  1341                           ; 6 bytes @ 0x49
  1342  0000A9                     	ds	2
  1343  0000AB                     ICMP_EchoReply@ipv4PayloadLength:
  1344                           	opt stack 0
  1345                           
  1346                           ; 2 bytes @ 0x4B
  1347  0000AB                     	ds	2
  1348  0000AD                     ICMP_EchoReply@ret:
  1349                           	opt stack 0
  1350                           
  1351                           ; 1 bytes @ 0x4D
  1352  0000AD                     	ds	1
  1353  0000AE                     ICMP_EchoReply@icmpHdr:
  1354                           	opt stack 0
  1355                           
  1356                           ; 1 bytes @ 0x4E
  1357  0000AE                     	ds	1
  1358  0000AF                     DHCP_Handler@length:
  1359                           	opt stack 0
  1360  0000AF                     ICMP_Receive@ipv4Hdr:
  1361                           	opt stack 0
  1362                           
  1363                           ; 2 bytes @ 0x4F
  1364  0000AF                     	ds	2
  1365  0000B1                     ??_DHCP_Handler:
  1366  0000B1                     ??_ICMP_Receive:
  1367                           
  1368                           ; 0 bytes @ 0x51
  1369  0000B1                     	ds	2
  1370  0000B3                     DHCP_Handler@ip:
  1371                           	opt stack 0
  1372                           
  1373                           ; 8 bytes @ 0x53
  1374  0000B3                     	ds	3
  1375  0000B6                     ICMP_Receive@icmpHdr:
  1376                           	opt stack 0
  1377                           
  1378                           ; 8 bytes @ 0x56
  1379  0000B6                     	ds	5
  1380  0000BB                     DHCP_Handler@v:
  1381                           	opt stack 0
  1382                           
  1383                           ; 4 bytes @ 0x5B
  1384  0000BB                     	ds	4
  1385  0000BF                     DHCP_Handler@v16:
  1386                           	opt stack 0
  1387                           
  1388                           ; 2 bytes @ 0x5F
  1389  0000BF                     	ds	2
  1390  0000C1                     DHCP_Handler@option:
  1391                           	opt stack 0
  1392                           
  1393                           ; 1 bytes @ 0x61
  1394  0000C1                     	ds	1
  1395  0000C2                     DHCP_Handler@ethPktMAC:
  1396                           	opt stack 0
  1397                           
  1398                           ; 6 bytes @ 0x62
  1399  0000C2                     	ds	6
  1400  0000C8                     DHCP_Handler@ethMAC:
  1401                           	opt stack 0
  1402                           
  1403                           ; 6 bytes @ 0x68
  1404  0000C8                     	ds	6
  1405  0000CE                     DHCP_Handler@optionLength:
  1406                           	opt stack 0
  1407                           
  1408                           ; 1 bytes @ 0x6E
  1409  0000CE                     	ds	1
  1410  0000CF                     DHCP_Handler@myip:
  1411                           	opt stack 0
  1412                           
  1413                           ; 4 bytes @ 0x6F
  1414  0000CF                     	ds	2
  1415  0000D1                     TCP_Snd@data:
  1416                           	opt stack 0
  1417                           
  1418                           ; 2 bytes @ 0x71
  1419  0000D1                     	ds	2
  1420  0000D3                     TCP_Snd@cksm:
  1421                           	opt stack 0
  1422  0000D3                     UDP_Receive@udpcksm:
  1423                           	opt stack 0
  1424                           
  1425                           ; 2 bytes @ 0x73
  1426  0000D3                     	ds	2
  1427  0000D5                     ??_UDP_Receive:
  1428  0000D5                     TCP_Snd@payloadLength:
  1429                           	opt stack 0
  1430                           
  1431                           ; 2 bytes @ 0x75
  1432  0000D5                     	ds	2
  1433  0000D7                     TCP_Snd@ret:
  1434                           	opt stack 0
  1435                           
  1436                           ; 1 bytes @ 0x77
  1437  0000D7                     	ds	1
  1438  0000D8                     TCP_Snd@tcpDataLength:
  1439                           	opt stack 0
  1440                           
  1441                           ; 2 bytes @ 0x78
  1442  0000D8                     	ds	2
  1443  0000DA                     TCP_Snd@txHeader:
  1444                           	opt stack 0
  1445                           
  1446                           ; 20 bytes @ 0x7A
  1447  0000DA                     	ds	1
  1448  0000DB                     UDP_Receive@x:
  1449                           	opt stack 0
  1450                           
  1451                           ; 2 bytes @ 0x7B
  1452  0000DB                     	ds	2
  1453  0000DD                     UDP_Receive@hptr:
  1454                           	opt stack 0
  1455                           
  1456                           ; 1 bytes @ 0x7D
  1457  0000DD                     	ds	17
  1458  0000EE                     TCP_PayloadSave@len:
  1459                           	opt stack 0
  1460  0000EE                     TCP_Send@tcbPtr:
  1461                           	opt stack 0
  1462                           
  1463                           ; 2 bytes @ 0x8E
  1464  0000EE                     	ds	2
  1465  0000F0                     ??_TCP_PayloadSave:
  1466  0000F0                     TCP_Send@data:
  1467                           	opt stack 0
  1468                           
  1469                           ; 2 bytes @ 0x90
  1470  0000F0                     	ds	2
  1471  0000F2                     TCP_Send@dataLen:
  1472                           	opt stack 0
  1473                           
  1474                           ; 2 bytes @ 0x92
  1475  0000F2                     	ds	11
  1476  0000FD                     TCP_PayloadSave@buffer_size:
  1477                           	opt stack 0
  1478                           
  1479                           ; 2 bytes @ 0x9D
  1480  0000FD                     	ds	2
  1481  0000FF                     ??_Network_Manage:
  1482                           
  1483                           ; 0 bytes @ 0x9F
  1484  0000FF                     	ds	1
  1485                           tosu	equ	0xFFF
  1486                           tosh	equ	0xFFE
  1487                           tosl	equ	0xFFD
  1488                           pclath	equ	0xFFA
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           prodh	equ	0xFF4
  1494                           prodl	equ	0xFF3
  1495                           intcon	equ	0xFF2
  1496                           indf0	equ	0xFEF
  1497                           postinc0	equ	0xFEE
  1498                           fsr0h	equ	0xFEA
  1499                           fsr0l	equ	0xFE9
  1500                           wreg	equ	0xFE8
  1501                           indf1	equ	0xFE7
  1502                           postinc1	equ	0xFE6
  1503                           postdec1	equ	0xFE5
  1504                           plusw1	equ	0xFE3
  1505                           fsr1h	equ	0xFE2
  1506                           fsr1l	equ	0xFE1
  1507                           bsr	equ	0xFE0
  1508                           indf2	equ	0xFDF
  1509                           postinc2	equ	0xFDE
  1510                           postdec2	equ	0xFDD
  1511                           plusw2	equ	0xFDB
  1512                           fsr2h	equ	0xFDA
  1513                           fsr2l	equ	0xFD9
  1514                           status	equ	0xFD8
  1515                           
  1516                           	psect	cstackCOMRAM
  1517  000001                     __pcstackCOMRAM:
  1518                           	opt stack 0
  1519  000001                     i1PHY_WaitForBusy@ret:
  1520                           	opt stack 0
  1521                           
  1522                           ; 1 bytes @ 0x0
  1523  000001                     	ds	1
  1524  000002                     i1PHY_WaitForBusy@timeout:
  1525                           	opt stack 0
  1526                           
  1527                           ; 1 bytes @ 0x1
  1528  000002                     	ds	1
  1529  000003                     ?i1_PHY_Read:
  1530                           	opt stack 0
  1531                           
  1532                           ; 4 bytes @ 0x2
  1533  000003                     	ds	4
  1534  000007                     i1PHY_Read@reg:
  1535                           	opt stack 0
  1536                           
  1537                           ; 1 bytes @ 0x6
  1538  000007                     	ds	1
  1539  000008                     i1PHY_Read@ret:
  1540                           	opt stack 0
  1541                           
  1542                           ; 4 bytes @ 0x7
  1543  000008                     	ds	4
  1544  00000C                     ?i1_ETH_readLinkStatus:
  1545                           	opt stack 0
  1546                           
  1547                           ; 4 bytes @ 0xB
  1548  00000C                     	ds	4
  1549  000010                     i1ETH_CheckLinkUp@value:
  1550                           	opt stack 0
  1551                           
  1552                           ; 4 bytes @ 0xF
  1553  000010                     	ds	4
  1554  000014                     ??_low_isr:
  1555  000014                     
  1556                           ; 0 bytes @ 0x13
  1557  000014                     	ds	3
  1558  000017                     ??_ETH_Flush:
  1559  000017                     ?_memcmp:
  1560                           	opt stack 0
  1561  000017                     ?_ETH_Read16:
  1562                           	opt stack 0
  1563  000017                     ?_ETH_ReadBlock:
  1564                           	opt stack 0
  1565  000017                     ?_ETH_ComputeChecksum:
  1566                           	opt stack 0
  1567  000017                     ?_ETH_GetByteCount:
  1568                           	opt stack 0
  1569  000017                     ?_ARPV4_Lookup:
  1570                           	opt stack 0
  1571  000017                     ?_IPV4_PseudoHeaderChecksum:
  1572                           	opt stack 0
  1573  000017                     ?___wmul:
  1574                           	opt stack 0
  1575  000017                     ?___lwdiv:
  1576                           	opt stack 0
  1577  000017                     ?_time:
  1578                           	opt stack 0
  1579  000017                     ?_ETH_Read32:
  1580                           	opt stack 0
  1581  000017                     ?_IPV4_GetMyIP:
  1582                           	opt stack 0
  1583  000017                     lcd_write_ctrl@c:
  1584                           	opt stack 0
  1585  000017                     lcd_write_data@d:
  1586                           	opt stack 0
  1587  000017                     LED_Init@x:
  1588                           	opt stack 0
  1589  000017                     putch@data:
  1590                           	opt stack 0
  1591  000017                     PHY_WaitForBusy@ret:
  1592                           	opt stack 0
  1593  000017                     ETH_Read8@ret:
  1594                           	opt stack 0
  1595  000017                     ETH_Write8@data:
  1596                           	opt stack 0
  1597  000017                     ETH_GetMAC@mac:
  1598                           	opt stack 0
  1599  000017                     ARPV4_Init@x:
  1600                           	opt stack 0
  1601  000017                     memcmp@s2:
  1602                           	opt stack 0
  1603  000017                     time@t:
  1604                           	opt stack 0
  1605  000017                     ETH_ReadBlock@buffer:
  1606                           	opt stack 0
  1607  000017                     ETH_Write16@data:
  1608                           	opt stack 0
  1609  000017                     ETH_WriteBlock@buffer:
  1610                           	opt stack 0
  1611  000017                     ETH_WriteStart@dest_mac:
  1612                           	opt stack 0
  1613  000017                     ETH_Send@packetEnd:
  1614                           	opt stack 0
  1615  000017                     ETH_Insert@len:
  1616                           	opt stack 0
  1617  000017                     ETH_Dump@length:
  1618                           	opt stack 0
  1619  000017                     ETH_ComputeChecksum@len:
  1620                           	opt stack 0
  1621  000017                     ARPV4_Update@entryPointer:
  1622                           	opt stack 0
  1623  000017                     IPV4_PseudoHeaderChecksum@payloadLen:
  1624                           	opt stack 0
  1625  000017                     TCB_Insert@ptr:
  1626                           	opt stack 0
  1627  000017                     TCB_Reset@tcbPtr:
  1628                           	opt stack 0
  1629  000017                     TCB_Check@ptr:
  1630                           	opt stack 0
  1631  000017                     ___wmul@multiplier:
  1632                           	opt stack 0
  1633  000017                     ___lwdiv@dividend:
  1634                           	opt stack 0
  1635  000017                     memset@p1:
  1636                           	opt stack 0
  1637  000017                     ETH_Write32@data:
  1638                           	opt stack 0
  1639  000017                     ARPV4_Lookup@ip_address:
  1640                           	opt stack 0
  1641                           
  1642                           ; 4 bytes @ 0x16
  1643  000017                     	ds	1
  1644  000018                     ??_lcd_init:
  1645  000018                     lcd_putch@c:
  1646                           	opt stack 0
  1647  000018                     lcd_goto1@pos:
  1648                           	opt stack 0
  1649  000018                     PHY_WaitForBusy@timeout:
  1650                           	opt stack 0
  1651  000018                     DHCP_WriteZeros@length:
  1652                           	opt stack 0
  1653  000018                     memcmp@n:
  1654                           	opt stack 0
  1655                           
  1656                           ; 2 bytes @ 0x17
  1657  000018                     	ds	1
  1658  000019                     ??_IPV4_PseudoHeaderChecksum:
  1659  000019                     ??_TCB_Reset:
  1660  000019                     ??_TCB_Check:
  1661  000019                     ?_PHY_Read:
  1662                           	opt stack 0
  1663  000019                     ARPV4_Update@x:
  1664                           	opt stack 0
  1665  000019                     lcd_puts@s:
  1666                           	opt stack 0
  1667  000019                     PHY_Write@data:
  1668                           	opt stack 0
  1669  000019                     ETH_Read16@ret:
  1670                           	opt stack 0
  1671  000019                     ETH_ReadBlock@length:
  1672                           	opt stack 0
  1673  000019                     ETH_WriteBlock@length:
  1674                           	opt stack 0
  1675  000019                     ETH_WriteStart@type:
  1676                           	opt stack 0
  1677  000019                     ETH_Insert@offset:
  1678                           	opt stack 0
  1679  000019                     ETH_ComputeChecksum@seed:
  1680                           	opt stack 0
  1681  000019                     ETH_GetByteCount@val:
  1682                           	opt stack 0
  1683  000019                     ___wmul@multiplicand:
  1684                           	opt stack 0
  1685  000019                     ___lwdiv@divisor:
  1686                           	opt stack 0
  1687  000019                     memset@c:
  1688                           	opt stack 0
  1689                           
  1690                           ; 2 bytes @ 0x18
  1691  000019                     	ds	1
  1692  00001A                     ??_memcmp:
  1693                           
  1694                           ; 0 bytes @ 0x19
  1695  00001A                     	ds	1
  1696  00001B                     ??_ETH_ReadBlock:
  1697  00001B                     ??_ETH_WriteStart:
  1698  00001B                     ??_ETH_ComputeChecksum:
  1699  00001B                     ??_TCP_ParseTCPOptions:
  1700  00001B                     time@gie_val:
  1701                           	opt stack 0
  1702  00001B                     PHY_Write@reg:
  1703                           	opt stack 0
  1704  00001B                     TCB_Check@ret:
  1705                           	opt stack 0
  1706  00001B                     ___lwdiv@counter:
  1707                           	opt stack 0
  1708  00001B                     ETH_WriteBlock@p:
  1709                           	opt stack 0
  1710  00001B                     ETH_Insert@current_tx_ptr:
  1711                           	opt stack 0
  1712  00001B                     ___wmul@product:
  1713                           	opt stack 0
  1714  00001B                     memset@n:
  1715                           	opt stack 0
  1716  00001B                     ETH_Read32@ret:
  1717                           	opt stack 0
  1718                           
  1719                           ; 4 bytes @ 0x1A
  1720  00001B                     	ds	1
  1721  00001C                     PHY_Write@GIESave:
  1722                           	opt stack 0
  1723  00001C                     TCB_Check@count:
  1724                           	opt stack 0
  1725  00001C                     memcmp@s1:
  1726                           	opt stack 0
  1727  00001C                     ETH_ReadBlock@len:
  1728                           	opt stack 0
  1729  00001C                     ___lwdiv@quotient:
  1730                           	opt stack 0
  1731  00001C                     time@the_time:
  1732                           	opt stack 0
  1733                           
  1734                           ; 4 bytes @ 0x1B
  1735  00001C                     	ds	1
  1736  00001D                     PHY_Read@reg:
  1737                           	opt stack 0
  1738  00001D                     ETH_Insert@data:
  1739                           	opt stack 0
  1740  00001D                     IPV4_PseudoHeaderChecksum@v:
  1741                           	opt stack 0
  1742  00001D                     TCP_ParseTCPOptions@ret:
  1743                           	opt stack 0
  1744  00001D                     TCB_Check@tcbPtr:
  1745                           	opt stack 0
  1746  00001D                     memset@p:
  1747                           	opt stack 0
  1748  00001D                     ARPV4_Request@destAddress:
  1749                           	opt stack 0
  1750                           
  1751                           ; 4 bytes @ 0x1C
  1752  00001D                     	ds	1
  1753  00001E                     ?___lwmod:
  1754                           	opt stack 0
  1755  00001E                     IPV4_PseudoHeaderChecksum@len:
  1756                           	opt stack 0
  1757  00001E                     TCP_ParseTCPOptions@opt:
  1758                           	opt stack 0
  1759  00001E                     ETH_ReadBlock@p:
  1760                           	opt stack 0
  1761  00001E                     ___lwmod@dividend:
  1762                           	opt stack 0
  1763  00001E                     PHY_Read@ret:
  1764                           	opt stack 0
  1765                           
  1766                           ; 4 bytes @ 0x1D
  1767  00001E                     	ds	1
  1768  00001F                     ?_TCP_GetReceivedData:
  1769                           	opt stack 0
  1770  00001F                     ?_TCP_GetRxLength:
  1771                           	opt stack 0
  1772  00001F                     ARPV4_Lookup@entry_pointer:
  1773                           	opt stack 0
  1774  00001F                     TCP_ParseTCPOptions@tcpOptionsSize:
  1775                           	opt stack 0
  1776  00001F                     TCP_SocketInit@tcbPtr:
  1777                           	opt stack 0
  1778  00001F                     TCP_SocketPoll@socket_ptr:
  1779                           	opt stack 0
  1780  00001F                     TCP_Bind@tcbPtr:
  1781                           	opt stack 0
  1782  00001F                     TCP_SendDone@tcbPtr:
  1783                           	opt stack 0
  1784  00001F                     TCP_InsertRxBuffer@tcbPtr:
  1785                           	opt stack 0
  1786  00001F                     TCP_GetReceivedData@tcbPtr:
  1787                           	opt stack 0
  1788  00001F                     TCP_GetRxLength@tcbPtr:
  1789                           	opt stack 0
  1790  00001F                     ETH_ComputeChecksum@cksm:
  1791                           	opt stack 0
  1792  00001F                     IPV4_PseudoHeaderChecksum@cksm:
  1793                           	opt stack 0
  1794                           
  1795                           ; 4 bytes @ 0x1E
  1796  00001F                     	ds	1
  1797  000020                     ___lwmod@divisor:
  1798                           	opt stack 0
  1799                           
  1800                           ; 2 bytes @ 0x1F
  1801  000020                     	ds	1
  1802  000021                     ??_TCP_GetReceivedData:
  1803  000021                     ??_TCP_GetRxLength:
  1804  000021                     ARPV4_Lookup@x:
  1805                           	opt stack 0
  1806  000021                     TCP_SocketPoll@tmpSocketState:
  1807                           	opt stack 0
  1808  000021                     TCP_SendDone@ret:
  1809                           	opt stack 0
  1810  000021                     TCP_Bind@port:
  1811                           	opt stack 0
  1812  000021                     TCP_InsertRxBuffer@data:
  1813                           	opt stack 0
  1814                           
  1815                           ; 2 bytes @ 0x20
  1816  000021                     	ds	1
  1817  000022                     ?_ETH_readLinkStatus:
  1818                           	opt stack 0
  1819  000022                     ___lwmod@counter:
  1820                           	opt stack 0
  1821  000022                     IPv4_Start@destAddress:
  1822                           	opt stack 0
  1823                           
  1824                           ; 4 bytes @ 0x21
  1825  000022                     	ds	1
  1826  000023                     ?__doprnt:
  1827                           	opt stack 0
  1828  000023                     __doprnt@f:
  1829                           	opt stack 0
  1830  000023                     ETH_ComputeChecksum@v:
  1831                           	opt stack 0
  1832  000023                     TCP_InsertRxBuffer@data_len:
  1833                           	opt stack 0
  1834  000023                     IPV4_PseudoHeaderChecksum@tmp:
  1835                           	opt stack 0
  1836                           
  1837                           ; 12 bytes @ 0x22
  1838  000023                     	ds	1
  1839  000024                     __doprnt@ap:
  1840                           	opt stack 0
  1841                           
  1842                           ; 1 bytes @ 0x23
  1843  000024                     	ds	1
  1844  000025                     ??__doprnt:
  1845  000025                     ?_ETH_TxComputeChecksum:
  1846                           	opt stack 0
  1847  000025                     ?_ETH_RxComputeChecksum:
  1848                           	opt stack 0
  1849  000025                     ETH_TxComputeChecksum@position:
  1850                           	opt stack 0
  1851  000025                     ETH_RxComputeChecksum@len:
  1852                           	opt stack 0
  1853  000025                     TCP_GetReceivedData@ret:
  1854                           	opt stack 0
  1855  000025                     TCP_GetRxLength@ret:
  1856                           	opt stack 0
  1857                           
  1858                           ; 2 bytes @ 0x24
  1859  000025                     	ds	1
  1860  000026                     IPv4_Start@protocol:
  1861                           	opt stack 0
  1862  000026                     ETH_CheckLinkUp@value:
  1863                           	opt stack 0
  1864                           
  1865                           ; 4 bytes @ 0x25
  1866  000026                     	ds	1
  1867  000027                     ??_IPv4_Start:
  1868  000027                     ETH_TxComputeChecksum@len:
  1869                           	opt stack 0
  1870  000027                     ETH_RxComputeChecksum@seed:
  1871                           	opt stack 0
  1872                           
  1873                           ; 2 bytes @ 0x26
  1874  000027                     	ds	1
  1875  000028                     __doprnt@idx:
  1876                           	opt stack 0
  1877                           
  1878                           ; 1 bytes @ 0x27
  1879  000028                     	ds	1
  1880  000029                     ??_ETH_RxComputeChecksum:
  1881  000029                     __doprnt@prec:
  1882                           	opt stack 0
  1883  000029                     ETH_TxComputeChecksum@seed:
  1884                           	opt stack 0
  1885                           
  1886                           ; 2 bytes @ 0x28
  1887  000029                     	ds	1
  1888  00002A                     ??_ETH_Init:
  1889  00002A                     __doprnt@cp:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x29
  1893  00002A                     	ds	1
  1894  00002B                     ETH_TxComputeChecksum@rxptr:
  1895                           	opt stack 0
  1896                           
  1897                           ; 2 bytes @ 0x2A
  1898  00002B                     	ds	1
  1899  00002C                     __doprnt@flag:
  1900                           	opt stack 0
  1901                           
  1902                           ; 1 bytes @ 0x2B
  1903  00002C                     	ds	1
  1904  00002D                     ETH_Init@mac:
  1905                           	opt stack 0
  1906  00002D                     ETH_RxComputeChecksum@rxptr:
  1907                           	opt stack 0
  1908  00002D                     __doprnt@val:
  1909                           	opt stack 0
  1910  00002D                     ETH_TxComputeChecksum@cksm:
  1911                           	opt stack 0
  1912                           
  1913                           ; 4 bytes @ 0x2C
  1914  00002D                     	ds	1
  1915  00002E                     
  1916                           ; 0 bytes @ 0x2D
  1917  00002E                     	ds	1
  1918  00002F                     UDP_Start@ret:
  1919                           	opt stack 0
  1920  00002F                     __doprnt@c:
  1921                           	opt stack 0
  1922  00002F                     ETH_RxComputeChecksum@cksm:
  1923                           	opt stack 0
  1924                           
  1925                           ; 4 bytes @ 0x2E
  1926  00002F                     	ds	1
  1927  000030                     __doprnt@pb:
  1928                           	opt stack 0
  1929                           
  1930                           ; 1 bytes @ 0x2F
  1931  000030                     	ds	1
  1932  000031                     IPV4_Send@payloadLength:
  1933                           	opt stack 0
  1934  000031                     SYSLOG_Write@message:
  1935                           	opt stack 0
  1936                           
  1937                           ; 2 bytes @ 0x30
  1938  000031                     	ds	2
  1939  000033                     tosu	equ	0xFFF
  1940                           tosh	equ	0xFFE
  1941                           tosl	equ	0xFFD
  1942                           pclath	equ	0xFFA
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           prodh	equ	0xFF4
  1948                           prodl	equ	0xFF3
  1949                           intcon	equ	0xFF2
  1950                           indf0	equ	0xFEF
  1951                           postinc0	equ	0xFEE
  1952                           fsr0h	equ	0xFEA
  1953                           fsr0l	equ	0xFE9
  1954                           wreg	equ	0xFE8
  1955                           indf1	equ	0xFE7
  1956                           postinc1	equ	0xFE6
  1957                           postdec1	equ	0xFE5
  1958                           plusw1	equ	0xFE3
  1959                           fsr1h	equ	0xFE2
  1960                           fsr1l	equ	0xFE1
  1961                           bsr	equ	0xFE0
  1962                           indf2	equ	0xFDF
  1963                           postinc2	equ	0xFDE
  1964                           postdec2	equ	0xFDD
  1965                           plusw2	equ	0xFDB
  1966                           fsr2h	equ	0xFDA
  1967                           fsr2l	equ	0xFD9
  1968                           status	equ	0xFD8
  1969                           
  1970                           ; 0 bytes @ 0x32
  1971 ;;
  1972 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1973 ;;
  1974 ;; *************** function _main *****************
  1975 ;; Defined at:
  1976 ;;		line 134 in file "main.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  str            32    9[BANK2 ] unsigned char [32]
  1981 ;;  ip              4   41[BANK2 ] unsigned long 
  1982 ;;  t               4    4[BANK2 ] long 
  1983 ;;  old_ip          4    0[BANK2 ] unsigned long 
  1984 ;;  no_ip_displa    1    8[BANK2 ] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;		None               void
  1987 ;; Registers used:
  1988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Locals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Totals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;Total ram usage:       45 bytes
  1999 ;; Hardware stack levels required when called:   19
  2000 ;; This function calls:
  2001 ;;		_DEMO_TCP_EchoServer
  2002 ;;		_IPV4_GetMyIP
  2003 ;;		_Network_Init
  2004 ;;		_Network_Manage
  2005 ;;		_Network_WaitForLink
  2006 ;;		_SYSLOG_Init
  2007 ;;		_SYSLOG_Write
  2008 ;;		_initHW
  2009 ;;		_lcd_goto1
  2010 ;;		_lcd_puts
  2011 ;;		_memset
  2012 ;;		_sprintf
  2013 ;;		_time
  2014 ;; This function is called by:
  2015 ;;		Startup code after reset
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text0
  2020  004C0C                     __ptext0:
  2021                           	opt stack 0
  2022  004C0C                     _main:
  2023                           	opt stack 12
  2024                           
  2025                           ;main.c: 136: time_t t;
  2026                           ;main.c: 137: unsigned long ip, old_ip;
  2027                           ;main.c: 138: char str[32];
  2028                           ;main.c: 139: bool no_ip_display = 1;
  2029                           
  2030                           ; BSR set to: 14
  2031                           ;incstack = 0
  2032  004C0C  0E01               	movlw	1
  2033  004C0E  0102               	movlb	2	; () banked
  2034  004C10  6FAB               	movwf	main@no_ip_display& (0+255),b
  2035                           
  2036                           ; BSR set to: 2
  2037                           ;main.c: 141: initHW();
  2038  004C12  EC31  F02F         	call	_initHW	;wreg free
  2039                           
  2040                           ;main.c: 142: Network_Init();
  2041  004C16  ECD7  F030         	call	_Network_Init	;wreg free
  2042                           
  2043                           ; BSR set to: 1
  2044                           ;main.c: 143: SYSLOG_Init();
  2045  004C1A  ECB6  F02F         	call	_SYSLOG_Init	;wreg free
  2046                           
  2047                           ;main.c: 146: IPEN = 1;
  2048  004C1E  8ED0               	bsf	4048,7,c	;volatile
  2049                           
  2050                           ;main.c: 147: GIEH = 1;
  2051  004C20  8EF2               	bsf	intcon,7,c	;volatile
  2052                           
  2053                           ;main.c: 148: GIEL = 1;
  2054  004C22  8CF2               	bsf	intcon,6,c	;volatile
  2055                           
  2056                           ;main.c: 150: SYSLOG_Write("Waiting for Link");
  2057  004C24  0E66               	movlw	low STR_5
  2058  004C26  D865               	call	PL615	;call to abstracted procedure
  2059  004C28  EC8C  F030         	call	_SYSLOG_Write	;wreg free
  2060                           
  2061                           ;main.c: 151: Network_WaitForLink();
  2062  004C2C  ECAB  F031         	call	_Network_WaitForLink	;wreg free
  2063                           
  2064                           ;main.c: 152: SYSLOG_Write("Link started");
  2065  004C30  0E86               	movlw	low STR_6
  2066  004C32  D85F               	call	PL615	;call to abstracted procedure
  2067  004C34  EC8C  F030         	call	_SYSLOG_Write	;wreg free
  2068  004C38                     l9862:
  2069                           
  2070                           ;main.c: 155: {
  2071                           ;main.c: 156: Network_Manage();
  2072  004C38  ECD3  F029         	call	_Network_Manage	;wreg free
  2073                           
  2074                           ;main.c: 157: time(&t);
  2075  004C3C  0EA7               	movlw	low main@t
  2076  004C3E  6E17               	movwf	time@t,c
  2077  004C40  0E02               	movlw	high main@t
  2078  004C42  6E18               	movwf	time@t+1,c
  2079  004C44  ECC2  F02C         	call	_time	;wreg free
  2080                           
  2081                           ;main.c: 159: ip = IPV4_GetMyIP();
  2082  004C48  EC9B  F031         	call	_IPV4_GetMyIP	;wreg free
  2083  004C4C  C017  F2CC         	movff	?_IPV4_GetMyIP,main@ip
  2084  004C50  C018  F2CD         	movff	?_IPV4_GetMyIP+1,main@ip+1
  2085  004C54  C019  F2CE         	movff	?_IPV4_GetMyIP+2,main@ip+2
  2086  004C58  C01A  F2CF         	movff	?_IPV4_GetMyIP+3,main@ip+3
  2087                           
  2088                           ;main.c: 161: if((no_ip_display) || (old_ip != ip))
  2089  004C5C  0102               	movlb	2	; () banked
  2090  004C5E  51AB               	movf	main@no_ip_display& (0+255),w,b
  2091  004C60  E10C               	bnz	l1576
  2092                           
  2093                           ; BSR set to: 2
  2094  004C62  51CC               	movf	main@ip& (0+255),w,b
  2095  004C64  19A3               	xorwf	main@old_ip& (0+255),w,b
  2096  004C66  E109               	bnz	u15590
  2097  004C68  51CD               	movf	(main@ip+1)& (0+255),w,b
  2098  004C6A  19A4               	xorwf	(main@old_ip+1)& (0+255),w,b
  2099  004C6C  E106               	bnz	u15590
  2100  004C6E  51CE               	movf	(main@ip+2)& (0+255),w,b
  2101  004C70  19A5               	xorwf	(main@old_ip+2)& (0+255),w,b
  2102  004C72  E103               	bnz	u15590
  2103  004C74  51CF               	movf	(main@ip+3)& (0+255),w,b
  2104  004C76  19A6               	xorwf	(main@old_ip+3)& (0+255),w,b
  2105  004C78  E039               	bz	l9884
  2106  004C7A                     u15590:
  2107  004C7A                     l1576:
  2108                           
  2109                           ; BSR set to: 2
  2110                           ;main.c: 162: {
  2111                           ;main.c: 163: old_ip = ip;
  2112  004C7A  C2CC  F2A3         	movff	main@ip,main@old_ip
  2113  004C7E  C2CD  F2A4         	movff	main@ip+1,main@old_ip+1
  2114  004C82  C2CE  F2A5         	movff	main@ip+2,main@old_ip+2
  2115  004C86  C2CF  F2A6         	movff	main@ip+3,main@old_ip+3
  2116                           
  2117                           ; BSR set to: 2
  2118                           ;main.c: 164: memset(str,0,sizeof(str));
  2119  004C8A  0EAC               	movlw	low main@str
  2120  004C8C  6E17               	movwf	memset@p1,c
  2121  004C8E  0E02               	movlw	high main@str
  2122  004C90  6E18               	movwf	memset@p1+1,c
  2123  004C92  6A1A               	clrf	memset@c+1,c
  2124  004C94  6A19               	clrf	memset@c,c
  2125  004C96  6A1C               	clrf	memset@n+1,c
  2126  004C98  0E20               	movlw	32
  2127  004C9A  6E1B               	movwf	memset@n,c
  2128  004C9C  EC11  F030         	call	_memset	;wreg free
  2129                           
  2130                           ; BSR set to: 2
  2131                           ;main.c: 165: sprintf(str,"%d.%d.%d.%d",((char*)&ip)[3],((char*)&ip)[2],((char*)&ip)[1],
      +                          ((char*)&ip)[0]);
  2132  004CA0  0EAC               	movlw	low main@str
  2133  004CA2  0100               	movlb	0	; () banked
  2134  004CA4  6F60               	movwf	sprintf@wh& (0+255),b
  2135  004CA6  0E02               	movlw	high main@str
  2136  004CA8  6F61               	movwf	(sprintf@wh+1)& (0+255),b
  2137  004CAA  0E93               	movlw	low STR_7
  2138  004CAC  6F62               	movwf	sprintf@f& (0+255),b
  2139  004CAE  C2CF  F063         	movff	main@ip+3,?_sprintf+3
  2140  004CB2  6B64               	clrf	(?_sprintf+4)& (0+255),b
  2141  004CB4  C2CE  F065         	movff	main@ip+2,?_sprintf+5
  2142  004CB8  6B66               	clrf	(?_sprintf+6)& (0+255),b
  2143  004CBA  C2CD  F067         	movff	main@ip+1,?_sprintf+7
  2144  004CBE  6B68               	clrf	(?_sprintf+8)& (0+255),b
  2145  004CC0  C2CC  F069         	movff	main@ip,?_sprintf+9
  2146  004CC4  6B6A               	clrf	(?_sprintf+10)& (0+255),b
  2147  004CC6  ECFB  F02F         	call	_sprintf	;wreg free
  2148                           
  2149                           ;main.c: 166: lcd_goto1(0);
  2150  004CCA  0E00               	movlw	0
  2151  004CCC  ECA4  F031         	call	_lcd_goto1
  2152                           
  2153                           ;main.c: 167: lcd_puts(str);
  2154  004CD0  0EAC               	movlw	low main@str
  2155  004CD2  6E19               	movwf	lcd_puts@s,c
  2156  004CD4  0E02               	movlw	high main@str
  2157  004CD6  6E1A               	movwf	lcd_puts@s+1,c
  2158  004CD8  EC18  F031         	call	_lcd_puts	;wreg free
  2159                           
  2160                           ;main.c: 168: SYSLOG_Write(str);
  2161  004CDC  0EAC               	movlw	low main@str
  2162  004CDE  6E31               	movwf	SYSLOG_Write@message,c
  2163  004CE0  0E02               	movlw	high main@str
  2164  004CE2  6E32               	movwf	SYSLOG_Write@message+1,c
  2165  004CE4  EC8C  F030         	call	_SYSLOG_Write	;wreg free
  2166                           
  2167                           ;main.c: 169: no_ip_display = 0;
  2168  004CE8  0102               	movlb	2	; () banked
  2169  004CEA  6BAB               	clrf	main@no_ip_display& (0+255),b
  2170  004CEC                     l9884:
  2171                           
  2172                           ; BSR set to: 2
  2173                           ;main.c: 170: }
  2174                           ;main.c: 171: DEMO_TCP_EchoServer();
  2175  004CEC  EC80  F025         	call	_DEMO_TCP_EchoServer	;wreg free
  2176  004CF0  D7A3               	goto	l9862
  2177  004CF2                     __end_of_main:
  2178                           	opt stack 0
  2179  004CF2                     PL615:
  2180                           	opt stack 12
  2181  004CF2  6E31               	movwf	SYSLOG_Write@message,c
  2182  004CF4  5031               	movf	SYSLOG_Write@message,w,c
  2183  004CF6  A4D8               	btfss	status,2,c
  2184  004CF8  0E10               	movlw	high __smallconst
  2185  004CFA  6E32               	movwf	SYSLOG_Write@message+1,c
  2186  004CFC  0012               	return	
  2187  004CFE                     __end_ofPL615:
  2188                           	opt stack 0
  2189                           tosu	equ	0xFFF
  2190                           tosh	equ	0xFFE
  2191                           tosl	equ	0xFFD
  2192                           pclath	equ	0xFFA
  2193                           tblptru	equ	0xFF8
  2194                           tblptrh	equ	0xFF7
  2195                           tblptrl	equ	0xFF6
  2196                           tablat	equ	0xFF5
  2197                           prodh	equ	0xFF4
  2198                           prodl	equ	0xFF3
  2199                           intcon	equ	0xFF2
  2200                           indf0	equ	0xFEF
  2201                           postinc0	equ	0xFEE
  2202                           fsr0h	equ	0xFEA
  2203                           fsr0l	equ	0xFE9
  2204                           wreg	equ	0xFE8
  2205                           indf1	equ	0xFE7
  2206                           postinc1	equ	0xFE6
  2207                           postdec1	equ	0xFE5
  2208                           plusw1	equ	0xFE3
  2209                           fsr1h	equ	0xFE2
  2210                           fsr1l	equ	0xFE1
  2211                           bsr	equ	0xFE0
  2212                           indf2	equ	0xFDF
  2213                           postinc2	equ	0xFDE
  2214                           postdec2	equ	0xFDD
  2215                           plusw2	equ	0xFDB
  2216                           fsr2h	equ	0xFDA
  2217                           fsr2l	equ	0xFD9
  2218                           status	equ	0xFD8
  2219                           
  2220 ;; *************** function _memset *****************
  2221 ;; Defined at:
  2222 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  p1              2   22[COMRAM] PTR void 
  2225 ;;		 -> main@str(32), 
  2226 ;;  c               2   24[COMRAM] int 
  2227 ;;  n               2   26[COMRAM] unsigned int 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  p               2   28[COMRAM] PTR unsigned char 
  2230 ;;		 -> main@str(32), 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  2   22[COMRAM] PTR void 
  2233 ;; Registers used:
  2234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2235 ;; Tracked objects:
  2236 ;;		On entry : F/2
  2237 ;;		On exit  : F/2
  2238 ;;		Unchanged: F/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2240 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;Total ram usage:        8 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    8
  2247 ;; This function calls:
  2248 ;;		Nothing
  2249 ;; This function is called by:
  2250 ;;		_main
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text1
  2255  006022                     __ptext1:
  2256                           	opt stack 0
  2257  006022                     _memset:
  2258                           	opt stack 22
  2259                           
  2260                           ; BSR set to: 2
  2261                           
  2262                           ;incstack = 0
  2263  006022  C017  F01D         	movff	memset@p1,memset@p
  2264  006026  C018  F01E         	movff	memset@p1+1,memset@p+1
  2265  00602A  D008               	goto	l9840
  2266  00602C                     l9836:
  2267                           
  2268                           ; BSR set to: 2
  2269  00602C  C01D  FFD9         	movff	memset@p,fsr2l
  2270  006030  C01E  FFDA         	movff	memset@p+1,fsr2h
  2271  006034  C019  FFDF         	movff	memset@c,indf2
  2272                           
  2273                           ; BSR set to: 2
  2274  006038  4A1D               	infsnz	memset@p,f,c
  2275  00603A  2A1E               	incf	memset@p+1,f,c
  2276  00603C                     l9840:
  2277                           
  2278                           ; BSR set to: 2
  2279  00603C  061B               	decf	memset@n,f,c
  2280  00603E  A0D8               	btfss	status,0,c
  2281  006040  061C               	decf	memset@n+1,f,c
  2282  006042  281B               	incf	memset@n,w,c
  2283  006044  E1F3               	bnz	l9836
  2284  006046  281C               	incf	memset@n+1,w,c
  2285  006048  E1F1               	bnz	l9836
  2286                           
  2287                           ; BSR set to: 2
  2288  00604A  0012               	return		;funcret
  2289  00604C                     __end_of_memset:
  2290                           	opt stack 0
  2291                           tosu	equ	0xFFF
  2292                           tosh	equ	0xFFE
  2293                           tosl	equ	0xFFD
  2294                           pclath	equ	0xFFA
  2295                           tblptru	equ	0xFF8
  2296                           tblptrh	equ	0xFF7
  2297                           tblptrl	equ	0xFF6
  2298                           tablat	equ	0xFF5
  2299                           prodh	equ	0xFF4
  2300                           prodl	equ	0xFF3
  2301                           intcon	equ	0xFF2
  2302                           indf0	equ	0xFEF
  2303                           postinc0	equ	0xFEE
  2304                           fsr0h	equ	0xFEA
  2305                           fsr0l	equ	0xFE9
  2306                           wreg	equ	0xFE8
  2307                           indf1	equ	0xFE7
  2308                           postinc1	equ	0xFE6
  2309                           postdec1	equ	0xFE5
  2310                           plusw1	equ	0xFE3
  2311                           fsr1h	equ	0xFE2
  2312                           fsr1l	equ	0xFE1
  2313                           bsr	equ	0xFE0
  2314                           indf2	equ	0xFDF
  2315                           postinc2	equ	0xFDE
  2316                           postdec2	equ	0xFDD
  2317                           plusw2	equ	0xFDB
  2318                           fsr2h	equ	0xFDA
  2319                           fsr2l	equ	0xFD9
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _lcd_puts *****************
  2323 ;; Defined at:
  2324 ;;		line 86 in file "../board_support_package/picdem2_net/lcd.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  s               2   24[COMRAM] PTR const unsigned char 
  2327 ;;		 -> main@str(32), 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;		None               void
  2332 ;; Registers used:
  2333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/2
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;Total ram usage:        2 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:   10
  2346 ;; This function calls:
  2347 ;;		_lcd_putch
  2348 ;; This function is called by:
  2349 ;;		_main
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text2
  2354  006230                     __ptext2:
  2355                           	opt stack 0
  2356  006230                     _lcd_puts:
  2357                           	opt stack 20
  2358                           
  2359                           ;lcd.c: 88: while(*s)
  2360                           
  2361                           ; BSR set to: 2
  2362                           ;incstack = 0
  2363  006230  D005               	goto	l9754
  2364  006232                     l9750:
  2365                           
  2366                           ;lcd.c: 89: lcd_putch(*s++);
  2367  006232  D807               	call	PL667	;call to abstracted procedure
  2368  006234  EC36  F031         	call	_lcd_putch
  2369  006238  4A19               	infsnz	lcd_puts@s,f,c
  2370  00623A  2A1A               	incf	lcd_puts@s+1,f,c
  2371  00623C                     l9754:
  2372  00623C  D802               	call	PL667	;call to abstracted procedure
  2373  00623E  E1F9               	bnz	l9750
  2374  006240  0012               	return		;funcret
  2375  006242                     __end_of_lcd_puts:
  2376                           	opt stack 0
  2377  006242                     PL667:
  2378                           	opt stack 20
  2379  006242  C019  FFD9         	movff	lcd_puts@s,fsr2l
  2380  006246  C01A  FFDA         	movff	lcd_puts@s+1,fsr2h
  2381  00624A  50DF               	movf	indf2,w,c
  2382  00624C  0012               	return	
  2383  00624E                     __end_ofPL667:
  2384                           	opt stack 0
  2385                           tosu	equ	0xFFF
  2386                           tosh	equ	0xFFE
  2387                           tosl	equ	0xFFD
  2388                           pclath	equ	0xFFA
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           prodh	equ	0xFF4
  2394                           prodl	equ	0xFF3
  2395                           intcon	equ	0xFF2
  2396                           indf0	equ	0xFEF
  2397                           postinc0	equ	0xFEE
  2398                           fsr0h	equ	0xFEA
  2399                           fsr0l	equ	0xFE9
  2400                           wreg	equ	0xFE8
  2401                           indf1	equ	0xFE7
  2402                           postinc1	equ	0xFE6
  2403                           postdec1	equ	0xFE5
  2404                           plusw1	equ	0xFE3
  2405                           fsr1h	equ	0xFE2
  2406                           fsr1l	equ	0xFE1
  2407                           bsr	equ	0xFE0
  2408                           indf2	equ	0xFDF
  2409                           postinc2	equ	0xFDE
  2410                           postdec2	equ	0xFDD
  2411                           plusw2	equ	0xFDB
  2412                           fsr2h	equ	0xFDA
  2413                           fsr2l	equ	0xFD9
  2414                           status	equ	0xFD8
  2415                           
  2416 ;; *************** function _lcd_putch *****************
  2417 ;; Defined at:
  2418 ;;		line 76 in file "../board_support_package/picdem2_net/lcd.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  c               1    wreg     unsigned char 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  c               1   23[COMRAM] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;		None               void
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/2
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;Total ram usage:        1 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    9
  2439 ;; This function calls:
  2440 ;;		_lcd_busy
  2441 ;;		_lcd_write_data
  2442 ;; This function is called by:
  2443 ;;		_lcd_puts
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text3
  2448  00626C                     __ptext3:
  2449                           	opt stack 0
  2450  00626C                     _lcd_putch:
  2451                           	opt stack 20
  2452                           
  2453                           ;incstack = 0
  2454                           ;lcd_putch@c stored from wreg
  2455  00626C  6E18               	movwf	lcd_putch@c,c
  2456                           
  2457                           ;lcd.c: 78: if(c >= ' ' && c < 127)
  2458  00626E  0E1F               	movlw	31
  2459  006270  6418               	cpfsgt	lcd_putch@c,c
  2460  006272  EFC4  F031         	goto	_lcd_busy
  2461  006276  0E7F               	movlw	127
  2462  006278  6018               	cpfslt	lcd_putch@c,c
  2463  00627A  EFC4  F031         	goto	_lcd_busy
  2464                           
  2465                           ;lcd.c: 79: {
  2466                           ;lcd.c: 80: lcd_write_data(c);
  2467  00627E  5018               	movf	lcd_putch@c,w,c
  2468  006280  ECE8  F030         	call	_lcd_write_data
  2469                           
  2470                           ;lcd.c: 81: }
  2471                           ;lcd.c: 82: lcd_busy();
  2472  006284  EFC4  F031         	goto	_lcd_busy	;wreg free
  2473  006288                     __end_of_lcd_putch:
  2474                           	opt stack 0
  2475                           tosu	equ	0xFFF
  2476                           tosh	equ	0xFFE
  2477                           tosl	equ	0xFFD
  2478                           pclath	equ	0xFFA
  2479                           tblptru	equ	0xFF8
  2480                           tblptrh	equ	0xFF7
  2481                           tblptrl	equ	0xFF6
  2482                           tablat	equ	0xFF5
  2483                           prodh	equ	0xFF4
  2484                           prodl	equ	0xFF3
  2485                           intcon	equ	0xFF2
  2486                           indf0	equ	0xFEF
  2487                           postinc0	equ	0xFEE
  2488                           fsr0h	equ	0xFEA
  2489                           fsr0l	equ	0xFE9
  2490                           wreg	equ	0xFE8
  2491                           indf1	equ	0xFE7
  2492                           postinc1	equ	0xFE6
  2493                           postdec1	equ	0xFE5
  2494                           plusw1	equ	0xFE3
  2495                           fsr1h	equ	0xFE2
  2496                           fsr1l	equ	0xFE1
  2497                           bsr	equ	0xFE0
  2498                           indf2	equ	0xFDF
  2499                           postinc2	equ	0xFDE
  2500                           postdec2	equ	0xFDD
  2501                           plusw2	equ	0xFDB
  2502                           fsr2h	equ	0xFDA
  2503                           fsr2l	equ	0xFD9
  2504                           status	equ	0xFD8
  2505                           
  2506 ;; *************** function _lcd_write_data *****************
  2507 ;; Defined at:
  2508 ;;		line 71 in file "../board_support_package/picdem2_net/lcd_hw.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  d               1    wreg     unsigned char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  d               1   22[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;		None               void
  2515 ;; Registers used:
  2516 ;;		wreg
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/2
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;Total ram usage:        1 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    8
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_lcd_putch
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text4
  2537  0061D0                     __ptext4:
  2538                           	opt stack 0
  2539  0061D0                     _lcd_write_data:
  2540                           	opt stack 20
  2541                           
  2542                           ;incstack = 0
  2543                           ;lcd_write_data@d stored from wreg
  2544  0061D0  6E17               	movwf	lcd_write_data@d,c
  2545                           
  2546                           ;lcd_hw.c: 73: LATH1 = 0;
  2547  0061D2  9290               	bcf	3984,1,c	;volatile
  2548                           
  2549                           ;lcd_hw.c: 74: LATH2 = 1;
  2550  0061D4  8490               	bsf	3984,2,c	;volatile
  2551                           
  2552                           ;lcd_hw.c: 75: LATE = d;
  2553  0061D6  C017  FF8D         	movff	lcd_write_data@d,3981	;volatile
  2554                           
  2555                           ;lcd_hw.c: 76: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
  2556  0061DA  0E03               	movlw	3
  2557  0061DC                     u15607:
  2558  0061DC  2EE8               	decfsz	wreg,f,c
  2559  0061DE  D7FE               	goto	u15607
  2560  0061E0  F000               	nop	
  2561                           
  2562                           ;lcd_hw.c: 77: LATH0 = 1;
  2563  0061E2  8090               	bsf	3984,0,c	;volatile
  2564                           
  2565                           ;lcd_hw.c: 78: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
  2566  0061E4  0E03               	movlw	3
  2567  0061E6                     u15617:
  2568  0061E6  2EE8               	decfsz	wreg,f,c
  2569  0061E8  D7FE               	goto	u15617
  2570  0061EA  F000               	nop	
  2571                           
  2572                           ;lcd_hw.c: 79: LATH0 = 0;
  2573  0061EC  9090               	bcf	3984,0,c	;volatile
  2574  0061EE  0012               	return		;funcret
  2575  0061F0                     __end_of_lcd_write_data:
  2576                           	opt stack 0
  2577                           tosu	equ	0xFFF
  2578                           tosh	equ	0xFFE
  2579                           tosl	equ	0xFFD
  2580                           pclath	equ	0xFFA
  2581                           tblptru	equ	0xFF8
  2582                           tblptrh	equ	0xFF7
  2583                           tblptrl	equ	0xFF6
  2584                           tablat	equ	0xFF5
  2585                           prodh	equ	0xFF4
  2586                           prodl	equ	0xFF3
  2587                           intcon	equ	0xFF2
  2588                           indf0	equ	0xFEF
  2589                           postinc0	equ	0xFEE
  2590                           fsr0h	equ	0xFEA
  2591                           fsr0l	equ	0xFE9
  2592                           wreg	equ	0xFE8
  2593                           indf1	equ	0xFE7
  2594                           postinc1	equ	0xFE6
  2595                           postdec1	equ	0xFE5
  2596                           plusw1	equ	0xFE3
  2597                           fsr1h	equ	0xFE2
  2598                           fsr1l	equ	0xFE1
  2599                           bsr	equ	0xFE0
  2600                           indf2	equ	0xFDF
  2601                           postinc2	equ	0xFDE
  2602                           postdec2	equ	0xFDD
  2603                           plusw2	equ	0xFDB
  2604                           fsr2h	equ	0xFDA
  2605                           fsr2l	equ	0xFD9
  2606                           status	equ	0xFD8
  2607                           
  2608 ;; *************** function _lcd_goto1 *****************
  2609 ;; Defined at:
  2610 ;;		line 96 in file "../board_support_package/picdem2_net/lcd.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  pos             1    wreg     unsigned char 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  pos             1   23[COMRAM] unsigned char 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;		None               void
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/2
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;Total ram usage:        1 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    9
  2631 ;; This function calls:
  2632 ;;		_lcd_busy
  2633 ;;		_lcd_write_ctrl
  2634 ;; This function is called by:
  2635 ;;		_main
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text5
  2640  006348                     __ptext5:
  2641                           	opt stack 0
  2642  006348                     _lcd_goto1:
  2643                           	opt stack 21
  2644                           
  2645                           ;incstack = 0
  2646                           ;lcd_goto1@pos stored from wreg
  2647  006348  6E18               	movwf	lcd_goto1@pos,c
  2648                           
  2649                           ;lcd.c: 98: lcd_write_ctrl(0x80+pos);
  2650  00634A  5018               	movf	lcd_goto1@pos,w,c
  2651  00634C  0F80               	addlw	128
  2652  00634E  ECF8  F030         	call	_lcd_write_ctrl
  2653                           
  2654                           ;lcd.c: 99: lcd_busy();
  2655  006352  EFC4  F031         	goto	_lcd_busy	;wreg free
  2656  006356                     __end_of_lcd_goto1:
  2657                           	opt stack 0
  2658                           tosu	equ	0xFFF
  2659                           tosh	equ	0xFFE
  2660                           tosl	equ	0xFFD
  2661                           pclath	equ	0xFFA
  2662                           tblptru	equ	0xFF8
  2663                           tblptrh	equ	0xFF7
  2664                           tblptrl	equ	0xFF6
  2665                           tablat	equ	0xFF5
  2666                           prodh	equ	0xFF4
  2667                           prodl	equ	0xFF3
  2668                           intcon	equ	0xFF2
  2669                           indf0	equ	0xFEF
  2670                           postinc0	equ	0xFEE
  2671                           fsr0h	equ	0xFEA
  2672                           fsr0l	equ	0xFE9
  2673                           wreg	equ	0xFE8
  2674                           indf1	equ	0xFE7
  2675                           postinc1	equ	0xFE6
  2676                           postdec1	equ	0xFE5
  2677                           plusw1	equ	0xFE3
  2678                           fsr1h	equ	0xFE2
  2679                           fsr1l	equ	0xFE1
  2680                           bsr	equ	0xFE0
  2681                           indf2	equ	0xFDF
  2682                           postinc2	equ	0xFDE
  2683                           postdec2	equ	0xFDD
  2684                           plusw2	equ	0xFDB
  2685                           fsr2h	equ	0xFDA
  2686                           fsr2l	equ	0xFD9
  2687                           status	equ	0xFD8
  2688                           
  2689 ;; *************** function _initHW *****************
  2690 ;; Defined at:
  2691 ;;		line 50 in file "../board_support_package/picdem2_net/hardware.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;		None               void
  2698 ;; Registers used:
  2699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : F/2
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;Total ram usage:        0 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:   10
  2712 ;; This function calls:
  2713 ;;		_ADC_Initialize
  2714 ;;		_LED_Init
  2715 ;;		_lcd_init
  2716 ;;		_rtcc_init
  2717 ;;		_spi_init
  2718 ;;		_uart_init
  2719 ;; This function is called by:
  2720 ;;		_main
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text6
  2725  005E62                     __ptext6:
  2726                           	opt stack 0
  2727  005E62                     _initHW:
  2728                           	opt stack 20
  2729                           
  2730                           ; BSR set to: 2
  2731                           ;hardware.c: 53: OSCCON = 0x02;
  2732                           
  2733                           ;incstack = 0
  2734  005E62  0E02               	movlw	2
  2735  005E64  6ED3               	movwf	4051,c	;volatile
  2736                           
  2737                           ;hardware.c: 56: OSCTUNE = 0x40;
  2738  005E66  0E40               	movlw	64
  2739  005E68  6E9B               	movwf	3995,c	;volatile
  2740                           
  2741                           ; BSR set to: 2
  2742                           ;hardware.c: 59: TRISJ = 0;
  2743  005E6A  6A9A               	clrf	3994,c	;volatile
  2744                           
  2745                           ; BSR set to: 2
  2746                           ;hardware.c: 60: LATJ = 0;
  2747  005E6C  6A91               	clrf	3985,c	;volatile
  2748                           
  2749                           ; BSR set to: 2
  2750                           ;hardware.c: 62: TRISDbits.TRISD3 = 0;
  2751  005E6E  9695               	bcf	3989,3,c	;volatile
  2752                           
  2753                           ; BSR set to: 2
  2754                           ;hardware.c: 63: LATDbits.LATD3 = 1;
  2755  005E70  868C               	bsf	3980,3,c	;volatile
  2756                           
  2757                           ; BSR set to: 2
  2758                           ;hardware.c: 65: TRISCbits.TRISC3 = 0;
  2759  005E72  9694               	bcf	3988,3,c	;volatile
  2760                           
  2761                           ; BSR set to: 2
  2762                           ;hardware.c: 66: TRISCbits.TRISC4 = 1;
  2763  005E74  8894               	bsf	3988,4,c	;volatile
  2764                           
  2765                           ; BSR set to: 2
  2766                           ;hardware.c: 67: TRISCbits.TRISC5 = 0;
  2767  005E76  9A94               	bcf	3988,5,c	;volatile
  2768                           
  2769                           ;hardware.c: 69: TRISA = 0b11111100;
  2770  005E78  0EFC               	movlw	252
  2771  005E7A  6E92               	movwf	3986,c	;volatile
  2772                           
  2773                           ;hardware.c: 98: TRISB = 0x0F;
  2774  005E7C  0E0F               	movlw	15
  2775  005E7E  6E93               	movwf	3987,c	;volatile
  2776                           
  2777                           ; BSR set to: 2
  2778                           ;hardware.c: 104: rtcc_init();
  2779  005E80  EC15  F02F         	call	_rtcc_init	;wreg free
  2780                           
  2781                           ; BSR set to: 2
  2782                           ;hardware.c: 107: spi_init();
  2783  005E84  ECB9  F031         	call	_spi_init	;wreg free
  2784                           
  2785                           ; BSR set to: 2
  2786                           ;hardware.c: 110: uart_init();
  2787  005E88  EC85  F031         	call	_uart_init	;wreg free
  2788                           
  2789                           ; BSR set to: 2
  2790                           ;hardware.c: 113: lcd_init();
  2791  005E8C  ECEB  F028         	call	_lcd_init	;wreg free
  2792                           
  2793                           ;hardware.c: 119: ADC_Initialize();
  2794  005E90  EC90  F031         	call	_ADC_Initialize	;wreg free
  2795                           
  2796                           ;hardware.c: 121: LED_Init();
  2797  005E94  EF08  F031         	goto	_LED_Init	;wreg free
  2798  005E98                     __end_of_initHW:
  2799                           	opt stack 0
  2800                           tosu	equ	0xFFF
  2801                           tosh	equ	0xFFE
  2802                           tosl	equ	0xFFD
  2803                           pclath	equ	0xFFA
  2804                           tblptru	equ	0xFF8
  2805                           tblptrh	equ	0xFF7
  2806                           tblptrl	equ	0xFF6
  2807                           tablat	equ	0xFF5
  2808                           prodh	equ	0xFF4
  2809                           prodl	equ	0xFF3
  2810                           intcon	equ	0xFF2
  2811                           indf0	equ	0xFEF
  2812                           postinc0	equ	0xFEE
  2813                           fsr0h	equ	0xFEA
  2814                           fsr0l	equ	0xFE9
  2815                           wreg	equ	0xFE8
  2816                           indf1	equ	0xFE7
  2817                           postinc1	equ	0xFE6
  2818                           postdec1	equ	0xFE5
  2819                           plusw1	equ	0xFE3
  2820                           fsr1h	equ	0xFE2
  2821                           fsr1l	equ	0xFE1
  2822                           bsr	equ	0xFE0
  2823                           indf2	equ	0xFDF
  2824                           postinc2	equ	0xFDE
  2825                           postdec2	equ	0xFDD
  2826                           plusw2	equ	0xFDB
  2827                           fsr2h	equ	0xFDA
  2828                           fsr2l	equ	0xFD9
  2829                           status	equ	0xFD8
  2830                           
  2831 ;; *************** function _uart_init *****************
  2832 ;; Defined at:
  2833 ;;		line 55 in file "../board_support_package/picdem2_net/uart.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;		None               void
  2840 ;; Registers used:
  2841 ;;		wreg, status,2
  2842 ;; Tracked objects:
  2843 ;;		On entry : F/2
  2844 ;;		On exit  : F/2
  2845 ;;		Unchanged: F/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;Total ram usage:        0 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    8
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_initHW
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text7
  2862  00630A                     __ptext7:
  2863                           	opt stack 0
  2864  00630A                     _uart_init:
  2865                           	opt stack 21
  2866                           
  2867                           ; BSR set to: 2
  2868                           ;uart.c: 58: TRISCbits.TRISC7 = 1;
  2869                           
  2870                           ;incstack = 0
  2871  00630A  8E94               	bsf	3988,7,c	;volatile
  2872                           
  2873                           ;uart.c: 59: TRISCbits.TRISC6 = 0;
  2874  00630C  9C94               	bcf	3988,6,c	;volatile
  2875                           
  2876                           ;uart.c: 62: BAUDCON1 = 0x00;
  2877  00630E  6A7E               	clrf	3966,c	;volatile
  2878                           
  2879                           ; BSR set to: 2
  2880                           ;uart.c: 69: SPBRG1 = 89;
  2881  006310  0E59               	movlw	89
  2882  006312  6EAF               	movwf	4015,c	;volatile
  2883                           
  2884                           ; BSR set to: 2
  2885                           ;uart.c: 70: BAUDCON1bits.BRG16 = 1;
  2886  006314  867E               	bsf	3966,3,c	;volatile
  2887                           
  2888                           ;uart.c: 71: TXSTA1 = 0x26;
  2889  006316  0E26               	movlw	38
  2890  006318  6EAC               	movwf	4012,c	;volatile
  2891                           
  2892                           ; BSR set to: 2
  2893                           ;uart.c: 73: CREN1 = 1;
  2894  00631A  88AB               	bsf	4011,4,c	;volatile
  2895                           
  2896                           ; BSR set to: 2
  2897                           ;uart.c: 74: SPEN1 = 1;
  2898  00631C  8EAB               	bsf	4011,7,c	;volatile
  2899                           
  2900                           ; BSR set to: 2
  2901  00631E  0C26               	retlw	38	;funcret
  2902  006320                     __end_of_uart_init:
  2903                           	opt stack 0
  2904                           tosu	equ	0xFFF
  2905                           tosh	equ	0xFFE
  2906                           tosl	equ	0xFFD
  2907                           pclath	equ	0xFFA
  2908                           tblptru	equ	0xFF8
  2909                           tblptrh	equ	0xFF7
  2910                           tblptrl	equ	0xFF6
  2911                           tablat	equ	0xFF5
  2912                           prodh	equ	0xFF4
  2913                           prodl	equ	0xFF3
  2914                           intcon	equ	0xFF2
  2915                           indf0	equ	0xFEF
  2916                           postinc0	equ	0xFEE
  2917                           fsr0h	equ	0xFEA
  2918                           fsr0l	equ	0xFE9
  2919                           wreg	equ	0xFE8
  2920                           indf1	equ	0xFE7
  2921                           postinc1	equ	0xFE6
  2922                           postdec1	equ	0xFE5
  2923                           plusw1	equ	0xFE3
  2924                           fsr1h	equ	0xFE2
  2925                           fsr1l	equ	0xFE1
  2926                           bsr	equ	0xFE0
  2927                           indf2	equ	0xFDF
  2928                           postinc2	equ	0xFDE
  2929                           postdec2	equ	0xFDD
  2930                           plusw2	equ	0xFDB
  2931                           fsr2h	equ	0xFDA
  2932                           fsr2l	equ	0xFD9
  2933                           status	equ	0xFD8
  2934                           
  2935 ;; *************** function _spi_init *****************
  2936 ;; Defined at:
  2937 ;;		line 46 in file "../board_support_package/picdem2_net/mssp_spi_master.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;		None               void
  2944 ;; Registers used:
  2945 ;;		wreg, status,2
  2946 ;; Tracked objects:
  2947 ;;		On entry : F/2
  2948 ;;		On exit  : F/2
  2949 ;;		Unchanged: F/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;Total ram usage:        0 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    8
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_initHW
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text8
  2966  006372                     __ptext8:
  2967                           	opt stack 0
  2968  006372                     _spi_init:
  2969                           	opt stack 21
  2970                           
  2971                           ; BSR set to: 2
  2972                           ;mssp_spi_master.c: 48: SSP1STATbits.CKE = 1;
  2973                           
  2974                           ; BSR set to: 2
  2975                           ;incstack = 0
  2976  006372  8CC7               	bsf	4039,6,c	;volatile
  2977                           
  2978                           ;mssp_spi_master.c: 49: SSP1STATbits.SMP = 0;
  2979  006374  9EC7               	bcf	4039,7,c	;volatile
  2980                           
  2981                           ; BSR set to: 2
  2982                           ;mssp_spi_master.c: 51: SSP1CON1 = 0x01;
  2983  006376  0E01               	movlw	1
  2984  006378  6EC6               	movwf	4038,c	;volatile
  2985                           
  2986                           ; BSR set to: 2
  2987                           ;mssp_spi_master.c: 52: SSP1CON1bits.SSPEN = 1;
  2988  00637A  8AC6               	bsf	4038,5,c	;volatile
  2989                           
  2990                           ; BSR set to: 2
  2991  00637C  0C01               	retlw	1	;funcret
  2992  00637E                     __end_of_spi_init:
  2993                           	opt stack 0
  2994                           tosu	equ	0xFFF
  2995                           tosh	equ	0xFFE
  2996                           tosl	equ	0xFFD
  2997                           pclath	equ	0xFFA
  2998                           tblptru	equ	0xFF8
  2999                           tblptrh	equ	0xFF7
  3000                           tblptrl	equ	0xFF6
  3001                           tablat	equ	0xFF5
  3002                           prodh	equ	0xFF4
  3003                           prodl	equ	0xFF3
  3004                           intcon	equ	0xFF2
  3005                           indf0	equ	0xFEF
  3006                           postinc0	equ	0xFEE
  3007                           fsr0h	equ	0xFEA
  3008                           fsr0l	equ	0xFE9
  3009                           wreg	equ	0xFE8
  3010                           indf1	equ	0xFE7
  3011                           postinc1	equ	0xFE6
  3012                           postdec1	equ	0xFE5
  3013                           plusw1	equ	0xFE3
  3014                           fsr1h	equ	0xFE2
  3015                           fsr1l	equ	0xFE1
  3016                           bsr	equ	0xFE0
  3017                           indf2	equ	0xFDF
  3018                           postinc2	equ	0xFDE
  3019                           postdec2	equ	0xFDD
  3020                           plusw2	equ	0xFDB
  3021                           fsr2h	equ	0xFDA
  3022                           fsr2l	equ	0xFD9
  3023                           status	equ	0xFD8
  3024                           
  3025 ;; *************** function _rtcc_init *****************
  3026 ;; Defined at:
  3027 ;;		line 77 in file "../board_support_package/picdem2_net/rtcc.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;		None               void
  3034 ;; Registers used:
  3035 ;;		wreg, status,2
  3036 ;; Tracked objects:
  3037 ;;		On entry : F/2
  3038 ;;		On exit  : F/2
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;Total ram usage:        0 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    8
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_initHW
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text9
  3056  005E2A                     __ptext9:
  3057                           	opt stack 0
  3058  005E2A                     _rtcc_init:
  3059                           	opt stack 21
  3060                           
  3061                           ; BSR set to: 2
  3062                           ;rtcc.c: 79: TMR1CS = 1;
  3063                           
  3064                           ; BSR set to: 2
  3065                           ;incstack = 0
  3066  005E2A  82CD               	bsf	4045,1,c	;volatile
  3067                           
  3068                           ;rtcc.c: 80: T1OSCEN = 1;
  3069  005E2C  86CD               	bsf	4045,3,c	;volatile
  3070                           
  3071                           ;rtcc.c: 81: T1CKPS0 = 0;
  3072  005E2E  98CD               	bcf	4045,4,c	;volatile
  3073                           
  3074                           ;rtcc.c: 82: T1CKPS1 = 0;
  3075  005E30  9ACD               	bcf	4045,5,c	;volatile
  3076                           
  3077                           ;rtcc.c: 83: T1SYNC = 1;
  3078  005E32  84CD               	bsf	4045,2,c	;volatile
  3079                           
  3080                           ;rtcc.c: 84: TMR1ON = 1;
  3081  005E34  80CD               	bsf	4045,0,c	;volatile
  3082                           
  3083                           ; BSR set to: 2
  3084                           ;rtcc.c: 86: TMR1 = 32768UL;
  3085  005E36  0E80               	movlw	128
  3086  005E38  6ECF               	movwf	4047,c	;volatile
  3087  005E3A  6ACE               	clrf	4046,c	;volatile
  3088                           
  3089                           ;rtcc.c: 87: deviceTime = 1293861600;
  3090  005E3C  0EE0               	movlw	224
  3091  005E3E  6FD0               	movwf	_deviceTime& (0+255),b	;volatile
  3092  005E40  0EC2               	movlw	194
  3093  005E42  6FD1               	movwf	(_deviceTime+1)& (0+255),b	;volatile
  3094  005E44  0E1E               	movlw	30
  3095  005E46  6FD2               	movwf	(_deviceTime+2)& (0+255),b	;volatile
  3096  005E48  0E4D               	movlw	77
  3097  005E4A  6FD3               	movwf	(_deviceTime+3)& (0+255),b	;volatile
  3098                           
  3099                           ;rtcc.c: 88: localTime = 1293861600 + 2208988800;
  3100  005E4C  0E60               	movlw	96
  3101  005E4E  6FD4               	movwf	_localTime& (0+255),b	;volatile
  3102  005E50  0E41               	movlw	65
  3103  005E52  6FD5               	movwf	(_localTime+1)& (0+255),b	;volatile
  3104  005E54  0EC9               	movlw	201
  3105  005E56  6FD6               	movwf	(_localTime+2)& (0+255),b	;volatile
  3106  005E58  0ED0               	movlw	208
  3107  005E5A  6FD7               	movwf	(_localTime+3)& (0+255),b	;volatile
  3108                           
  3109                           ; BSR set to: 2
  3110                           ;rtcc.c: 90: TMR1IP = 1;
  3111  005E5C  809F               	bsf	3999,0,c	;volatile
  3112                           
  3113                           ; BSR set to: 2
  3114                           ;rtcc.c: 91: TMR1IE = 1;
  3115  005E5E  809D               	bsf	3997,0,c	;volatile
  3116                           
  3117                           ; BSR set to: 2
  3118  005E60  0CD0               	retlw	208	;funcret
  3119  005E62                     __end_of_rtcc_init:
  3120                           	opt stack 0
  3121                           tosu	equ	0xFFF
  3122                           tosh	equ	0xFFE
  3123                           tosl	equ	0xFFD
  3124                           pclath	equ	0xFFA
  3125                           tblptru	equ	0xFF8
  3126                           tblptrh	equ	0xFF7
  3127                           tblptrl	equ	0xFF6
  3128                           tablat	equ	0xFF5
  3129                           prodh	equ	0xFF4
  3130                           prodl	equ	0xFF3
  3131                           intcon	equ	0xFF2
  3132                           indf0	equ	0xFEF
  3133                           postinc0	equ	0xFEE
  3134                           fsr0h	equ	0xFEA
  3135                           fsr0l	equ	0xFE9
  3136                           wreg	equ	0xFE8
  3137                           indf1	equ	0xFE7
  3138                           postinc1	equ	0xFE6
  3139                           postdec1	equ	0xFE5
  3140                           plusw1	equ	0xFE3
  3141                           fsr1h	equ	0xFE2
  3142                           fsr1l	equ	0xFE1
  3143                           bsr	equ	0xFE0
  3144                           indf2	equ	0xFDF
  3145                           postinc2	equ	0xFDE
  3146                           postdec2	equ	0xFDD
  3147                           plusw2	equ	0xFDB
  3148                           fsr2h	equ	0xFDA
  3149                           fsr2l	equ	0xFD9
  3150                           status	equ	0xFD8
  3151                           
  3152 ;; *************** function _lcd_init *****************
  3153 ;; Defined at:
  3154 ;;		line 110 in file "../board_support_package/picdem2_net/lcd.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  y               2    0        volatile int 
  3159 ;;  x               2    0        volatile int 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;		None               void
  3162 ;; Registers used:
  3163 ;;		wreg, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : F/2
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;Total ram usage:        1 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    9
  3176 ;; This function calls:
  3177 ;;		_lcd_busy
  3178 ;;		_lcd_init_pins
  3179 ;;		_lcd_write_ctrl
  3180 ;; This function is called by:
  3181 ;;		_initHW
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text10
  3186  0051D6                     __ptext10:
  3187                           	opt stack 0
  3188  0051D6                     _lcd_init:
  3189                           	opt stack 20
  3190                           
  3191                           ; BSR set to: 2
  3192                           ;lcd.c: 112: volatile int x,y;
  3193                           ;lcd.c: 114: lcd_init_pins();
  3194                           
  3195                           ; BSR set to: 2
  3196                           ;incstack = 0
  3197  0051D6  ECBF  F031         	call	_lcd_init_pins	;wreg free
  3198                           
  3199                           ; BSR set to: 2
  3200                           ;lcd.c: 116: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  3201  0051DA  D846               	call	PL713	;call to abstracted procedure
  3202  0051DC                     u15627:
  3203  0051DC  2EE8               	decfsz	wreg,f,c
  3204  0051DE  D7FE               	goto	u15627
  3205  0051E0  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3206  0051E2  D7FC               	goto	u15627
  3207  0051E4  D000               	nop2	
  3208                           
  3209                           ;lcd.c: 117: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  3210  0051E6  D840               	call	PL713	;call to abstracted procedure
  3211  0051E8                     u15637:
  3212  0051E8  2EE8               	decfsz	wreg,f,c
  3213  0051EA  D7FE               	goto	u15637
  3214  0051EC  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3215  0051EE  D7FC               	goto	u15637
  3216  0051F0  D000               	nop2	
  3217                           
  3218                           ;lcd.c: 118: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  3219  0051F2  D83A               	call	PL713	;call to abstracted procedure
  3220  0051F4                     u15647:
  3221  0051F4  2EE8               	decfsz	wreg,f,c
  3222  0051F6  D7FE               	goto	u15647
  3223  0051F8  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3224  0051FA  D7FC               	goto	u15647
  3225  0051FC  D000               	nop2	
  3226                           
  3227                           ;lcd.c: 119: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  3228  0051FE  D834               	call	PL713	;call to abstracted procedure
  3229  005200                     u15657:
  3230  005200  2EE8               	decfsz	wreg,f,c
  3231  005202  D7FE               	goto	u15657
  3232  005204  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3233  005206  D7FC               	goto	u15657
  3234  005208  D000               	nop2	
  3235                           
  3236                           ;lcd.c: 122: lcd_write_ctrl(0x03);
  3237  00520A  0E03               	movlw	3
  3238  00520C  ECF8  F030         	call	_lcd_write_ctrl
  3239                           
  3240                           ;lcd.c: 123: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  3241  005210  D82E               	call	PL753	;call to abstracted procedure
  3242  005212                     u15667:
  3243  005212  2EE8               	decfsz	wreg,f,c
  3244  005214  D7FE               	goto	u15667
  3245  005216  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3246  005218  D7FC               	goto	u15667
  3247  00521A  F000               	nop	
  3248                           
  3249                           ;lcd.c: 124: lcd_write_ctrl(0x03);
  3250  00521C  0E03               	movlw	3
  3251  00521E  ECF8  F030         	call	_lcd_write_ctrl
  3252                           
  3253                           ;lcd.c: 125: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  3254  005222  D825               	call	PL753	;call to abstracted procedure
  3255  005224                     u15677:
  3256  005224  2EE8               	decfsz	wreg,f,c
  3257  005226  D7FE               	goto	u15677
  3258  005228  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3259  00522A  D7FC               	goto	u15677
  3260  00522C  F000               	nop	
  3261                           
  3262                           ;lcd.c: 126: lcd_write_ctrl(0x03);
  3263  00522E  0E03               	movlw	3
  3264  005230  ECF8  F030         	call	_lcd_write_ctrl
  3265                           
  3266                           ;lcd.c: 129: lcd_write_ctrl(0x38);
  3267  005234  0E38               	movlw	56
  3268  005236  ECF8  F030         	call	_lcd_write_ctrl
  3269                           
  3270                           ;lcd.c: 131: lcd_busy();
  3271  00523A  ECC4  F031         	call	_lcd_busy	;wreg free
  3272                           
  3273                           ;lcd.c: 132: lcd_write_ctrl(0x0C);
  3274  00523E  0E0C               	movlw	12
  3275  005240  ECF8  F030         	call	_lcd_write_ctrl
  3276                           
  3277                           ;lcd.c: 133: lcd_busy();
  3278  005244  ECC4  F031         	call	_lcd_busy	;wreg free
  3279                           
  3280                           ;lcd.c: 134: lcd_write_ctrl(0x01);
  3281  005248  0E01               	movlw	1
  3282  00524A  ECF8  F030         	call	_lcd_write_ctrl
  3283                           
  3284                           ;lcd.c: 135: lcd_busy();
  3285  00524E  ECC4  F031         	call	_lcd_busy	;wreg free
  3286                           
  3287                           ;lcd.c: 138: lcd_write_ctrl(0x01);
  3288  005252  0E01               	movlw	1
  3289  005254  ECF8  F030         	call	_lcd_write_ctrl
  3290                           
  3291                           ;lcd.c: 139: _delay((unsigned long)((2)*(41666667UL/4000.0)));
  3292  005258  0E1C               	movlw	28
  3293  00525A  6E18               	movwf	??_lcd_init& (0+255),c
  3294  00525C  0E0D               	movlw	13
  3295  00525E                     u15687:
  3296  00525E  2EE8               	decfsz	wreg,f,c
  3297  005260  D7FE               	goto	u15687
  3298  005262  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3299  005264  D7FC               	goto	u15687
  3300  005266  0012               	return		;funcret
  3301  005268                     __end_of_lcd_init:
  3302                           	opt stack 0
  3303  005268                     PL713:
  3304                           	opt stack 20
  3305  005268  0E88               	movlw	136
  3306  00526A  6E18               	movwf	??_lcd_init& (0+255),c
  3307  00526C  0C46               	retlw	70
  3308  00526E                     __end_ofPL713:
  3309                           	opt stack 0
  3310  00526E                     PL753:
  3311                           	opt stack 20
  3312  00526E  0E37               	movlw	55
  3313  005270  6E18               	movwf	??_lcd_init& (0+255),c
  3314  005272  0C1B               	retlw	27
  3315  005274                     __end_ofPL753:
  3316                           	opt stack 0
  3317                           tosu	equ	0xFFF
  3318                           tosh	equ	0xFFE
  3319                           tosl	equ	0xFFD
  3320                           pclath	equ	0xFFA
  3321                           tblptru	equ	0xFF8
  3322                           tblptrh	equ	0xFF7
  3323                           tblptrl	equ	0xFF6
  3324                           tablat	equ	0xFF5
  3325                           prodh	equ	0xFF4
  3326                           prodl	equ	0xFF3
  3327                           intcon	equ	0xFF2
  3328                           indf0	equ	0xFEF
  3329                           postinc0	equ	0xFEE
  3330                           fsr0h	equ	0xFEA
  3331                           fsr0l	equ	0xFE9
  3332                           wreg	equ	0xFE8
  3333                           indf1	equ	0xFE7
  3334                           postinc1	equ	0xFE6
  3335                           postdec1	equ	0xFE5
  3336                           plusw1	equ	0xFE3
  3337                           fsr1h	equ	0xFE2
  3338                           fsr1l	equ	0xFE1
  3339                           bsr	equ	0xFE0
  3340                           indf2	equ	0xFDF
  3341                           postinc2	equ	0xFDE
  3342                           postdec2	equ	0xFDD
  3343                           plusw2	equ	0xFDB
  3344                           fsr2h	equ	0xFDA
  3345                           fsr2l	equ	0xFD9
  3346                           status	equ	0xFD8
  3347                           
  3348 ;; *************** function _lcd_write_ctrl *****************
  3349 ;; Defined at:
  3350 ;;		line 59 in file "../board_support_package/picdem2_net/lcd_hw.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  c               1    wreg     unsigned char 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  c               1   22[COMRAM] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;		None               void
  3357 ;; Registers used:
  3358 ;;		wreg
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/2
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;Total ram usage:        1 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    8
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_lcd_goto1
  3375 ;;		_lcd_init
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text11
  3380  0061F0                     __ptext11:
  3381                           	opt stack 0
  3382  0061F0                     _lcd_write_ctrl:
  3383                           	opt stack 21
  3384                           
  3385                           ;incstack = 0
  3386                           ;lcd_write_ctrl@c stored from wreg
  3387  0061F0  6E17               	movwf	lcd_write_ctrl@c,c
  3388                           
  3389                           ;lcd_hw.c: 61: LATH1 = 0;
  3390  0061F2  9290               	bcf	3984,1,c	;volatile
  3391                           
  3392                           ;lcd_hw.c: 62: LATH2 = 0;
  3393  0061F4  9490               	bcf	3984,2,c	;volatile
  3394                           
  3395                           ;lcd_hw.c: 64: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  3396  0061F6  0EAD               	movlw	173
  3397  0061F8                     u15697:
  3398  0061F8  2EE8               	decfsz	wreg,f,c
  3399  0061FA  D7FE               	goto	u15697
  3400  0061FC  F000               	nop	
  3401                           
  3402                           ;lcd_hw.c: 65: LATE = c;
  3403  0061FE  C017  FF8D         	movff	lcd_write_ctrl@c,3981	;volatile
  3404                           
  3405                           ;lcd_hw.c: 66: LATH0 = 1;
  3406  006202  8090               	bsf	3984,0,c	;volatile
  3407                           
  3408                           ;lcd_hw.c: 67: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  3409  006204  0EAD               	movlw	173
  3410  006206                     u15707:
  3411  006206  2EE8               	decfsz	wreg,f,c
  3412  006208  D7FE               	goto	u15707
  3413  00620A  F000               	nop	
  3414                           
  3415                           ;lcd_hw.c: 68: LATH0 = 0;
  3416  00620C  9090               	bcf	3984,0,c	;volatile
  3417  00620E  0012               	return		;funcret
  3418  006210                     __end_of_lcd_write_ctrl:
  3419                           	opt stack 0
  3420                           tosu	equ	0xFFF
  3421                           tosh	equ	0xFFE
  3422                           tosl	equ	0xFFD
  3423                           pclath	equ	0xFFA
  3424                           tblptru	equ	0xFF8
  3425                           tblptrh	equ	0xFF7
  3426                           tblptrl	equ	0xFF6
  3427                           tablat	equ	0xFF5
  3428                           prodh	equ	0xFF4
  3429                           prodl	equ	0xFF3
  3430                           intcon	equ	0xFF2
  3431                           indf0	equ	0xFEF
  3432                           postinc0	equ	0xFEE
  3433                           fsr0h	equ	0xFEA
  3434                           fsr0l	equ	0xFE9
  3435                           wreg	equ	0xFE8
  3436                           indf1	equ	0xFE7
  3437                           postinc1	equ	0xFE6
  3438                           postdec1	equ	0xFE5
  3439                           plusw1	equ	0xFE3
  3440                           fsr1h	equ	0xFE2
  3441                           fsr1l	equ	0xFE1
  3442                           bsr	equ	0xFE0
  3443                           indf2	equ	0xFDF
  3444                           postinc2	equ	0xFDE
  3445                           postdec2	equ	0xFDD
  3446                           plusw2	equ	0xFDB
  3447                           fsr2h	equ	0xFDA
  3448                           fsr2l	equ	0xFD9
  3449                           status	equ	0xFD8
  3450                           
  3451 ;; *************** function _lcd_init_pins *****************
  3452 ;; Defined at:
  3453 ;;		line 50 in file "../board_support_package/picdem2_net/lcd_hw.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;		None               void
  3460 ;; Registers used:
  3461 ;;		None
  3462 ;; Tracked objects:
  3463 ;;		On entry : F/2
  3464 ;;		On exit  : F/2
  3465 ;;		Unchanged: F/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;Total ram usage:        0 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    8
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_lcd_init
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text12
  3482  00637E                     __ptext12:
  3483                           	opt stack 0
  3484  00637E                     _lcd_init_pins:
  3485                           	opt stack 20
  3486                           
  3487                           ; BSR set to: 2
  3488                           ;lcd_hw.c: 52: TRISE = 0;
  3489                           
  3490                           ;incstack = 0
  3491  00637E  6A96               	clrf	3990,c	;volatile
  3492                           
  3493                           ;lcd_hw.c: 53: TRISH = 0x00;
  3494  006380  6A99               	clrf	3993,c	;volatile
  3495                           
  3496                           ;lcd_hw.c: 54: LATE = 0;
  3497  006382  6A8D               	clrf	3981,c	;volatile
  3498                           
  3499                           ;lcd_hw.c: 55: LATH = 0;
  3500  006384  6A90               	clrf	3984,c	;volatile
  3501                           
  3502                           ; BSR set to: 2
  3503  006386  0012               	return		;funcret
  3504  006388                     __end_of_lcd_init_pins:
  3505                           	opt stack 0
  3506                           tosu	equ	0xFFF
  3507                           tosh	equ	0xFFE
  3508                           tosl	equ	0xFFD
  3509                           pclath	equ	0xFFA
  3510                           tblptru	equ	0xFF8
  3511                           tblptrh	equ	0xFF7
  3512                           tblptrl	equ	0xFF6
  3513                           tablat	equ	0xFF5
  3514                           prodh	equ	0xFF4
  3515                           prodl	equ	0xFF3
  3516                           intcon	equ	0xFF2
  3517                           indf0	equ	0xFEF
  3518                           postinc0	equ	0xFEE
  3519                           fsr0h	equ	0xFEA
  3520                           fsr0l	equ	0xFE9
  3521                           wreg	equ	0xFE8
  3522                           indf1	equ	0xFE7
  3523                           postinc1	equ	0xFE6
  3524                           postdec1	equ	0xFE5
  3525                           plusw1	equ	0xFE3
  3526                           fsr1h	equ	0xFE2
  3527                           fsr1l	equ	0xFE1
  3528                           bsr	equ	0xFE0
  3529                           indf2	equ	0xFDF
  3530                           postinc2	equ	0xFDE
  3531                           postdec2	equ	0xFDD
  3532                           plusw2	equ	0xFDB
  3533                           fsr2h	equ	0xFDA
  3534                           fsr2l	equ	0xFD9
  3535                           status	equ	0xFD8
  3536                           
  3537 ;; *************** function _lcd_busy *****************
  3538 ;; Defined at:
  3539 ;;		line 82 in file "../board_support_package/picdem2_net/lcd_hw.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;		None               void
  3546 ;; Registers used:
  3547 ;;		wreg
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/2
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    8
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_lcd_putch
  3564 ;;		_lcd_goto1
  3565 ;;		_lcd_init
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text13
  3570  006388                     __ptext13:
  3571                           	opt stack 0
  3572  006388                     _lcd_busy:
  3573                           	opt stack 20
  3574                           
  3575                           ;lcd_hw.c: 84: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  3576                           
  3577                           ; BSR set to: 2
  3578                           ;incstack = 0
  3579  006388  0EAD               	movlw	173
  3580  00638A                     u15717:
  3581  00638A  2EE8               	decfsz	wreg,f,c
  3582  00638C  D7FE               	goto	u15717
  3583  00638E  F000               	nop	
  3584  006390  0012               	return		;funcret
  3585  006392                     __end_of_lcd_busy:
  3586                           	opt stack 0
  3587                           tosu	equ	0xFFF
  3588                           tosh	equ	0xFFE
  3589                           tosl	equ	0xFFD
  3590                           pclath	equ	0xFFA
  3591                           tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           prodh	equ	0xFF4
  3596                           prodl	equ	0xFF3
  3597                           intcon	equ	0xFF2
  3598                           indf0	equ	0xFEF
  3599                           postinc0	equ	0xFEE
  3600                           fsr0h	equ	0xFEA
  3601                           fsr0l	equ	0xFE9
  3602                           wreg	equ	0xFE8
  3603                           indf1	equ	0xFE7
  3604                           postinc1	equ	0xFE6
  3605                           postdec1	equ	0xFE5
  3606                           plusw1	equ	0xFE3
  3607                           fsr1h	equ	0xFE2
  3608                           fsr1l	equ	0xFE1
  3609                           bsr	equ	0xFE0
  3610                           indf2	equ	0xFDF
  3611                           postinc2	equ	0xFDE
  3612                           postdec2	equ	0xFDD
  3613                           plusw2	equ	0xFDB
  3614                           fsr2h	equ	0xFDA
  3615                           fsr2l	equ	0xFD9
  3616                           status	equ	0xFD8
  3617                           
  3618 ;; *************** function _LED_Init *****************
  3619 ;; Defined at:
  3620 ;;		line 55 in file "../board_support_package/picdem2_net/led_driver.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;		None
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  x               1   22[COMRAM] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;		None               void
  3627 ;; Registers used:
  3628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/2
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;Total ram usage:        1 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    8
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_initHW
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text14
  3649  006210                     __ptext14:
  3650                           	opt stack 0
  3651  006210                     _LED_Init:
  3652                           	opt stack 21
  3653                           
  3654                           ;led_driver.c: 57: uint8_t x = 0;
  3655                           
  3656                           ;incstack = 0
  3657  006210  6A17               	clrf	LED_Init@x,c
  3658                           
  3659                           ;led_driver.c: 58: for(x = 0; x < 8; x++)
  3660  006212  6A17               	clrf	LED_Init@x,c
  3661  006214                     l9336:
  3662                           
  3663                           ;led_driver.c: 59: {
  3664                           ;led_driver.c: 60: led_values[x].value = 0;
  3665  006214  5017               	movf	LED_Init@x,w,c
  3666  006216  0D02               	mullw	2
  3667  006218  0E00               	movlw	low _led_values
  3668  00621A  24F3               	addwf	prodl,w,c
  3669  00621C  6ED9               	movwf	fsr2l,c
  3670  00621E  0E02               	movlw	high _led_values
  3671  006220  20F4               	addwfc	prodh,w,c
  3672  006222  6EDA               	movwf	fsr2h,c
  3673  006224  6ADF               	clrf	indf2,c
  3674  006226  2A17               	incf	LED_Init@x,f,c
  3675  006228  0E07               	movlw	7
  3676  00622A  6417               	cpfsgt	LED_Init@x,c
  3677  00622C  D7F3               	goto	l9336
  3678  00622E  0C07               	retlw	7
  3679  006230                     __end_of_LED_Init:
  3680                           	opt stack 0
  3681                           tosu	equ	0xFFF
  3682                           tosh	equ	0xFFE
  3683                           tosl	equ	0xFFD
  3684                           pclath	equ	0xFFA
  3685                           tblptru	equ	0xFF8
  3686                           tblptrh	equ	0xFF7
  3687                           tblptrl	equ	0xFF6
  3688                           tablat	equ	0xFF5
  3689                           prodh	equ	0xFF4
  3690                           prodl	equ	0xFF3
  3691                           intcon	equ	0xFF2
  3692                           indf0	equ	0xFEF
  3693                           postinc0	equ	0xFEE
  3694                           fsr0h	equ	0xFEA
  3695                           fsr0l	equ	0xFE9
  3696                           wreg	equ	0xFE8
  3697                           indf1	equ	0xFE7
  3698                           postinc1	equ	0xFE6
  3699                           postdec1	equ	0xFE5
  3700                           plusw1	equ	0xFE3
  3701                           fsr1h	equ	0xFE2
  3702                           fsr1l	equ	0xFE1
  3703                           bsr	equ	0xFE0
  3704                           indf2	equ	0xFDF
  3705                           postinc2	equ	0xFDE
  3706                           postdec2	equ	0xFDD
  3707                           plusw2	equ	0xFDB
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712 ;; *************** function _ADC_Initialize *****************
  3713 ;; Defined at:
  3714 ;;		line 55 in file "../board_support_package/picdem2_net/adc.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;		None               void
  3721 ;; Registers used:
  3722 ;;		wreg, status,2
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/2
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    8
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_initHW
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text15
  3743  006320                     __ptext15:
  3744                           	opt stack 0
  3745  006320                     _ADC_Initialize:
  3746                           	opt stack 21
  3747                           
  3748                           ;adc.c: 59: TRISAbits.RA2 = 1;
  3749                           
  3750                           ;incstack = 0
  3751  006320  8492               	bsf	3986,2,c	;volatile
  3752                           
  3753                           ;adc.c: 60: TRISAbits.RA3 = 1;
  3754  006322  8692               	bsf	3986,3,c	;volatile
  3755                           
  3756                           ;adc.c: 63: ADCON0 = 0x0D;
  3757  006324  0E0D               	movlw	13
  3758  006326  6EC2               	movwf	4034,c	;volatile
  3759                           
  3760                           ;adc.c: 66: ADCON1 = 0x06;
  3761  006328  0E06               	movlw	6
  3762  00632A  6EC1               	movwf	4033,c	;volatile
  3763                           
  3764                           ;adc.c: 69: ADCON2 = 0xBE;
  3765  00632C  0EBE               	movlw	190
  3766  00632E  6EC0               	movwf	4032,c	;volatile
  3767                           
  3768                           ;adc.c: 72: ADRESL = 0x00;
  3769  006330  6AC3               	clrf	4035,c	;volatile
  3770                           
  3771                           ;adc.c: 75: ADRESH = 0x00;
  3772  006332  6AC4               	clrf	4036,c	;volatile
  3773  006334  0012               	return		;funcret
  3774  006336                     __end_of_ADC_Initialize:
  3775                           	opt stack 0
  3776                           tosu	equ	0xFFF
  3777                           tosh	equ	0xFFE
  3778                           tosl	equ	0xFFD
  3779                           pclath	equ	0xFFA
  3780                           tblptru	equ	0xFF8
  3781                           tblptrh	equ	0xFF7
  3782                           tblptrl	equ	0xFF6
  3783                           tablat	equ	0xFF5
  3784                           prodh	equ	0xFF4
  3785                           prodl	equ	0xFF3
  3786                           intcon	equ	0xFF2
  3787                           indf0	equ	0xFEF
  3788                           postinc0	equ	0xFEE
  3789                           fsr0h	equ	0xFEA
  3790                           fsr0l	equ	0xFE9
  3791                           wreg	equ	0xFE8
  3792                           indf1	equ	0xFE7
  3793                           postinc1	equ	0xFE6
  3794                           postdec1	equ	0xFE5
  3795                           plusw1	equ	0xFE3
  3796                           fsr1h	equ	0xFE2
  3797                           fsr1l	equ	0xFE1
  3798                           bsr	equ	0xFE0
  3799                           indf2	equ	0xFDF
  3800                           postinc2	equ	0xFDE
  3801                           postdec2	equ	0xFDD
  3802                           plusw2	equ	0xFDB
  3803                           fsr2h	equ	0xFDA
  3804                           fsr2l	equ	0xFD9
  3805                           status	equ	0xFD8
  3806                           
  3807 ;; *************** function _SYSLOG_Init *****************
  3808 ;; Defined at:
  3809 ;;		line 43 in file "../../TCPIP Library/source/syslog.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;		None
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  t               4   11[BANK0 ] unsigned long 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;		None               void
  3816 ;; Registers used:
  3817 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : F/1
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;Total ram usage:        4 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:   11
  3830 ;; This function calls:
  3831 ;;		_printf
  3832 ;;		_time
  3833 ;; This function is called by:
  3834 ;;		_main
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           	psect	text16
  3839  005F6C                     __ptext16:
  3840                           	opt stack 0
  3841  005F6C                     _SYSLOG_Init:
  3842                           	opt stack 19
  3843                           
  3844                           ; BSR set to: 1
  3845                           ;syslog.c: 45: unsigned long t = time(0);
  3846                           
  3847                           ;incstack = 0
  3848  005F6C  6A17               	clrf	time@t,c
  3849  005F6E  6A18               	clrf	time@t+1,c
  3850  005F70  ECC2  F02C         	call	_time	;wreg free
  3851  005F74  C017  F06B         	movff	?_time,SYSLOG_Init@t
  3852  005F78  C018  F06C         	movff	?_time+1,SYSLOG_Init@t+1
  3853  005F7C  C019  F06D         	movff	?_time+2,SYSLOG_Init@t+2
  3854  005F80  C01A  F06E         	movff	?_time+3,SYSLOG_Init@t+3
  3855                           
  3856                           ;syslog.c: 47: printf("\r\n\r\nStarting Syslog at %u\r\n",t);
  3857  005F84  C06B  F060         	movff	SYSLOG_Init@t,?_printf
  3858  005F88  C06C  F061         	movff	SYSLOG_Init@t+1,?_printf+1
  3859  005F8C  C06D  F062         	movff	SYSLOG_Init@t+2,?_printf+2
  3860  005F90  C06E  F063         	movff	SYSLOG_Init@t+3,?_printf+3
  3861  005F94  0E39               	movlw	STR_3& (0+255)
  3862  005F96  EF9F  F030         	goto	_printf
  3863  005F9A                     __end_of_SYSLOG_Init:
  3864                           	opt stack 0
  3865                           tosu	equ	0xFFF
  3866                           tosh	equ	0xFFE
  3867                           tosl	equ	0xFFD
  3868                           pclath	equ	0xFFA
  3869                           tblptru	equ	0xFF8
  3870                           tblptrh	equ	0xFF7
  3871                           tblptrl	equ	0xFF6
  3872                           tablat	equ	0xFF5
  3873                           prodh	equ	0xFF4
  3874                           prodl	equ	0xFF3
  3875                           intcon	equ	0xFF2
  3876                           indf0	equ	0xFEF
  3877                           postinc0	equ	0xFEE
  3878                           fsr0h	equ	0xFEA
  3879                           fsr0l	equ	0xFE9
  3880                           wreg	equ	0xFE8
  3881                           indf1	equ	0xFE7
  3882                           postinc1	equ	0xFE6
  3883                           postdec1	equ	0xFE5
  3884                           plusw1	equ	0xFE3
  3885                           fsr1h	equ	0xFE2
  3886                           fsr1l	equ	0xFE1
  3887                           bsr	equ	0xFE0
  3888                           indf2	equ	0xFDF
  3889                           postinc2	equ	0xFDE
  3890                           postdec2	equ	0xFDD
  3891                           plusw2	equ	0xFDB
  3892                           fsr2h	equ	0xFDA
  3893                           fsr2l	equ	0xFD9
  3894                           status	equ	0xFD8
  3895                           
  3896 ;; *************** function _Network_WaitForLink *****************
  3897 ;; Defined at:
  3898 ;;		line 76 in file "../../TCPIP Library/source/network.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;		None               void
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/1
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:   12
  3919 ;; This function calls:
  3920 ;;		_ETH_CheckLinkUp
  3921 ;; This function is called by:
  3922 ;;		_main
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text17
  3927  006356                     __ptext17:
  3928                           	opt stack 0
  3929  006356                     _Network_WaitForLink:
  3930                           	opt stack 18
  3931                           
  3932                           ;network.c: 78: while(!ETH_CheckLinkUp()) __nop();
  3933                           
  3934                           ;incstack = 0
  3935  006356  D001               	goto	l9776
  3936  006358                     l1009:
  3937  006358  F000               	nop	
  3938  00635A                     l9776:
  3939  00635A  EC9D  F02F         	call	_ETH_CheckLinkUp	;wreg free
  3940  00635E  0900               	iorlw	0
  3941  006360  E0FB               	bz	l1009
  3942  006362  0012               	return		;funcret
  3943  006364                     __end_of_Network_WaitForLink:
  3944                           	opt stack 0
  3945                           tosu	equ	0xFFF
  3946                           tosh	equ	0xFFE
  3947                           tosl	equ	0xFFD
  3948                           pclath	equ	0xFFA
  3949                           tblptru	equ	0xFF8
  3950                           tblptrh	equ	0xFF7
  3951                           tblptrl	equ	0xFF6
  3952                           tablat	equ	0xFF5
  3953                           prodh	equ	0xFF4
  3954                           prodl	equ	0xFF3
  3955                           intcon	equ	0xFF2
  3956                           indf0	equ	0xFEF
  3957                           postinc0	equ	0xFEE
  3958                           fsr0h	equ	0xFEA
  3959                           fsr0l	equ	0xFE9
  3960                           wreg	equ	0xFE8
  3961                           indf1	equ	0xFE7
  3962                           postinc1	equ	0xFE6
  3963                           postdec1	equ	0xFE5
  3964                           plusw1	equ	0xFE3
  3965                           fsr1h	equ	0xFE2
  3966                           fsr1l	equ	0xFE1
  3967                           bsr	equ	0xFE0
  3968                           indf2	equ	0xFDF
  3969                           postinc2	equ	0xFDE
  3970                           postdec2	equ	0xFDD
  3971                           plusw2	equ	0xFDB
  3972                           fsr2h	equ	0xFDA
  3973                           fsr2l	equ	0xFD9
  3974                           status	equ	0xFD8
  3975                           
  3976 ;; *************** function _Network_Manage *****************
  3977 ;; Defined at:
  3978 ;;		line 81 in file "../../TCPIP Library/source/network.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;  now             4  185[BANK1 ] long 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;		None               void
  3985 ;; Registers used:
  3986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/1
  3989 ;;		On exit  : E/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;Total ram usage:        5 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:   18
  3999 ;; This function calls:
  4000 ;;		_ARPV4_Update
  4001 ;;		_DHCP_Manage
  4002 ;;		_ETH_EventHandler
  4003 ;;		_Network_Read
  4004 ;;		_TCP_Update
  4005 ;;		_time
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text18
  4012  0053A6                     __ptext18:
  4013                           	opt stack 0
  4014  0053A6                     _Network_Manage:
  4015                           	opt stack 12
  4016                           
  4017                           ;network.c: 83: time_t now;
  4018                           ;network.c: 84: static time_t nowPv = 0;
  4019                           ;network.c: 86: ETH_EventHandler();
  4020                           
  4021                           ;incstack = 0
  4022  0053A6  ECFC  F02D         	call	_ETH_EventHandler	;wreg free
  4023                           
  4024                           ;network.c: 87: Network_Read();
  4025  0053AA  EC49  F027         	call	_Network_Read	;wreg free
  4026                           
  4027                           ;network.c: 90: time(&now);
  4028  0053AE  0EB9               	movlw	low Network_Manage@now
  4029  0053B0  6E17               	movwf	time@t,c
  4030  0053B2  0E01               	movlw	high Network_Manage@now
  4031  0053B4  6E18               	movwf	time@t+1,c
  4032  0053B6  ECC2  F02C         	call	_time	;wreg free
  4033                           
  4034                           ;network.c: 91: if(now >= arpTimer)
  4035  0053BA  0101               	movlb	1	; () banked
  4036  0053BC  51E8               	movf	_arpTimer& (0+255),w,b
  4037  0053BE  5DB9               	subwf	Network_Manage@now& (0+255),w,b
  4038  0053C0  51E9               	movf	(_arpTimer+1)& (0+255),w,b
  4039  0053C2  59BA               	subwfb	(Network_Manage@now+1)& (0+255),w,b
  4040  0053C4  51EA               	movf	(_arpTimer+2)& (0+255),w,b
  4041  0053C6  59BB               	subwfb	(Network_Manage@now+2)& (0+255),w,b
  4042  0053C8  51BC               	movf	(Network_Manage@now+3)& (0+255),w,b
  4043  0053CA  D830               	call	PL697	;call to abstracted procedure
  4044  0053CC  51EB               	movf	(_arpTimer+3)& (0+255),w,b
  4045  0053CE  0A80               	xorlw	128
  4046  0053D0  0100               	movlb	0	; () banked
  4047  0053D2  59FF               	subwfb	??_Network_Manage& (0+255),w,b
  4048  0053D4  E303               	bnc	l9790
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;network.c: 92: {
  4052                           ;network.c: 93: ARPV4_Update();
  4053  0053D6  EC3B  F030         	call	_ARPV4_Update	;wreg free
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;network.c: 94: arpTimer += 10;
  4057  0053DA  D820               	call	PL617	;call to abstracted procedure
  4058  0053DC                     l9790:
  4059                           
  4060                           ;network.c: 95: }
  4061                           ;network.c: 96: if(now > nowPv)
  4062  0053DC  0101               	movlb	1	; () banked
  4063  0053DE  51B9               	movf	Network_Manage@now& (0+255),w,b
  4064  0053E0  0102               	movlb	2	; () banked
  4065  0053E2  5D18               	subwf	Network_Manage@nowPv& (0+255),w,b
  4066  0053E4  0101               	movlb	1	; () banked
  4067  0053E6  51BA               	movf	(Network_Manage@now+1)& (0+255),w,b
  4068  0053E8  0102               	movlb	2	; () banked
  4069  0053EA  5919               	subwfb	(Network_Manage@nowPv+1)& (0+255),w,b
  4070  0053EC  0101               	movlb	1	; () banked
  4071  0053EE  51BB               	movf	(Network_Manage@now+2)& (0+255),w,b
  4072  0053F0  0102               	movlb	2	; () banked
  4073  0053F2  591A               	subwfb	(Network_Manage@nowPv+2)& (0+255),w,b
  4074  0053F4  511B               	movf	(Network_Manage@nowPv+3)& (0+255),w,b
  4075  0053F6  D81A               	call	PL697	;call to abstracted procedure
  4076  0053F8  51BC               	movf	(Network_Manage@now+3)& (0+255),w,b
  4077  0053FA  0A80               	xorlw	128
  4078  0053FC  0100               	movlb	0	; () banked
  4079  0053FE  59FF               	subwfb	??_Network_Manage& (0+255),w,b
  4080  005400  E204               	bc	l9794
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;network.c: 97: {
  4084                           ;network.c: 98: DHCP_Manage();
  4085  005402  ECA8  F02A         	call	_DHCP_Manage	;wreg free
  4086                           
  4087                           ;network.c: 100: TCP_Update();
  4088  005406  ECF1  F01D         	call	_TCP_Update	;wreg free
  4089  00540A                     l9794:
  4090                           
  4091                           ;network.c: 101: }
  4092                           ;network.c: 102: nowPv = now;
  4093  00540A  C1B9  F218         	movff	Network_Manage@now,Network_Manage@nowPv
  4094  00540E  C1BA  F219         	movff	Network_Manage@now+1,Network_Manage@nowPv+1
  4095  005412  C1BB  F21A         	movff	Network_Manage@now+2,Network_Manage@nowPv+2
  4096  005416  C1BC  F21B         	movff	Network_Manage@now+3,Network_Manage@nowPv+3
  4097  00541A  0012               	return		;funcret
  4098  00541C                     __end_of_Network_Manage:
  4099                           	opt stack 0
  4100  00541C                     PL617:
  4101                           	opt stack 17
  4102  00541C  0E0A               	movlw	10
  4103  00541E  0101               	movlb	1	; () banked
  4104  005420  27E8               	addwf	_arpTimer& (0+255),f,b
  4105  005422  0E00               	movlw	0
  4106  005424  23E9               	addwfc	(_arpTimer+1)& (0+255),f,b
  4107  005426  23EA               	addwfc	(_arpTimer+2)& (0+255),f,b
  4108  005428  23EB               	addwfc	(_arpTimer+3)& (0+255),f,b
  4109  00542A  0C00               	retlw	0
  4110  00542C                     __end_ofPL617:
  4111                           	opt stack 0
  4112  00542C                     PL697:
  4113                           	opt stack 12
  4114  00542C  0A80               	xorlw	128
  4115  00542E  0100               	movlb	0	; () banked
  4116  005430  6FFF               	movwf	??_Network_Manage& (0+255),b
  4117  005432  0101               	movlb	1	; () banked
  4118  005434  0012               	return	
  4119  005436                     __end_ofPL697:
  4120                           	opt stack 0
  4121                           tosu	equ	0xFFF
  4122                           tosh	equ	0xFFE
  4123                           tosl	equ	0xFFD
  4124                           pclath	equ	0xFFA
  4125                           tblptru	equ	0xFF8
  4126                           tblptrh	equ	0xFF7
  4127                           tblptrl	equ	0xFF6
  4128                           tablat	equ	0xFF5
  4129                           prodh	equ	0xFF4
  4130                           prodl	equ	0xFF3
  4131                           intcon	equ	0xFF2
  4132                           indf0	equ	0xFEF
  4133                           postinc0	equ	0xFEE
  4134                           fsr0h	equ	0xFEA
  4135                           fsr0l	equ	0xFE9
  4136                           wreg	equ	0xFE8
  4137                           indf1	equ	0xFE7
  4138                           postinc1	equ	0xFE6
  4139                           postdec1	equ	0xFE5
  4140                           plusw1	equ	0xFE3
  4141                           fsr1h	equ	0xFE2
  4142                           fsr1l	equ	0xFE1
  4143                           bsr	equ	0xFE0
  4144                           indf2	equ	0xFDF
  4145                           postinc2	equ	0xFDE
  4146                           postdec2	equ	0xFDD
  4147                           plusw2	equ	0xFDB
  4148                           fsr2h	equ	0xFDA
  4149                           fsr2l	equ	0xFD9
  4150                           status	equ	0xFD8
  4151                           
  4152 ;; *************** function _TCP_Update *****************
  4153 ;; Defined at:
  4154 ;;		line 1417 in file "../../TCPIP Library/source/tcpv4.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  tcbPtr          2   27[BANK1 ] PTR struct .
  4159 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
  4160 ;;		 -> STR_5(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), STR_1(15), 
  4161 ;;		 -> NULL(0), 
  4162 ;;  count           2   25[BANK1 ] int 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;		None               void
  4165 ;; Registers used:
  4166 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : E/0
  4169 ;;		On exit  : F/1
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;Total ram usage:       12 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:   15
  4179 ;; This function calls:
  4180 ;;		_TCP_FiniteStateMachine
  4181 ;; This function is called by:
  4182 ;;		_Network_Manage
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text19
  4187  003BE2                     __ptext19:
  4188                           	opt stack 0
  4189  003BE2                     _TCP_Update:
  4190                           	opt stack 14
  4191                           
  4192                           ;tcpv4.c: 1421: int count = 0;
  4193                           
  4194                           ;incstack = 0
  4195  003BE2  0101               	movlb	1	; () banked
  4196  003BE4  6B19               	clrf	TCP_Update@count& (0+255),b
  4197  003BE6  6B1A               	clrf	(TCP_Update@count+1)& (0+255),b
  4198                           
  4199                           ; BSR set to: 1
  4200                           ;tcpv4.c: 1425: nextSequenceNumber++;
  4201  003BE8  0102               	movlb	2	; () banked
  4202  003BEA  2B20               	incf	_nextSequenceNumber& (0+255),f,b
  4203  003BEC  0E00               	movlw	0
  4204  003BEE  2321               	addwfc	(_nextSequenceNumber+1)& (0+255),f,b
  4205  003BF0  2322               	addwfc	(_nextSequenceNumber+2)& (0+255),f,b
  4206  003BF2  2323               	addwfc	(_nextSequenceNumber+3)& (0+255),f,b
  4207                           
  4208                           ; BSR set to: 2
  4209                           ;tcpv4.c: 1428: nextAvailablePort = nextAvailablePort + 1;
  4210  003BF4  0101               	movlb	1	; () banked
  4211  003BF6  4BD0               	infsnz	_nextAvailablePort& (0+255),f,b
  4212  003BF8  2BD1               	incf	(_nextAvailablePort+1)& (0+255),f,b
  4213                           
  4214                           ; BSR set to: 1
  4215                           ;tcpv4.c: 1429: if (nextAvailablePort < (1024u))
  4216  003BFA  0E04               	movlw	4
  4217  003BFC  5DD1               	subwf	(_nextAvailablePort+1)& (0+255),w,b
  4218  003BFE  E203               	bc	l9550
  4219                           
  4220                           ; BSR set to: 1
  4221                           ;tcpv4.c: 1430: {
  4222                           ;tcpv4.c: 1431: nextAvailablePort = (1024u);
  4223  003C00  0E04               	movlw	4
  4224  003C02  6FD1               	movwf	(_nextAvailablePort+1)& (0+255),b
  4225  003C04  6BD0               	clrf	_nextAvailablePort& (0+255),b
  4226  003C06                     l9550:
  4227                           
  4228                           ; BSR set to: 1
  4229                           ;tcpv4.c: 1432: }
  4230                           ;tcpv4.c: 1435: tcbPtr = tcbList;
  4231  003C06  C043  F11B         	movff	_tcbList,TCP_Update@tcbPtr
  4232  003C0A  C044  F11C         	movff	_tcbList+1,TCP_Update@tcbPtr+1
  4233                           
  4234                           ;tcpv4.c: 1436: while((tcbPtr != (0)) && (count < tcbListSize))
  4235  003C0E  D0E8               	goto	l9570
  4236  003C10                     l9552:
  4237                           
  4238                           ; BSR set to: 1
  4239                           ;tcpv4.c: 1437: {
  4240                           ;tcpv4.c: 1438: if (tcbPtr->timeout > 0)
  4241  003C10  0E30               	movlw	48
  4242  003C12  D8FA               	call	PL411	;call to abstracted procedure
  4243  003C14  64F7               	cpfsgt	tblptrh,c
  4244  003C16  D002               	bra	u15157
  4245  003C18  D904               	call	PL591	;call to abstracted procedure
  4246  003C1A  D003               	bra	u15150
  4247  003C1C                     u15157:
  4248  003C1C  EC66  F011         	call	PL389	;call to abstracted procedure
  4249  003C20  D907               	call	PL661	;call to abstracted procedure
  4250  003C22                     u15150:
  4251  003C22  0101               	movlb	1	; () banked
  4252  003C24  5113               	movf	(??_TCP_Update+2)& (0+255),w,b
  4253  003C26  1114               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  4254  003C28  E101 D0C5          	bz	l9566
  4255                           
  4256                           ; BSR set to: 1
  4257                           ;tcpv4.c: 1439: {
  4258                           ;tcpv4.c: 1440: ;
  4259                           ;tcpv4.c: 1441: tcbPtr->timeout = tcbPtr->timeout - 1;
  4260  003C2C  6911               	setf	??_TCP_Update& (0+255),b
  4261  003C2E  6912               	setf	(??_TCP_Update+1)& (0+255),b
  4262  003C30  0E30               	movlw	48
  4263  003C32  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  4264  003C34  6F13               	movwf	(??_TCP_Update+2)& (0+255),b
  4265  003C36  0E00               	movlw	0
  4266  003C38  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  4267  003C3A  6F14               	movwf	(??_TCP_Update+3)& (0+255),b
  4268  003C3C  C113  FFF6         	movff	??_TCP_Update+2,tblptrl
  4269  003C40  C114  FFF7         	movff	??_TCP_Update+3,tblptrh
  4270  003C44  0E00               	movlw	low (__smallconst shr (0+16))
  4271  003C46  6EF8               	movwf	tblptru,c
  4272  003C48  0E0F               	movlw	(high __ramtop+-1)
  4273  003C4A  64F7               	cpfsgt	tblptrh,c
  4274  003C4C  D007               	bra	u15177
  4275  003C4E  0009               	tblrd		*+
  4276  003C50  CFF5 F115          	movff	tablat,??_TCP_Update+4
  4277  003C54  0009               	tblrd		*+
  4278  003C56  CFF5 F116          	movff	tablat,??_TCP_Update+5
  4279  003C5A  D006               	bra	u15170
  4280  003C5C                     u15177:
  4281  003C5C  EC66  F011         	call	PL389	;call to abstracted procedure
  4282  003C60  CFEE F115          	movff	postinc0,??_TCP_Update+4
  4283  003C64  CFEE F116          	movff	postinc0,??_TCP_Update+5
  4284  003C68                     u15170:
  4285  003C68  0101               	movlb	1	; () banked
  4286  003C6A  5111               	movf	??_TCP_Update& (0+255),w,b
  4287  003C6C  2715               	addwf	(??_TCP_Update+4)& (0+255),f,b
  4288  003C6E  5112               	movf	(??_TCP_Update+1)& (0+255),w,b
  4289  003C70  2316               	addwfc	(??_TCP_Update+5)& (0+255),f,b
  4290  003C72  0E30               	movlw	48
  4291  003C74  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  4292  003C76  6F17               	movwf	(??_TCP_Update+6)& (0+255),b
  4293  003C78  0E00               	movlw	0
  4294  003C7A  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  4295  003C7C  6F18               	movwf	(??_TCP_Update+7)& (0+255),b
  4296  003C7E  C117  FFF6         	movff	??_TCP_Update+6,tblptrl
  4297  003C82  C118  FFF7         	movff	??_TCP_Update+7,tblptrh
  4298  003C86  0E00               	movlw	low (__smallconst shr (0+16))
  4299  003C88  6EF8               	movwf	tblptru,c
  4300  003C8A  0E0F               	movlw	(high __ramtop+-1)
  4301  003C8C  64F7               	cpfsgt	tblptrh,c
  4302  003C8E  D007               	bra	u15187
  4303  003C90  C115  FFF5         	movff	??_TCP_Update+4,tablat
  4304  003C94  000D               	tblwt		*+
  4305  003C96  C116  FFF5         	movff	??_TCP_Update+5,tablat
  4306  003C9A  000C               	tblwt		*
  4307  003C9C  D006               	bra	u15180
  4308  003C9E                     u15187:
  4309  003C9E  EC66  F011         	call	PL389	;call to abstracted procedure
  4310  003CA2  C115  FFEE         	movff	??_TCP_Update+4,postinc0
  4311  003CA6  C116  FFEF         	movff	??_TCP_Update+5,indf0
  4312  003CAA                     u15180:
  4313                           
  4314                           ;tcpv4.c: 1443: if (tcbPtr->timeout == 0)
  4315  003CAA  0E30               	movlw	48
  4316  003CAC  0101               	movlb	1	; () banked
  4317  003CAE  D8AC               	call	PL411	;call to abstracted procedure
  4318  003CB0  64F7               	cpfsgt	tblptrh,c
  4319  003CB2  D002               	bra	u15197
  4320  003CB4  D8B6               	call	PL591	;call to abstracted procedure
  4321  003CB6  D003               	bra	u15190
  4322  003CB8                     u15197:
  4323  003CB8  EC66  F011         	call	PL389	;call to abstracted procedure
  4324  003CBC  D8B9               	call	PL661	;call to abstracted procedure
  4325  003CBE                     u15190:
  4326  003CBE  0101               	movlb	1	; () banked
  4327  003CC0  5113               	movf	(??_TCP_Update+2)& (0+255),w,b
  4328  003CC2  1114               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  4329  003CC4  E178               	bnz	l9566
  4330                           
  4331                           ; BSR set to: 1
  4332                           ;tcpv4.c: 1444: {
  4333                           ;tcpv4.c: 1445: if (tcbPtr->timeoutsCount > 0)
  4334  003CC6  0E34               	movlw	52
  4335  003CC8  D89F               	call	PL411	;call to abstracted procedure
  4336  003CCA  64F7               	cpfsgt	tblptrh,c
  4337  003CCC  D003               	bra	u15217
  4338  003CCE  0008               	tblrd		*
  4339  003CD0  50F5               	movf	tablat,w,c
  4340  003CD2  D003               	bra	u15210
  4341  003CD4                     u15217:
  4342  003CD4  EC66  F011         	call	PL389	;call to abstracted procedure
  4343  003CD8  50EF               	movf	indf0,w,c
  4344  003CDA                     u15210:
  4345  003CDA  0900               	iorlw	0
  4346  003CDC  E06C               	bz	l9566
  4347                           
  4348                           ;tcpv4.c: 1446: {
  4349                           ;tcpv4.c: 1448: if (tcbPtr->connectionEvent == NOP)
  4350  003CDE  0E2B               	movlw	43
  4351  003CE0  0101               	movlb	1	; () banked
  4352  003CE2  D892               	call	PL411	;call to abstracted procedure
  4353  003CE4  64F7               	cpfsgt	tblptrh,c
  4354  003CE6  D003               	bra	u15237
  4355  003CE8  0008               	tblrd		*
  4356  003CEA  50F5               	movf	tablat,w,c
  4357  003CEC  D003               	bra	u15230
  4358  003CEE                     u15237:
  4359  003CEE  EC66  F011         	call	PL389	;call to abstracted procedure
  4360  003CF2  50EF               	movf	indf0,w,c
  4361  003CF4                     u15230:
  4362  003CF4  0A0D               	xorlw	13
  4363  003CF6  E15F               	bnz	l9566
  4364                           
  4365                           ;tcpv4.c: 1449: {
  4366                           ;tcpv4.c: 1450: tcbPtr->timeout = tcbPtr->timeoutReloadValue;
  4367  003CF8  0E32               	movlw	50
  4368  003CFA  0101               	movlb	1	; () banked
  4369  003CFC  D885               	call	PL411	;call to abstracted procedure
  4370  003CFE  64F7               	cpfsgt	tblptrh,c
  4371  003D00  D002               	bra	u15257
  4372  003D02  D88F               	call	PL591	;call to abstracted procedure
  4373  003D04  D003               	bra	u15250
  4374  003D06                     u15257:
  4375  003D06  EC66  F011         	call	PL389	;call to abstracted procedure
  4376  003D0A  D892               	call	PL661	;call to abstracted procedure
  4377  003D0C                     u15250:
  4378  003D0C  0E30               	movlw	48
  4379  003D0E  0101               	movlb	1	; () banked
  4380  003D10  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  4381  003D12  6F15               	movwf	(??_TCP_Update+4)& (0+255),b
  4382  003D14  0E00               	movlw	0
  4383  003D16  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  4384  003D18  6F16               	movwf	(??_TCP_Update+5)& (0+255),b
  4385  003D1A  C115  FFF6         	movff	??_TCP_Update+4,tblptrl
  4386  003D1E  C116  FFF7         	movff	??_TCP_Update+5,tblptrh
  4387  003D22  0E00               	movlw	low (__smallconst shr (0+16))
  4388  003D24  6EF8               	movwf	tblptru,c
  4389  003D26  0E0F               	movlw	(high __ramtop+-1)
  4390  003D28  64F7               	cpfsgt	tblptrh,c
  4391  003D2A  D007               	bra	u15267
  4392  003D2C  C113  FFF5         	movff	??_TCP_Update+2,tablat
  4393  003D30  000D               	tblwt		*+
  4394  003D32  C114  FFF5         	movff	??_TCP_Update+3,tablat
  4395  003D36  000C               	tblwt		*
  4396  003D38  D006               	bra	u15260
  4397  003D3A                     u15267:
  4398  003D3A  EC66  F011         	call	PL389	;call to abstracted procedure
  4399  003D3E  C113  FFEE         	movff	??_TCP_Update+2,postinc0
  4400  003D42  C114  FFEF         	movff	??_TCP_Update+3,indf0
  4401  003D46                     u15260:
  4402                           
  4403                           ;tcpv4.c: 1451: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount - 1;
  4404  003D46  0E34               	movlw	52
  4405  003D48  0101               	movlb	1	; () banked
  4406  003D4A  D85E               	call	PL411	;call to abstracted procedure
  4407  003D4C  64F7               	cpfsgt	tblptrh,c
  4408  003D4E  D003               	bra	u15277
  4409  003D50  0008               	tblrd		*
  4410  003D52  50F5               	movf	tablat,w,c
  4411  003D54  D003               	bra	u15270
  4412  003D56                     u15277:
  4413  003D56  EC66  F011         	call	PL389	;call to abstracted procedure
  4414  003D5A  50EF               	movf	indf0,w,c
  4415  003D5C                     u15270:
  4416  003D5C  0101               	movlb	1	; () banked
  4417  003D5E  6F13               	movwf	(??_TCP_Update+2)& (0+255),b
  4418  003D60  0713               	decf	(??_TCP_Update+2)& (0+255),f,b
  4419  003D62  0E34               	movlw	52
  4420  003D64  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  4421  003D66  6F14               	movwf	(??_TCP_Update+3)& (0+255),b
  4422  003D68  0E00               	movlw	0
  4423  003D6A  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  4424  003D6C  6F15               	movwf	(??_TCP_Update+4)& (0+255),b
  4425  003D6E  C114  FFF6         	movff	??_TCP_Update+3,tblptrl
  4426  003D72  C115  FFF7         	movff	??_TCP_Update+4,tblptrh
  4427  003D76  0E00               	movlw	low (__smallconst shr (0+16))
  4428  003D78  6EF8               	movwf	tblptru,c
  4429  003D7A  0E0F               	movlw	(high __ramtop+-1)
  4430  003D7C  64F7               	cpfsgt	tblptrh,c
  4431  003D7E  D004               	bra	u15287
  4432  003D80  C113  FFF5         	movff	??_TCP_Update+2,tablat
  4433  003D84  000C               	tblwt		*
  4434  003D86  D004               	bra	u15280
  4435  003D88                     u15287:
  4436  003D88  EC66  F011         	call	PL389	;call to abstracted procedure
  4437  003D8C  C113  FFEF         	movff	??_TCP_Update+2,indf0
  4438  003D90                     u15280:
  4439                           
  4440                           ;tcpv4.c: 1452: tcbPtr->connectionEvent = TIMEOUT;
  4441  003D90  0E2B               	movlw	43
  4442  003D92  0101               	movlb	1	; () banked
  4443  003D94  D839               	call	PL411	;call to abstracted procedure
  4444  003D96  64F7               	cpfsgt	tblptrh,c
  4445  003D98  D004               	bra	u15297
  4446  003D9A  0E0C               	movlw	12
  4447  003D9C  6EF5               	movwf	tablat,c
  4448  003D9E  000C               	tblwt		*
  4449  003DA0  D004               	bra	u15290
  4450  003DA2                     u15297:
  4451  003DA2  EC66  F011         	call	PL389	;call to abstracted procedure
  4452  003DA6  0E0C               	movlw	12
  4453  003DA8  6EEF               	movwf	indf0,c
  4454  003DAA                     u15290:
  4455                           
  4456                           ;tcpv4.c: 1453: currentTCB = tcbPtr;
  4457  003DAA  C11B  F03F         	movff	TCP_Update@tcbPtr,_currentTCB
  4458  003DAE  C11C  F040         	movff	TCP_Update@tcbPtr+1,_currentTCB+1
  4459                           
  4460                           ;tcpv4.c: 1454: TCP_FiniteStateMachine();
  4461  003DB2  EC5D  F008         	call	_TCP_FiniteStateMachine	;wreg free
  4462  003DB6                     l9566:
  4463                           
  4464                           ;tcpv4.c: 1455: }
  4465                           ;tcpv4.c: 1456: }
  4466                           ;tcpv4.c: 1457: }
  4467                           ;tcpv4.c: 1458: }
  4468                           ;tcpv4.c: 1459: tcbPtr = tcbPtr->nextTCB;
  4469  003DB6  0E2C               	movlw	44
  4470  003DB8  0101               	movlb	1	; () banked
  4471  003DBA  D826               	call	PL411	;call to abstracted procedure
  4472  003DBC  64F7               	cpfsgt	tblptrh,c
  4473  003DBE  D007               	bra	u15307
  4474  003DC0  0009               	tblrd		*+
  4475  003DC2  CFF5 F11B          	movff	tablat,TCP_Update@tcbPtr
  4476  003DC6  0009               	tblrd		*+
  4477  003DC8  CFF5 F11C          	movff	tablat,TCP_Update@tcbPtr+1
  4478  003DCC  D006               	bra	u15300
  4479  003DCE                     u15307:
  4480  003DCE  EC66  F011         	call	PL389	;call to abstracted procedure
  4481  003DD2  CFEE F11B          	movff	postinc0,TCP_Update@tcbPtr
  4482  003DD6  CFEE F11C          	movff	postinc0,TCP_Update@tcbPtr+1
  4483  003DDA                     u15300:
  4484                           
  4485                           ;tcpv4.c: 1460: count ++;
  4486  003DDA  0101               	movlb	1	; () banked
  4487  003DDC  4B19               	infsnz	TCP_Update@count& (0+255),f,b
  4488  003DDE  2B1A               	incf	(TCP_Update@count+1)& (0+255),f,b
  4489  003DE0                     l9570:
  4490                           
  4491                           ; BSR set to: 1
  4492  003DE0  511B               	movf	TCP_Update@tcbPtr& (0+255),w,b
  4493  003DE2  111C               	iorwf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  4494  003DE4  B4D8               	btfsc	status,2,c
  4495  003DE6  0012               	return	
  4496                           
  4497                           ; BSR set to: 1
  4498  003DE8  C047  F111         	movff	_tcbListSize,??_TCP_Update
  4499  003DEC  6B12               	clrf	(??_TCP_Update+1)& (0+255),b
  4500  003DEE  BF11               	btfsc	??_TCP_Update& (0+255),7,b
  4501  003DF0  0712               	decf	(??_TCP_Update+1)& (0+255),f,b
  4502  003DF2  5111               	movf	??_TCP_Update& (0+255),w,b
  4503  003DF4  5D19               	subwf	TCP_Update@count& (0+255),w,b
  4504  003DF6  511A               	movf	(TCP_Update@count+1)& (0+255),w,b
  4505  003DF8  0A80               	xorlw	128
  4506  003DFA  6F13               	movwf	(??_TCP_Update+2)& (0+255),b
  4507  003DFC  5112               	movf	(??_TCP_Update+1)& (0+255),w,b
  4508  003DFE  0A80               	xorlw	128
  4509  003E00  5913               	subwfb	(??_TCP_Update+2)& (0+255),w,b
  4510  003E02  E201 D705          	bnc	l9552
  4511                           
  4512                           ; BSR set to: 1
  4513  003E06  0012               	return		;funcret
  4514  003E08                     __end_of_TCP_Update:
  4515                           	opt stack 0
  4516  003E08                     PL411:
  4517                           	opt stack 14
  4518  003E08  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  4519  003E0A  6F11               	movwf	??_TCP_Update& (0+255),b
  4520  003E0C  0E00               	movlw	0
  4521  003E0E  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  4522  003E10  6F12               	movwf	(??_TCP_Update+1)& (0+255),b
  4523  003E12  C111  FFF6         	movff	??_TCP_Update,tblptrl
  4524  003E16  C112  FFF7         	movff	??_TCP_Update+1,tblptrh
  4525  003E1A  0E00               	movlw	low (__smallconst shr (0+16))
  4526  003E1C  6EF8               	movwf	tblptru,c
  4527  003E1E  0E0F               	movlw	(high __ramtop+-1)
  4528  003E20  0012               	return	
  4529  003E22                     __end_ofPL411:
  4530                           	opt stack 0
  4531  003E22                     PL591:
  4532                           	opt stack 14
  4533  003E22  0009               	tblrd		*+
  4534  003E24  CFF5 F113          	movff	tablat,??_TCP_Update+2
  4535  003E28  0009               	tblrd		*+
  4536  003E2A  CFF5 F114          	movff	tablat,??_TCP_Update+3
  4537  003E2E  0012               	return	
  4538  003E30                     __end_ofPL591:
  4539                           	opt stack 0
  4540  003E30                     PL661:
  4541                           	opt stack 14
  4542  003E30  CFEE F113          	movff	postinc0,??_TCP_Update+2
  4543  003E34  CFEE F114          	movff	postinc0,??_TCP_Update+3
  4544  003E38  0012               	return	
  4545  003E3A                     __end_ofPL661:
  4546                           	opt stack 0
  4547                           tosu	equ	0xFFF
  4548                           tosh	equ	0xFFE
  4549                           tosl	equ	0xFFD
  4550                           pclath	equ	0xFFA
  4551                           tblptru	equ	0xFF8
  4552                           tblptrh	equ	0xFF7
  4553                           tblptrl	equ	0xFF6
  4554                           tablat	equ	0xFF5
  4555                           prodh	equ	0xFF4
  4556                           prodl	equ	0xFF3
  4557                           intcon	equ	0xFF2
  4558                           indf0	equ	0xFEF
  4559                           postinc0	equ	0xFEE
  4560                           fsr0h	equ	0xFEA
  4561                           fsr0l	equ	0xFE9
  4562                           wreg	equ	0xFE8
  4563                           indf1	equ	0xFE7
  4564                           postinc1	equ	0xFE6
  4565                           postdec1	equ	0xFE5
  4566                           plusw1	equ	0xFE3
  4567                           fsr1h	equ	0xFE2
  4568                           fsr1l	equ	0xFE1
  4569                           bsr	equ	0xFE0
  4570                           indf2	equ	0xFDF
  4571                           postinc2	equ	0xFDE
  4572                           postdec2	equ	0xFDD
  4573                           plusw2	equ	0xFDB
  4574                           fsr2h	equ	0xFDA
  4575                           fsr2l	equ	0xFD9
  4576                           status	equ	0xFD8
  4577                           
  4578 ;; *************** function _Network_Read *****************
  4579 ;; Defined at:
  4580 ;;		line 105 in file "../../TCPIP Library/source/network.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  debug_str      80   91[BANK1 ] unsigned char [80]
  4585 ;;  header         14  171[BANK1 ] struct .
  4586 ;; Return value:  Size  Location     Type
  4587 ;;		None               void
  4588 ;; Registers used:
  4589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/1
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Locals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Totals:         0       0      98       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;Total ram usage:       98 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:   17
  4602 ;; This function calls:
  4603 ;;		_ARPV4_Packet
  4604 ;;		_ETH_Flush
  4605 ;;		_ETH_NextPacketUpdate
  4606 ;;		_ETH_ReadBlock
  4607 ;;		_IPV4_Packet
  4608 ;;		_sprintf
  4609 ;; This function is called by:
  4610 ;;		_Network_Manage
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text20
  4615  004E92                     __ptext20:
  4616                           	opt stack 0
  4617  004E92                     _Network_Read:
  4618                           	opt stack 12
  4619                           
  4620                           ;network.c: 107: ethernetFrame_t header;
  4621                           ;network.c: 108: char debug_str[80];
  4622                           ;network.c: 110: if(ethData.pktReady)
  4623                           
  4624                           ; BSR set to: 1
  4625                           ;incstack = 0
  4626  004E92  0101               	movlb	1	; () banked
  4627  004E94  A3BD               	btfss	_ethData& (0+255),1,b	;volatile
  4628  004E96  0012               	return	
  4629                           
  4630                           ; BSR set to: 1
  4631                           ;network.c: 111: {
  4632                           ;network.c: 112: ETH_NextPacketUpdate();
  4633  004E98  EC97  F02C         	call	_ETH_NextPacketUpdate	;wreg free
  4634                           
  4635                           ; BSR set to: 1
  4636                           ;network.c: 113: ETH_ReadBlock((char *)&header, sizeof(header));
  4637  004E9C  0EAB               	movlw	low Network_Read@header
  4638  004E9E  6E17               	movwf	ETH_ReadBlock@buffer,c
  4639  004EA0  0E01               	movlw	high Network_Read@header
  4640  004EA2  6E18               	movwf	ETH_ReadBlock@buffer+1,c
  4641  004EA4  6A1A               	clrf	ETH_ReadBlock@length+1,c
  4642  004EA6  0E0E               	movlw	14
  4643  004EA8  6E19               	movwf	ETH_ReadBlock@length,c
  4644  004EAA  EC0C  F02C         	call	_ETH_ReadBlock	;wreg free
  4645                           
  4646                           ; BSR set to: 1
  4647                           ;network.c: 114: header.id.type = ((((uint16_t)header.id.type & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)header.id.type & (uint16_t)0x00FF) << 8));
  4648  004EAE  51B7               	movf	(Network_Read@header+12)& (0+255),w,b
  4649  004EB0  6F58               	movwf	(??_Network_Read+1)& (0+255),b
  4650  004EB2  6B57               	clrf	??_Network_Read& (0+255),b
  4651  004EB4  EE21  F0B7         	lfsr	2,Network_Read@header+12
  4652  004EB8  CFDE F159          	movff	postinc2,??_Network_Read+2
  4653  004EBC  CFDD F15A          	movff	postdec2,??_Network_Read+3
  4654  004EC0  C15A  F159         	movff	??_Network_Read+3,??_Network_Read+2
  4655  004EC4  6B5A               	clrf	(??_Network_Read+3)& (0+255),b
  4656  004EC6  6B5A               	clrf	(??_Network_Read+3)& (0+255),b
  4657  004EC8  5157               	movf	??_Network_Read& (0+255),w,b
  4658  004ECA  1159               	iorwf	(??_Network_Read+2)& (0+255),w,b
  4659  004ECC  6FB7               	movwf	(Network_Read@header+12)& (0+255),b
  4660  004ECE  5158               	movf	(??_Network_Read+1)& (0+255),w,b
  4661  004ED0  115A               	iorwf	(??_Network_Read+3)& (0+255),w,b
  4662  004ED2  6FB8               	movwf	(Network_Read@header+13)& (0+255),b
  4663                           
  4664                           ;network.c: 115: switch (header.id.type)
  4665  004ED4  D01B               	goto	l9524
  4666  004ED6                     l9516:
  4667                           
  4668                           ; BSR set to: 1
  4669                           ;network.c: 121: ;
  4670                           ;network.c: 122: ARPV4_Packet();
  4671  004ED6  EC2A  F018         	call	_ARPV4_Packet	;wreg free
  4672                           
  4673                           ;network.c: 123: break;
  4674  004EDA  EFEC  F02C         	goto	_ETH_Flush
  4675  004EDE                     l9518:
  4676                           
  4677                           ; BSR set to: 1
  4678                           ;network.c: 125: ;
  4679                           ;network.c: 126: IPV4_Packet();
  4680  004EDE  ECCB  F019         	call	_IPV4_Packet	;wreg free
  4681                           
  4682                           ;network.c: 127: break;
  4683  004EE2  EFEC  F02C         	goto	_ETH_Flush
  4684  004EE6                     l9520:
  4685                           
  4686                           ; BSR set to: 1
  4687                           ;network.c: 132: sprintf(debug_str,"%x : %d",header.id.type,header.id.length);
  4688  004EE6  0E5B               	movlw	low Network_Read@debug_str
  4689  004EE8  0100               	movlb	0	; () banked
  4690  004EEA  6F60               	movwf	sprintf@wh& (0+255),b
  4691  004EEC  0E01               	movlw	high Network_Read@debug_str
  4692  004EEE  6F61               	movwf	(sprintf@wh+1)& (0+255),b
  4693  004EF0  0EA9               	movlw	low STR_2
  4694  004EF2  6F62               	movwf	sprintf@f& (0+255),b
  4695  004EF4  C1B7  F063         	movff	Network_Read@header+12,?_sprintf+3
  4696  004EF8  C1B8  F064         	movff	Network_Read@header+13,?_sprintf+4
  4697  004EFC  C1B7  F065         	movff	Network_Read@header+12,?_sprintf+5
  4698  004F00  C1B8  F066         	movff	Network_Read@header+13,?_sprintf+6
  4699  004F04  ECFB  F02F         	call	_sprintf	;wreg free
  4700                           
  4701                           ;network.c: 133: ;
  4702                           ;network.c: 134: break;
  4703  004F08  EFEC  F02C         	goto	_ETH_Flush
  4704  004F0C                     l9524:
  4705                           
  4706                           ; BSR set to: 1
  4707  004F0C  EE21  F0B7         	lfsr	2,Network_Read@header+12
  4708  004F10  CFDE F157          	movff	postinc2,??_Network_Read
  4709  004F14  CFDD F158          	movff	postdec2,??_Network_Read+1
  4710                           
  4711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  4712                           ; Switch size 1, requested type "space"
  4713                           ; Number of cases is 3, Range of values is 8 to 134
  4714                           ; switch strategies available:
  4715                           ; Name         Instructions Cycles
  4716                           ; simple_byte           10     6 (average)
  4717                           ;	Chosen strategy is simple_byte
  4718  004F18  5158               	movf	(??_Network_Read+1)& (0+255),w,b
  4719  004F1A  0A08               	xorlw	8	; case 8
  4720  004F1C  E005               	bz	l9966
  4721  004F1E  0A89               	xorlw	137	; case 129
  4722  004F20  E008               	bz	l9968
  4723  004F22  0A07               	xorlw	7	; case 134
  4724  004F24  E008               	bz	l9970
  4725  004F26  D7DF               	goto	l9520
  4726  004F28                     l9966:
  4727                           
  4728                           ; BSR set to: 1
  4729                           ; Switch size 1, requested type "space"
  4730                           ; Number of cases is 2, Range of values is 0 to 6
  4731                           ; switch strategies available:
  4732                           ; Name         Instructions Cycles
  4733                           ; simple_byte            7     4 (average)
  4734                           ;	Chosen strategy is simple_byte
  4735  004F28  5157               	movf	??_Network_Read& (0+255),w,b
  4736  004F2A  E0D9               	bz	l9518
  4737  004F2C  0A06               	xorlw	6	; case 6
  4738  004F2E  E0D3               	bz	l9516
  4739  004F30  D7DA               	goto	l9520
  4740  004F32                     l9968:
  4741                           
  4742                           ; BSR set to: 1
  4743                           ; Switch size 1, requested type "space"
  4744                           ; Number of cases is 1, Range of values is 0 to 0
  4745                           ; switch strategies available:
  4746                           ; Name         Instructions Cycles
  4747                           ; simple_byte            4     3 (average)
  4748                           ;	Chosen strategy is simple_byte
  4749  004F32  5157               	movf	??_Network_Read& (0+255),w,b
  4750  004F34  D002               	goto	L1
  4751  004F36                     l9970:
  4752                           
  4753                           ; BSR set to: 1
  4754                           ; Switch size 1, requested type "space"
  4755                           ; Number of cases is 1, Range of values is 221 to 221
  4756                           ; switch strategies available:
  4757                           ; Name         Instructions Cycles
  4758                           ; simple_byte            4     3 (average)
  4759                           ;	Chosen strategy is simple_byte
  4760  004F36  5157               	movf	??_Network_Read& (0+255),w,b
  4761  004F38  0ADD               	xorlw	221	; case 221
  4762  004F3A                     L1:
  4763  004F3A  E1D5               	bnz	l9520
  4764                           
  4765                           ;network.c: 136: ETH_Flush();
  4766  004F3C  EFEC  F02C         	goto	_ETH_Flush	;wreg free
  4767  004F40                     __end_of_Network_Read:
  4768                           	opt stack 0
  4769                           tosu	equ	0xFFF
  4770                           tosh	equ	0xFFE
  4771                           tosl	equ	0xFFD
  4772                           pclath	equ	0xFFA
  4773                           tblptru	equ	0xFF8
  4774                           tblptrh	equ	0xFF7
  4775                           tblptrl	equ	0xFF6
  4776                           tablat	equ	0xFF5
  4777                           prodh	equ	0xFF4
  4778                           prodl	equ	0xFF3
  4779                           intcon	equ	0xFF2
  4780                           indf0	equ	0xFEF
  4781                           postinc0	equ	0xFEE
  4782                           fsr0h	equ	0xFEA
  4783                           fsr0l	equ	0xFE9
  4784                           wreg	equ	0xFE8
  4785                           indf1	equ	0xFE7
  4786                           postinc1	equ	0xFE6
  4787                           postdec1	equ	0xFE5
  4788                           plusw1	equ	0xFE3
  4789                           fsr1h	equ	0xFE2
  4790                           fsr1l	equ	0xFE1
  4791                           bsr	equ	0xFE0
  4792                           indf2	equ	0xFDF
  4793                           postinc2	equ	0xFDE
  4794                           postdec2	equ	0xFDD
  4795                           plusw2	equ	0xFDB
  4796                           fsr2h	equ	0xFDA
  4797                           fsr2l	equ	0xFD9
  4798                           status	equ	0xFD8
  4799                           
  4800 ;; *************** function _sprintf *****************
  4801 ;; Defined at:
  4802 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprintf.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  wh              2    0[BANK0 ] PTR unsigned char 
  4805 ;;		 -> main@str(32), Network_Read@debug_str(80), 
  4806 ;;  f               1    2[BANK0 ] PTR const unsigned char 
  4807 ;;		 -> STR_7(12), STR_2(8), 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  pb              5   12[BANK0 ] struct __prbuf
  4810 ;;  ap              1   11[BANK0 ] PTR void [1]
  4811 ;;		 -> ?_sprintf(2), ?_printf(2), 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  2    0[BANK0 ] int 
  4814 ;; Registers used:
  4815 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4816 ;; Tracked objects:
  4817 ;;		On entry : F/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4821 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;Total ram usage:       17 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; Hardware stack levels required when called:   10
  4828 ;; This function calls:
  4829 ;;		__doprnt
  4830 ;; This function is called by:
  4831 ;;		_Network_Read
  4832 ;;		_main
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text21
  4837  005FF6                     __ptext21:
  4838                           	opt stack 0
  4839  005FF6                     _sprintf:
  4840                           	opt stack 20
  4841                           
  4842                           ; BSR set to: 0
  4843                           
  4844                           ;incstack = 0
  4845  005FF6  C060  F06C         	movff	sprintf@wh,sprintf@pb
  4846  005FFA  C061  F06D         	movff	sprintf@wh+1,sprintf@pb+1
  4847                           
  4848                           ; BSR set to: 0
  4849  005FFE  6B6E               	clrf	(sprintf@pb+2)& (0+255),b
  4850  006000  6B6F               	clrf	(sprintf@pb+3)& (0+255),b
  4851  006002  6B70               	clrf	(sprintf@pb+4)& (0+255),b
  4852  006004  0E63               	movlw	low (?_sprintf+3)
  4853  006006  6F6B               	movwf	sprintf@ap& (0+255),b
  4854                           
  4855                           ; BSR set to: 0
  4856  006008  C062  F023         	movff	sprintf@f,__doprnt@f
  4857  00600C  0E6B               	movlw	low sprintf@ap
  4858  00600E  6E24               	movwf	__doprnt@ap,c
  4859  006010  0E6C               	movlw	sprintf@pb& (0+255)
  4860  006012  EC47  F01B         	call	__doprnt
  4861  006016  C06C  FFD9         	movff	sprintf@pb,fsr2l
  4862  00601A  C06D  FFDA         	movff	sprintf@pb+1,fsr2h
  4863  00601E  6ADF               	clrf	indf2,c
  4864  006020  0C00               	retlw	0	;funcret
  4865  006022                     __end_of_sprintf:
  4866                           	opt stack 0
  4867                           tosu	equ	0xFFF
  4868                           tosh	equ	0xFFE
  4869                           tosl	equ	0xFFD
  4870                           pclath	equ	0xFFA
  4871                           tblptru	equ	0xFF8
  4872                           tblptrh	equ	0xFF7
  4873                           tblptrl	equ	0xFF6
  4874                           tablat	equ	0xFF5
  4875                           prodh	equ	0xFF4
  4876                           prodl	equ	0xFF3
  4877                           intcon	equ	0xFF2
  4878                           indf0	equ	0xFEF
  4879                           postinc0	equ	0xFEE
  4880                           fsr0h	equ	0xFEA
  4881                           fsr0l	equ	0xFE9
  4882                           wreg	equ	0xFE8
  4883                           indf1	equ	0xFE7
  4884                           postinc1	equ	0xFE6
  4885                           postdec1	equ	0xFE5
  4886                           plusw1	equ	0xFE3
  4887                           fsr1h	equ	0xFE2
  4888                           fsr1l	equ	0xFE1
  4889                           bsr	equ	0xFE0
  4890                           indf2	equ	0xFDF
  4891                           postinc2	equ	0xFDE
  4892                           postdec2	equ	0xFDD
  4893                           plusw2	equ	0xFDB
  4894                           fsr2h	equ	0xFDA
  4895                           fsr2l	equ	0xFD9
  4896                           status	equ	0xFD8
  4897                           
  4898 ;; *************** function _IPV4_Packet *****************
  4899 ;; Defined at:
  4900 ;;		line 115 in file "../../TCPIP Library/source/ipv4.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  msg            40    0        unsigned char [40]
  4905 ;;  cksm            2   85[BANK1 ] unsigned int 
  4906 ;;  length          2   83[BANK1 ] unsigned int 
  4907 ;;  hdrLen          1   82[BANK1 ] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      enum E6944
  4910 ;; Registers used:
  4911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/1
  4914 ;;		On exit  : C/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;Total ram usage:       33 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; Hardware stack levels required when called:   16
  4924 ;; This function calls:
  4925 ;;		_ETH_Dump
  4926 ;;		_ETH_ReadBlock
  4927 ;;		_ETH_RxComputeChecksum
  4928 ;;		_ICMP_Receive
  4929 ;;		_IPV4_PseudoHeaderChecksum
  4930 ;;		_TCP_Recv
  4931 ;;		_UDP_Receive
  4932 ;; This function is called by:
  4933 ;;		_Network_Read
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text22
  4938  003396                     __ptext22:
  4939                           	opt stack 0
  4940  003396                     _IPV4_Packet:
  4941                           	opt stack 12
  4942                           
  4943                           ;ipv4.c: 118: uint16_t length = 0;
  4944                           
  4945                           ;incstack = 0
  4946  003396  0101               	movlb	1	; () banked
  4947  003398  6B53               	clrf	IPV4_Packet@length& (0+255),b
  4948  00339A  6B54               	clrf	(IPV4_Packet@length+1)& (0+255),b
  4949                           
  4950                           ; BSR set to: 1
  4951                           ;ipv4.c: 119: char msg[40];
  4952                           ;ipv4.c: 120: uint8_t hdrLen;
  4953                           ;ipv4.c: 123: cksm = ETH_RxComputeChecksum(sizeof(ipv4Header_t), 0);
  4954  00339C  6A26               	clrf	ETH_RxComputeChecksum@len+1,c
  4955  00339E  0E14               	movlw	20
  4956  0033A0  6E25               	movwf	ETH_RxComputeChecksum@len,c
  4957  0033A2  6A28               	clrf	ETH_RxComputeChecksum@seed+1,c
  4958  0033A4  6A27               	clrf	ETH_RxComputeChecksum@seed,c
  4959  0033A6  EC6D  F02E         	call	_ETH_RxComputeChecksum	;wreg free
  4960                           
  4961                           ;ipv4.c: 124: if (cksm != 0)
  4962  0033AA  D945               	call	PL565	;call to abstracted procedure
  4963  0033AC  E001               	bz	l9194
  4964  0033AE  0012               	return	
  4965  0033B0                     l9194:
  4966                           
  4967                           ; BSR set to: 1
  4968                           ;ipv4.c: 128: }
  4969                           ;ipv4.c: 130: ETH_ReadBlock((char *)&ipv4Header, sizeof(ipv4Header_t));
  4970  0033B0  0E87               	movlw	low _ipv4Header
  4971  0033B2  6E17               	movwf	ETH_ReadBlock@buffer,c
  4972  0033B4  0E02               	movlw	high _ipv4Header
  4973  0033B6  EC25  F018         	call	PL689	;call to abstracted procedure
  4974  0033BA  EC0C  F02C         	call	_ETH_ReadBlock	;wreg free
  4975                           
  4976                           ; BSR set to: 1
  4977                           ;ipv4.c: 131: if(ipv4Header.version != 4)
  4978  0033BE  0102               	movlb	2	; () banked
  4979  0033C0  3987               	swapf	_ipv4Header& (0+255),w,b
  4980  0033C2  0B0F               	andlw	15
  4981  0033C4  0A04               	xorlw	4
  4982  0033C6  E001               	bz	l9200
  4983  0033C8  0012               	return	
  4984  0033CA                     l9200:
  4985                           
  4986                           ; BSR set to: 2
  4987                           ;ipv4.c: 134: }
  4988                           ;ipv4.c: 136: ipv4Header.dstIpAddress = ((((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.d
  4989  0033CA  5197               	movf	(_ipv4Header+16)& (0+255),w,b
  4990  0033CC  D93C               	call	PL585	;call to abstracted procedure
  4991  0033CE  EE22  F097         	lfsr	2,_ipv4Header+16
  4992  0033D2  D8FA               	call	PL495	;call to abstracted procedure
  4993  0033D4  C297  F13E         	movff	_ipv4Header+16,??_IPV4_Packet+8
  4994  0033D8  C298  F13F         	movff	_ipv4Header+17,??_IPV4_Packet+9
  4995  0033DC  C299  F140         	movff	_ipv4Header+18,??_IPV4_Packet+10
  4996  0033E0  C29A  F141         	movff	_ipv4Header+19,??_IPV4_Packet+11
  4997  0033E4  D90E               	call	PL531	;call to abstracted procedure
  4998  0033E6  EE22  F097         	lfsr	2,_ipv4Header+16
  4999  0033EA  D8BE               	call	PL433	;call to abstracted procedure
  5000  0033EC  6F97               	movwf	(_ipv4Header+16)& (0+255),b
  5001  0033EE  D945               	call	PL727	;call to abstracted procedure
  5002  0033F0  6F98               	movwf	(_ipv4Header+17)& (0+255),b
  5003  0033F2  D934               	call	PL683	;call to abstracted procedure
  5004  0033F4  6F99               	movwf	(_ipv4Header+18)& (0+255),b
  5005  0033F6  D93C               	call	PL725	;call to abstracted procedure
  5006  0033F8  6F9A               	movwf	(_ipv4Header+19)& (0+255),b
  5007                           
  5008                           ;ipv4.c: 137: ipv4Header.srcIpAddress = ((((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.s
  5009  0033FA  5193               	movf	(_ipv4Header+12)& (0+255),w,b
  5010  0033FC  D924               	call	PL585	;call to abstracted procedure
  5011  0033FE  EE22  F093         	lfsr	2,_ipv4Header+12
  5012  003402  D8E2               	call	PL495	;call to abstracted procedure
  5013  003404  C293  F13E         	movff	_ipv4Header+12,??_IPV4_Packet+8
  5014  003408  C294  F13F         	movff	_ipv4Header+13,??_IPV4_Packet+9
  5015  00340C  C295  F140         	movff	_ipv4Header+14,??_IPV4_Packet+10
  5016  003410  C296  F141         	movff	_ipv4Header+15,??_IPV4_Packet+11
  5017  003414  D8F6               	call	PL531	;call to abstracted procedure
  5018  003416  EE22  F093         	lfsr	2,_ipv4Header+12
  5019  00341A  D8A6               	call	PL433	;call to abstracted procedure
  5020  00341C  6F93               	movwf	(_ipv4Header+12)& (0+255),b
  5021  00341E  D92D               	call	PL727	;call to abstracted procedure
  5022  003420  6F94               	movwf	(_ipv4Header+13)& (0+255),b
  5023  003422  D91C               	call	PL683	;call to abstracted procedure
  5024  003424  6F95               	movwf	(_ipv4Header+14)& (0+255),b
  5025  003426  D924               	call	PL725	;call to abstracted procedure
  5026  003428  6F96               	movwf	(_ipv4Header+15)& (0+255),b
  5027                           
  5028                           ; BSR set to: 2
  5029                           ;ipv4.c: 139: if((ipv4Header.dstIpAddress == ipv4Address) ||( ipv4Header.dstIpAddress ==
      +                           0xFFFFFFFF))
  5030  00342A  5037               	movf	_ipv4Address,w,c
  5031  00342C  1997               	xorwf	(_ipv4Header+16)& (0+255),w,b
  5032  00342E  E109               	bnz	u14830
  5033  003430  5038               	movf	_ipv4Address+1,w,c
  5034  003432  1998               	xorwf	(_ipv4Header+17)& (0+255),w,b
  5035  003434  E106               	bnz	u14830
  5036  003436  5039               	movf	_ipv4Address+2,w,c
  5037  003438  1999               	xorwf	(_ipv4Header+18)& (0+255),w,b
  5038  00343A  E103               	bnz	u14830
  5039  00343C  503A               	movf	_ipv4Address+3,w,c
  5040  00343E  199A               	xorwf	(_ipv4Header+19)& (0+255),w,b
  5041  003440  E009               	bz	l9206
  5042  003442                     u14830:
  5043                           
  5044                           ; BSR set to: 2
  5045  003442  2997               	incf	(_ipv4Header+16)& (0+255),w,b
  5046  003444  E106               	bnz	u14841
  5047  003446  2998               	incf	(_ipv4Header+17)& (0+255),w,b
  5048  003448  E104               	bnz	u14841
  5049  00344A  2999               	incf	(_ipv4Header+18)& (0+255),w,b
  5050  00344C  E102               	bnz	u14841
  5051  00344E  299A               	incf	(_ipv4Header+19)& (0+255),w,b
  5052  003450  A4D8               	btfss	status,2,c
  5053  003452                     u14841:
  5054  003452  0012               	return	
  5055  003454                     l9206:
  5056                           
  5057                           ; BSR set to: 2
  5058                           ;ipv4.c: 140: {
  5059                           ;ipv4.c: 141: ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
  5060  003454  5189               	movf	(_ipv4Header+2)& (0+255),w,b
  5061  003456  0101               	movlb	1	; () banked
  5062  003458  6F37               	movwf	(??_IPV4_Packet+1)& (0+255),b
  5063  00345A  6B36               	clrf	??_IPV4_Packet& (0+255),b
  5064  00345C  EE22  F089         	lfsr	2,_ipv4Header+2
  5065  003460  CFDE F138          	movff	postinc2,??_IPV4_Packet+2
  5066  003464  CFDD F139          	movff	postdec2,??_IPV4_Packet+3
  5067  003468  C139  F138         	movff	??_IPV4_Packet+3,??_IPV4_Packet+2
  5068  00346C  6B39               	clrf	(??_IPV4_Packet+3)& (0+255),b
  5069  00346E  6B39               	clrf	(??_IPV4_Packet+3)& (0+255),b
  5070  003470  5136               	movf	??_IPV4_Packet& (0+255),w,b
  5071  003472  1138               	iorwf	(??_IPV4_Packet+2)& (0+255),w,b
  5072  003474  0102               	movlb	2	; () banked
  5073  003476  6F89               	movwf	(_ipv4Header+2)& (0+255),b
  5074  003478  0101               	movlb	1	; () banked
  5075  00347A  5137               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  5076  00347C  1139               	iorwf	(??_IPV4_Packet+3)& (0+255),w,b
  5077  00347E  0102               	movlb	2	; () banked
  5078  003480  6F8A               	movwf	(_ipv4Header+3)& (0+255),b
  5079                           
  5080                           ; BSR set to: 2
  5081                           ;ipv4.c: 143: hdrLen = (uint8_t)(ipv4Header.ihl << 2);
  5082  003482  D8F1               	call	PL693	;call to abstracted procedure
  5083  003484  90D8               	bcf	status,0,c
  5084  003486  3736               	rlcf	??_IPV4_Packet& (0+255),f,b
  5085  003488  90D8               	bcf	status,0,c
  5086  00348A  3536               	rlcf	??_IPV4_Packet& (0+255),w,b
  5087  00348C  6F52               	movwf	IPV4_Packet@hdrLen& (0+255),b
  5088                           
  5089                           ; BSR set to: 1
  5090                           ;ipv4.c: 145: if (ipv4Header.ihl > 5)
  5091  00348E  0102               	movlb	2	; () banked
  5092  003490  D8EA               	call	PL693	;call to abstracted procedure
  5093  003492  0E05               	movlw	5
  5094  003494  6536               	cpfsgt	??_IPV4_Packet& (0+255),b
  5095  003496  D05F               	goto	l9246
  5096                           
  5097                           ; BSR set to: 1
  5098                           ;ipv4.c: 146: {
  5099                           ;ipv4.c: 148: ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
  5100  003498  0EEC               	movlw	236
  5101  00349A  2552               	addwf	IPV4_Packet@hdrLen& (0+255),w,b
  5102  00349C  6E17               	movwf	ETH_Dump@length,c
  5103  00349E  6A18               	clrf	ETH_Dump@length+1,c
  5104  0034A0  0EFF               	movlw	255
  5105  0034A2  2218               	addwfc	ETH_Dump@length+1,f,c
  5106  0034A4  ECCD  F02F         	call	_ETH_Dump	;wreg free
  5107  0034A8  D056               	goto	l9246
  5108  0034AA                     l9214:
  5109                           
  5110                           ; BSR set to: 2
  5111                           ;ipv4.c: 154: {
  5112                           ;ipv4.c: 156: ;
  5113                           ;ipv4.c: 157: length = ipv4Header.length - hdrLen;
  5114  0034AA  0101               	movlb	1	; () banked
  5115  0034AC  5152               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  5116  0034AE  0102               	movlb	2	; () banked
  5117  0034B0  5D89               	subwf	(_ipv4Header+2)& (0+255),w,b
  5118  0034B2  D89E               	call	PL519	;call to abstracted procedure
  5119                           
  5120                           ; BSR set to: 1
  5121                           ;ipv4.c: 158: cksm = ETH_RxComputeChecksum(length, 0);
  5122  0034B4  C153  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  5123  0034B8  C154  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  5124  0034BC  6A28               	clrf	ETH_RxComputeChecksum@seed+1,c
  5125  0034BE  6A27               	clrf	ETH_RxComputeChecksum@seed,c
  5126  0034C0  EC6D  F02E         	call	_ETH_RxComputeChecksum	;wreg free
  5127                           
  5128                           ;ipv4.c: 160: if (cksm == 0)
  5129  0034C4  D8B8               	call	PL565	;call to abstracted procedure
  5130  0034C6  A4D8               	btfss	status,2,c
  5131  0034C8  0012               	return	
  5132                           
  5133                           ; BSR set to: 1
  5134                           ;ipv4.c: 161: {
  5135                           ;ipv4.c: 162: ICMP_Receive(&ipv4Header);
  5136  0034CA  0E87               	movlw	low _ipv4Header
  5137  0034CC  0100               	movlb	0	; () banked
  5138  0034CE  6FAF               	movwf	ICMP_Receive@ipv4Hdr& (0+255),b
  5139  0034D0  0E02               	movlw	high _ipv4Header
  5140  0034D2  6FB0               	movwf	(ICMP_Receive@ipv4Hdr+1)& (0+255),b
  5141  0034D4  EFD6  F02D         	goto	_ICMP_Receive	;wreg free
  5142  0034D8                     l9222:
  5143                           
  5144                           ; BSR set to: 2
  5145                           ;ipv4.c: 174: ;
  5146                           ;ipv4.c: 175: length = ipv4Header.length - hdrLen;
  5147  0034D8  0101               	movlb	1	; () banked
  5148  0034DA  5152               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  5149  0034DC  0102               	movlb	2	; () banked
  5150  0034DE  5D89               	subwf	(_ipv4Header+2)& (0+255),w,b
  5151  0034E0  D887               	call	PL519	;call to abstracted procedure
  5152                           
  5153                           ; BSR set to: 1
  5154                           ;ipv4.c: 176: cksm = IPV4_PseudoHeaderChecksum(length);
  5155  0034E2  D8D0               	call	PL729	;call to abstracted procedure
  5156  0034E4  EC87  F029         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  5157                           
  5158                           ; BSR set to: 1
  5159                           ;ipv4.c: 177: cksm = ETH_RxComputeChecksum(length, cksm);
  5160  0034E8  D899               	call	PL561	;call to abstracted procedure
  5161  0034EA  EC6D  F02E         	call	_ETH_RxComputeChecksum	;wreg free
  5162  0034EE  C025  F155         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  5163  0034F2  C026  F156         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  5164                           
  5165                           ;ipv4.c: 178: UDP_Receive(cksm);
  5166  0034F6  C155  F0D3         	movff	IPV4_Packet@cksm,UDP_Receive@udpcksm
  5167  0034FA  C156  F0D4         	movff	IPV4_Packet@cksm+1,UDP_Receive@udpcksm+1
  5168  0034FE  EF7F  F026         	goto	_UDP_Receive	;wreg free
  5169  003502                     l9230:
  5170                           
  5171                           ; BSR set to: 2
  5172                           ;ipv4.c: 183: ;
  5173                           ;ipv4.c: 184: length = ipv4Header.length - hdrLen;
  5174  003502  0101               	movlb	1	; () banked
  5175  003504  5152               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  5176  003506  0102               	movlb	2	; () banked
  5177  003508  5D89               	subwf	(_ipv4Header+2)& (0+255),w,b
  5178  00350A  D872               	call	PL519	;call to abstracted procedure
  5179                           
  5180                           ; BSR set to: 1
  5181                           ;ipv4.c: 185: cksm = IPV4_PseudoHeaderChecksum(length);
  5182  00350C  D8BB               	call	PL729	;call to abstracted procedure
  5183  00350E  EC87  F029         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  5184                           
  5185                           ; BSR set to: 1
  5186                           ;ipv4.c: 186: cksm = ETH_RxComputeChecksum(length, cksm);
  5187  003512  D884               	call	PL561	;call to abstracted procedure
  5188  003514  EC6D  F02E         	call	_ETH_RxComputeChecksum	;wreg free
  5189                           
  5190                           ;ipv4.c: 189: if (cksm == 0)
  5191  003518  D88E               	call	PL565	;call to abstracted procedure
  5192  00351A  A4D8               	btfss	status,2,c
  5193  00351C  0012               	return	
  5194                           
  5195                           ; BSR set to: 1
  5196                           ;ipv4.c: 190: {
  5197                           ;ipv4.c: 191: remoteIpv4Address = ipv4Header.srcIpAddress;
  5198  00351E  C293  F224         	movff	_ipv4Header+12,_remoteIpv4Address
  5199  003522  C294  F225         	movff	_ipv4Header+13,_remoteIpv4Address+1
  5200  003526  C295  F226         	movff	_ipv4Header+14,_remoteIpv4Address+2
  5201  00352A  C296  F227         	movff	_ipv4Header+15,_remoteIpv4Address+3
  5202                           
  5203                           ; BSR set to: 1
  5204                           ;ipv4.c: 192: TCP_Recv(remoteIpv4Address, length);
  5205  00352E  C224  F111         	movff	_remoteIpv4Address,TCP_Recv@remoteAddress
  5206  003532  C225  F112         	movff	_remoteIpv4Address+1,TCP_Recv@remoteAddress+1
  5207  003536  C226  F113         	movff	_remoteIpv4Address+2,TCP_Recv@remoteAddress+2
  5208  00353A  C227  F114         	movff	_remoteIpv4Address+3,TCP_Recv@remoteAddress+3
  5209  00353E  C153  F115         	movff	IPV4_Packet@length,TCP_Recv@length
  5210  003542  C154  F116         	movff	IPV4_Packet@length+1,TCP_Recv@length+1
  5211  003546  EF41  F016         	goto	_TCP_Recv	;wreg free
  5212  00354A                     l9242:
  5213                           
  5214                           ; BSR set to: 2
  5215                           ;ipv4.c: 199: ETH_Dump(ipv4Header.length);
  5216  00354A  C289  F017         	movff	_ipv4Header+2,ETH_Dump@length
  5217  00354E  C28A  F018         	movff	_ipv4Header+3,ETH_Dump@length+1
  5218  003552  EFCD  F02F         	goto	_ETH_Dump	;wreg free
  5219  003556                     l9246:
  5220                           
  5221                           ; BSR set to: 1
  5222  003556  0102               	movlb	2	; () banked
  5223  003558  5190               	movf	(_ipv4Header+9)& (0+255),w,b
  5224                           
  5225                           ; Switch size 1, requested type "space"
  5226                           ; Number of cases is 3, Range of values is 1 to 17
  5227                           ; switch strategies available:
  5228                           ; Name         Instructions Cycles
  5229                           ; simple_byte           10     6 (average)
  5230                           ;	Chosen strategy is simple_byte
  5231  00355A  0A01               	xorlw	1	; case 1
  5232  00355C  E0A6               	bz	l9214
  5233  00355E  0A07               	xorlw	7	; case 6
  5234  003560  E0D0               	bz	l9230
  5235  003562  0A17               	xorlw	23	; case 17
  5236  003564  E0B9               	bz	l9222
  5237  003566  D7F1               	goto	l9242
  5238  003568                     __end_of_IPV4_Packet:
  5239                           	opt stack 0
  5240  003568                     PL433:
  5241                           	opt stack 12
  5242  003568  14DE               	andwf	postinc2,w,c
  5243  00356A  6F46               	movwf	(??_IPV4_Packet+16)& (0+255),b
  5244  00356C  0E00               	movlw	0
  5245  00356E  14DE               	andwf	postinc2,w,c
  5246  003570  6F47               	movwf	(??_IPV4_Packet+17)& (0+255),b
  5247  003572  0E00               	movlw	0
  5248  003574  14DE               	andwf	postinc2,w,c
  5249  003576  6F48               	movwf	(??_IPV4_Packet+18)& (0+255),b
  5250  003578  0EFF               	movlw	255
  5251  00357A  14DE               	andwf	postinc2,w,c
  5252  00357C  6F49               	movwf	(??_IPV4_Packet+19)& (0+255),b
  5253  00357E  0E19               	movlw	25
  5254  003580  D005               	goto	u14810
  5255  003582                     u14815:
  5256  003582  90D8               	bcf	status,0,c
  5257  003584  3349               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  5258  003586  3348               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  5259  003588  3347               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  5260  00358A  3346               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  5261  00358C                     u14810:
  5262  00358C  2EE8               	decfsz	wreg,f,c
  5263  00358E  D7F9               	goto	u14815
  5264  003590  5142               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  5265  003592  1146               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  5266  003594  6F4A               	movwf	(??_IPV4_Packet+20)& (0+255),b
  5267  003596  5143               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  5268  003598  1147               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  5269  00359A  6F4B               	movwf	(??_IPV4_Packet+21)& (0+255),b
  5270  00359C  5144               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  5271  00359E  1148               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  5272  0035A0  6F4C               	movwf	(??_IPV4_Packet+22)& (0+255),b
  5273  0035A2  5145               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  5274  0035A4  1149               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  5275  0035A6  6F4D               	movwf	(??_IPV4_Packet+23)& (0+255),b
  5276  0035A8  513A               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  5277  0035AA  114A               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  5278  0035AC  6F4E               	movwf	(??_IPV4_Packet+24)& (0+255),b
  5279  0035AE  513B               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  5280  0035B0  114B               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  5281  0035B2  6F4F               	movwf	(??_IPV4_Packet+25)& (0+255),b
  5282  0035B4  513C               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  5283  0035B6  114C               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  5284  0035B8  6F50               	movwf	(??_IPV4_Packet+26)& (0+255),b
  5285  0035BA  513D               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  5286  0035BC  114D               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  5287  0035BE  6F51               	movwf	(??_IPV4_Packet+27)& (0+255),b
  5288  0035C0  5136               	movf	??_IPV4_Packet& (0+255),w,b
  5289  0035C2  114E               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  5290  0035C4  0102               	movlb	2	; () banked
  5291  0035C6  0012               	return	
  5292  0035C8                     __end_ofPL433:
  5293                           	opt stack 0
  5294  0035C8                     PL495:
  5295                           	opt stack 12
  5296  0035C8  0E00               	movlw	0
  5297  0035CA  14DE               	andwf	postinc2,w,c
  5298  0035CC  6F3A               	movwf	(??_IPV4_Packet+4)& (0+255),b
  5299  0035CE  0EFF               	movlw	255
  5300  0035D0  14DE               	andwf	postinc2,w,c
  5301  0035D2  6F3B               	movwf	(??_IPV4_Packet+5)& (0+255),b
  5302  0035D4  0E00               	movlw	0
  5303  0035D6  14DE               	andwf	postinc2,w,c
  5304  0035D8  6F3C               	movwf	(??_IPV4_Packet+6)& (0+255),b
  5305  0035DA  0E00               	movlw	0
  5306  0035DC  14DE               	andwf	postinc2,w,c
  5307  0035DE  6F3D               	movwf	(??_IPV4_Packet+7)& (0+255),b
  5308  0035E0  C13C  F13D         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  5309  0035E4  C13B  F13C         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  5310  0035E8  C13A  F13B         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  5311  0035EC  6B3A               	clrf	(??_IPV4_Packet+4)& (0+255),b
  5312  0035EE  0012               	return	
  5313  0035F0                     __end_ofPL495:
  5314                           	opt stack 0
  5315  0035F0                     PL519:
  5316                           	opt stack 12
  5317  0035F0  0101               	movlb	1	; () banked
  5318  0035F2  6F53               	movwf	IPV4_Packet@length& (0+255),b
  5319  0035F4  0102               	movlb	2	; () banked
  5320  0035F6  518A               	movf	(_ipv4Header+3)& (0+255),w,b
  5321  0035F8  A0D8               	btfss	status,0,c
  5322  0035FA  058A               	decf	(_ipv4Header+3)& (0+255),w,b
  5323  0035FC  0101               	movlb	1	; () banked
  5324  0035FE  6F54               	movwf	(IPV4_Packet@length+1)& (0+255),b
  5325  003600  0012               	return	
  5326  003602                     __end_ofPL519:
  5327                           	opt stack 0
  5328  003602                     PL531:
  5329                           	opt stack 12
  5330  003602  C13F  F13E         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  5331  003606  C140  F13F         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  5332  00360A  C141  F140         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  5333  00360E  6B41               	clrf	(??_IPV4_Packet+11)& (0+255),b
  5334  003610  6B42               	clrf	(??_IPV4_Packet+12)& (0+255),b
  5335  003612  513F               	movf	(??_IPV4_Packet+9)& (0+255),w,b
  5336  003614  6F43               	movwf	(??_IPV4_Packet+13)& (0+255),b
  5337  003616  6B44               	clrf	(??_IPV4_Packet+14)& (0+255),b
  5338  003618  6B45               	clrf	(??_IPV4_Packet+15)& (0+255),b
  5339  00361A  0C00               	retlw	0
  5340  00361C                     __end_ofPL531:
  5341                           	opt stack 0
  5342  00361C                     PL561:
  5343                           	opt stack 12
  5344  00361C  C017  F155         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  5345  003620  C018  F156         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  5346  003624  C153  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  5347  003628  C154  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  5348  00362C  C155  F027         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  5349  003630  C156  F028         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  5350  003634  0012               	return	
  5351  003636                     __end_ofPL561:
  5352                           	opt stack 0
  5353  003636                     PL565:
  5354                           	opt stack 12
  5355  003636  C025  F155         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  5356  00363A  C026  F156         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  5357  00363E  0101               	movlb	1	; () banked
  5358  003640  5155               	movf	IPV4_Packet@cksm& (0+255),w,b
  5359  003642  1156               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  5360  003644  0012               	return	
  5361  003646                     __end_ofPL565:
  5362                           	opt stack 0
  5363  003646                     PL585:
  5364                           	opt stack 12
  5365  003646  0101               	movlb	1	; () banked
  5366  003648  6F36               	movwf	??_IPV4_Packet& (0+255),b
  5367  00364A  6B37               	clrf	(??_IPV4_Packet+1)& (0+255),b
  5368  00364C  6B38               	clrf	(??_IPV4_Packet+2)& (0+255),b
  5369  00364E  6B39               	clrf	(??_IPV4_Packet+3)& (0+255),b
  5370  003650  C136  F139         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  5371  003654  6B38               	clrf	(??_IPV4_Packet+2)& (0+255),b
  5372  003656  6B37               	clrf	(??_IPV4_Packet+1)& (0+255),b
  5373  003658  6B36               	clrf	??_IPV4_Packet& (0+255),b
  5374  00365A  0012               	return	
  5375  00365C                     __end_ofPL585:
  5376                           	opt stack 0
  5377  00365C                     PL683:
  5378                           	opt stack 12
  5379  00365C  0101               	movlb	1	; () banked
  5380  00365E  5138               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  5381  003660  1150               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  5382  003662  0102               	movlb	2	; () banked
  5383  003664  0012               	return	
  5384  003666                     __end_ofPL683:
  5385                           	opt stack 0
  5386  003666                     PL693:
  5387                           	opt stack 12
  5388  003666  5187               	movf	_ipv4Header& (0+255),w,b
  5389  003668  0B0F               	andlw	15
  5390  00366A  0101               	movlb	1	; () banked
  5391  00366C  6F36               	movwf	??_IPV4_Packet& (0+255),b
  5392  00366E  0012               	return	
  5393  003670                     __end_ofPL693:
  5394                           	opt stack 0
  5395  003670                     PL725:
  5396                           	opt stack 12
  5397  003670  0101               	movlb	1	; () banked
  5398  003672  5139               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  5399  003674  1151               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  5400  003676  0102               	movlb	2	; () banked
  5401  003678  0012               	return	
  5402  00367A                     __end_ofPL725:
  5403                           	opt stack 0
  5404  00367A                     PL727:
  5405                           	opt stack 12
  5406  00367A  0101               	movlb	1	; () banked
  5407  00367C  5137               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  5408  00367E  114F               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  5409  003680  0102               	movlb	2	; () banked
  5410  003682  0012               	return	
  5411  003684                     __end_ofPL727:
  5412                           	opt stack 0
  5413  003684                     PL729:
  5414                           	opt stack 12
  5415  003684  C153  F017         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  5416  003688  C154  F018         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  5417  00368C  0012               	return	
  5418  00368E                     __end_ofPL729:
  5419                           	opt stack 0
  5420                           tosu	equ	0xFFF
  5421                           tosh	equ	0xFFE
  5422                           tosl	equ	0xFFD
  5423                           pclath	equ	0xFFA
  5424                           tblptru	equ	0xFF8
  5425                           tblptrh	equ	0xFF7
  5426                           tblptrl	equ	0xFF6
  5427                           tablat	equ	0xFF5
  5428                           prodh	equ	0xFF4
  5429                           prodl	equ	0xFF3
  5430                           intcon	equ	0xFF2
  5431                           indf0	equ	0xFEF
  5432                           postinc0	equ	0xFEE
  5433                           fsr0h	equ	0xFEA
  5434                           fsr0l	equ	0xFE9
  5435                           wreg	equ	0xFE8
  5436                           indf1	equ	0xFE7
  5437                           postinc1	equ	0xFE6
  5438                           postdec1	equ	0xFE5
  5439                           plusw1	equ	0xFE3
  5440                           fsr1h	equ	0xFE2
  5441                           fsr1l	equ	0xFE1
  5442                           bsr	equ	0xFE0
  5443                           indf2	equ	0xFDF
  5444                           postinc2	equ	0xFDE
  5445                           postdec2	equ	0xFDD
  5446                           plusw2	equ	0xFDB
  5447                           fsr2h	equ	0xFDA
  5448                           fsr2l	equ	0xFD9
  5449                           status	equ	0xFD8
  5450                           
  5451 ;; *************** function _UDP_Receive *****************
  5452 ;; Defined at:
  5453 ;;		line 126 in file "../../TCPIP Library/source/udpv4.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;  udpcksm         2  115[BANK0 ] unsigned int 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  x               2  123[BANK0 ] unsigned int 
  5458 ;;  hptr            1  125[BANK0 ] PTR const struct .
  5459 ;;		 -> UDP_CallBackTable(5), 
  5460 ;;  ret             1    0        enum E367
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      enum E6944
  5463 ;; Registers used:
  5464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/1
  5467 ;;		On exit  : E/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5470 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5471 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5474 ;;Total ram usage:       11 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; Hardware stack levels required when called:   15
  5477 ;; This function calls:
  5478 ;;		_DHCP_Handler
  5479 ;;		_ETH_ReadBlock
  5480 ;; This function is called by:
  5481 ;;		_IPV4_Packet
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           	psect	text23
  5486  004CFE                     __ptext23:
  5487                           	opt stack 0
  5488  004CFE                     _UDP_Receive:
  5489                           	opt stack 12
  5490                           
  5491                           ;udpv4.c: 129: const udp_handler_t *hptr;
  5492                           ;udpv4.c: 130: uint16_t x;
  5493                           ;udpv4.c: 132: hptr = UDP_CallBackTable;
  5494                           
  5495                           ;incstack = 0
  5496  004CFE  0E34               	movlw	low _UDP_CallBackTable
  5497  004D00  0100               	movlb	0	; () banked
  5498  004D02  6FDD               	movwf	UDP_Receive@hptr& (0+255),b
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;udpv4.c: 133: ETH_ReadBlock((char *)&udpHeader,sizeof(udpHeader));
  5502  004D04  0E9B               	movlw	low _udpHeader
  5503  004D06  6E17               	movwf	ETH_ReadBlock@buffer,c
  5504  004D08  0E02               	movlw	high _udpHeader
  5505  004D0A  6E18               	movwf	ETH_ReadBlock@buffer+1,c
  5506  004D0C  ECF8  F02D         	call	PL743	;call to abstracted procedure
  5507  004D10  EC0C  F02C         	call	_ETH_ReadBlock	;wreg free
  5508                           
  5509                           ; BSR set to: 1
  5510                           ;udpv4.c: 135: if((udpHeader.checksum == 0) || (udpcksm == 0))
  5511  004D14  0102               	movlb	2	; () banked
  5512  004D16  51A1               	movf	(_udpHeader+6)& (0+255),w,b
  5513  004D18  11A2               	iorwf	(_udpHeader+7)& (0+255),w,b
  5514  004D1A  E005               	bz	l8900
  5515                           
  5516                           ; BSR set to: 2
  5517  004D1C  0100               	movlb	0	; () banked
  5518  004D1E  51D3               	movf	UDP_Receive@udpcksm& (0+255),w,b
  5519  004D20  11D4               	iorwf	(UDP_Receive@udpcksm+1)& (0+255),w,b
  5520  004D22  A4D8               	btfss	status,2,c
  5521  004D24  0012               	return	
  5522  004D26                     l8900:
  5523                           
  5524                           ;udpv4.c: 138: destPort = ((((uint16_t)udpHeader.srcPort & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)udpHeader.srcPort & (uint16_t)0x00FF) << 8));
  5525  004D26  0102               	movlb	2	; () banked
  5526  004D28  519D               	movf	(_udpHeader+2)& (0+255),w,b
  5527  004D2A  0100               	movlb	0	; () banked
  5528  004D2C  6FD6               	movwf	(??_UDP_Receive+1)& (0+255),b
  5529  004D2E  6BD5               	clrf	??_UDP_Receive& (0+255),b
  5530  004D30  EE22  F09D         	lfsr	2,_udpHeader+2
  5531  004D34  D849               	call	PL597	;call to abstracted procedure
  5532  004D36  11D7               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  5533  004D38  0102               	movlb	2	; () banked
  5534  004D3A  6F9D               	movwf	(_udpHeader+2)& (0+255),b
  5535  004D3C  0100               	movlb	0	; () banked
  5536  004D3E  51D6               	movf	(??_UDP_Receive+1)& (0+255),w,b
  5537  004D40  11D8               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  5538  004D42  0102               	movlb	2	; () banked
  5539  004D44  6F9E               	movwf	(_udpHeader+3)& (0+255),b
  5540                           
  5541                           ; BSR set to: 2
  5542                           ;udpv4.c: 142: for(x = 0; x < (sizeof(UDP_CallBackTable) / sizeof(*(UDP_CallBackTable)))
      +                          ;x++)
  5543                           
  5544                           ; BSR set to: 2
  5545  004D46  0100               	movlb	0	; () banked
  5546  004D48  6BDB               	clrf	UDP_Receive@x& (0+255),b
  5547  004D4A  6BDC               	clrf	(UDP_Receive@x+1)& (0+255),b
  5548  004D4C                     l8910:
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;udpv4.c: 143: {
  5552                           ;udpv4.c: 144: if(hptr->portNumber == udpHeader.dstPort)
  5553  004D4C  C0DD  FFF6         	movff	UDP_Receive@hptr,tblptrl
  5554  004D50  D836               	call	PL481	;call to abstracted procedure
  5555  004D52  0102               	movlb	2	; () banked
  5556  004D54  519D               	movf	(_udpHeader+2)& (0+255),w,b
  5557  004D56  0009               	tblrd		*+
  5558  004D58  18F5               	xorwf	tablat,w,c
  5559  004D5A  E128               	bnz	l8916
  5560  004D5C  519E               	movf	(_udpHeader+3)& (0+255),w,b
  5561  004D5E  0009               	tblrd		*+
  5562  004D60  18F5               	xorwf	tablat,w,c
  5563  004D62  E124               	bnz	l8916
  5564                           
  5565                           ; BSR set to: 2
  5566                           ;udpv4.c: 145: {
  5567                           ;udpv4.c: 146: hptr->callBack(((((uint16_t)udpHeader.length & (uint16_t)0xFF00) >> 8) | 
      +                          (((uint16_t)udpHeader.length & (uint16_t)0x00FF) << 8)) - sizeof(udpHeader));
  5568  004D64  519F               	movf	(_udpHeader+4)& (0+255),w,b
  5569  004D66  0100               	movlb	0	; () banked
  5570  004D68  6FD6               	movwf	(??_UDP_Receive+1)& (0+255),b
  5571  004D6A  6BD5               	clrf	??_UDP_Receive& (0+255),b
  5572  004D6C  EE22  F09F         	lfsr	2,_udpHeader+4
  5573  004D70  D82B               	call	PL597	;call to abstracted procedure
  5574  004D72  13D7               	iorwf	(??_UDP_Receive+2)& (0+255),f,b
  5575  004D74  51D6               	movf	(??_UDP_Receive+1)& (0+255),w,b
  5576  004D76  13D8               	iorwf	(??_UDP_Receive+3)& (0+255),f,b
  5577  004D78  0EF8               	movlw	248
  5578  004D7A  25D7               	addwf	(??_UDP_Receive+2)& (0+255),w,b
  5579  004D7C  6FAF               	movwf	DHCP_Handler@length& (0+255),b
  5580  004D7E  0EFF               	movlw	255
  5581  004D80  21D8               	addwfc	(??_UDP_Receive+3)& (0+255),w,b
  5582  004D82  6FB0               	movwf	(DHCP_Handler@length+1)& (0+255),b
  5583  004D84  C0DD  F0D9         	movff	UDP_Receive@hptr,??_UDP_Receive+4
  5584  004D88  0E02               	movlw	2
  5585  004D8A  27D9               	addwf	(??_UDP_Receive+4)& (0+255),f,b
  5586  004D8C  C0D9  FFF6         	movff	??_UDP_Receive+4,tblptrl
  5587  004D90  D816               	call	PL481	;call to abstracted procedure
  5588  004D92  0005               	push	
  5589  004D94  6EFA               	movwf	pclath,c
  5590  004D96  0009               	tblrd		*+
  5591  004D98  50F5               	movf	tablat,w,c
  5592  004D9A  6EFD               	movwf	tosl,c
  5593  004D9C  0009               	tblrd		*+
  5594  004D9E  50F5               	movf	tablat,w,c
  5595  004DA0  6EFE               	movwf	tosh,c
  5596  004DA2  0009               	tblrd		*+
  5597  004DA4  50F5               	movf	tablat,w,c
  5598  004DA6  6EFF               	movwf	tosu,c
  5599  004DA8  50FA               	movf	pclath,w,c
  5600  004DAA  0012               	return		;indir
  5601  004DAC                     l8916:
  5602                           
  5603                           ; BSR set to: 2
  5604                           ;udpv4.c: 149: }
  5605                           ;udpv4.c: 150: hptr ++;
  5606  004DAC  0E05               	movlw	5
  5607  004DAE  0100               	movlb	0	; () banked
  5608  004DB0  27DD               	addwf	UDP_Receive@hptr& (0+255),f,b
  5609                           
  5610                           ; BSR set to: 0
  5611  004DB2  4BDB               	infsnz	UDP_Receive@x& (0+255),f,b
  5612  004DB4  2BDC               	incf	(UDP_Receive@x+1)& (0+255),f,b
  5613                           
  5614                           ; BSR set to: 0
  5615  004DB6  51DB               	movf	UDP_Receive@x& (0+255),w,b
  5616  004DB8  11DC               	iorwf	(UDP_Receive@x+1)& (0+255),w,b
  5617  004DBA  E0C8               	bz	l8910
  5618  004DBC  0012               	return	
  5619  004DBE                     __end_of_UDP_Receive:
  5620                           	opt stack 0
  5621  004DBE                     PL481:
  5622                           	opt stack 12
  5623  004DBE                     	if	1	;There is more than 1 active tblptr byte
  5624  004DBE  0E10               	movlw	high __smallconst
  5625  004DC0  6EF7               	movwf	tblptrh,c
  5626  004DC2                     	endif
  5627  004DC2                     	if	0	;tblptru may be non-zero
  5628  004DC2                     	endif
  5629  004DC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5630  004DC2  0E00               	movlw	low (__smallconst shr (0+16))
  5631  004DC4  6EF8               	movwf	tblptru,c
  5632  004DC6                     	endif
  5633  004DC6  0012               	return	
  5634  004DC8                     __end_ofPL481:
  5635                           	opt stack 0
  5636  004DC8                     PL597:
  5637                           	opt stack 12
  5638  004DC8  CFDE F0D7          	movff	postinc2,??_UDP_Receive+2
  5639  004DCC  CFDD F0D8          	movff	postdec2,??_UDP_Receive+3
  5640  004DD0  C0D8  F0D7         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  5641  004DD4  6BD8               	clrf	(??_UDP_Receive+3)& (0+255),b
  5642  004DD6  6BD8               	clrf	(??_UDP_Receive+3)& (0+255),b
  5643  004DD8  51D5               	movf	??_UDP_Receive& (0+255),w,b
  5644  004DDA  0012               	return	
  5645  004DDC                     __end_ofPL597:
  5646                           	opt stack 0
  5647                           tosu	equ	0xFFF
  5648                           tosh	equ	0xFFE
  5649                           tosl	equ	0xFFD
  5650                           pclath	equ	0xFFA
  5651                           tblptru	equ	0xFF8
  5652                           tblptrh	equ	0xFF7
  5653                           tblptrl	equ	0xFF6
  5654                           tablat	equ	0xFF5
  5655                           prodh	equ	0xFF4
  5656                           prodl	equ	0xFF3
  5657                           intcon	equ	0xFF2
  5658                           indf0	equ	0xFEF
  5659                           postinc0	equ	0xFEE
  5660                           fsr0h	equ	0xFEA
  5661                           fsr0l	equ	0xFE9
  5662                           wreg	equ	0xFE8
  5663                           indf1	equ	0xFE7
  5664                           postinc1	equ	0xFE6
  5665                           postdec1	equ	0xFE5
  5666                           plusw1	equ	0xFE3
  5667                           fsr1h	equ	0xFE2
  5668                           fsr1l	equ	0xFE1
  5669                           bsr	equ	0xFE0
  5670                           indf2	equ	0xFDF
  5671                           postinc2	equ	0xFDE
  5672                           postdec2	equ	0xFDD
  5673                           plusw2	equ	0xFDB
  5674                           fsr2h	equ	0xFDA
  5675                           fsr2l	equ	0xFD9
  5676                           status	equ	0xFD8
  5677                           
  5678 ;; *************** function _DHCP_Handler *****************
  5679 ;; Defined at:
  5680 ;;		line 162 in file "../../TCPIP Library/source/dhcp_client.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  length          2   79[BANK0 ] int 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  optionLength    1  110[BANK0 ] unsigned char 
  5685 ;;  option          1   97[BANK0 ] unsigned char 
  5686 ;;  ip              8   83[BANK0 ] unsigned int [4]
  5687 ;;  ethMAC          6  104[BANK0 ] struct .
  5688 ;;  ethPktMAC       6   98[BANK0 ] struct .
  5689 ;;  myip            4  111[BANK0 ] unsigned long 
  5690 ;;  v               4   91[BANK0 ] unsigned long 
  5691 ;;  v16             2   95[BANK0 ] unsigned int 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;		None               void
  5694 ;; Registers used:
  5695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : F/0
  5698 ;;		On exit  : E/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5705 ;;Total ram usage:       36 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:   14
  5708 ;; This function calls:
  5709 ;;		_DHCP_Request
  5710 ;;		_ETH_Dump
  5711 ;;		_ETH_GetMAC
  5712 ;;		_ETH_Read16
  5713 ;;		_ETH_Read32
  5714 ;;		_ETH_Read8
  5715 ;;		_ETH_ReadBlock
  5716 ;;		_memcmp
  5717 ;; This function is called by:
  5718 ;;		_UDP_Receive
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text24
  5723  00397E                     __ptext24:
  5724                           	opt stack 0
  5725  00397E                     _DHCP_Handler:
  5726                           	opt stack 12
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;dhcp_client.c: 165: uint32_t myip,v;
  5730                           ;dhcp_client.c: 166: uint16_t v16;
  5731                           ;dhcp_client.c: 167: uint16_t ip[4];
  5732                           ;dhcp_client.c: 169: mac48Address_t ethPktMAC;
  5733                           ;dhcp_client.c: 170: mac48Address_t ethMAC;
  5734                           ;dhcp_client.c: 172: ETH_GetMAC((char*)&ethMAC);
  5735                           
  5736                           ;incstack = 0
  5737  00397E  0EC8               	movlw	DHCP_Handler@ethMAC& (0+255)
  5738  003980  EC4C  F02F         	call	_ETH_GetMAC
  5739                           
  5740                           ;dhcp_client.c: 178: if(length > 240)
  5741  003984  0100               	movlb	0	; () banked
  5742  003986  BFB0               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  5743  003988  0012               	return	
  5744  00398A  51B0               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  5745  00398C  E104               	bnz	u12160
  5746  00398E  0EF1               	movlw	241
  5747  003990  5DAF               	subwf	DHCP_Handler@length& (0+255),w,b
  5748  003992  A0D8               	btfss	status,0,c
  5749  003994  0012               	return	
  5750  003996                     u12160:
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;dhcp_client.c: 179: {
  5754                           ;dhcp_client.c: 180: v16 = ETH_Read16();
  5755  003996  ECB5  F02E         	call	_ETH_Read16	;wreg free
  5756  00399A  C017  F0BF         	movff	?_ETH_Read16,DHCP_Handler@v16
  5757  00399E  C018  F0C0         	movff	?_ETH_Read16+1,DHCP_Handler@v16+1
  5758                           
  5759                           ; BSR set to: 1
  5760                           ;dhcp_client.c: 181: if(v16 == 0x0201)
  5761  0039A2  0100               	movlb	0	; () banked
  5762  0039A4  05BF               	decf	DHCP_Handler@v16& (0+255),w,b
  5763  0039A6  E103               	bnz	u12171
  5764  0039A8  0E02               	movlw	2
  5765  0039AA  19C0               	xorwf	(DHCP_Handler@v16+1)& (0+255),w,b
  5766  0039AC  A4D8               	btfss	status,2,c
  5767  0039AE                     u12171:
  5768  0039AE  0012               	return	
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;dhcp_client.c: 182: {
  5772                           ;dhcp_client.c: 183: ETH_Dump(2);
  5773  0039B0  6A18               	clrf	ETH_Dump@length+1,c
  5774  0039B2  0E02               	movlw	2
  5775  0039B4  6E17               	movwf	ETH_Dump@length,c
  5776  0039B6  ECCD  F02F         	call	_ETH_Dump	;wreg free
  5777                           
  5778                           ;dhcp_client.c: 184: v = ETH_Read32();
  5779  0039BA  EC6B  F02C         	call	_ETH_Read32	;wreg free
  5780  0039BE  C017  F0BB         	movff	?_ETH_Read32,DHCP_Handler@v
  5781  0039C2  C018  F0BC         	movff	?_ETH_Read32+1,DHCP_Handler@v+1
  5782  0039C6  C019  F0BD         	movff	?_ETH_Read32+2,DHCP_Handler@v+2
  5783  0039CA  C01A  F0BE         	movff	?_ETH_Read32+3,DHCP_Handler@v+3
  5784                           
  5785                           ; BSR set to: 1
  5786                           ;dhcp_client.c: 185: if(v == xidValue)
  5787  0039CE  0E50               	movlw	80
  5788  0039D0  0100               	movlb	0	; () banked
  5789  0039D2  19BB               	xorwf	DHCP_Handler@v& (0+255),w,b
  5790  0039D4  E109               	bnz	u12181
  5791  0039D6  0E48               	movlw	72
  5792  0039D8  19BC               	xorwf	(DHCP_Handler@v+1)& (0+255),w,b
  5793  0039DA  E106               	bnz	u12181
  5794  0039DC  0E43               	movlw	67
  5795  0039DE  19BD               	xorwf	(DHCP_Handler@v+2)& (0+255),w,b
  5796  0039E0  E103               	bnz	u12181
  5797  0039E2  0E4D               	movlw	77
  5798  0039E4  19BE               	xorwf	(DHCP_Handler@v+3)& (0+255),w,b
  5799  0039E6  A4D8               	btfss	status,2,c
  5800  0039E8                     u12181:
  5801  0039E8  0012               	return	
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;dhcp_client.c: 186: {
  5805                           ;dhcp_client.c: 187: ETH_Dump(8);
  5806  0039EA  D8F7               	call	PL749	;call to abstracted procedure
  5807  0039EC  ECCD  F02F         	call	_ETH_Dump	;wreg free
  5808                           
  5809                           ;dhcp_client.c: 188: myip = ETH_Read32();
  5810  0039F0  EC6B  F02C         	call	_ETH_Read32	;wreg free
  5811  0039F4  C017  F0CF         	movff	?_ETH_Read32,DHCP_Handler@myip
  5812  0039F8  C018  F0D0         	movff	?_ETH_Read32+1,DHCP_Handler@myip+1
  5813  0039FC  C019  F0D1         	movff	?_ETH_Read32+2,DHCP_Handler@myip+2
  5814  003A00  C01A  F0D2         	movff	?_ETH_Read32+3,DHCP_Handler@myip+3
  5815                           
  5816                           ; BSR set to: 1
  5817                           ;dhcp_client.c: 189: ip[0] = myip & 0x00FF;
  5818  003A04  0100               	movlb	0	; () banked
  5819  003A06  51CF               	movf	DHCP_Handler@myip& (0+255),w,b
  5820  003A08  6FB3               	movwf	DHCP_Handler@ip& (0+255),b
  5821  003A0A  6BB4               	clrf	(DHCP_Handler@ip+1)& (0+255),b
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;dhcp_client.c: 190: ip[1] = (myip >> 8) & 0x00FF;
  5825  003A0C  51D0               	movf	(DHCP_Handler@myip+1)& (0+255),w,b
  5826  003A0E  6FB5               	movwf	(DHCP_Handler@ip+2)& (0+255),b
  5827  003A10  6BB6               	clrf	(DHCP_Handler@ip+3)& (0+255),b
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;dhcp_client.c: 191: ip[2] = (myip >> 16) & 0x00FF;
  5831  003A12  51D1               	movf	(DHCP_Handler@myip+2)& (0+255),w,b
  5832  003A14  6FB7               	movwf	(DHCP_Handler@ip+4)& (0+255),b
  5833  003A16  6BB8               	clrf	(DHCP_Handler@ip+5)& (0+255),b
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;dhcp_client.c: 192: ip[3] = (myip >> 24) & 0x00FF;
  5837  003A18  C0D2  F0B9         	movff	DHCP_Handler@myip+3,DHCP_Handler@ip+6
  5838  003A1C  6BBA               	clrf	(DHCP_Handler@ip+7)& (0+255),b
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;dhcp_client.c: 193: ETH_Dump(8);
  5842  003A1E  D8DD               	call	PL749	;call to abstracted procedure
  5843  003A20  ECCD  F02F         	call	_ETH_Dump	;wreg free
  5844                           
  5845                           ; BSR set to: 1
  5846                           ;dhcp_client.c: 194: ETH_ReadBlock((char *)&ethPktMAC, sizeof(ethPktMAC.s));
  5847  003A24  0EC2               	movlw	low DHCP_Handler@ethPktMAC
  5848  003A26  6E17               	movwf	ETH_ReadBlock@buffer,c
  5849  003A28  6A18               	clrf	ETH_ReadBlock@buffer+1,c
  5850  003A2A  6A1A               	clrf	ETH_ReadBlock@length+1,c
  5851  003A2C  0E06               	movlw	6
  5852  003A2E  6E19               	movwf	ETH_ReadBlock@length,c
  5853  003A30  EC0C  F02C         	call	_ETH_ReadBlock	;wreg free
  5854                           
  5855                           ; BSR set to: 1
  5856                           ;dhcp_client.c: 196: if(memcmp(&ethPktMAC.s, &ethMAC.s, 6)== 0)
  5857  003A34  0EC8               	movlw	low DHCP_Handler@ethMAC
  5858  003A36  6E17               	movwf	memcmp@s2,c
  5859  003A38  6A19               	clrf	memcmp@n+1,c
  5860  003A3A  0E06               	movlw	6
  5861  003A3C  6E18               	movwf	memcmp@n,c
  5862  003A3E  0EC2               	movlw	DHCP_Handler@ethPktMAC& (0+255)
  5863  003A40  ECB0  F02D         	call	_memcmp
  5864  003A44  5017               	movf	?_memcmp,w,c
  5865  003A46  1018               	iorwf	?_memcmp+1,w,c
  5866  003A48  E001 D0B5          	bnz	l8388
  5867                           
  5868                           ;dhcp_client.c: 197: {
  5869                           ;dhcp_client.c: 198: ETH_Dump(202);
  5870  003A4C  6A18               	clrf	ETH_Dump@length+1,c
  5871  003A4E  0ECA               	movlw	202
  5872  003A50  6E17               	movwf	ETH_Dump@length,c
  5873  003A52  ECCD  F02F         	call	_ETH_Dump	;wreg free
  5874                           
  5875                           ;dhcp_client.c: 199: if(ETH_Read32() == 0x63825363)
  5876  003A56  EC6B  F02C         	call	_ETH_Read32	;wreg free
  5877  003A5A  0E63               	movlw	99
  5878  003A5C  1817               	xorwf	?_ETH_Read32,w,c
  5879  003A5E  E109               	bnz	u12201
  5880  003A60  0E53               	movlw	83
  5881  003A62  1818               	xorwf	?_ETH_Read32+1,w,c
  5882  003A64  E106               	bnz	u12201
  5883  003A66  0E82               	movlw	130
  5884  003A68  1819               	xorwf	?_ETH_Read32+2,w,c
  5885  003A6A  E103               	bnz	u12201
  5886  003A6C  0E63               	movlw	99
  5887  003A6E  181A               	xorwf	?_ETH_Read32+3,w,c
  5888  003A70  A4D8               	btfss	status,2,c
  5889  003A72                     u12201:
  5890  003A72  0012               	return	
  5891                           
  5892                           ; BSR set to: 1
  5893                           ;dhcp_client.c: 200: {
  5894                           ;dhcp_client.c: 201: length -= 240;
  5895  003A74  0100               	movlb	0	; () banked
  5896  003A76  0E10               	movlw	16
  5897  003A78  27AF               	addwf	DHCP_Handler@length& (0+255),f,b
  5898  003A7A  0EFF               	movlw	255
  5899  003A7C  23B0               	addwfc	(DHCP_Handler@length+1)& (0+255),f,b
  5900                           
  5901                           ;dhcp_client.c: 202: while(length>0)
  5902  003A7E  D08C               	goto	l8382
  5903  003A80                     l8334:
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;dhcp_client.c: 203: {
  5907                           ;dhcp_client.c: 205: uint8_t option, optionLength;
  5908                           ;dhcp_client.c: 206: option = ETH_Read8();
  5909  003A80  EC26  F030         	call	_ETH_Read8	;wreg free
  5910  003A84  0100               	movlb	0	; () banked
  5911  003A86  6FC1               	movwf	DHCP_Handler@option& (0+255),b
  5912                           
  5913                           ;dhcp_client.c: 207: optionLength = ETH_Read8();
  5914  003A88  EC26  F030         	call	_ETH_Read8	;wreg free
  5915  003A8C  0100               	movlb	0	; () banked
  5916  003A8E  6FCE               	movwf	DHCP_Handler@optionLength& (0+255),b
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;dhcp_client.c: 208: length -= 2 + optionLength;
  5920  003A90  51CE               	movf	DHCP_Handler@optionLength& (0+255),w,b
  5921  003A92  6FB1               	movwf	??_DHCP_Handler& (0+255),b
  5922  003A94  6BB2               	clrf	(??_DHCP_Handler+1)& (0+255),b
  5923  003A96  0E02               	movlw	2
  5924  003A98  27B1               	addwf	??_DHCP_Handler& (0+255),f,b
  5925  003A9A  0E00               	movlw	0
  5926  003A9C  23B2               	addwfc	(??_DHCP_Handler+1)& (0+255),f,b
  5927  003A9E  51B1               	movf	??_DHCP_Handler& (0+255),w,b
  5928  003AA0  5FAF               	subwf	DHCP_Handler@length& (0+255),f,b
  5929  003AA2  51B2               	movf	(??_DHCP_Handler+1)& (0+255),w,b
  5930  003AA4  5BB0               	subwfb	(DHCP_Handler@length+1)& (0+255),f,b
  5931                           
  5932                           ;dhcp_client.c: 209: switch(option)
  5933  003AA6  D06A               	goto	l8380
  5934  003AA8                     l8338:
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;dhcp_client.c: 212: ipv4SubnetMask = ETH_Read32();
  5938  003AA8  EC6B  F02C         	call	_ETH_Read32	;wreg free
  5939  003AAC  C017  F1C8         	movff	?_ETH_Read32,_ipv4SubnetMask
  5940  003AB0  C018  F1C9         	movff	?_ETH_Read32+1,_ipv4SubnetMask+1
  5941  003AB4  C019  F1CA         	movff	?_ETH_Read32+2,_ipv4SubnetMask+2
  5942  003AB8  C01A  F1CB         	movff	?_ETH_Read32+3,_ipv4SubnetMask+3
  5943                           
  5944                           ;dhcp_client.c: 213: break;
  5945  003ABC  D06D               	goto	l8382
  5946  003ABE                     l8340:
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;dhcp_client.c: 215: ipv4Router = ETH_Read32();
  5950  003ABE  EC6B  F02C         	call	_ETH_Read32	;wreg free
  5951  003AC2  C017  F1C4         	movff	?_ETH_Read32,_ipv4Router
  5952  003AC6  C018  F1C5         	movff	?_ETH_Read32+1,_ipv4Router+1
  5953  003ACA  C019  F1C6         	movff	?_ETH_Read32+2,_ipv4Router+2
  5954  003ACE  C01A  F1C7         	movff	?_ETH_Read32+3,_ipv4Router+3
  5955                           
  5956                           ;dhcp_client.c: 216: break;
  5957  003AD2  D062               	goto	l8382
  5958  003AD4                     l8342:
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;dhcp_client.c: 219: if(optionLength >= 4)
  5962  003AD4  0E03               	movlw	3
  5963  003AD6  65CE               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  5964  003AD8  D05F               	goto	l8382
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;dhcp_client.c: 220: {
  5968                           ;dhcp_client.c: 221: ipv4DNS[0] = ETH_Read32();
  5969  003ADA  EC6B  F02C         	call	_ETH_Read32	;wreg free
  5970  003ADE  C017  F210         	movff	?_ETH_Read32,_ipv4DNS
  5971  003AE2  C018  F211         	movff	?_ETH_Read32+1,_ipv4DNS+1
  5972  003AE6  C019  F212         	movff	?_ETH_Read32+2,_ipv4DNS+2
  5973  003AEA  C01A  F213         	movff	?_ETH_Read32+3,_ipv4DNS+3
  5974                           
  5975                           ; BSR set to: 1
  5976                           ;dhcp_client.c: 222: optionLength -= 4;
  5977  003AEE  0E04               	movlw	4
  5978  003AF0  0100               	movlb	0	; () banked
  5979  003AF2  5FCE               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;dhcp_client.c: 223: if(optionLength >= 4)
  5983  003AF4  0E03               	movlw	3
  5984  003AF6  65CE               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  5985  003AF8  D04F               	goto	l8382
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;dhcp_client.c: 224: {
  5989                           ;dhcp_client.c: 225: ipv4DNS[1] = ETH_Read32();
  5990  003AFA  EC6B  F02C         	call	_ETH_Read32	;wreg free
  5991  003AFE  C017  F214         	movff	?_ETH_Read32,_ipv4DNS+4
  5992  003B02  C018  F215         	movff	?_ETH_Read32+1,_ipv4DNS+5
  5993  003B06  C019  F216         	movff	?_ETH_Read32+2,_ipv4DNS+6
  5994  003B0A  C01A  F217         	movff	?_ETH_Read32+3,_ipv4DNS+7
  5995  003B0E                     l8352:
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;dhcp_client.c: 226: optionLength -= 4;
  5999  003B0E  0E04               	movlw	4
  6000  003B10  0100               	movlb	0	; () banked
  6001  003B12  5FCE               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  6002  003B14  D041               	goto	l8382
  6003  003B16                     l8354:
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;dhcp_client.c: 231: if(optionLength >= 4)
  6007  003B16  0E03               	movlw	3
  6008  003B18  65CE               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  6009  003B1A  D03E               	goto	l8382
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;dhcp_client.c: 232: {
  6013                           ;dhcp_client.c: 233: dhcpLeaseTime = ETH_Read32();
  6014  003B1C  EC6B  F02C         	call	_ETH_Read32	;wreg free
  6015  003B20  C017  F033         	movff	?_ETH_Read32,_dhcpLeaseTime
  6016  003B24  C018  F034         	movff	?_ETH_Read32+1,_dhcpLeaseTime+1
  6017  003B28  C019  F035         	movff	?_ETH_Read32+2,_dhcpLeaseTime+2
  6018  003B2C  C01A  F036         	movff	?_ETH_Read32+3,_dhcpLeaseTime+3
  6019  003B30  D7EE               	goto	l8352
  6020  003B32                     l8360:
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;dhcp_client.c: 238: dhcpServerId = ETH_Read32();
  6024  003B32  EC6B  F02C         	call	_ETH_Read32	;wreg free
  6025  003B36  C017  F21C         	movff	?_ETH_Read32,_dhcpServerId
  6026  003B3A  C018  F21D         	movff	?_ETH_Read32+1,_dhcpServerId+1
  6027  003B3E  C019  F21E         	movff	?_ETH_Read32+2,_dhcpServerId+2
  6028  003B42  C01A  F21F         	movff	?_ETH_Read32+3,_dhcpServerId+3
  6029  003B46  D7E3               	goto	l8352
  6030  003B48                     l801:
  6031                           
  6032                           ; BSR set to: 1
  6033                           ;dhcp_client.c: 245: ipv4Address = myip;
  6034  003B48  D83F               	call	PL613	;call to abstracted procedure
  6035                           
  6036                           ; BSR set to: 1
  6037                           ;dhcp_client.c: 246: clientState = REQUESTING;
  6038  003B4A  0E04               	movlw	4
  6039  003B4C  D004               	goto	L3
  6040  003B4E                     l803:
  6041                           
  6042                           ; BSR set to: 1
  6043                           ;dhcp_client.c: 249: ipv4Address = myip;
  6044  003B4E  D83C               	call	PL613	;call to abstracted procedure
  6045                           
  6046                           ; BSR set to: 1
  6047                           ;dhcp_client.c: 250: clientState = BOUND;
  6048  003B50  0E05               	movlw	5
  6049  003B52  D001               	goto	L3
  6050  003B54                     l8368:
  6051                           
  6052                           ; BSR set to: 1
  6053                           ;dhcp_client.c: 254: clientState = INIT;
  6054  003B54  0E01               	movlw	1
  6055  003B56                     L3:
  6056  003B56  6E48               	movwf	_clientState,c
  6057                           
  6058                           ;dhcp_client.c: 255: break;
  6059  003B58  D008               	goto	l8374
  6060  003B5A                     l8372:
  6061                           
  6062                           ; BSR set to: 0
  6063  003B5A  EC26  F030         	call	_ETH_Read8	;wreg free
  6064                           
  6065                           ; Switch size 1, requested type "space"
  6066                           ; Number of cases is 3, Range of values is 2 to 6
  6067                           ; switch strategies available:
  6068                           ; Name         Instructions Cycles
  6069                           ; simple_byte           10     6 (average)
  6070                           ;	Chosen strategy is simple_byte
  6071  003B5E  0A02               	xorlw	2	; case 2
  6072  003B60  E0F3               	bz	l801
  6073  003B62  0A07               	xorlw	7	; case 5
  6074  003B64  E0F4               	bz	l803
  6075  003B66  0A03               	xorlw	3	; case 6
  6076  003B68  E0F5               	bz	l8368
  6077  003B6A                     l8374:
  6078                           
  6079                           ; BSR set to: 1
  6080                           ;dhcp_client.c: 259: optionLength -=1;
  6081  003B6A  0100               	movlb	0	; () banked
  6082  003B6C  07CE               	decf	DHCP_Handler@optionLength& (0+255),f,b
  6083                           
  6084                           ;dhcp_client.c: 260: break;
  6085  003B6E  D014               	goto	l8382
  6086  003B70                     l8376:
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;dhcp_client.c: 262: ETH_Dump(optionLength);
  6090  003B70  C0CE  F017         	movff	DHCP_Handler@optionLength,ETH_Dump@length
  6091  003B74  6A18               	clrf	ETH_Dump@length+1,c
  6092  003B76  ECCD  F02F         	call	_ETH_Dump	;wreg free
  6093                           
  6094                           ;dhcp_client.c: 263: break;
  6095  003B7A  D00E               	goto	l8382
  6096  003B7C                     l8380:
  6097                           
  6098                           ; BSR set to: 0
  6099  003B7C  51C1               	movf	DHCP_Handler@option& (0+255),w,b
  6100                           
  6101                           ; Switch size 1, requested type "space"
  6102                           ; Number of cases is 6, Range of values is 1 to 54
  6103                           ; switch strategies available:
  6104                           ; Name         Instructions Cycles
  6105                           ; simple_byte           19    10 (average)
  6106                           ;	Chosen strategy is simple_byte
  6107  003B7E  0A01               	xorlw	1	; case 1
  6108  003B80  E093               	bz	l8338
  6109  003B82  0A02               	xorlw	2	; case 3
  6110  003B84  E09C               	bz	l8340
  6111  003B86  0A05               	xorlw	5	; case 6
  6112  003B88  E0A5               	bz	l8342
  6113  003B8A  0A35               	xorlw	53	; case 51
  6114  003B8C  E0C4               	bz	l8354
  6115  003B8E  0A06               	xorlw	6	; case 53
  6116  003B90  E0E4               	bz	l8372
  6117  003B92  0A03               	xorlw	3	; case 54
  6118  003B94  E0CE               	bz	l8360
  6119  003B96  D7EC               	goto	l8376
  6120  003B98                     l8382:
  6121  003B98  0100               	movlb	0	; () banked
  6122  003B9A  BFB0               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  6123  003B9C  D005               	goto	l8384
  6124  003B9E  51B0               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  6125  003BA0  E102               	bnz	u12241
  6126  003BA2  05AF               	decf	DHCP_Handler@length& (0+255),w,b
  6127  003BA4  B0D8               	btfsc	status,0,c
  6128  003BA6                     u12241:
  6129  003BA6  D76C               	goto	l8334
  6130  003BA8                     l8384:
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;dhcp_client.c: 265: }
  6134                           ;dhcp_client.c: 266: if (clientState == REQUESTING)
  6135  003BA8  0E04               	movlw	4
  6136  003BAA  1848               	xorwf	_clientState,w,c
  6137  003BAC  A4D8               	btfss	status,2,c
  6138  003BAE  0012               	return	
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;dhcp_client.c: 267: DHCP_Request( DHCP_REQUEST );
  6142  003BB0  0E03               	movlw	3
  6143  003BB2  EF28  F020         	goto	_DHCP_Request
  6144  003BB6                     l8388:
  6145                           
  6146                           ;dhcp_client.c: 270: else
  6147                           ;dhcp_client.c: 271: ETH_Dump(length - 34);
  6148  003BB6  0EDE               	movlw	222
  6149  003BB8  0100               	movlb	0	; () banked
  6150  003BBA  25AF               	addwf	DHCP_Handler@length& (0+255),w,b
  6151  003BBC  6E17               	movwf	ETH_Dump@length,c
  6152  003BBE  0EFF               	movlw	255
  6153  003BC0  21B0               	addwfc	(DHCP_Handler@length+1)& (0+255),w,b
  6154  003BC2  6E18               	movwf	ETH_Dump@length+1,c
  6155  003BC4  EFCD  F02F         	goto	_ETH_Dump	;wreg free
  6156  003BC8                     __end_of_DHCP_Handler:
  6157                           	opt stack 0
  6158  003BC8                     PL613:
  6159                           	opt stack 12
  6160  003BC8  C0CF  F037         	movff	DHCP_Handler@myip,_ipv4Address
  6161  003BCC  C0D0  F038         	movff	DHCP_Handler@myip+1,_ipv4Address+1
  6162  003BD0  C0D1  F039         	movff	DHCP_Handler@myip+2,_ipv4Address+2
  6163  003BD4  C0D2  F03A         	movff	DHCP_Handler@myip+3,_ipv4Address+3
  6164  003BD8  0012               	return	
  6165  003BDA                     __end_ofPL613:
  6166                           	opt stack 0
  6167  003BDA                     PL749:
  6168                           	opt stack 12
  6169  003BDA  6A18               	clrf	ETH_Dump@length+1,c
  6170  003BDC  0E08               	movlw	8
  6171  003BDE  6E17               	movwf	ETH_Dump@length,c
  6172  003BE0  0C08               	retlw	8
  6173  003BE2                     __end_ofPL749:
  6174                           	opt stack 0
  6175                           tosu	equ	0xFFF
  6176                           tosh	equ	0xFFE
  6177                           tosl	equ	0xFFD
  6178                           pclath	equ	0xFFA
  6179                           tblptru	equ	0xFF8
  6180                           tblptrh	equ	0xFF7
  6181                           tblptrl	equ	0xFF6
  6182                           tablat	equ	0xFF5
  6183                           prodh	equ	0xFF4
  6184                           prodl	equ	0xFF3
  6185                           intcon	equ	0xFF2
  6186                           indf0	equ	0xFEF
  6187                           postinc0	equ	0xFEE
  6188                           fsr0h	equ	0xFEA
  6189                           fsr0l	equ	0xFE9
  6190                           wreg	equ	0xFE8
  6191                           indf1	equ	0xFE7
  6192                           postinc1	equ	0xFE6
  6193                           postdec1	equ	0xFE5
  6194                           plusw1	equ	0xFE3
  6195                           fsr1h	equ	0xFE2
  6196                           fsr1l	equ	0xFE1
  6197                           bsr	equ	0xFE0
  6198                           indf2	equ	0xFDF
  6199                           postinc2	equ	0xFDE
  6200                           postdec2	equ	0xFDD
  6201                           plusw2	equ	0xFDB
  6202                           fsr2h	equ	0xFDA
  6203                           fsr2l	equ	0xFD9
  6204                           status	equ	0xFD8
  6205                           
  6206 ;; *************** function _memcmp *****************
  6207 ;; Defined at:
  6208 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memcmp.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;  s1              1    wreg     PTR const void 
  6211 ;;		 -> DHCP_Handler@ethPktMAC(6), 
  6212 ;;  s2              1   22[COMRAM] PTR const void 
  6213 ;;		 -> DHCP_Handler@ethMAC(6), 
  6214 ;;  n               2   23[COMRAM] unsigned int 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;  s1              1   27[COMRAM] PTR const void 
  6217 ;;		 -> DHCP_Handler@ethPktMAC(6), 
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  2   22[COMRAM] int 
  6220 ;; Registers used:
  6221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : F/1
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6227 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;Total ram usage:        6 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    8
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_DHCP_Handler
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text25
  6242  005B60                     __ptext25:
  6243                           	opt stack 0
  6244  005B60                     _memcmp:
  6245                           	opt stack 17
  6246                           
  6247                           ;incstack = 0
  6248                           ;memcmp@s1 stored from wreg
  6249  005B60  6E1C               	movwf	memcmp@s1,c
  6250  005B62  D01A               	goto	l8256
  6251  005B64                     l8248:
  6252  005B64  5017               	movf	memcmp@s2,w,c
  6253  005B66  6ED9               	movwf	fsr2l,c
  6254  005B68  6ADA               	clrf	fsr2h,c
  6255  005B6A  501C               	movf	memcmp@s1,w,c
  6256  005B6C  6EE1               	movwf	fsr1l,c
  6257  005B6E  6AE2               	clrf	fsr1h,c
  6258  005B70  50DE               	movf	postinc2,w,c
  6259  005B72  18E6               	xorwf	postinc1,w,c
  6260  005B74  E00F               	bz	l8254
  6261  005B76  501C               	movf	memcmp@s1,w,c
  6262  005B78  6ED9               	movwf	fsr2l,c
  6263  005B7A  6ADA               	clrf	fsr2h,c
  6264  005B7C  50DF               	movf	indf2,w,c
  6265  005B7E  6E1A               	movwf	??_memcmp& (0+255),c
  6266  005B80  5017               	movf	memcmp@s2,w,c
  6267  005B82  6ED9               	movwf	fsr2l,c
  6268  005B84  6ADA               	clrf	fsr2h,c
  6269  005B86  50DF               	movf	indf2,w,c
  6270  005B88  5C1A               	subwf	??_memcmp,w,c
  6271  005B8A  6E17               	movwf	?_memcmp,c
  6272  005B8C  6A18               	clrf	?_memcmp+1,c
  6273  005B8E  A0D8               	btfss	status,0,c
  6274  005B90  0618               	decf	?_memcmp+1,f,c
  6275  005B92  0012               	return	
  6276  005B94                     l8254:
  6277  005B94  2A1C               	incf	memcmp@s1,f,c
  6278  005B96  2A17               	incf	memcmp@s2,f,c
  6279  005B98                     l8256:
  6280  005B98  0618               	decf	memcmp@n,f,c
  6281  005B9A  A0D8               	btfss	status,0,c
  6282  005B9C  0619               	decf	memcmp@n+1,f,c
  6283  005B9E  2818               	incf	memcmp@n,w,c
  6284  005BA0  E1E1               	bnz	l8248
  6285  005BA2  2819               	incf	memcmp@n+1,w,c
  6286  005BA4  E1DF               	bnz	l8248
  6287  005BA6  6A17               	clrf	?_memcmp,c
  6288  005BA8  6A18               	clrf	?_memcmp+1,c
  6289  005BAA  0012               	return		;funcret
  6290  005BAC                     __end_of_memcmp:
  6291                           	opt stack 0
  6292                           tosu	equ	0xFFF
  6293                           tosh	equ	0xFFE
  6294                           tosl	equ	0xFFD
  6295                           pclath	equ	0xFFA
  6296                           tblptru	equ	0xFF8
  6297                           tblptrh	equ	0xFF7
  6298                           tblptrl	equ	0xFF6
  6299                           tablat	equ	0xFF5
  6300                           prodh	equ	0xFF4
  6301                           prodl	equ	0xFF3
  6302                           intcon	equ	0xFF2
  6303                           indf0	equ	0xFEF
  6304                           postinc0	equ	0xFEE
  6305                           fsr0h	equ	0xFEA
  6306                           fsr0l	equ	0xFE9
  6307                           wreg	equ	0xFE8
  6308                           indf1	equ	0xFE7
  6309                           postinc1	equ	0xFE6
  6310                           postdec1	equ	0xFE5
  6311                           plusw1	equ	0xFE3
  6312                           fsr1h	equ	0xFE2
  6313                           fsr1l	equ	0xFE1
  6314                           bsr	equ	0xFE0
  6315                           indf2	equ	0xFDF
  6316                           postinc2	equ	0xFDE
  6317                           postdec2	equ	0xFDD
  6318                           plusw2	equ	0xFDB
  6319                           fsr2h	equ	0xFDA
  6320                           fsr2l	equ	0xFD9
  6321                           status	equ	0xFD8
  6322                           
  6323 ;; *************** function _ETH_Read32 *****************
  6324 ;; Defined at:
  6325 ;;		line 420 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;		None
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  ret             4   26[COMRAM] unsigned long 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  4   22[COMRAM] unsigned long 
  6332 ;; Registers used:
  6333 ;;		wreg, status,2, status,0, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : E/1
  6336 ;;		On exit  : F/1
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;Total ram usage:        8 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    9
  6346 ;; This function calls:
  6347 ;;		_ETH_EdataRead
  6348 ;; This function is called by:
  6349 ;;		_DHCP_Handler
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text26
  6354  0058D6                     __ptext26:
  6355                           	opt stack 0
  6356  0058D6                     _ETH_Read32:
  6357                           	opt stack 16
  6358                           
  6359                           ;j60_driver.c: 422: uint32_t ret = 0;
  6360                           
  6361                           ;incstack = 0
  6362  0058D6  6A1B               	clrf	ETH_Read32@ret,c
  6363  0058D8  6A1C               	clrf	ETH_Read32@ret+1,c
  6364  0058DA  6A1D               	clrf	ETH_Read32@ret+2,c
  6365  0058DC  6A1E               	clrf	ETH_Read32@ret+3,c
  6366                           
  6367                           ;j60_driver.c: 423: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  6368  0058DE  0101               	movlb	1	; () banked
  6369  0058E0  51CD               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  6370  0058E2  E103               	bnz	u11720
  6371  0058E4  0E04               	movlw	4
  6372  0058E6  5DCC               	subwf	_rxPacketStatusVector& (0+255),w,b
  6373  0058E8  E318               	bnc	l535
  6374  0058EA                     u11720:
  6375  0058EA                     i1L__ptext96:
  6376                           	opt stack 0
  6377  0058EA                     i1L_ETH_EdataRead:
  6378                           	opt stack 0
  6379  0058EA                     i1Ll7486:
  6380                           	opt stack 15
  6381  0058EA  CF61 FE7E          	movff	3937,_errataTemp	;# 
  6382  0058EE                     i1Ll7488:
  6383                           	opt stack 15
  6384                           
  6385                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  6386  0058EE  010E               	movlb	14	; () banked
  6387  0058F0  517E               	movf	126,w,b
  6388  0058F2                     i1Ll460:
  6389                           	opt stack 16
  6390  0058F2  6E1E               	movwf	ETH_Read32@ret+3,c
  6391  0058F4                     i2L__ptext96:
  6392                           	opt stack 0
  6393  0058F4                     i2L_ETH_EdataRead:
  6394                           	opt stack 0
  6395  0058F4                     i2Ll7486:
  6396                           	opt stack 15
  6397  0058F4  CF61 FE7E          	movff	3937,_errataTemp	;# 
  6398  0058F8                     i2Ll7488:
  6399                           	opt stack 15
  6400                           
  6401                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  6402  0058F8  010E               	movlb	14	; () banked
  6403  0058FA  517E               	movf	126,w,b
  6404  0058FC                     i2Ll460:
  6405                           	opt stack 16
  6406  0058FC  6E1D               	movwf	ETH_Read32@ret+2,c
  6407  0058FE                     i3L__ptext96:
  6408                           	opt stack 0
  6409  0058FE                     i3L_ETH_EdataRead:
  6410                           	opt stack 0
  6411  0058FE                     i3Ll7486:
  6412                           	opt stack 15
  6413  0058FE  CF61 FE7E          	movff	3937,_errataTemp	;# 
  6414  005902                     i3Ll7488:
  6415                           	opt stack 15
  6416                           
  6417                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  6418  005902  010E               	movlb	14	; () banked
  6419  005904  517E               	movf	126,w,b
  6420  005906                     i3Ll460:
  6421                           	opt stack 16
  6422  005906  6E1C               	movwf	ETH_Read32@ret+1,c
  6423  005908                     i4L__ptext96:
  6424                           	opt stack 0
  6425  005908                     i4L_ETH_EdataRead:
  6426                           	opt stack 0
  6427  005908                     i4Ll7486:
  6428                           	opt stack 15
  6429  005908  CF61 FE7E          	movff	3937,_errataTemp	;# 
  6430  00590C                     i4Ll7488:
  6431                           	opt stack 15
  6432                           
  6433                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  6434  00590C  010E               	movlb	14	; () banked
  6435  00590E  517E               	movf	126,w,b
  6436  005910                     i4Ll460:
  6437                           	opt stack 16
  6438  005910  6E1B               	movwf	ETH_Read32@ret,c
  6439                           
  6440                           ; BSR set to: 14
  6441                           ;j60_driver.c: 429: rxPacketStatusVector.byteCount -= sizeof(ret);
  6442  005912  0E04               	movlw	4
  6443                           
  6444                           ; BSR set to: 1
  6445                           ;j60_driver.c: 430: ethData.error = 0;
  6446  005914  ECD0  F02E         	call	PL669	;call to abstracted procedure
  6447                           
  6448                           ;j60_driver.c: 431: }
  6449  005918  D001               	goto	l536
  6450  00591A                     l535:
  6451                           
  6452                           ; BSR set to: 1
  6453                           ;j60_driver.c: 432: else
  6454                           ;j60_driver.c: 433: {
  6455                           ;j60_driver.c: 434: ethData.error = 1;
  6456  00591A  81BD               	bsf	_ethData& (0+255),0,b	;volatile
  6457  00591C                     l536:
  6458                           
  6459                           ; BSR set to: 1
  6460                           ;j60_driver.c: 435: }
  6461                           ;j60_driver.c: 436: return ret;
  6462  00591C  C01B  F017         	movff	ETH_Read32@ret,?_ETH_Read32
  6463  005920  C01C  F018         	movff	ETH_Read32@ret+1,?_ETH_Read32+1
  6464  005924  C01D  F019         	movff	ETH_Read32@ret+2,?_ETH_Read32+2
  6465  005928  C01E  F01A         	movff	ETH_Read32@ret+3,?_ETH_Read32+3
  6466                           
  6467                           ; BSR set to: 1
  6468  00592C  0012               	return		;funcret
  6469  00592E                     __end_of_ETH_Read32:
  6470                           	opt stack 0
  6471                           tosu	equ	0xFFF
  6472                           tosh	equ	0xFFE
  6473                           tosl	equ	0xFFD
  6474                           pclath	equ	0xFFA
  6475                           tblptru	equ	0xFF8
  6476                           tblptrh	equ	0xFF7
  6477                           tblptrl	equ	0xFF6
  6478                           tablat	equ	0xFF5
  6479                           prodh	equ	0xFF4
  6480                           prodl	equ	0xFF3
  6481                           intcon	equ	0xFF2
  6482                           indf0	equ	0xFEF
  6483                           postinc0	equ	0xFEE
  6484                           fsr0h	equ	0xFEA
  6485                           fsr0l	equ	0xFE9
  6486                           wreg	equ	0xFE8
  6487                           indf1	equ	0xFE7
  6488                           postinc1	equ	0xFE6
  6489                           postdec1	equ	0xFE5
  6490                           plusw1	equ	0xFE3
  6491                           fsr1h	equ	0xFE2
  6492                           fsr1l	equ	0xFE1
  6493                           bsr	equ	0xFE0
  6494                           indf2	equ	0xFDF
  6495                           postinc2	equ	0xFDE
  6496                           postdec2	equ	0xFDD
  6497                           plusw2	equ	0xFDB
  6498                           fsr2h	equ	0xFDA
  6499                           fsr2l	equ	0xFD9
  6500                           status	equ	0xFD8
  6501                           
  6502 ;; *************** function _TCP_Recv *****************
  6503 ;; Defined at:
  6504 ;;		line 483 in file "../../TCPIP Library/source/tcpv4.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  remoteAddres    4   17[BANK1 ] unsigned long 
  6507 ;;  length          2   21[BANK1 ] unsigned int 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  tcbPtr          2   52[BANK1 ] PTR struct .
  6510 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
  6511 ;;		 -> STR_5(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), STR_1(15), 
  6512 ;;		 -> NULL(0), 
  6513 ;;  count           1   51[BANK1 ] char 
  6514 ;; Return value:  Size  Location     Type
  6515 ;;		None               void
  6516 ;; Registers used:
  6517 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6518 ;; Tracked objects:
  6519 ;;		On entry : F/1
  6520 ;;		On exit  : F/1
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6523 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6526 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6527 ;;Total ram usage:       37 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; Hardware stack levels required when called:   15
  6530 ;; This function calls:
  6531 ;;		_ETH_ReadBlock
  6532 ;;		_TCP_FiniteStateMachine
  6533 ;;		_TCP_ParseTCPOptions
  6534 ;; This function is called by:
  6535 ;;		_IPV4_Packet
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text27
  6540  002C82                     __ptext27:
  6541                           	opt stack 0
  6542  002C82                     _TCP_Recv:
  6543                           	opt stack 12
  6544                           
  6545                           ; BSR set to: 1
  6546                           ;tcpv4.c: 485: tcpTCB_t *tcbPtr;
  6547                           ;tcpv4.c: 486: socklistsize_t count = 0;
  6548                           
  6549                           ; BSR set to: 1
  6550                           ;incstack = 0
  6551  002C82  6B33               	clrf	TCP_Recv@count& (0+255),b
  6552                           
  6553                           ;tcpv4.c: 490: receivedRemoteAddress = 0;
  6554  002C84  6A3B               	clrf	_receivedRemoteAddress,c
  6555  002C86  6A3C               	clrf	_receivedRemoteAddress+1,c
  6556  002C88  6A3D               	clrf	_receivedRemoteAddress+2,c
  6557  002C8A  6A3E               	clrf	_receivedRemoteAddress+3,c
  6558                           
  6559                           ;tcpv4.c: 491: rcvPayloadLen = 0;
  6560  002C8C  6BD2               	clrf	_rcvPayloadLen& (0+255),b
  6561  002C8E  6BD3               	clrf	(_rcvPayloadLen+1)& (0+255),b
  6562                           
  6563                           ; BSR set to: 1
  6564                           ;tcpv4.c: 493: ETH_ReadBlock((char *)&tcpHeader,sizeof(tcpHeader_t));
  6565  002C90  0ED4               	movlw	low _tcpHeader
  6566  002C92  6E17               	movwf	ETH_ReadBlock@buffer,c
  6567  002C94  0E01               	movlw	high _tcpHeader
  6568  002C96  D9D9               	call	PL689	;call to abstracted procedure
  6569  002C98  EC0C  F02C         	call	_ETH_ReadBlock	;wreg free
  6570                           
  6571                           ; BSR set to: 1
  6572                           ;tcpv4.c: 495: currentTCB = (0);
  6573  002C9C  6A3F               	clrf	_currentTCB,c
  6574  002C9E  6A40               	clrf	_currentTCB+1,c
  6575                           
  6576                           ; BSR set to: 1
  6577                           ;tcpv4.c: 498: if ((tcpHeader.destPort != 0) && (tcpHeader.sourcePort != 0))
  6578  002CA0  51D6               	movf	(_tcpHeader+2)& (0+255),w,b
  6579  002CA2  11D7               	iorwf	(_tcpHeader+3)& (0+255),w,b
  6580  002CA4  B4D8               	btfsc	status,2,c
  6581  002CA6  0012               	return	
  6582                           
  6583                           ; BSR set to: 1
  6584  002CA8  51D4               	movf	_tcpHeader& (0+255),w,b
  6585  002CAA  11D5               	iorwf	(_tcpHeader+1)& (0+255),w,b
  6586  002CAC  B4D8               	btfsc	status,2,c
  6587  002CAE  0012               	return	
  6588                           
  6589                           ; BSR set to: 1
  6590                           ;tcpv4.c: 499: {
  6591                           ;tcpv4.c: 500: tcpHeader.sourcePort = ((((uint16_t)tcpHeader.sourcePort & (uint16_t)0xFF
      +                          00) >> 8) | (((uint16_t)tcpHeader.sourcePort & (uint16_t)0x00FF) << 8));
  6592  002CB0  51D4               	movf	_tcpHeader& (0+255),w,b
  6593  002CB2  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  6594  002CB4  6B17               	clrf	??_TCP_Recv& (0+255),b
  6595  002CB6  51D5               	movf	(_tcpHeader+1)& (0+255),w,b
  6596  002CB8  6F19               	movwf	(??_TCP_Recv+2)& (0+255),b
  6597  002CBA  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  6598  002CBC  5117               	movf	??_TCP_Recv& (0+255),w,b
  6599  002CBE  1119               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  6600  002CC0  6FD4               	movwf	_tcpHeader& (0+255),b
  6601  002CC2  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6602  002CC4  111A               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  6603  002CC6  6FD5               	movwf	(_tcpHeader+1)& (0+255),b
  6604                           
  6605                           ; BSR set to: 1
  6606                           ;tcpv4.c: 501: tcpHeader.destPort = ((((uint16_t)tcpHeader.destPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcpHeader.destPort & (uint16_t)0x00FF) << 8));
  6607  002CC8  51D6               	movf	(_tcpHeader+2)& (0+255),w,b
  6608  002CCA  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  6609  002CCC  6B17               	clrf	??_TCP_Recv& (0+255),b
  6610  002CCE  EE21  F0D6         	lfsr	2,_tcpHeader+2
  6611  002CD2  CFDE F119          	movff	postinc2,??_TCP_Recv+2
  6612  002CD6  CFDD F11A          	movff	postdec2,??_TCP_Recv+3
  6613  002CDA  C11A  F119         	movff	??_TCP_Recv+3,??_TCP_Recv+2
  6614  002CDE  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  6615  002CE0  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  6616  002CE2  5117               	movf	??_TCP_Recv& (0+255),w,b
  6617  002CE4  1119               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  6618  002CE6  6FD6               	movwf	(_tcpHeader+2)& (0+255),b
  6619  002CE8  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6620  002CEA  111A               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  6621  002CEC  6FD7               	movwf	(_tcpHeader+3)& (0+255),b
  6622                           
  6623                           ; BSR set to: 1
  6624                           ;tcpv4.c: 504: tcbPtr = tcbList;
  6625  002CEE  C043  F134         	movff	_tcbList,TCP_Recv@tcbPtr
  6626  002CF2  C044  F135         	movff	_tcbList+1,TCP_Recv@tcbPtr+1
  6627                           
  6628                           ;tcpv4.c: 505: while((tcbPtr != (0)) && (count < tcbListSize))
  6629  002CF6  D040               	goto	l8952
  6630  002CF8                     l8942:
  6631                           
  6632                           ; BSR set to: 1
  6633                           ;tcpv4.c: 506: {
  6634                           ;tcpv4.c: 507: if (tcpHeader.destPort == tcbPtr->localPort)
  6635  002CF8  C134  FFF6         	movff	TCP_Recv@tcbPtr,tblptrl
  6636  002CFC  C135  FFF7         	movff	TCP_Recv@tcbPtr+1,tblptrh
  6637  002D00  0E00               	movlw	low (__smallconst shr (0+16))
  6638  002D02  6EF8               	movwf	tblptru,c
  6639  002D04  0E0F               	movlw	(high __ramtop+-1)
  6640  002D06  64F7               	cpfsgt	tblptrh,c
  6641  002D08  D007               	bra	u14267
  6642  002D0A  0009               	tblrd		*+
  6643  002D0C  CFF5 F117          	movff	tablat,??_TCP_Recv
  6644  002D10  0009               	tblrd		*+
  6645  002D12  CFF5 F118          	movff	tablat,??_TCP_Recv+1
  6646  002D16  D006               	bra	u14260
  6647  002D18                     u14267:
  6648  002D18  EC66  F011         	call	PL389	;call to abstracted procedure
  6649  002D1C  CFEE F117          	movff	postinc0,??_TCP_Recv
  6650  002D20  CFEE F118          	movff	postinc0,??_TCP_Recv+1
  6651  002D24                     u14260:
  6652  002D24  0101               	movlb	1	; () banked
  6653  002D26  5117               	movf	??_TCP_Recv& (0+255),w,b
  6654  002D28  19D6               	xorwf	(_tcpHeader+2)& (0+255),w,b
  6655  002D2A  E108               	bnz	l8948
  6656  002D2C  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6657  002D2E  19D7               	xorwf	(_tcpHeader+3)& (0+255),w,b
  6658  002D30  E105               	bnz	l8948
  6659                           
  6660                           ; BSR set to: 1
  6661                           ;tcpv4.c: 508: {
  6662                           ;tcpv4.c: 509: currentTCB = tcbPtr;
  6663  002D32  C134  F03F         	movff	TCP_Recv@tcbPtr,_currentTCB
  6664  002D36  C135  F040         	movff	TCP_Recv@tcbPtr+1,_currentTCB+1
  6665                           
  6666                           ;tcpv4.c: 510: break;
  6667  002D3A  D028               	goto	l8956
  6668  002D3C                     l8948:
  6669                           
  6670                           ; BSR set to: 1
  6671                           ;tcpv4.c: 512: else
  6672                           ;tcpv4.c: 513: {
  6673                           ;tcpv4.c: 514: tcbPtr = tcbPtr->nextTCB;
  6674  002D3C  0E2C               	movlw	44
  6675  002D3E  2534               	addwf	TCP_Recv@tcbPtr& (0+255),w,b
  6676  002D40  6F17               	movwf	??_TCP_Recv& (0+255),b
  6677  002D42  0E00               	movlw	0
  6678  002D44  2135               	addwfc	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  6679  002D46  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  6680  002D48  C117  FFF6         	movff	??_TCP_Recv,tblptrl
  6681  002D4C  C118  FFF7         	movff	??_TCP_Recv+1,tblptrh
  6682  002D50  0E00               	movlw	low (__smallconst shr (0+16))
  6683  002D52  6EF8               	movwf	tblptru,c
  6684  002D54  0E0F               	movlw	(high __ramtop+-1)
  6685  002D56  64F7               	cpfsgt	tblptrh,c
  6686  002D58  D007               	bra	u14287
  6687  002D5A  0009               	tblrd		*+
  6688  002D5C  CFF5 F134          	movff	tablat,TCP_Recv@tcbPtr
  6689  002D60  0009               	tblrd		*+
  6690  002D62  CFF5 F135          	movff	tablat,TCP_Recv@tcbPtr+1
  6691  002D66  D006               	bra	u14280
  6692  002D68                     u14287:
  6693  002D68  EC66  F011         	call	PL389	;call to abstracted procedure
  6694  002D6C  CFEE F134          	movff	postinc0,TCP_Recv@tcbPtr
  6695  002D70  CFEE F135          	movff	postinc0,TCP_Recv@tcbPtr+1
  6696  002D74                     u14280:
  6697                           
  6698                           ;tcpv4.c: 515: count ++;
  6699  002D74  0101               	movlb	1	; () banked
  6700  002D76  2B33               	incf	TCP_Recv@count& (0+255),f,b
  6701  002D78                     l8952:
  6702                           
  6703                           ; BSR set to: 1
  6704  002D78  5134               	movf	TCP_Recv@tcbPtr& (0+255),w,b
  6705  002D7A  1135               	iorwf	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  6706  002D7C  E007               	bz	l8956
  6707                           
  6708                           ; BSR set to: 1
  6709  002D7E  5133               	movf	TCP_Recv@count& (0+255),w,b
  6710  002D80  0A80               	xorlw	128
  6711  002D82  6F17               	movwf	??_TCP_Recv& (0+255),b
  6712  002D84  5047               	movf	_tcbListSize,w,c
  6713  002D86  0A80               	xorlw	128
  6714  002D88  5D17               	subwf	??_TCP_Recv& (0+255),w,b
  6715  002D8A  E3B6               	bnc	l8942
  6716  002D8C                     l8956:
  6717                           
  6718                           ; BSR set to: 1
  6719                           ;tcpv4.c: 516: }
  6720                           ;tcpv4.c: 517: }
  6721                           ;tcpv4.c: 519: if (currentTCB != (0))
  6722  002D8C  503F               	movf	_currentTCB,w,c
  6723  002D8E  1040               	iorwf	_currentTCB+1,w,c
  6724  002D90  B4D8               	btfsc	status,2,c
  6725  002D92  0012               	return	
  6726                           
  6727                           ; BSR set to: 1
  6728                           ;tcpv4.c: 520: {
  6729                           ;tcpv4.c: 521: if((tcpHeader.sourcePort == currentTCB->destPort) ||
  6730                           ;tcpv4.c: 522: (currentTCB->destIP == 0))
  6731  002D94  0E06               	movlw	6
  6732  002D96  D8E6               	call	PL409	;call to abstracted procedure
  6733  002D98  64F7               	cpfsgt	tblptrh,c
  6734  002D9A  D002               	bra	u14327
  6735  002D9C  D94A               	call	PL645	;call to abstracted procedure
  6736  002D9E  D003               	bra	u14320
  6737  002DA0                     u14327:
  6738  002DA0  EC66  F011         	call	PL389	;call to abstracted procedure
  6739  002DA4  D94D               	call	PL687	;call to abstracted procedure
  6740  002DA6                     u14320:
  6741  002DA6  0101               	movlb	1	; () banked
  6742  002DA8  51D4               	movf	_tcpHeader& (0+255),w,b
  6743  002DAA  1919               	xorwf	(??_TCP_Recv+2)& (0+255),w,b
  6744  002DAC  E103               	bnz	u14330
  6745  002DAE  51D5               	movf	(_tcpHeader+1)& (0+255),w,b
  6746  002DB0  191A               	xorwf	(??_TCP_Recv+3)& (0+255),w,b
  6747  002DB2  E01A               	bz	l1169
  6748  002DB4                     u14330:
  6749                           
  6750                           ; BSR set to: 1
  6751  002DB4  0E02               	movlw	2
  6752  002DB6  D8D6               	call	PL409	;call to abstracted procedure
  6753  002DB8  64F7               	cpfsgt	tblptrh,c
  6754  002DBA  D008               	bra	u14347
  6755  002DBC  D93A               	call	PL645	;call to abstracted procedure
  6756  002DBE  0009               	tblrd		*+
  6757  002DC0  CFF5 F11B          	movff	tablat,??_TCP_Recv+4
  6758  002DC4  0009               	tblrd		*+
  6759  002DC6  CFF5 F11C          	movff	tablat,??_TCP_Recv+5
  6760  002DCA  D007               	bra	u14340
  6761  002DCC                     u14347:
  6762  002DCC  EC66  F011         	call	PL389	;call to abstracted procedure
  6763  002DD0  D937               	call	PL687	;call to abstracted procedure
  6764  002DD2  CFEE F11B          	movff	postinc0,??_TCP_Recv+4
  6765  002DD6  CFEE F11C          	movff	postinc0,??_TCP_Recv+5
  6766  002DDA                     u14340:
  6767  002DDA  0101               	movlb	1	; () banked
  6768  002DDC  5119               	movf	(??_TCP_Recv+2)& (0+255),w,b
  6769  002DDE  111A               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  6770  002DE0  111B               	iorwf	(??_TCP_Recv+4)& (0+255),w,b
  6771  002DE2  111C               	iorwf	(??_TCP_Recv+5)& (0+255),w,b
  6772  002DE4  A4D8               	btfss	status,2,c
  6773  002DE6  0012               	return	
  6774  002DE8                     l1169:
  6775                           
  6776                           ; BSR set to: 1
  6777                           ;tcpv4.c: 523: {
  6778                           ;tcpv4.c: 526: receivedRemoteAddress = remoteAddress;
  6779  002DE8  C111  F03B         	movff	TCP_Recv@remoteAddress,_receivedRemoteAddress
  6780  002DEC  C112  F03C         	movff	TCP_Recv@remoteAddress+1,_receivedRemoteAddress+1
  6781  002DF0  C113  F03D         	movff	TCP_Recv@remoteAddress+2,_receivedRemoteAddress+2
  6782  002DF4  C114  F03E         	movff	TCP_Recv@remoteAddress+3,_receivedRemoteAddress+3
  6783                           
  6784                           ; BSR set to: 1
  6785                           ;tcpv4.c: 527: rcvPayloadLen = length - (uint16_t)(tcpHeader.dataOffset << 2);
  6786  002DF8  39E0               	swapf	(_tcpHeader+12)& (0+255),w,b
  6787  002DFA  0B0F               	andlw	15
  6788  002DFC  6F17               	movwf	??_TCP_Recv& (0+255),b
  6789  002DFE  6B18               	clrf	(??_TCP_Recv+1)& (0+255),b
  6790  002E00  90D8               	bcf	status,0,c
  6791  002E02  3717               	rlcf	??_TCP_Recv& (0+255),f,b
  6792  002E04  3718               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  6793  002E06  90D8               	bcf	status,0,c
  6794  002E08  3717               	rlcf	??_TCP_Recv& (0+255),f,b
  6795  002E0A  3718               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  6796  002E0C  5117               	movf	??_TCP_Recv& (0+255),w,b
  6797  002E0E  5D15               	subwf	TCP_Recv@length& (0+255),w,b
  6798  002E10  6FD2               	movwf	_rcvPayloadLen& (0+255),b
  6799  002E12  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6800  002E14  5916               	subwfb	(TCP_Recv@length+1)& (0+255),w,b
  6801  002E16  6FD3               	movwf	(_rcvPayloadLen+1)& (0+255),b
  6802                           
  6803                           ; BSR set to: 1
  6804                           ;tcpv4.c: 530: if (TCP_ParseTCPOptions() == 1)
  6805  002E18  ECF9  F024         	call	_TCP_ParseTCPOptions	;wreg free
  6806  002E1C  06E8               	decf	wreg,f,c
  6807  002E1E  A4D8               	btfss	status,2,c
  6808  002E20  0012               	return	
  6809                           
  6810                           ; BSR set to: 1
  6811                           ;tcpv4.c: 531: {
  6812                           ;tcpv4.c: 534: if(tcpHeader.syn)
  6813  002E22  A3E1               	btfss	(_tcpHeader+13)& (0+255),1,b
  6814  002E24  D01C               	goto	l1171
  6815                           
  6816                           ; BSR set to: 1
  6817                           ;tcpv4.c: 535: {
  6818                           ;tcpv4.c: 536: if(tcpHeader.ack)
  6819  002E26  A9E1               	btfss	(_tcpHeader+13)& (0+255),4,b
  6820  002E28  D00D               	goto	l8972
  6821                           
  6822                           ; BSR set to: 1
  6823                           ;tcpv4.c: 537: {
  6824                           ;tcpv4.c: 538: ;
  6825                           ;tcpv4.c: 539: currentTCB->connectionEvent = RCV_SYNACK;
  6826  002E2A  0E2B               	movlw	43
  6827  002E2C  D89B               	call	PL409	;call to abstracted procedure
  6828  002E2E  64F7               	cpfsgt	tblptrh,c
  6829  002E30  D004               	bra	u14397
  6830  002E32  0E05               	movlw	5
  6831  002E34  6EF5               	movwf	tablat,c
  6832  002E36  000C               	tblwt		*
  6833  002E38  D004               	bra	u14390
  6834  002E3A                     u14397:
  6835  002E3A  EC66  F011         	call	PL389	;call to abstracted procedure
  6836  002E3E  0E05               	movlw	5
  6837  002E40  D048               	goto	L8
  6838  002E42                     u14390:
  6839                           
  6840                           ;tcpv4.c: 540: } else
  6841  002E42  D057               	goto	l8988
  6842  002E44                     l8972:
  6843                           
  6844                           ; BSR set to: 1
  6845                           ;tcpv4.c: 541: {
  6846                           ;tcpv4.c: 542: ;
  6847                           ;tcpv4.c: 543: currentTCB->connectionEvent = RCV_SYN;
  6848  002E44  0E2B               	movlw	43
  6849  002E46  D88E               	call	PL409	;call to abstracted procedure
  6850  002E48  64F7               	cpfsgt	tblptrh,c
  6851  002E4A  D004               	bra	u14407
  6852  002E4C  0E03               	movlw	3
  6853  002E4E  6EF5               	movwf	tablat,c
  6854  002E50  000C               	tblwt		*
  6855  002E52  D004               	bra	u14400
  6856  002E54                     u14407:
  6857  002E54  EC66  F011         	call	PL389	;call to abstracted procedure
  6858  002E58  0E03               	movlw	3
  6859  002E5A  D03B               	goto	L8
  6860  002E5C                     u14400:
  6861  002E5C  D04A               	goto	l8988
  6862  002E5E                     l1171:
  6863                           
  6864                           ; BSR set to: 1
  6865  002E5E  A1E1               	btfss	(_tcpHeader+13)& (0+255),0,b
  6866  002E60  D01C               	goto	l1175
  6867                           
  6868                           ; BSR set to: 1
  6869                           ;tcpv4.c: 546: {
  6870                           ;tcpv4.c: 547: if(tcpHeader.ack)
  6871  002E62  A9E1               	btfss	(_tcpHeader+13)& (0+255),4,b
  6872  002E64  D00D               	goto	l8978
  6873                           
  6874                           ; BSR set to: 1
  6875                           ;tcpv4.c: 548: {
  6876                           ;tcpv4.c: 549: ;
  6877                           ;tcpv4.c: 550: currentTCB->connectionEvent = RCV_FINACK;
  6878  002E66  0E2B               	movlw	43
  6879  002E68  D87D               	call	PL409	;call to abstracted procedure
  6880  002E6A  64F7               	cpfsgt	tblptrh,c
  6881  002E6C  D004               	bra	u14437
  6882  002E6E  0E07               	movlw	7
  6883  002E70  6EF5               	movwf	tablat,c
  6884  002E72  000C               	tblwt		*
  6885  002E74  D004               	bra	u14430
  6886  002E76                     u14437:
  6887  002E76  EC66  F011         	call	PL389	;call to abstracted procedure
  6888  002E7A  0E07               	movlw	7
  6889  002E7C  D02A               	goto	L8
  6890  002E7E                     u14430:
  6891                           
  6892                           ;tcpv4.c: 551: } else
  6893  002E7E  D039               	goto	l8988
  6894  002E80                     l8978:
  6895                           
  6896                           ; BSR set to: 1
  6897                           ;tcpv4.c: 552: {
  6898                           ;tcpv4.c: 553: ;
  6899                           ;tcpv4.c: 554: currentTCB->connectionEvent = RCV_FIN;
  6900  002E80  0E2B               	movlw	43
  6901  002E82  D870               	call	PL409	;call to abstracted procedure
  6902  002E84  64F7               	cpfsgt	tblptrh,c
  6903  002E86  D004               	bra	u14447
  6904  002E88  0E06               	movlw	6
  6905  002E8A  6EF5               	movwf	tablat,c
  6906  002E8C  000C               	tblwt		*
  6907  002E8E  D004               	bra	u14440
  6908  002E90                     u14447:
  6909  002E90  EC66  F011         	call	PL389	;call to abstracted procedure
  6910  002E94  0E06               	movlw	6
  6911  002E96  D01D               	goto	L8
  6912  002E98                     u14440:
  6913  002E98  D02C               	goto	l8988
  6914  002E9A                     l1175:
  6915                           
  6916                           ; BSR set to: 1
  6917  002E9A  A5E1               	btfss	(_tcpHeader+13)& (0+255),2,b
  6918  002E9C  D01C               	goto	l1179
  6919                           
  6920                           ; BSR set to: 1
  6921                           ;tcpv4.c: 557: {
  6922                           ;tcpv4.c: 558: if(tcpHeader.ack)
  6923  002E9E  A9E1               	btfss	(_tcpHeader+13)& (0+255),4,b
  6924  002EA0  D00D               	goto	l8984
  6925                           
  6926                           ; BSR set to: 1
  6927                           ;tcpv4.c: 559: {
  6928                           ;tcpv4.c: 560: ;
  6929                           ;tcpv4.c: 561: currentTCB->connectionEvent = RCV_RSTACK;
  6930  002EA2  0E2B               	movlw	43
  6931  002EA4  D85F               	call	PL409	;call to abstracted procedure
  6932  002EA6  64F7               	cpfsgt	tblptrh,c
  6933  002EA8  D004               	bra	u14477
  6934  002EAA  0E0A               	movlw	10
  6935  002EAC  6EF5               	movwf	tablat,c
  6936  002EAE  000C               	tblwt		*
  6937  002EB0  D004               	bra	u14470
  6938  002EB2                     u14477:
  6939  002EB2  EC66  F011         	call	PL389	;call to abstracted procedure
  6940  002EB6  0E0A               	movlw	10
  6941  002EB8  D00C               	goto	L8
  6942  002EBA                     u14470:
  6943                           
  6944                           ;tcpv4.c: 562: } else
  6945  002EBA  D01B               	goto	l8988
  6946  002EBC                     l8984:
  6947                           
  6948                           ; BSR set to: 1
  6949                           ;tcpv4.c: 563: {
  6950                           ;tcpv4.c: 564: ;
  6951                           ;tcpv4.c: 565: currentTCB->connectionEvent = RCV_RST;
  6952  002EBC  0E2B               	movlw	43
  6953  002EBE  D852               	call	PL409	;call to abstracted procedure
  6954  002EC0  64F7               	cpfsgt	tblptrh,c
  6955  002EC2  D004               	bra	u14487
  6956  002EC4  0E09               	movlw	9
  6957  002EC6  6EF5               	movwf	tablat,c
  6958  002EC8  000C               	tblwt		*
  6959  002ECA  D004               	bra	u14480
  6960  002ECC                     u14487:
  6961  002ECC  EC66  F011         	call	PL389	;call to abstracted procedure
  6962  002ED0  0E09               	movlw	9
  6963  002ED2                     L8:
  6964  002ED2  6EEF               	movwf	indf0,c
  6965  002ED4                     u14480:
  6966  002ED4  D00E               	goto	l8988
  6967  002ED6                     l1179:
  6968                           
  6969                           ; BSR set to: 1
  6970  002ED6  A9E1               	btfss	(_tcpHeader+13)& (0+255),4,b
  6971  002ED8  D00C               	goto	l8988
  6972                           
  6973                           ; BSR set to: 1
  6974                           ;tcpv4.c: 568: {
  6975                           ;tcpv4.c: 569: ;
  6976                           ;tcpv4.c: 570: currentTCB->connectionEvent = RCV_ACK;
  6977  002EDA  0E2B               	movlw	43
  6978  002EDC  D843               	call	PL409	;call to abstracted procedure
  6979  002EDE  64F7               	cpfsgt	tblptrh,c
  6980  002EE0  D004               	bra	u14507
  6981  002EE2  0E04               	movlw	4
  6982  002EE4  6EF5               	movwf	tablat,c
  6983  002EE6  000C               	tblwt		*
  6984  002EE8  D004               	bra	u14500
  6985  002EEA                     u14507:
  6986  002EEA  EC66  F011         	call	PL389	;call to abstracted procedure
  6987  002EEE  0E04               	movlw	4
  6988  002EF0  6EEF               	movwf	indf0,c
  6989  002EF2                     u14500:
  6990  002EF2                     l8988:
  6991                           
  6992                           ;tcpv4.c: 575: }
  6993                           ;tcpv4.c: 577: tcpHeader.ackNumber = ((((uint32_t)tcpHeader.ackNumber&(uint32_t)0xff0000
      +                          00) >> 24) | (((uint32_t)tcpHeader.ackNumber&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)t
      +                          cpHeader.ackNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHeader.ackNumber&(uint32
      +                          _
  6994  002EF2  0101               	movlb	1	; () banked
  6995  002EF4  51DC               	movf	(_tcpHeader+8)& (0+255),w,b
  6996  002EF6  D893               	call	PL595	;call to abstracted procedure
  6997  002EF8  EE21  F0DC         	lfsr	2,_tcpHeader+8
  6998  002EFC  D86F               	call	PL489	;call to abstracted procedure
  6999  002EFE  C1DC  F11F         	movff	_tcpHeader+8,??_TCP_Recv+8
  7000  002F02  C1DD  F120         	movff	_tcpHeader+9,??_TCP_Recv+9
  7001  002F06  C1DE  F121         	movff	_tcpHeader+10,??_TCP_Recv+10
  7002  002F0A  C1DF  F122         	movff	_tcpHeader+11,??_TCP_Recv+11
  7003  002F0E  D87A               	call	PL525	;call to abstracted procedure
  7004  002F10  EE21  F0DC         	lfsr	2,_tcpHeader+8
  7005  002F14  D834               	call	PL435	;call to abstracted procedure
  7006  002F16  6FDC               	movwf	(_tcpHeader+8)& (0+255),b
  7007  002F18  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  7008  002F1A  1130               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  7009  002F1C  6FDD               	movwf	(_tcpHeader+9)& (0+255),b
  7010  002F1E  5119               	movf	(??_TCP_Recv+2)& (0+255),w,b
  7011  002F20  1131               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  7012  002F22  6FDE               	movwf	(_tcpHeader+10)& (0+255),b
  7013  002F24  511A               	movf	(??_TCP_Recv+3)& (0+255),w,b
  7014  002F26  1132               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  7015  002F28  6FDF               	movwf	(_tcpHeader+11)& (0+255),b
  7016                           
  7017                           ;tcpv4.c: 578: tcpHeader.sequenceNumber = ((((uint32_t)tcpHeader.sequenceNumber&(uint32_
      +                          t)0xff000000) >> 24) | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x00ff0000) >> 8) 
      +                          | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHead
      +                          e
  7018  002F2A  51D8               	movf	(_tcpHeader+4)& (0+255),w,b
  7019  002F2C  D878               	call	PL595	;call to abstracted procedure
  7020  002F2E  EE21  F0D8         	lfsr	2,_tcpHeader+4
  7021  002F32  D854               	call	PL489	;call to abstracted procedure
  7022  002F34  C1D8  F11F         	movff	_tcpHeader+4,??_TCP_Recv+8
  7023  002F38  C1D9  F120         	movff	_tcpHeader+5,??_TCP_Recv+9
  7024  002F3C  C1DA  F121         	movff	_tcpHeader+6,??_TCP_Recv+10
  7025  002F40  C1DB  F122         	movff	_tcpHeader+7,??_TCP_Recv+11
  7026  002F44  D85F               	call	PL525	;call to abstracted procedure
  7027  002F46  EE21  F0D8         	lfsr	2,_tcpHeader+4
  7028  002F4A  D819               	call	PL435	;call to abstracted procedure
  7029  002F4C  6FD8               	movwf	(_tcpHeader+4)& (0+255),b
  7030  002F4E  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  7031  002F50  1130               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  7032  002F52  6FD9               	movwf	(_tcpHeader+5)& (0+255),b
  7033  002F54  5119               	movf	(??_TCP_Recv+2)& (0+255),w,b
  7034  002F56  1131               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  7035  002F58  6FDA               	movwf	(_tcpHeader+6)& (0+255),b
  7036  002F5A  511A               	movf	(??_TCP_Recv+3)& (0+255),w,b
  7037  002F5C  1132               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  7038  002F5E  6FDB               	movwf	(_tcpHeader+7)& (0+255),b
  7039                           
  7040                           ; BSR set to: 1
  7041                           ;tcpv4.c: 580: TCP_FiniteStateMachine();
  7042  002F60  EF5D  F008         	goto	_TCP_FiniteStateMachine	;wreg free
  7043  002F64                     __end_of_TCP_Recv:
  7044                           	opt stack 0
  7045  002F64                     PL409:
  7046                           	opt stack 12
  7047  002F64  243F               	addwf	_currentTCB,w,c
  7048  002F66  6F17               	movwf	??_TCP_Recv& (0+255),b
  7049  002F68  0E00               	movlw	0
  7050  002F6A  2040               	addwfc	_currentTCB+1,w,c
  7051  002F6C  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  7052  002F6E  C117  FFF6         	movff	??_TCP_Recv,tblptrl
  7053  002F72  C118  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7054  002F76  0E00               	movlw	low (__smallconst shr (0+16))
  7055  002F78  6EF8               	movwf	tblptru,c
  7056  002F7A  0E0F               	movlw	(high __ramtop+-1)
  7057  002F7C  0012               	return	
  7058  002F7E                     __end_ofPL409:
  7059                           	opt stack 0
  7060  002F7E                     PL435:
  7061                           	opt stack 12
  7062  002F7E  14DE               	andwf	postinc2,w,c
  7063  002F80  6F27               	movwf	(??_TCP_Recv+16)& (0+255),b
  7064  002F82  0E00               	movlw	0
  7065  002F84  14DE               	andwf	postinc2,w,c
  7066  002F86  6F28               	movwf	(??_TCP_Recv+17)& (0+255),b
  7067  002F88  0E00               	movlw	0
  7068  002F8A  14DE               	andwf	postinc2,w,c
  7069  002F8C  6F29               	movwf	(??_TCP_Recv+18)& (0+255),b
  7070  002F8E  0EFF               	movlw	255
  7071  002F90  14DE               	andwf	postinc2,w,c
  7072  002F92  6F2A               	movwf	(??_TCP_Recv+19)& (0+255),b
  7073  002F94  0E19               	movlw	25
  7074  002F96  D005               	goto	u14510
  7075  002F98                     u14515:
  7076  002F98  90D8               	bcf	status,0,c
  7077  002F9A  332A               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
  7078  002F9C  3329               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
  7079  002F9E  3328               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
  7080  002FA0  3327               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
  7081  002FA2                     u14510:
  7082  002FA2  2EE8               	decfsz	wreg,f,c
  7083  002FA4  D7F9               	goto	u14515
  7084  002FA6  5123               	movf	(??_TCP_Recv+12)& (0+255),w,b
  7085  002FA8  1127               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
  7086  002FAA  6F2B               	movwf	(??_TCP_Recv+20)& (0+255),b
  7087  002FAC  5124               	movf	(??_TCP_Recv+13)& (0+255),w,b
  7088  002FAE  1128               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
  7089  002FB0  6F2C               	movwf	(??_TCP_Recv+21)& (0+255),b
  7090  002FB2  5125               	movf	(??_TCP_Recv+14)& (0+255),w,b
  7091  002FB4  1129               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
  7092  002FB6  6F2D               	movwf	(??_TCP_Recv+22)& (0+255),b
  7093  002FB8  5126               	movf	(??_TCP_Recv+15)& (0+255),w,b
  7094  002FBA  112A               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
  7095  002FBC  6F2E               	movwf	(??_TCP_Recv+23)& (0+255),b
  7096  002FBE  511B               	movf	(??_TCP_Recv+4)& (0+255),w,b
  7097  002FC0  112B               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
  7098  002FC2  6F2F               	movwf	(??_TCP_Recv+24)& (0+255),b
  7099  002FC4  511C               	movf	(??_TCP_Recv+5)& (0+255),w,b
  7100  002FC6  112C               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
  7101  002FC8  6F30               	movwf	(??_TCP_Recv+25)& (0+255),b
  7102  002FCA  511D               	movf	(??_TCP_Recv+6)& (0+255),w,b
  7103  002FCC  112D               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
  7104  002FCE  6F31               	movwf	(??_TCP_Recv+26)& (0+255),b
  7105  002FD0  511E               	movf	(??_TCP_Recv+7)& (0+255),w,b
  7106  002FD2  112E               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
  7107  002FD4  6F32               	movwf	(??_TCP_Recv+27)& (0+255),b
  7108  002FD6  5117               	movf	??_TCP_Recv& (0+255),w,b
  7109  002FD8  112F               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
  7110  002FDA  0012               	return	
  7111  002FDC                     __end_ofPL435:
  7112                           	opt stack 0
  7113  002FDC                     PL489:
  7114                           	opt stack 12
  7115  002FDC  0E00               	movlw	0
  7116  002FDE  14DE               	andwf	postinc2,w,c
  7117  002FE0  6F1B               	movwf	(??_TCP_Recv+4)& (0+255),b
  7118  002FE2  0EFF               	movlw	255
  7119  002FE4  14DE               	andwf	postinc2,w,c
  7120  002FE6  6F1C               	movwf	(??_TCP_Recv+5)& (0+255),b
  7121  002FE8  0E00               	movlw	0
  7122  002FEA  14DE               	andwf	postinc2,w,c
  7123  002FEC  6F1D               	movwf	(??_TCP_Recv+6)& (0+255),b
  7124  002FEE  0E00               	movlw	0
  7125  002FF0  14DE               	andwf	postinc2,w,c
  7126  002FF2  6F1E               	movwf	(??_TCP_Recv+7)& (0+255),b
  7127  002FF4  C11D  F11E         	movff	??_TCP_Recv+6,??_TCP_Recv+7
  7128  002FF8  C11C  F11D         	movff	??_TCP_Recv+5,??_TCP_Recv+6
  7129  002FFC  C11B  F11C         	movff	??_TCP_Recv+4,??_TCP_Recv+5
  7130  003000  6B1B               	clrf	(??_TCP_Recv+4)& (0+255),b
  7131  003002  0012               	return	
  7132  003004                     __end_ofPL489:
  7133                           	opt stack 0
  7134  003004                     PL525:
  7135                           	opt stack 12
  7136  003004  C120  F11F         	movff	??_TCP_Recv+9,??_TCP_Recv+8
  7137  003008  C121  F120         	movff	??_TCP_Recv+10,??_TCP_Recv+9
  7138  00300C  C122  F121         	movff	??_TCP_Recv+11,??_TCP_Recv+10
  7139  003010  6B22               	clrf	(??_TCP_Recv+11)& (0+255),b
  7140  003012  6B23               	clrf	(??_TCP_Recv+12)& (0+255),b
  7141  003014  5120               	movf	(??_TCP_Recv+9)& (0+255),w,b
  7142  003016  6F24               	movwf	(??_TCP_Recv+13)& (0+255),b
  7143  003018  6B25               	clrf	(??_TCP_Recv+14)& (0+255),b
  7144  00301A  6B26               	clrf	(??_TCP_Recv+15)& (0+255),b
  7145  00301C  0C00               	retlw	0
  7146  00301E                     __end_ofPL525:
  7147                           	opt stack 0
  7148  00301E                     PL595:
  7149                           	opt stack 12
  7150  00301E  6F17               	movwf	??_TCP_Recv& (0+255),b
  7151  003020  6B18               	clrf	(??_TCP_Recv+1)& (0+255),b
  7152  003022  6B19               	clrf	(??_TCP_Recv+2)& (0+255),b
  7153  003024  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  7154  003026  C117  F11A         	movff	??_TCP_Recv,??_TCP_Recv+3
  7155  00302A  6B19               	clrf	(??_TCP_Recv+2)& (0+255),b
  7156  00302C  6B18               	clrf	(??_TCP_Recv+1)& (0+255),b
  7157  00302E  6B17               	clrf	??_TCP_Recv& (0+255),b
  7158  003030  0012               	return	
  7159  003032                     __end_ofPL595:
  7160                           	opt stack 0
  7161  003032                     PL645:
  7162                           	opt stack 12
  7163  003032  0009               	tblrd		*+
  7164  003034  CFF5 F119          	movff	tablat,??_TCP_Recv+2
  7165  003038  0009               	tblrd		*+
  7166  00303A  CFF5 F11A          	movff	tablat,??_TCP_Recv+3
  7167  00303E  0012               	return	
  7168  003040                     __end_ofPL645:
  7169                           	opt stack 0
  7170  003040                     PL687:
  7171                           	opt stack 12
  7172  003040  CFEE F119          	movff	postinc0,??_TCP_Recv+2
  7173  003044  CFEE F11A          	movff	postinc0,??_TCP_Recv+3
  7174  003048  0012               	return	
  7175  00304A                     __end_ofPL687:
  7176                           	opt stack 0
  7177  00304A                     PL689:
  7178                           	opt stack 12
  7179  00304A  6E18               	movwf	ETH_ReadBlock@buffer+1,c
  7180  00304C  6A1A               	clrf	ETH_ReadBlock@length+1,c
  7181  00304E  0E14               	movlw	20
  7182  003050  6E19               	movwf	ETH_ReadBlock@length,c
  7183  003052  0C14               	retlw	20
  7184  003054                     __end_ofPL689:
  7185                           	opt stack 0
  7186                           tosu	equ	0xFFF
  7187                           tosh	equ	0xFFE
  7188                           tosl	equ	0xFFD
  7189                           pclath	equ	0xFFA
  7190                           tblptru	equ	0xFF8
  7191                           tblptrh	equ	0xFF7
  7192                           tblptrl	equ	0xFF6
  7193                           tablat	equ	0xFF5
  7194                           prodh	equ	0xFF4
  7195                           prodl	equ	0xFF3
  7196                           intcon	equ	0xFF2
  7197                           indf0	equ	0xFEF
  7198                           postinc0	equ	0xFEE
  7199                           fsr0h	equ	0xFEA
  7200                           fsr0l	equ	0xFE9
  7201                           wreg	equ	0xFE8
  7202                           indf1	equ	0xFE7
  7203                           postinc1	equ	0xFE6
  7204                           postdec1	equ	0xFE5
  7205                           plusw1	equ	0xFE3
  7206                           fsr1h	equ	0xFE2
  7207                           fsr1l	equ	0xFE1
  7208                           bsr	equ	0xFE0
  7209                           indf2	equ	0xFDF
  7210                           postinc2	equ	0xFDE
  7211                           postdec2	equ	0xFDD
  7212                           plusw2	equ	0xFDB
  7213                           fsr2h	equ	0xFDA
  7214                           fsr2l	equ	0xFD9
  7215                           status	equ	0xFD8
  7216                           
  7217 ;; *************** function _TCP_ParseTCPOptions *****************
  7218 ;; Defined at:
  7219 ;;		line 356 in file "../../TCPIP Library/source/tcpv4.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;		None
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  tcpOptionsSi    2   30[COMRAM] unsigned int 
  7224 ;;  opt             1   29[COMRAM] unsigned char 
  7225 ;;  ret             1   28[COMRAM] unsigned char 
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  1    wreg      unsigned char 
  7228 ;; Registers used:
  7229 ;;		wreg, status,2, status,0, cstack
  7230 ;; Tracked objects:
  7231 ;;		On entry : F/1
  7232 ;;		On exit  : F/1
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;Total ram usage:        6 bytes
  7240 ;; Hardware stack levels used:    1
  7241 ;; Hardware stack levels required when called:   10
  7242 ;; This function calls:
  7243 ;;		_ETH_Dump
  7244 ;;		_ETH_Read16
  7245 ;;		_ETH_Read8
  7246 ;; This function is called by:
  7247 ;;		_TCP_Recv
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text28
  7252  0049F2                     __ptext28:
  7253                           	opt stack 0
  7254  0049F2                     _TCP_ParseTCPOptions:
  7255                           	opt stack 16
  7256                           
  7257                           ; BSR set to: 1
  7258                           ;tcpv4.c: 358: uint8_t opt;
  7259                           ;tcpv4.c: 359: uint16_t tcpOptionsSize;
  7260                           ;tcpv4.c: 360: bool ret;
  7261                           ;tcpv4.c: 362: ret = 0;
  7262                           
  7263                           ; BSR set to: 1
  7264                           ;incstack = 0
  7265  0049F2  6A1D               	clrf	TCP_ParseTCPOptions@ret,c
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;tcpv4.c: 364: tcpOptionsSize = (uint16_t)((tcpHeader.dataOffset << 2) - sizeof(tcpHeade
      +                          r_t));
  7269  0049F4  39E0               	swapf	(_tcpHeader+12)& (0+255),w,b
  7270  0049F6  0B0F               	andlw	15
  7271  0049F8  6E1B               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  7272  0049FA  6A1C               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  7273  0049FC  90D8               	bcf	status,0,c
  7274  0049FE  361B               	rlcf	??_TCP_ParseTCPOptions,f,c
  7275  004A00  361C               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  7276  004A02  90D8               	bcf	status,0,c
  7277  004A04  361B               	rlcf	??_TCP_ParseTCPOptions,f,c
  7278  004A06  361C               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  7279  004A08  0EEC               	movlw	236
  7280  004A0A  241B               	addwf	??_TCP_ParseTCPOptions,w,c
  7281  004A0C  6E1F               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
  7282  004A0E  0EFF               	movlw	255
  7283  004A10  201C               	addwfc	??_TCP_ParseTCPOptions+1,w,c
  7284  004A12  6E20               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  7285                           
  7286                           ;tcpv4.c: 366: if (tcpOptionsSize > 0)
  7287  004A14  101F               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7288  004A16  E06B               	bz	l8482
  7289                           
  7290                           ; BSR set to: 1
  7291                           ;tcpv4.c: 367: {
  7292                           ;tcpv4.c: 370: tcpMss = 536;
  7293  004A18  0E02               	movlw	2
  7294  004A1A  6E46               	movwf	_tcpMss+1,c
  7295  004A1C  0E18               	movlw	24
  7296  004A1E  6E45               	movwf	_tcpMss,c
  7297                           
  7298                           ; BSR set to: 1
  7299                           ;tcpv4.c: 372: if(tcpHeader.syn)
  7300  004A20  A3E1               	btfss	(_tcpHeader+13)& (0+255),1,b
  7301  004A22  D062               	goto	l8480
  7302  004A24  D059               	goto	l8478
  7303  004A26                     l8436:
  7304                           
  7305                           ; BSR set to: 1
  7306                           ;tcpv4.c: 376: {
  7307                           ;tcpv4.c: 377: opt = ETH_Read8();
  7308  004A26  EC26  F030         	call	_ETH_Read8	;wreg free
  7309  004A2A  6E1E               	movwf	TCP_ParseTCPOptions@opt,c
  7310                           
  7311                           ;tcpv4.c: 378: switch (opt)
  7312  004A2C  D04E               	goto	l8476
  7313  004A2E                     l8438:
  7314                           
  7315                           ; BSR set to: 1
  7316                           ;tcpv4.c: 382: if (tcpOptionsSize)
  7317  004A2E  501F               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7318  004A30  1020               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  7319  004A32  E005               	bz	l8444
  7320                           
  7321                           ; BSR set to: 1
  7322                           ;tcpv4.c: 383: {
  7323                           ;tcpv4.c: 385: ETH_Dump(tcpOptionsSize);
  7324  004A34  D860               	call	PL681	;call to abstracted procedure
  7325  004A36  ECCD  F02F         	call	_ETH_Dump	;wreg free
  7326                           
  7327                           ; BSR set to: 1
  7328                           ;tcpv4.c: 386: tcpOptionsSize = 0;
  7329  004A3A  6A1F               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  7330  004A3C  6A20               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  7331  004A3E                     l8444:
  7332                           
  7333                           ; BSR set to: 1
  7334                           ;tcpv4.c: 387: }
  7335                           ;tcpv4.c: 388: ret = 1;
  7336  004A3E  0E01               	movlw	1
  7337  004A40  6E1D               	movwf	TCP_ParseTCPOptions@ret,c
  7338                           
  7339                           ;tcpv4.c: 389: break;
  7340  004A42  D04A               	goto	l8478
  7341  004A44                     l8446:
  7342                           
  7343                           ; BSR set to: 1
  7344                           ;tcpv4.c: 394: if (tcpOptionsSize >= 3)
  7345  004A44  5020               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  7346  004A46  E103               	bnz	u12310
  7347  004A48  0E03               	movlw	3
  7348  004A4A  5C1F               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7349  004A4C  E31D               	bnc	l1142
  7350  004A4E                     u12310:
  7351                           
  7352                           ; BSR set to: 1
  7353                           ;tcpv4.c: 395: {
  7354                           ;tcpv4.c: 396: opt = ETH_Read8();
  7355  004A4E  EC26  F030         	call	_ETH_Read8	;wreg free
  7356  004A52  6E1E               	movwf	TCP_ParseTCPOptions@opt,c
  7357                           
  7358                           ; BSR set to: 1
  7359                           ;tcpv4.c: 397: if (opt == 0x04)
  7360  004A54  0E04               	movlw	4
  7361  004A56  181E               	xorwf	TCP_ParseTCPOptions@opt,w,c
  7362  004A58  E114               	bnz	l1143
  7363                           
  7364                           ; BSR set to: 1
  7365                           ;tcpv4.c: 398: {
  7366                           ;tcpv4.c: 400: tcpMss = ETH_Read16();
  7367  004A5A  ECB5  F02E         	call	_ETH_Read16	;wreg free
  7368  004A5E  C017  F045         	movff	?_ETH_Read16,_tcpMss
  7369  004A62  C018  F046         	movff	?_ETH_Read16+1,_tcpMss+1
  7370                           
  7371                           ; BSR set to: 1
  7372                           ;tcpv4.c: 402: tcpOptionsSize = tcpOptionsSize - 3;
  7373  004A66  0EFD               	movlw	253
  7374  004A68  261F               	addwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  7375  004A6A  0EFF               	movlw	255
  7376  004A6C  2220               	addwfc	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  7377                           
  7378                           ; BSR set to: 1
  7379                           ;tcpv4.c: 405: if (tcpMss > 1460u)
  7380  004A6E  0EB5               	movlw	181
  7381  004A70  5C45               	subwf	_tcpMss,w,c
  7382  004A72  0E05               	movlw	5
  7383  004A74  5846               	subwfb	_tcpMss+1,w,c
  7384  004A76  E3E3               	bnc	l8444
  7385                           
  7386                           ; BSR set to: 1
  7387                           ;tcpv4.c: 406: {
  7388                           ;tcpv4.c: 407: tcpMss = 1460u;
  7389  004A78  0E05               	movlw	5
  7390  004A7A  6E46               	movwf	_tcpMss+1,c
  7391  004A7C  0EB4               	movlw	180
  7392  004A7E  6E45               	movwf	_tcpMss,c
  7393  004A80  D7DE               	goto	l8444
  7394  004A82                     l1143:
  7395                           
  7396                           ; BSR set to: 1
  7397                           ;tcpv4.c: 412: {
  7398                           ;tcpv4.c: 414: ;
  7399                           ;tcpv4.c: 416: tcpOptionsSize = 0;
  7400  004A82  6A1F               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  7401  004A84  6A20               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  7402  004A86  D028               	goto	l8478
  7403  004A88                     l1142:
  7404                           
  7405                           ; BSR set to: 1
  7406                           ;tcpv4.c: 419: {
  7407                           ;tcpv4.c: 421: tcpOptionsSize = 0;
  7408  004A88  6A1F               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  7409  004A8A  6A20               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  7410                           
  7411                           ;tcpv4.c: 422: ret = 0;
  7412  004A8C  6A1D               	clrf	TCP_ParseTCPOptions@ret,c
  7413  004A8E  D024               	goto	l8478
  7414  004A90                     l8460:
  7415                           
  7416                           ; BSR set to: 1
  7417                           ;tcpv4.c: 426: ;
  7418                           ;tcpv4.c: 427: opt = ETH_Read8();
  7419  004A90  EC26  F030         	call	_ETH_Read8	;wreg free
  7420  004A94  6E1E               	movwf	TCP_ParseTCPOptions@opt,c
  7421                           
  7422                           ; BSR set to: 1
  7423                           ;tcpv4.c: 428: tcpOptionsSize--;
  7424  004A96  061F               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  7425  004A98  A0D8               	btfss	status,0,c
  7426  004A9A  0620               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  7427                           
  7428                           ; BSR set to: 1
  7429                           ;tcpv4.c: 430: if (opt > 1)
  7430  004A9C  0E01               	movlw	1
  7431  004A9E  641E               	cpfsgt	TCP_ParseTCPOptions@opt,c
  7432  004AA0  D7F3               	goto	l1142
  7433                           
  7434                           ; BSR set to: 1
  7435                           ;tcpv4.c: 431: {
  7436                           ;tcpv4.c: 433: opt = opt - 2;
  7437  004AA2  0EFE               	movlw	254
  7438  004AA4  261E               	addwf	TCP_ParseTCPOptions@opt,f,c
  7439                           
  7440                           ;tcpv4.c: 434: if (opt <= tcpOptionsSize)
  7441  004AA6  501E               	movf	TCP_ParseTCPOptions@opt,w,c
  7442  004AA8  6E1B               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  7443  004AAA  6A1C               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  7444  004AAC  501B               	movf	??_TCP_ParseTCPOptions,w,c
  7445  004AAE  5C1F               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7446  004AB0  501C               	movf	??_TCP_ParseTCPOptions+1,w,c
  7447  004AB2  5820               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  7448  004AB4  E3E9               	bnc	l1142
  7449                           
  7450                           ; BSR set to: 1
  7451                           ;tcpv4.c: 435: {
  7452                           ;tcpv4.c: 437: ETH_Dump(opt);
  7453  004AB6  C01E  F017         	movff	TCP_ParseTCPOptions@opt,ETH_Dump@length
  7454  004ABA  6A18               	clrf	ETH_Dump@length+1,c
  7455  004ABC  ECCD  F02F         	call	_ETH_Dump	;wreg free
  7456                           
  7457                           ; BSR set to: 1
  7458                           ;tcpv4.c: 438: tcpOptionsSize = tcpOptionsSize - opt;
  7459  004AC0  501E               	movf	TCP_ParseTCPOptions@opt,w,c
  7460  004AC2  5E1F               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  7461  004AC4  0E00               	movlw	0
  7462  004AC6  5A20               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  7463  004AC8  D7BA               	goto	l8444
  7464  004ACA                     l8476:
  7465                           
  7466                           ; BSR set to: 1
  7467  004ACA  501E               	movf	TCP_ParseTCPOptions@opt,w,c
  7468                           
  7469                           ; Switch size 1, requested type "space"
  7470                           ; Number of cases is 3, Range of values is 0 to 2
  7471                           ; switch strategies available:
  7472                           ; Name         Instructions Cycles
  7473                           ; simple_byte           10     6 (average)
  7474                           ;	Chosen strategy is simple_byte
  7475  004ACC  E0B0               	bz	l8438
  7476  004ACE  0A01               	xorlw	1	; case 1
  7477  004AD0  E003               	bz	l8478
  7478  004AD2  0A03               	xorlw	3	; case 2
  7479  004AD4  E0B7               	bz	l8446
  7480  004AD6  D7DC               	goto	l8460
  7481  004AD8                     l8478:
  7482                           
  7483                           ; BSR set to: 1
  7484  004AD8  061F               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  7485  004ADA  A0D8               	btfss	status,0,c
  7486  004ADC  0620               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  7487  004ADE  281F               	incf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7488  004AE0  E1A2               	bnz	l8436
  7489  004AE2  2820               	incf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  7490  004AE4  E006               	bz	l1154
  7491  004AE6  D79F               	goto	l8436
  7492  004AE8                     l8480:
  7493                           
  7494                           ; BSR set to: 1
  7495                           ;tcpv4.c: 459: {
  7496                           ;tcpv4.c: 460: ETH_Dump(tcpOptionsSize);
  7497  004AE8  D806               	call	PL681	;call to abstracted procedure
  7498  004AEA  ECCD  F02F         	call	_ETH_Dump	;wreg free
  7499  004AEE                     l8482:
  7500                           
  7501                           ; BSR set to: 1
  7502                           ;tcpv4.c: 461: ret = 1;
  7503  004AEE  0E01               	movlw	1
  7504  004AF0  6E1D               	movwf	TCP_ParseTCPOptions@ret,c
  7505  004AF2                     l1154:
  7506                           
  7507                           ; BSR set to: 1
  7508                           ;tcpv4.c: 466: }
  7509                           ;tcpv4.c: 468: return ret;
  7510  004AF2  501D               	movf	TCP_ParseTCPOptions@ret,w,c
  7511                           
  7512                           ; BSR set to: 1
  7513  004AF4  0012               	return		;funcret
  7514  004AF6                     __end_of_TCP_ParseTCPOptions:
  7515                           	opt stack 0
  7516  004AF6                     PL681:
  7517                           	opt stack 16
  7518  004AF6  C01F  F017         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
  7519  004AFA  C020  F018         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
  7520  004AFE  0012               	return	
  7521  004B00                     __end_ofPL681:
  7522                           	opt stack 0
  7523                           tosu	equ	0xFFF
  7524                           tosh	equ	0xFFE
  7525                           tosl	equ	0xFFD
  7526                           pclath	equ	0xFFA
  7527                           tblptru	equ	0xFF8
  7528                           tblptrh	equ	0xFF7
  7529                           tblptrl	equ	0xFF6
  7530                           tablat	equ	0xFF5
  7531                           prodh	equ	0xFF4
  7532                           prodl	equ	0xFF3
  7533                           intcon	equ	0xFF2
  7534                           indf0	equ	0xFEF
  7535                           postinc0	equ	0xFEE
  7536                           fsr0h	equ	0xFEA
  7537                           fsr0l	equ	0xFE9
  7538                           wreg	equ	0xFE8
  7539                           indf1	equ	0xFE7
  7540                           postinc1	equ	0xFE6
  7541                           postdec1	equ	0xFE5
  7542                           plusw1	equ	0xFE3
  7543                           fsr1h	equ	0xFE2
  7544                           fsr1l	equ	0xFE1
  7545                           bsr	equ	0xFE0
  7546                           indf2	equ	0xFDF
  7547                           postinc2	equ	0xFDE
  7548                           postdec2	equ	0xFDD
  7549                           plusw2	equ	0xFDB
  7550                           fsr2h	equ	0xFDA
  7551                           fsr2l	equ	0xFD9
  7552                           status	equ	0xFD8
  7553                           
  7554 ;; *************** function _ETH_Read8 *****************
  7555 ;; Defined at:
  7556 ;;		line 380 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;		None
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;  ret             1   22[COMRAM] unsigned char 
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  1    wreg      unsigned char 
  7563 ;; Registers used:
  7564 ;;		wreg, status,2, status,0, cstack
  7565 ;; Tracked objects:
  7566 ;;		On entry : E/0
  7567 ;;		On exit  : F/1
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7574 ;;Total ram usage:        1 bytes
  7575 ;; Hardware stack levels used:    1
  7576 ;; Hardware stack levels required when called:    9
  7577 ;; This function calls:
  7578 ;;		_ETH_EdataRead
  7579 ;; This function is called by:
  7580 ;;		_DHCP_Handler
  7581 ;;		_TCP_ParseTCPOptions
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text29
  7586  00604C                     __ptext29:
  7587                           	opt stack 0
  7588  00604C                     _ETH_Read8:
  7589                           	opt stack 16
  7590                           
  7591                           ;j60_driver.c: 382: uint8_t ret = 0;
  7592                           
  7593                           ; BSR set to: 1
  7594                           ;incstack = 0
  7595  00604C  6A17               	clrf	ETH_Read8@ret,c
  7596                           
  7597                           ;j60_driver.c: 383: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  7598  00604E  0101               	movlb	1	; () banked
  7599  006050  51CC               	movf	_rxPacketStatusVector& (0+255),w,b
  7600  006052  11CD               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
  7601  006054  E007               	bz	l525
  7602  006056                     i5L__ptext96:
  7603                           	opt stack 0
  7604  006056                     i5L_ETH_EdataRead:
  7605                           	opt stack 0
  7606  006056                     i5Ll7486:
  7607                           	opt stack 15
  7608  006056  CF61 FE7E          	movff	3937,_errataTemp	;# 
  7609  00605A                     i5Ll7488:
  7610                           	opt stack 15
  7611                           
  7612                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  7613  00605A  010E               	movlb	14	; () banked
  7614  00605C  517E               	movf	126,w,b
  7615  00605E                     i5Ll460:
  7616                           	opt stack 16
  7617  00605E  6E17               	movwf	ETH_Read8@ret,c
  7618                           
  7619                           ; BSR set to: 14
  7620                           ;j60_driver.c: 386: rxPacketStatusVector.byteCount -= sizeof(ret);
  7621                           
  7622                           ; BSR set to: 1
  7623                           ;j60_driver.c: 387: ethData.error = 0;
  7624  006060  D804               	call	PL671	;call to abstracted procedure
  7625                           
  7626                           ;j60_driver.c: 388: }
  7627  006062  D001               	goto	l8132
  7628  006064                     l525:
  7629                           
  7630                           ; BSR set to: 1
  7631                           ;j60_driver.c: 389: else
  7632                           ;j60_driver.c: 390: {
  7633                           ;j60_driver.c: 391: ethData.error = 1;
  7634  006064  81BD               	bsf	_ethData& (0+255),0,b	;volatile
  7635  006066                     l8132:
  7636                           
  7637                           ; BSR set to: 1
  7638                           ;j60_driver.c: 392: }
  7639                           ;j60_driver.c: 393: return ret;
  7640  006066  5017               	movf	ETH_Read8@ret,w,c
  7641                           
  7642                           ; BSR set to: 1
  7643  006068  0012               	return		;funcret
  7644  00606A                     __end_of_ETH_Read8:
  7645                           	opt stack 0
  7646  00606A                     PL671:
  7647                           	opt stack 17
  7648  00606A  0101               	movlb	1	; () banked
  7649  00606C  07CC               	decf	_rxPacketStatusVector& (0+255),f,b
  7650  00606E  A0D8               	btfss	status,0,c
  7651  006070  07CD               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
  7652  006072  91BD               	bcf	_ethData& (0+255),0,b	;volatile
  7653  006074  0012               	return	
  7654  006076                     __end_ofPL671:
  7655                           	opt stack 0
  7656                           tosu	equ	0xFFF
  7657                           tosh	equ	0xFFE
  7658                           tosl	equ	0xFFD
  7659                           pclath	equ	0xFFA
  7660                           tblptru	equ	0xFF8
  7661                           tblptrh	equ	0xFF7
  7662                           tblptrl	equ	0xFF6
  7663                           tablat	equ	0xFF5
  7664                           prodh	equ	0xFF4
  7665                           prodl	equ	0xFF3
  7666                           intcon	equ	0xFF2
  7667                           indf0	equ	0xFEF
  7668                           postinc0	equ	0xFEE
  7669                           fsr0h	equ	0xFEA
  7670                           fsr0l	equ	0xFE9
  7671                           wreg	equ	0xFE8
  7672                           indf1	equ	0xFE7
  7673                           postinc1	equ	0xFE6
  7674                           postdec1	equ	0xFE5
  7675                           plusw1	equ	0xFE3
  7676                           fsr1h	equ	0xFE2
  7677                           fsr1l	equ	0xFE1
  7678                           bsr	equ	0xFE0
  7679                           indf2	equ	0xFDF
  7680                           postinc2	equ	0xFDE
  7681                           postdec2	equ	0xFDD
  7682                           plusw2	equ	0xFDB
  7683                           fsr2h	equ	0xFDA
  7684                           fsr2l	equ	0xFD9
  7685                           status	equ	0xFD8
  7686                           
  7687 ;; *************** function _ETH_Read16 *****************
  7688 ;; Defined at:
  7689 ;;		line 399 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;		None
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;  ret             2   24[COMRAM] unsigned int 
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  2   22[COMRAM] unsigned int 
  7696 ;; Registers used:
  7697 ;;		wreg, status,2, status,0, cstack
  7698 ;; Tracked objects:
  7699 ;;		On entry : E/0
  7700 ;;		On exit  : F/1
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;Total ram usage:        4 bytes
  7708 ;; Hardware stack levels used:    1
  7709 ;; Hardware stack levels required when called:    9
  7710 ;; This function calls:
  7711 ;;		_ETH_EdataRead
  7712 ;; This function is called by:
  7713 ;;		_DHCP_Handler
  7714 ;;		_TCP_ParseTCPOptions
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text30
  7719  005D6A                     __ptext30:
  7720                           	opt stack 0
  7721  005D6A                     _ETH_Read16:
  7722                           	opt stack 16
  7723                           
  7724                           ;j60_driver.c: 401: uint16_t ret = 0;
  7725                           
  7726                           ; BSR set to: 1
  7727                           ;incstack = 0
  7728  005D6A  6A19               	clrf	ETH_Read16@ret,c
  7729  005D6C  6A1A               	clrf	ETH_Read16@ret+1,c
  7730                           
  7731                           ;j60_driver.c: 402: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  7732  005D6E  0101               	movlb	1	; () banked
  7733  005D70  51CD               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  7734  005D72  E103               	bnz	u11710
  7735  005D74  0E02               	movlw	2
  7736  005D76  5DCC               	subwf	_rxPacketStatusVector& (0+255),w,b
  7737  005D78  E30D               	bnc	l530
  7738  005D7A                     u11710:
  7739  005D7A                     i6L__ptext96:
  7740                           	opt stack 0
  7741  005D7A                     i6L_ETH_EdataRead:
  7742                           	opt stack 0
  7743  005D7A                     i6Ll7486:
  7744                           	opt stack 15
  7745  005D7A  CF61 FE7E          	movff	3937,_errataTemp	;# 
  7746  005D7E                     i6Ll7488:
  7747                           	opt stack 15
  7748                           
  7749                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  7750  005D7E  010E               	movlb	14	; () banked
  7751  005D80  517E               	movf	126,w,b
  7752  005D82                     i6Ll460:
  7753                           	opt stack 16
  7754  005D82  6E1A               	movwf	ETH_Read16@ret+1,c
  7755  005D84                     i7L__ptext96:
  7756                           	opt stack 0
  7757  005D84                     i7L_ETH_EdataRead:
  7758                           	opt stack 0
  7759  005D84                     i7Ll7486:
  7760                           	opt stack 15
  7761  005D84  CF61 FE7E          	movff	3937,_errataTemp	;# 
  7762  005D88                     i7Ll7488:
  7763                           	opt stack 15
  7764                           
  7765                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  7766  005D88  010E               	movlb	14	; () banked
  7767  005D8A  517E               	movf	126,w,b
  7768  005D8C                     i7Ll460:
  7769                           	opt stack 16
  7770  005D8C  6E19               	movwf	ETH_Read16@ret,c
  7771                           
  7772                           ; BSR set to: 14
  7773                           ;j60_driver.c: 406: rxPacketStatusVector.byteCount -= sizeof(ret);
  7774  005D8E  0E02               	movlw	2
  7775                           
  7776                           ; BSR set to: 1
  7777                           ;j60_driver.c: 407: ethData.error = 0;
  7778  005D90  D807               	call	PL669	;call to abstracted procedure
  7779                           
  7780                           ;j60_driver.c: 408: }
  7781  005D92  D001               	goto	l531
  7782  005D94                     l530:
  7783                           
  7784                           ; BSR set to: 1
  7785                           ;j60_driver.c: 409: else
  7786                           ;j60_driver.c: 410: {
  7787                           ;j60_driver.c: 411: ethData.error = 1;
  7788  005D94  81BD               	bsf	_ethData& (0+255),0,b	;volatile
  7789  005D96                     l531:
  7790                           
  7791                           ; BSR set to: 1
  7792                           ;j60_driver.c: 412: }
  7793                           ;j60_driver.c: 413: return ret;
  7794  005D96  C019  F017         	movff	ETH_Read16@ret,?_ETH_Read16
  7795  005D9A  C01A  F018         	movff	ETH_Read16@ret+1,?_ETH_Read16+1
  7796                           
  7797                           ; BSR set to: 1
  7798  005D9E  0012               	return		;funcret
  7799  005DA0                     __end_of_ETH_Read16:
  7800                           	opt stack 0
  7801  005DA0                     PL669:
  7802                           	opt stack 16
  7803  005DA0  0101               	movlb	1	; () banked
  7804  005DA2  5FCC               	subwf	_rxPacketStatusVector& (0+255),f,b
  7805  005DA4  0E00               	movlw	0
  7806  005DA6  5BCD               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  7807  005DA8  91BD               	bcf	_ethData& (0+255),0,b	;volatile
  7808  005DAA  0C00               	retlw	0
  7809  005DAC                     __end_ofPL669:
  7810                           	opt stack 0
  7811                           tosu	equ	0xFFF
  7812                           tosh	equ	0xFFE
  7813                           tosl	equ	0xFFD
  7814                           pclath	equ	0xFFA
  7815                           tblptru	equ	0xFF8
  7816                           tblptrh	equ	0xFF7
  7817                           tblptrl	equ	0xFF6
  7818                           tablat	equ	0xFF5
  7819                           prodh	equ	0xFF4
  7820                           prodl	equ	0xFF3
  7821                           intcon	equ	0xFF2
  7822                           indf0	equ	0xFEF
  7823                           postinc0	equ	0xFEE
  7824                           fsr0h	equ	0xFEA
  7825                           fsr0l	equ	0xFE9
  7826                           wreg	equ	0xFE8
  7827                           indf1	equ	0xFE7
  7828                           postinc1	equ	0xFE6
  7829                           postdec1	equ	0xFE5
  7830                           plusw1	equ	0xFE3
  7831                           fsr1h	equ	0xFE2
  7832                           fsr1l	equ	0xFE1
  7833                           bsr	equ	0xFE0
  7834                           indf2	equ	0xFDF
  7835                           postinc2	equ	0xFDE
  7836                           postdec2	equ	0xFDD
  7837                           plusw2	equ	0xFDB
  7838                           fsr2h	equ	0xFDA
  7839                           fsr2l	equ	0xFD9
  7840                           status	equ	0xFD8
  7841                           
  7842 ;; *************** function _ETH_Dump *****************
  7843 ;; Defined at:
  7844 ;;		line 611 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;  length          2   22[COMRAM] unsigned int 
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;		None
  7849 ;; Return value:  Size  Location     Type
  7850 ;;		None               void
  7851 ;; Registers used:
  7852 ;;		wreg, status,2, status,0
  7853 ;; Tracked objects:
  7854 ;;		On entry : 0/1
  7855 ;;		On exit  : F/1
  7856 ;;		Unchanged: 0/0
  7857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;Total ram usage:        2 bytes
  7863 ;; Hardware stack levels used:    1
  7864 ;; Hardware stack levels required when called:    8
  7865 ;; This function calls:
  7866 ;;		Nothing
  7867 ;; This function is called by:
  7868 ;;		_DHCP_Handler
  7869 ;;		_IPV4_Packet
  7870 ;;		_TCP_ParseTCPOptions
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           	psect	text31
  7875  005F9A                     __ptext31:
  7876                           	opt stack 0
  7877  005F9A                     _ETH_Dump:
  7878                           	opt stack 17
  7879                           
  7880                           ;j60_driver.c: 613: length = (rxPacketStatusVector.byteCount <= length) ? rxPacketStatus
      +                          Vector.byteCount : length;
  7881                           
  7882                           ; BSR set to: 1
  7883                           ;incstack = 0
  7884  005F9A  0101               	movlb	1	; () banked
  7885  005F9C  51CC               	movf	_rxPacketStatusVector& (0+255),w,b
  7886  005F9E  5C17               	subwf	ETH_Dump@length,w,c
  7887  005FA0  51CD               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  7888  005FA2  5818               	subwfb	ETH_Dump@length+1,w,c
  7889  005FA4  E304               	bnc	l8160
  7890                           
  7891                           ; BSR set to: 1
  7892  005FA6  C1CC  F017         	movff	_rxPacketStatusVector,ETH_Dump@length
  7893  005FAA  C1CD  F018         	movff	_rxPacketStatusVector+1,ETH_Dump@length+1
  7894  005FAE                     l8160:
  7895                           
  7896                           ; BSR set to: 1
  7897                           ;j60_driver.c: 614: if (length)
  7898  005FAE  5017               	movf	ETH_Dump@length,w,c
  7899  005FB0  1018               	iorwf	ETH_Dump@length+1,w,c
  7900  005FB2  B4D8               	btfsc	status,2,c
  7901  005FB4  0012               	return	
  7902                           
  7903                           ; BSR set to: 1
  7904                           ;j60_driver.c: 615: {
  7905                           ;j60_driver.c: 617: ERDPT += length;
  7906  005FB6  5017               	movf	ETH_Dump@length,w,c
  7907  005FB8  267A               	addwf	3962,f,c	;volatile
  7908  005FBA  5018               	movf	ETH_Dump@length+1,w,c
  7909  005FBC  227B               	addwfc	3963,f,c	;volatile
  7910                           
  7911                           ;j60_driver.c: 618: rxPacketStatusVector.byteCount -= length;
  7912  005FBE  5017               	movf	ETH_Dump@length,w,c
  7913  005FC0  5FCC               	subwf	_rxPacketStatusVector& (0+255),f,b
  7914  005FC2  5018               	movf	ETH_Dump@length+1,w,c
  7915  005FC4  5BCD               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  7916                           
  7917                           ; BSR set to: 1
  7918  005FC6  0012               	return		;funcret
  7919  005FC8                     __end_of_ETH_Dump:
  7920                           	opt stack 0
  7921                           tosu	equ	0xFFF
  7922                           tosh	equ	0xFFE
  7923                           tosl	equ	0xFFD
  7924                           pclath	equ	0xFFA
  7925                           tblptru	equ	0xFF8
  7926                           tblptrh	equ	0xFF7
  7927                           tblptrl	equ	0xFF6
  7928                           tablat	equ	0xFF5
  7929                           prodh	equ	0xFF4
  7930                           prodl	equ	0xFF3
  7931                           intcon	equ	0xFF2
  7932                           indf0	equ	0xFEF
  7933                           postinc0	equ	0xFEE
  7934                           fsr0h	equ	0xFEA
  7935                           fsr0l	equ	0xFE9
  7936                           wreg	equ	0xFE8
  7937                           indf1	equ	0xFE7
  7938                           postinc1	equ	0xFE6
  7939                           postdec1	equ	0xFE5
  7940                           plusw1	equ	0xFE3
  7941                           fsr1h	equ	0xFE2
  7942                           fsr1l	equ	0xFE1
  7943                           bsr	equ	0xFE0
  7944                           indf2	equ	0xFDF
  7945                           postinc2	equ	0xFDE
  7946                           postdec2	equ	0xFDD
  7947                           plusw2	equ	0xFDB
  7948                           fsr2h	equ	0xFDA
  7949                           fsr2l	equ	0xFD9
  7950                           status	equ	0xFD8
  7951                           
  7952 ;; *************** function _IPV4_PseudoHeaderChecksum *****************
  7953 ;; Defined at:
  7954 ;;		line 83 in file "../../TCPIP Library/source/ipv4.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  payloadLen      2   22[COMRAM] unsigned int 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  tmp            12   34[COMRAM] struct .
  7959 ;;  cksm            4   30[COMRAM] unsigned long 
  7960 ;;  len             1   29[COMRAM] unsigned char 
  7961 ;;  v               1   28[COMRAM] PTR unsigned int 
  7962 ;;		 -> IPV4_PseudoHeaderChecksum@tmp(12), 
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  2   22[COMRAM] unsigned int 
  7965 ;; Registers used:
  7966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7967 ;; Tracked objects:
  7968 ;;		On entry : F/1
  7969 ;;		On exit  : F/1
  7970 ;;		Unchanged: F/0
  7971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7973 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7975 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7976 ;;Total ram usage:       24 bytes
  7977 ;; Hardware stack levels used:    1
  7978 ;; Hardware stack levels required when called:    8
  7979 ;; This function calls:
  7980 ;;		Nothing
  7981 ;; This function is called by:
  7982 ;;		_IPV4_Packet
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           	psect	text32
  7987  00530E                     __ptext32:
  7988                           	opt stack 0
  7989  00530E                     _IPV4_PseudoHeaderChecksum:
  7990                           	opt stack 19
  7991                           
  7992                           ; BSR set to: 1
  7993                           ;ipv4.c: 85: ipv4_pseudo_header_t tmp;
  7994                           ;ipv4.c: 86: uint8_t len;
  7995                           ;ipv4.c: 87: uint32_t cksm = 0;
  7996                           
  7997                           ; BSR set to: 1
  7998                           ;incstack = 0
  7999  00530E  6A1F               	clrf	IPV4_PseudoHeaderChecksum@cksm,c
  8000  005310  6A20               	clrf	IPV4_PseudoHeaderChecksum@cksm+1,c
  8001  005312  6A21               	clrf	IPV4_PseudoHeaderChecksum@cksm+2,c
  8002  005314  6A22               	clrf	IPV4_PseudoHeaderChecksum@cksm+3,c
  8003                           
  8004                           ;ipv4.c: 88: uint16_t *v;
  8005                           ;ipv4.c: 90: tmp.srcIpAddress = ipv4Header.srcIpAddress;
  8006  005316  C293  F023         	movff	_ipv4Header+12,IPV4_PseudoHeaderChecksum@tmp
  8007  00531A  C294  F024         	movff	_ipv4Header+13,IPV4_PseudoHeaderChecksum@tmp+1
  8008  00531E  C295  F025         	movff	_ipv4Header+14,IPV4_PseudoHeaderChecksum@tmp+2
  8009  005322  C296  F026         	movff	_ipv4Header+15,IPV4_PseudoHeaderChecksum@tmp+3
  8010                           
  8011                           ;ipv4.c: 91: tmp.dstIpAddress = ipv4Header.dstIpAddress;
  8012  005326  C297  F027         	movff	_ipv4Header+16,IPV4_PseudoHeaderChecksum@tmp+4
  8013  00532A  C298  F028         	movff	_ipv4Header+17,IPV4_PseudoHeaderChecksum@tmp+5
  8014  00532E  C299  F029         	movff	_ipv4Header+18,IPV4_PseudoHeaderChecksum@tmp+6
  8015  005332  C29A  F02A         	movff	_ipv4Header+19,IPV4_PseudoHeaderChecksum@tmp+7
  8016                           
  8017                           ;ipv4.c: 92: tmp.protocol = ipv4Header.protocol;
  8018  005336  C290  F02B         	movff	_ipv4Header+9,IPV4_PseudoHeaderChecksum@tmp+8
  8019                           
  8020                           ;ipv4.c: 93: tmp.z = 0;
  8021  00533A  6A2C               	clrf	IPV4_PseudoHeaderChecksum@tmp+9,c
  8022                           
  8023                           ;ipv4.c: 94: tmp.length = payloadLen;
  8024  00533C  C017  F02D         	movff	IPV4_PseudoHeaderChecksum@payloadLen,IPV4_PseudoHeaderChecksum@tmp+10
  8025  005340  C018  F02E         	movff	IPV4_PseudoHeaderChecksum@payloadLen+1,IPV4_PseudoHeaderChecksum@tmp+11
  8026                           
  8027                           ; BSR set to: 1
  8028                           ;ipv4.c: 96: len = sizeof(tmp);
  8029  005344  0E0C               	movlw	12
  8030  005346  6E1E               	movwf	IPV4_PseudoHeaderChecksum@len,c
  8031                           
  8032                           ; BSR set to: 1
  8033                           ;ipv4.c: 97: len = len >> 1;
  8034  005348  90D8               	bcf	status,0,c
  8035  00534A  321E               	rrcf	IPV4_PseudoHeaderChecksum@len,f,c
  8036                           
  8037                           ; BSR set to: 1
  8038                           ;ipv4.c: 99: v = (uint16_t *) &tmp;
  8039  00534C  0E23               	movlw	low IPV4_PseudoHeaderChecksum@tmp
  8040  00534E  6E1D               	movwf	IPV4_PseudoHeaderChecksum@v,c
  8041                           
  8042                           ;ipv4.c: 101: while(len)
  8043  005350  D011               	goto	l8882
  8044  005352                     l8876:
  8045                           
  8046                           ; BSR set to: 1
  8047                           ;ipv4.c: 102: {
  8048                           ;ipv4.c: 103: cksm += *v;
  8049  005352  501D               	movf	IPV4_PseudoHeaderChecksum@v,w,c
  8050  005354  6ED9               	movwf	fsr2l,c
  8051  005356  6ADA               	clrf	fsr2h,c
  8052  005358  CFDE F019          	movff	postinc2,??_IPV4_PseudoHeaderChecksum
  8053  00535C  CFDD F01A          	movff	postdec2,??_IPV4_PseudoHeaderChecksum+1
  8054  005360  5019               	movf	??_IPV4_PseudoHeaderChecksum,w,c
  8055  005362  261F               	addwf	IPV4_PseudoHeaderChecksum@cksm,f,c
  8056  005364  501A               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
  8057  005366  2220               	addwfc	IPV4_PseudoHeaderChecksum@cksm+1,f,c
  8058  005368  0E00               	movlw	0
  8059  00536A  2221               	addwfc	IPV4_PseudoHeaderChecksum@cksm+2,f,c
  8060  00536C  2222               	addwfc	IPV4_PseudoHeaderChecksum@cksm+3,f,c
  8061                           
  8062                           ; BSR set to: 1
  8063                           ;ipv4.c: 104: len--;
  8064  00536E  061E               	decf	IPV4_PseudoHeaderChecksum@len,f,c
  8065                           
  8066                           ; BSR set to: 1
  8067                           ;ipv4.c: 105: v++;
  8068  005370  0E02               	movlw	2
  8069  005372  261D               	addwf	IPV4_PseudoHeaderChecksum@v,f,c
  8070  005374                     l8882:
  8071                           
  8072                           ; BSR set to: 1
  8073  005374  501E               	movf	IPV4_PseudoHeaderChecksum@len,w,c
  8074  005376  E1ED               	bnz	l8876
  8075                           
  8076                           ; BSR set to: 1
  8077                           ;ipv4.c: 106: }
  8078                           ;ipv4.c: 109: cksm = (cksm & 0x0FFFF) + (cksm>>16);
  8079  005378  501F               	movf	IPV4_PseudoHeaderChecksum@cksm,w,c
  8080  00537A  6E19               	movwf	??_IPV4_PseudoHeaderChecksum& (0+255),c
  8081  00537C  5020               	movf	IPV4_PseudoHeaderChecksum@cksm+1,w,c
  8082  00537E  6E1A               	movwf	(??_IPV4_PseudoHeaderChecksum+1)& (0+255),c
  8083  005380  6A1B               	clrf	(??_IPV4_PseudoHeaderChecksum+2)& (0+255),c
  8084  005382  6A1C               	clrf	(??_IPV4_PseudoHeaderChecksum+3)& (0+255),c
  8085  005384  5021               	movf	IPV4_PseudoHeaderChecksum@cksm+2,w,c
  8086  005386  2419               	addwf	??_IPV4_PseudoHeaderChecksum,w,c
  8087  005388  6E1F               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
  8088  00538A  5022               	movf	IPV4_PseudoHeaderChecksum@cksm+3,w,c
  8089  00538C  201A               	addwfc	??_IPV4_PseudoHeaderChecksum+1,w,c
  8090  00538E  6E20               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
  8091  005390  0E00               	movlw	0
  8092  005392  201B               	addwfc	??_IPV4_PseudoHeaderChecksum+2,w,c
  8093  005394  6E21               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
  8094  005396  0E00               	movlw	0
  8095  005398  201C               	addwfc	??_IPV4_PseudoHeaderChecksum+3,w,c
  8096  00539A  6E22               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
  8097                           
  8098                           ; BSR set to: 1
  8099                           ;ipv4.c: 112: return cksm;
  8100  00539C  C01F  F017         	movff	IPV4_PseudoHeaderChecksum@cksm,?_IPV4_PseudoHeaderChecksum
  8101  0053A0  C020  F018         	movff	IPV4_PseudoHeaderChecksum@cksm+1,?_IPV4_PseudoHeaderChecksum+1
  8102                           
  8103                           ; BSR set to: 1
  8104  0053A4  0012               	return		;funcret
  8105  0053A6                     __end_of_IPV4_PseudoHeaderChecksum:
  8106                           	opt stack 0
  8107                           tosu	equ	0xFFF
  8108                           tosh	equ	0xFFE
  8109                           tosl	equ	0xFFD
  8110                           pclath	equ	0xFFA
  8111                           tblptru	equ	0xFF8
  8112                           tblptrh	equ	0xFF7
  8113                           tblptrl	equ	0xFF6
  8114                           tablat	equ	0xFF5
  8115                           prodh	equ	0xFF4
  8116                           prodl	equ	0xFF3
  8117                           intcon	equ	0xFF2
  8118                           indf0	equ	0xFEF
  8119                           postinc0	equ	0xFEE
  8120                           fsr0h	equ	0xFEA
  8121                           fsr0l	equ	0xFE9
  8122                           wreg	equ	0xFE8
  8123                           indf1	equ	0xFE7
  8124                           postinc1	equ	0xFE6
  8125                           postdec1	equ	0xFE5
  8126                           plusw1	equ	0xFE3
  8127                           fsr1h	equ	0xFE2
  8128                           fsr1l	equ	0xFE1
  8129                           bsr	equ	0xFE0
  8130                           indf2	equ	0xFDF
  8131                           postinc2	equ	0xFDE
  8132                           postdec2	equ	0xFDD
  8133                           plusw2	equ	0xFDB
  8134                           fsr2h	equ	0xFDA
  8135                           fsr2l	equ	0xFD9
  8136                           status	equ	0xFD8
  8137                           
  8138 ;; *************** function _ICMP_Receive *****************
  8139 ;; Defined at:
  8140 ;;		line 56 in file "../../TCPIP Library/source/icmp.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;  ipv4Hdr         2   79[BANK0 ] PTR struct .
  8143 ;;		 -> ipv4Header(20), 
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;  icmpHdr         8   86[BANK0 ] struct .
  8146 ;;  ret             1    0        enum E366
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  1    wreg      enum E366
  8149 ;; Registers used:
  8150 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8151 ;; Tracked objects:
  8152 ;;		On entry : F/0
  8153 ;;		On exit  : F/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8156 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8159 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8160 ;;Total ram usage:       15 bytes
  8161 ;; Hardware stack levels used:    1
  8162 ;; Hardware stack levels required when called:   14
  8163 ;; This function calls:
  8164 ;;		_ETH_ReadBlock
  8165 ;;		_ETH_SaveRDPT
  8166 ;;		_ICMP_EchoReply
  8167 ;; This function is called by:
  8168 ;;		_IPV4_Packet
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           	psect	text33
  8173  005BAC                     __ptext33:
  8174                           	opt stack 0
  8175  005BAC                     _ICMP_Receive:
  8176                           	opt stack 13
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;icmp.c: 60: ETH_ReadBlock((char *)&icmpHdr, sizeof(icmpHeader_t));
  8180                           
  8181                           ; BSR set to: 0
  8182                           
  8183                           ; BSR set to: 1
  8184                           ;incstack = 0
  8185  005BAC  0EB6               	movlw	low ICMP_Receive@icmpHdr
  8186  005BAE  6E17               	movwf	ETH_ReadBlock@buffer,c
  8187  005BB0  6A18               	clrf	ETH_ReadBlock@buffer+1,c
  8188  005BB2  D81E               	call	PL743	;call to abstracted procedure
  8189  005BB4  EC0C  F02C         	call	_ETH_ReadBlock	;wreg free
  8190                           
  8191                           ; BSR set to: 1
  8192                           ;icmp.c: 61: ETH_SaveRDPT();
  8193  005BB8  ECC9  F031         	call	_ETH_SaveRDPT	;wreg free
  8194                           
  8195                           ;icmp.c: 63: switch(((((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0x00FF) << 8)))
  8196  005BBC  D007               	goto	l8862
  8197  005BBE                     l8858:
  8198                           
  8199                           ; BSR set to: 0
  8200  005BBE  C0AF  F09F         	movff	ICMP_Receive@ipv4Hdr,ICMP_EchoReply@ipv4Hdr
  8201  005BC2  C0B0  F0A0         	movff	ICMP_Receive@ipv4Hdr+1,ICMP_EchoReply@ipv4Hdr+1
  8202  005BC6  0EB6               	movlw	ICMP_Receive@icmpHdr& (0+255)
  8203  005BC8  EF29  F023         	goto	_ICMP_EchoReply
  8204  005BCC                     l8862:
  8205  005BCC  0100               	movlb	0	; () banked
  8206  005BCE  51B6               	movf	ICMP_Receive@icmpHdr& (0+255),w,b
  8207  005BD0  6FB2               	movwf	(??_ICMP_Receive+1)& (0+255),b
  8208  005BD2  6BB1               	clrf	??_ICMP_Receive& (0+255),b
  8209  005BD4  51B7               	movf	(ICMP_Receive@icmpHdr+1)& (0+255),w,b
  8210  005BD6  6FB3               	movwf	(??_ICMP_Receive+2)& (0+255),b
  8211  005BD8  6BB4               	clrf	(??_ICMP_Receive+3)& (0+255),b
  8212  005BDA  51B1               	movf	??_ICMP_Receive& (0+255),w,b
  8213  005BDC  13B3               	iorwf	(??_ICMP_Receive+2)& (0+255),f,b
  8214  005BDE  51B2               	movf	(??_ICMP_Receive+1)& (0+255),w,b
  8215  005BE0  13B4               	iorwf	(??_ICMP_Receive+3)& (0+255),f,b
  8216                           
  8217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8218                           ; Switch size 1, requested type "space"
  8219                           ; Number of cases is 1, Range of values is 8 to 8
  8220                           ; switch strategies available:
  8221                           ; Name         Instructions Cycles
  8222                           ; simple_byte            4     3 (average)
  8223                           ;	Chosen strategy is simple_byte
  8224  005BE2  51B4               	movf	(??_ICMP_Receive+3)& (0+255),w,b
  8225  005BE4  0A08               	xorlw	8	; case 8
  8226  005BE6  A4D8               	btfss	status,2,c
  8227  005BE8  0012               	return	
  8228                           
  8229                           ; BSR set to: 0
  8230                           ; Switch size 1, requested type "space"
  8231                           ; Number of cases is 1, Range of values is 0 to 0
  8232                           ; switch strategies available:
  8233                           ; Name         Instructions Cycles
  8234                           ; simple_byte            4     3 (average)
  8235                           ;	Chosen strategy is simple_byte
  8236  005BEA  51B3               	movf	(??_ICMP_Receive+2)& (0+255),w,b
  8237  005BEC  E0E8               	bz	l8858
  8238                           
  8239                           ; BSR set to: 0
  8240  005BEE  0012               	return		;funcret
  8241  005BF0                     __end_of_ICMP_Receive:
  8242                           	opt stack 0
  8243  005BF0                     PL743:
  8244                           	opt stack 12
  8245  005BF0  6A1A               	clrf	ETH_ReadBlock@length+1,c
  8246  005BF2  0E08               	movlw	8
  8247  005BF4  6E19               	movwf	ETH_ReadBlock@length,c
  8248  005BF6  0C08               	retlw	8
  8249  005BF8                     __end_ofPL743:
  8250                           	opt stack 0
  8251                           tosu	equ	0xFFF
  8252                           tosh	equ	0xFFE
  8253                           tosl	equ	0xFFD
  8254                           pclath	equ	0xFFA
  8255                           tblptru	equ	0xFF8
  8256                           tblptrh	equ	0xFF7
  8257                           tblptrl	equ	0xFF6
  8258                           tablat	equ	0xFF5
  8259                           prodh	equ	0xFF4
  8260                           prodl	equ	0xFF3
  8261                           intcon	equ	0xFF2
  8262                           indf0	equ	0xFEF
  8263                           postinc0	equ	0xFEE
  8264                           fsr0h	equ	0xFEA
  8265                           fsr0l	equ	0xFE9
  8266                           wreg	equ	0xFE8
  8267                           indf1	equ	0xFE7
  8268                           postinc1	equ	0xFE6
  8269                           postdec1	equ	0xFE5
  8270                           plusw1	equ	0xFE3
  8271                           fsr1h	equ	0xFE2
  8272                           fsr1l	equ	0xFE1
  8273                           bsr	equ	0xFE0
  8274                           indf2	equ	0xFDF
  8275                           postinc2	equ	0xFDE
  8276                           postdec2	equ	0xFDD
  8277                           plusw2	equ	0xFDB
  8278                           fsr2h	equ	0xFDA
  8279                           fsr2l	equ	0xFD9
  8280                           status	equ	0xFD8
  8281                           
  8282 ;; *************** function _ICMP_EchoReply *****************
  8283 ;; Defined at:
  8284 ;;		line 86 in file "../../TCPIP Library/source/icmp.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;  icmpHdr         1    wreg     PTR struct .
  8287 ;;		 -> ICMP_Receive@icmpHdr(8), 
  8288 ;;  ipv4Hdr         2   63[BANK0 ] PTR struct .
  8289 ;;		 -> ipv4Header(20), 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;  icmpHdr         1   78[BANK0 ] PTR struct .
  8292 ;;		 -> ICMP_Receive@icmpHdr(8), 
  8293 ;;  ipv4PayloadL    2   75[BANK0 ] unsigned int 
  8294 ;;  icmp_cksm_st    2    0        unsigned int 
  8295 ;;  cksm            2   73[BANK0 ] unsigned int 
  8296 ;;  ret             1   77[BANK0 ] enum E366
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  1    wreg      enum E366
  8299 ;; Registers used:
  8300 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8301 ;; Tracked objects:
  8302 ;;		On entry : F/0
  8303 ;;		On exit  : F/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8306 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8307 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8308 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8309 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;Total ram usage:       16 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:   13
  8313 ;; This function calls:
  8314 ;;		_ETH_Copy
  8315 ;;		_ETH_Insert
  8316 ;;		_ETH_SaveRDPT
  8317 ;;		_ETH_TxComputeChecksum
  8318 ;;		_ETH_Write16
  8319 ;;		_IPV4_Send
  8320 ;;		_IPv4_Start
  8321 ;; This function is called by:
  8322 ;;		_ICMP_Receive
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           	psect	text34
  8327  004652                     __ptext34:
  8328                           	opt stack 0
  8329  004652                     _ICMP_EchoReply:
  8330                           	opt stack 13
  8331                           
  8332                           ; BSR set to: 0
  8333                           ;incstack = 0
  8334                           ;ICMP_EchoReply@icmpHdr stored from wreg
  8335  004652  6FAE               	movwf	ICMP_EchoReply@icmpHdr& (0+255),b
  8336                           
  8337                           ;icmp.c: 89: error_msg ret = ERROR;
  8338  004654  0100               	movlb	0	; () banked
  8339  004656  6BAD               	clrf	ICMP_EchoReply@ret& (0+255),b
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;icmp.c: 91: ret = IPv4_Start(ipv4Hdr->srcIpAddress, ipv4Hdr->protocol);
  8343  004658  EE20 F00C          	lfsr	2,12
  8344  00465C  D89A               	call	PL633	;call to abstracted procedure
  8345  00465E  CFDE F022          	movff	postinc2,IPv4_Start@destAddress
  8346  004662  CFDE F023          	movff	postinc2,IPv4_Start@destAddress+1
  8347  004666  CFDE F024          	movff	postinc2,IPv4_Start@destAddress+2
  8348  00466A  CFDE F025          	movff	postinc2,IPv4_Start@destAddress+3
  8349  00466E  EE20 F009          	lfsr	2,9
  8350  004672  D88F               	call	PL633	;call to abstracted procedure
  8351  004674  50DF               	movf	indf2,w,c
  8352  004676  6E26               	movwf	IPv4_Start@protocol,c
  8353  004678  EC01  F021         	call	_IPv4_Start	;wreg free
  8354  00467C  6FAD               	movwf	ICMP_EchoReply@ret& (0+255),b
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;icmp.c: 92: if(ret == SUCCESS)
  8358  00467E  05AD               	decf	ICMP_EchoReply@ret& (0+255),w,b
  8359  004680  E16A               	bnz	l8422
  8360                           
  8361                           ; BSR set to: 0
  8362                           ;icmp.c: 93: {
  8363                           ;icmp.c: 94: uint16_t icmp_cksm_start;
  8364                           ;icmp.c: 95: uint16_t ipv4PayloadLength = ipv4Hdr->length - sizeof(ipv4Header_t);
  8365  004682  EE20 F002          	lfsr	2,2
  8366  004686  D885               	call	PL633	;call to abstracted procedure
  8367  004688  CFDE F0A1          	movff	postinc2,??_ICMP_EchoReply
  8368  00468C  CFDD F0A2          	movff	postdec2,??_ICMP_EchoReply+1
  8369  004690  0EEC               	movlw	236
  8370  004692  25A1               	addwf	??_ICMP_EchoReply& (0+255),w,b
  8371  004694  6FAB               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
  8372  004696  0EFF               	movlw	255
  8373  004698  21A2               	addwfc	(??_ICMP_EchoReply+1)& (0+255),w,b
  8374  00469A  6FAC               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
  8375                           
  8376                           ;icmp.c: 97: ipv4PayloadLength = ipv4Hdr->length - (uint16_t)(ipv4Hdr->ihl << 2);
  8377  00469C  C09F  FFD9         	movff	ICMP_EchoReply@ipv4Hdr,fsr2l
  8378  0046A0  C0A0  FFDA         	movff	ICMP_EchoReply@ipv4Hdr+1,fsr2h
  8379  0046A4  50DF               	movf	223,w,c
  8380  0046A6  0B0F               	andlw	15
  8381  0046A8  6FA1               	movwf	??_ICMP_EchoReply& (0+255),b
  8382  0046AA  6BA2               	clrf	(??_ICMP_EchoReply+1)& (0+255),b
  8383  0046AC  90D8               	bcf	status,0,c
  8384  0046AE  37A1               	rlcf	??_ICMP_EchoReply& (0+255),f,b
  8385  0046B0  37A2               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
  8386  0046B2  90D8               	bcf	status,0,c
  8387  0046B4  37A1               	rlcf	??_ICMP_EchoReply& (0+255),f,b
  8388  0046B6  37A2               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
  8389  0046B8  EE20 F002          	lfsr	2,2
  8390  0046BC  D86A               	call	PL633	;call to abstracted procedure
  8391  0046BE  CFDE F0A3          	movff	postinc2,??_ICMP_EchoReply+2
  8392  0046C2  CFDD F0A4          	movff	postdec2,??_ICMP_EchoReply+3
  8393  0046C6  51A1               	movf	??_ICMP_EchoReply& (0+255),w,b
  8394  0046C8  5DA3               	subwf	(??_ICMP_EchoReply+2)& (0+255),w,b
  8395  0046CA  6FAB               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
  8396  0046CC  51A2               	movf	(??_ICMP_EchoReply+1)& (0+255),w,b
  8397  0046CE  59A4               	subwfb	(??_ICMP_EchoReply+3)& (0+255),w,b
  8398  0046D0  6FAC               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;icmp.c: 99: ETH_Write16(ECHO_REPLY);
  8402  0046D2  6A18               	clrf	ETH_Write16@data+1,c
  8403  0046D4  6A17               	clrf	ETH_Write16@data,c
  8404  0046D6  ECB2  F031         	call	_ETH_Write16	;wreg free
  8405                           
  8406                           ;icmp.c: 100: ETH_Write16(0);
  8407  0046DA  6A18               	clrf	ETH_Write16@data+1,c
  8408  0046DC  6A17               	clrf	ETH_Write16@data,c
  8409  0046DE  ECB2  F031         	call	_ETH_Write16	;wreg free
  8410                           
  8411                           ;icmp.c: 101: ETH_Write16(((((uint16_t)icmpHdr->identifier & (uint16_t)0xFF00) >> 8) | (
      +                          ((uint16_t)icmpHdr->identifier & (uint16_t)0x00FF) << 8)));
  8412  0046E2  D85C               	call	PL717	;call to abstracted procedure
  8413  0046E4  0E04               	movlw	4
  8414  0046E6  D849               	call	PL577	;call to abstracted procedure
  8415  0046E8  0E04               	movlw	4
  8416  0046EA  D837               	call	PL507	;call to abstracted procedure
  8417  0046EC  ECB2  F031         	call	_ETH_Write16	;wreg free
  8418                           
  8419                           ;icmp.c: 102: ETH_Write16(((((uint16_t)icmpHdr->sequence & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)icmpHdr->sequence & (uint16_t)0x00FF) << 8)));
  8420  0046F0  D855               	call	PL717	;call to abstracted procedure
  8421  0046F2  0E06               	movlw	6
  8422  0046F4  D842               	call	PL577	;call to abstracted procedure
  8423  0046F6  0E06               	movlw	6
  8424  0046F8  D830               	call	PL507	;call to abstracted procedure
  8425  0046FA  ECB2  F031         	call	_ETH_Write16	;wreg free
  8426                           
  8427                           ;icmp.c: 105: ret = ETH_Copy(ipv4PayloadLength - sizeof(icmpHeader_t));
  8428  0046FE  0EF8               	movlw	248
  8429  004700  0100               	movlb	0	; () banked
  8430  004702  25AB               	addwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),w,b
  8431  004704  6F6D               	movwf	ETH_Copy@len& (0+255),b
  8432  004706  0EFF               	movlw	255
  8433  004708  21AC               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),w,b
  8434  00470A  6F6E               	movwf	(ETH_Copy@len+1)& (0+255),b
  8435  00470C  ECEE  F026         	call	_ETH_Copy	;wreg free
  8436  004710  0100               	movlb	0	; () banked
  8437  004712  6FAD               	movwf	ICMP_EchoReply@ret& (0+255),b
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;icmp.c: 106: if(ret==SUCCESS)
  8441  004714  05AD               	decf	ICMP_EchoReply@ret& (0+255),w,b
  8442  004716  E11F               	bnz	l8422
  8443                           
  8444                           ; BSR set to: 0
  8445                           ;icmp.c: 107: {
  8446                           ;icmp.c: 108: ETH_SaveRDPT();
  8447  004718  ECC9  F031         	call	_ETH_SaveRDPT	;wreg free
  8448                           
  8449                           ;icmp.c: 112: cksm = ETH_TxComputeChecksum(icmp_cksm_start, ipv4PayloadLength, 0);
  8450  00471C  6A26               	clrf	ETH_TxComputeChecksum@position+1,c
  8451  00471E  0E22               	movlw	34
  8452  004720  6E25               	movwf	ETH_TxComputeChecksum@position,c
  8453  004722  C0AB  F027         	movff	ICMP_EchoReply@ipv4PayloadLength,ETH_TxComputeChecksum@len
  8454  004726  C0AC  F028         	movff	ICMP_EchoReply@ipv4PayloadLength+1,ETH_TxComputeChecksum@len+1
  8455  00472A  6A2A               	clrf	ETH_TxComputeChecksum@seed+1,c
  8456  00472C  6A29               	clrf	ETH_TxComputeChecksum@seed,c
  8457  00472E  EC1B  F02A         	call	_ETH_TxComputeChecksum	;wreg free
  8458  004732  C025  F0A9         	movff	?_ETH_TxComputeChecksum,ICMP_EchoReply@cksm
  8459  004736  C026  F0AA         	movff	?_ETH_TxComputeChecksum+1,ICMP_EchoReply@cksm+1
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;icmp.c: 113: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (int)(((char*)&((icmpHeader_t *)1)->checksum)-1));
  8463  00473A  EC9A  F02B         	call	PL579	;call to abstracted procedure
  8464  00473E  0E24               	movlw	36
  8465  004740  6E19               	movwf	ETH_Insert@offset,c
  8466  004742  0EA9               	movlw	ICMP_EchoReply@cksm& (0+255)
  8467  004744  ECD6  F02E         	call	_ETH_Insert
  8468                           
  8469                           ;icmp.c: 114: ret = IPV4_Send(ipv4PayloadLength);
  8470  004748  C0AB  F031         	movff	ICMP_EchoReply@ipv4PayloadLength,IPV4_Send@payloadLength
  8471  00474C  C0AC  F032         	movff	ICMP_EchoReply@ipv4PayloadLength+1,IPV4_Send@payloadLength+1
  8472  004750  EC67  F02B         	call	_IPV4_Send	;wreg free
  8473  004754  6FAD               	movwf	ICMP_EchoReply@ret& (0+255),b
  8474  004756                     l8422:
  8475                           
  8476                           ; BSR set to: 0
  8477                           ;icmp.c: 115: }
  8478                           ;icmp.c: 116: }
  8479                           ;icmp.c: 117: return ret;
  8480  004756  51AD               	movf	ICMP_EchoReply@ret& (0+255),w,b
  8481                           
  8482                           ; BSR set to: 0
  8483  004758  0012               	return		;funcret
  8484  00475A                     __end_of_ICMP_EchoReply:
  8485                           	opt stack 0
  8486  00475A                     PL507:
  8487                           	opt stack 13
  8488  00475A  26D9               	addwf	fsr2l,f,c
  8489  00475C  CFDE F0A5          	movff	postinc2,??_ICMP_EchoReply+4
  8490  004760  CFDD F0A6          	movff	postdec2,??_ICMP_EchoReply+5
  8491  004764  C0A6  F0A5         	movff	??_ICMP_EchoReply+5,??_ICMP_EchoReply+4
  8492  004768  6BA6               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  8493  00476A  6BA6               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  8494  00476C  51A3               	movf	(??_ICMP_EchoReply+2)& (0+255),w,b
  8495  00476E  11A5               	iorwf	(??_ICMP_EchoReply+4)& (0+255),w,b
  8496  004770  6E17               	movwf	ETH_Write16@data,c
  8497  004772  51A4               	movf	(??_ICMP_EchoReply+3)& (0+255),w,b
  8498  004774  11A6               	iorwf	(??_ICMP_EchoReply+5)& (0+255),w,b
  8499  004776  6E18               	movwf	ETH_Write16@data+1,c
  8500  004778  0012               	return	
  8501  00477A                     __end_ofPL507:
  8502                           	opt stack 0
  8503  00477A                     PL577:
  8504                           	opt stack 13
  8505  00477A  26D9               	addwf	fsr2l,f,c
  8506  00477C  CFDE F0A1          	movff	postinc2,??_ICMP_EchoReply
  8507  004780  CFDD F0A2          	movff	postdec2,??_ICMP_EchoReply+1
  8508  004784  51A1               	movf	??_ICMP_EchoReply& (0+255),w,b
  8509  004786  6FA4               	movwf	(??_ICMP_EchoReply+3)& (0+255),b
  8510  004788  6BA3               	clrf	(??_ICMP_EchoReply+2)& (0+255),b
  8511  00478A  51AE               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
  8512  00478C  6ED9               	movwf	fsr2l,c
  8513  00478E  6ADA               	clrf	fsr2h,c
  8514  004790  0012               	return	
  8515  004792                     __end_ofPL577:
  8516                           	opt stack 0
  8517  004792                     PL633:
  8518                           	opt stack 13
  8519  004792  519F               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
  8520  004794  26D9               	addwf	fsr2l,f,c
  8521  004796  51A0               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
  8522  004798  22DA               	addwfc	fsr2h,f,c
  8523  00479A  0012               	return	
  8524  00479C                     __end_ofPL633:
  8525                           	opt stack 0
  8526  00479C                     PL717:
  8527                           	opt stack 13
  8528  00479C  0100               	movlb	0	; () banked
  8529  00479E  51AE               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
  8530  0047A0  6ED9               	movwf	fsr2l,c
  8531  0047A2  6ADA               	clrf	fsr2h,c
  8532  0047A4  0012               	return	
  8533  0047A6                     __end_ofPL717:
  8534                           	opt stack 0
  8535                           tosu	equ	0xFFF
  8536                           tosh	equ	0xFFE
  8537                           tosl	equ	0xFFD
  8538                           pclath	equ	0xFFA
  8539                           tblptru	equ	0xFF8
  8540                           tblptrh	equ	0xFF7
  8541                           tblptrl	equ	0xFF6
  8542                           tablat	equ	0xFF5
  8543                           prodh	equ	0xFF4
  8544                           prodl	equ	0xFF3
  8545                           intcon	equ	0xFF2
  8546                           indf0	equ	0xFEF
  8547                           postinc0	equ	0xFEE
  8548                           fsr0h	equ	0xFEA
  8549                           fsr0l	equ	0xFE9
  8550                           wreg	equ	0xFE8
  8551                           indf1	equ	0xFE7
  8552                           postinc1	equ	0xFE6
  8553                           postdec1	equ	0xFE5
  8554                           plusw1	equ	0xFE3
  8555                           fsr1h	equ	0xFE2
  8556                           fsr1l	equ	0xFE1
  8557                           bsr	equ	0xFE0
  8558                           indf2	equ	0xFDF
  8559                           postinc2	equ	0xFDE
  8560                           postdec2	equ	0xFDD
  8561                           plusw2	equ	0xFDB
  8562                           fsr2h	equ	0xFDA
  8563                           fsr2l	equ	0xFD9
  8564                           status	equ	0xFD8
  8565                           
  8566 ;; *************** function _ETH_SaveRDPT *****************
  8567 ;; Defined at:
  8568 ;;		line 828 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;		None
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;		None               void
  8575 ;; Registers used:
  8576 ;;		None
  8577 ;; Tracked objects:
  8578 ;;		On entry : E/1
  8579 ;;		On exit  : E/0
  8580 ;;		Unchanged: E/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8586 ;;Total ram usage:        0 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:    8
  8589 ;; This function calls:
  8590 ;;		Nothing
  8591 ;; This function is called by:
  8592 ;;		_ICMP_Receive
  8593 ;;		_ICMP_EchoReply
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           	psect	text35
  8598  006392                     __ptext35:
  8599                           	opt stack 0
  8600  006392                     _ETH_SaveRDPT:
  8601                           	opt stack 17
  8602                           
  8603                           ;j60_driver.c: 830: ethData.saveRDPT = ERDPT;
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;incstack = 0
  8607  006392  CF7A F1C0          	movff	3962,_ethData+3	;volatile
  8608  006396  CF7B F1C1          	movff	3963,_ethData+4	;volatile
  8609  00639A  0012               	return		;funcret
  8610  00639C                     __end_of_ETH_SaveRDPT:
  8611                           	opt stack 0
  8612                           tosu	equ	0xFFF
  8613                           tosh	equ	0xFFE
  8614                           tosl	equ	0xFFD
  8615                           pclath	equ	0xFFA
  8616                           tblptru	equ	0xFF8
  8617                           tblptrh	equ	0xFF7
  8618                           tblptrl	equ	0xFF6
  8619                           tablat	equ	0xFF5
  8620                           prodh	equ	0xFF4
  8621                           prodl	equ	0xFF3
  8622                           intcon	equ	0xFF2
  8623                           indf0	equ	0xFEF
  8624                           postinc0	equ	0xFEE
  8625                           fsr0h	equ	0xFEA
  8626                           fsr0l	equ	0xFE9
  8627                           wreg	equ	0xFE8
  8628                           indf1	equ	0xFE7
  8629                           postinc1	equ	0xFE6
  8630                           postdec1	equ	0xFE5
  8631                           plusw1	equ	0xFE3
  8632                           fsr1h	equ	0xFE2
  8633                           fsr1l	equ	0xFE1
  8634                           bsr	equ	0xFE0
  8635                           indf2	equ	0xFDF
  8636                           postinc2	equ	0xFDE
  8637                           postdec2	equ	0xFDD
  8638                           plusw2	equ	0xFDB
  8639                           fsr2h	equ	0xFDA
  8640                           fsr2l	equ	0xFD9
  8641                           status	equ	0xFD8
  8642                           
  8643 ;; *************** function _ETH_Copy *****************
  8644 ;; Defined at:
  8645 ;;		line 668 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  len             2   13[BANK0 ] unsigned int 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  tmp_len         2   17[BANK0 ] unsigned int 
  8650 ;;  timer           2   15[BANK0 ] unsigned int 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1    wreg      enum E6944
  8653 ;; Registers used:
  8654 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : F/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8661 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8664 ;;Total ram usage:        6 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; Hardware stack levels required when called:   12
  8667 ;; This function calls:
  8668 ;;		_SYSLOG_Write
  8669 ;;		___wmul
  8670 ;; This function is called by:
  8671 ;;		_ICMP_EchoReply
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text36
  8676  004DDC                     __ptext36:
  8677                           	opt stack 0
  8678  004DDC                     _ETH_Copy:
  8679                           	opt stack 13
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;j60_driver.c: 670: uint16_t timer;
  8683                           ;j60_driver.c: 671: uint16_t tmp_len;
  8684                           ;j60_driver.c: 673: timer = 2 * len;
  8685                           
  8686                           ;incstack = 0
  8687  004DDC  90D8               	bcf	status,0,c
  8688  004DDE  356D               	rlcf	ETH_Copy@len& (0+255),w,b
  8689  004DE0  6F6F               	movwf	ETH_Copy@timer& (0+255),b
  8690  004DE2  356E               	rlcf	(ETH_Copy@len+1)& (0+255),w,b
  8691  004DE4  6F70               	movwf	(ETH_Copy@timer+1)& (0+255),b
  8692                           
  8693                           ;j60_driver.c: 674: while(ECON1bits.DMAST!=0 && --timer) __nop();
  8694  004DE6  D001               	goto	l599
  8695  004DE8                     l600:
  8696                           
  8697                           ; BSR set to: 0
  8698  004DE8  F000               	nop	
  8699  004DEA                     l599:
  8700  004DEA  AAD2               	btfss	4050,5,c	;volatile
  8701  004DEC  D002               	goto	l603
  8702  004DEE  D84A               	call	PL651	;call to abstracted procedure
  8703  004DF0  E1FB               	bnz	l600
  8704  004DF2                     l603:
  8705                           
  8706                           ;j60_driver.c: 675: if(ECON1bits.DMAST==0)
  8707  004DF2  BAD2               	btfsc	4050,5,c	;volatile
  8708  004DF4  D040               	goto	l8186
  8709                           
  8710                           ;j60_driver.c: 676: {
  8711                           ;j60_driver.c: 677: EDMADST = EWRPT;
  8712  004DF6  CEE2 FEF4          	movff	3810,3828	;volatile
  8713  004DFA  CEE3 FEF5          	movff	3811,3829	;volatile
  8714                           
  8715                           ;j60_driver.c: 678: EDMAST = ethData.saveRDPT;
  8716  004DFE  C1C0  FEF0         	movff	_ethData+3,3824	;volatile
  8717  004E02  C1C1  FEF1         	movff	_ethData+4,3825	;volatile
  8718                           
  8719                           ;j60_driver.c: 680: tmp_len = ethData.saveRDPT + len;
  8720  004E06  0100               	movlb	0	; () banked
  8721  004E08  516D               	movf	ETH_Copy@len& (0+255),w,b
  8722  004E0A  0101               	movlb	1	; () banked
  8723  004E0C  25C0               	addwf	(_ethData+3)& (0+255),w,b	;volatile
  8724  004E0E  0100               	movlb	0	; () banked
  8725  004E10  6F71               	movwf	ETH_Copy@tmp_len& (0+255),b
  8726  004E12  516E               	movf	(ETH_Copy@len+1)& (0+255),w,b
  8727  004E14  0101               	movlb	1	; () banked
  8728  004E16  21C1               	addwfc	(_ethData+4)& (0+255),w,b	;volatile
  8729  004E18  0100               	movlb	0	; () banked
  8730  004E1A  6F72               	movwf	(ETH_Copy@tmp_len+1)& (0+255),b
  8731                           
  8732                           ;j60_driver.c: 682: if (tmp_len > ((((8192) - (1518)) - 2)) )
  8733  004E1C  0E11               	movlw	17
  8734  004E1E  5D71               	subwf	ETH_Copy@tmp_len& (0+255),w,b
  8735  004E20  0E1A               	movlw	26
  8736  004E22  5972               	subwfb	(ETH_Copy@tmp_len+1)& (0+255),w,b
  8737  004E24  E304               	bnc	l8174
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;j60_driver.c: 683: {
  8741                           ;j60_driver.c: 684: tmp_len = tmp_len - ((((8192) - (1518)) - 2));
  8742  004E26  0EF0               	movlw	240
  8743  004E28  2771               	addwf	ETH_Copy@tmp_len& (0+255),f,b
  8744  004E2A  0EE5               	movlw	229
  8745  004E2C  2372               	addwfc	(ETH_Copy@tmp_len+1)& (0+255),f,b
  8746  004E2E                     l8174:
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;j60_driver.c: 685: EDMAND = (0) + tmp_len;
  8750  004E2E  C071  FEF2         	movff	ETH_Copy@tmp_len,3826	;volatile
  8751  004E32  C072  FEF3         	movff	ETH_Copy@tmp_len+1,3827	;volatile
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;j60_driver.c: 690: }
  8755                           ;j60_driver.c: 692: ECON1bits.CSUMEN = 0;
  8756                           
  8757                           ;j60_driver.c: 687: }else
  8758  004E36  98D2               	bcf	4050,4,c	;volatile
  8759                           
  8760                           ;j60_driver.c: 693: ECON1bits.DMAST = 1;
  8761  004E38  8AD2               	bsf	4050,5,c	;volatile
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;j60_driver.c: 695: timer = 40 * len;
  8765  004E3A  C06D  F017         	movff	ETH_Copy@len,___wmul@multiplier
  8766  004E3E  C06E  F018         	movff	ETH_Copy@len+1,___wmul@multiplier+1
  8767  004E42  6A1A               	clrf	___wmul@multiplicand+1,c
  8768  004E44  0E28               	movlw	40
  8769  004E46  6E19               	movwf	___wmul@multiplicand,c
  8770  004E48  EC79  F030         	call	___wmul	;wreg free
  8771  004E4C  C017  F06F         	movff	?___wmul,ETH_Copy@timer
  8772  004E50  C018  F070         	movff	?___wmul+1,ETH_Copy@timer+1
  8773                           
  8774                           ;j60_driver.c: 696: while(ECON1bits.DMAST!=0 && --timer) __nop();
  8775  004E54  D001               	goto	l607
  8776  004E56                     l608:
  8777                           
  8778                           ; BSR set to: 0
  8779  004E56  F000               	nop	
  8780  004E58                     l607:
  8781  004E58  AAD2               	btfss	4050,5,c	;volatile
  8782  004E5A  D002               	goto	l611
  8783  004E5C  D813               	call	PL651	;call to abstracted procedure
  8784  004E5E  E1FB               	bnz	l608
  8785  004E60                     l611:
  8786                           
  8787                           ;j60_driver.c: 697: if(ECON1bits.DMAST == 0)
  8788  004E60  BAD2               	btfsc	4050,5,c	;volatile
  8789  004E62  D009               	goto	l8186
  8790                           
  8791                           ;j60_driver.c: 698: {
  8792                           ;j60_driver.c: 699: EWRPT += len;
  8793  004E64  0100               	movlb	0	; () banked
  8794  004E66  516D               	movf	ETH_Copy@len& (0+255),w,b
  8795  004E68  010E               	movlb	14	; () banked
  8796  004E6A  27E2               	addwf	226,f,b	;volatile
  8797  004E6C  0100               	movlb	0	; () banked
  8798  004E6E  516E               	movf	(ETH_Copy@len+1)& (0+255),w,b
  8799  004E70  010E               	movlb	14	; () banked
  8800  004E72  23E3               	addwfc	227,f,b	;volatile
  8801                           
  8802                           ; BSR set to: 14
  8803                           ;j60_driver.c: 700: return SUCCESS;
  8804  004E74  0C01               	retlw	1
  8805  004E76                     l8186:
  8806                           
  8807                           ;j60_driver.c: 701: }
  8808                           ;j60_driver.c: 702: }
  8809                           ;j60_driver.c: 704: SYSLOG_Write("DMA TIMEOUT!!!");
  8810  004E76  0E77               	movlw	low STR_1
  8811  004E78  EC79  F026         	call	PL615	;call to abstracted procedure
  8812  004E7C  EC8C  F030         	call	_SYSLOG_Write	;wreg free
  8813  004E80  00FF               	reset		;# 
  8814                           
  8815                           ;j60_driver.c: 706: return DMA_TIMEOUT;
  8816  004E82  0C0C               	retlw	12	;funcret
  8817  004E84                     __end_of_ETH_Copy:
  8818                           	opt stack 0
  8819  004E84                     PL651:
  8820                           	opt stack 13
  8821  004E84  0100               	movlb	0	; () banked
  8822  004E86  076F               	decf	ETH_Copy@timer& (0+255),f,b
  8823  004E88  A0D8               	btfss	status,0,c
  8824  004E8A  0770               	decf	(ETH_Copy@timer+1)& (0+255),f,b
  8825  004E8C  516F               	movf	ETH_Copy@timer& (0+255),w,b
  8826  004E8E  1170               	iorwf	(ETH_Copy@timer+1)& (0+255),w,b
  8827  004E90  0012               	return	
  8828  004E92                     __end_ofPL651:
  8829                           	opt stack 0
  8830                           tosu	equ	0xFFF
  8831                           tosh	equ	0xFFE
  8832                           tosl	equ	0xFFD
  8833                           pclath	equ	0xFFA
  8834                           tblptru	equ	0xFF8
  8835                           tblptrh	equ	0xFF7
  8836                           tblptrl	equ	0xFF6
  8837                           tablat	equ	0xFF5
  8838                           prodh	equ	0xFF4
  8839                           prodl	equ	0xFF3
  8840                           intcon	equ	0xFF2
  8841                           indf0	equ	0xFEF
  8842                           postinc0	equ	0xFEE
  8843                           fsr0h	equ	0xFEA
  8844                           fsr0l	equ	0xFE9
  8845                           wreg	equ	0xFE8
  8846                           indf1	equ	0xFE7
  8847                           postinc1	equ	0xFE6
  8848                           postdec1	equ	0xFE5
  8849                           plusw1	equ	0xFE3
  8850                           fsr1h	equ	0xFE2
  8851                           fsr1l	equ	0xFE1
  8852                           bsr	equ	0xFE0
  8853                           indf2	equ	0xFDF
  8854                           postinc2	equ	0xFDE
  8855                           postdec2	equ	0xFDD
  8856                           plusw2	equ	0xFDB
  8857                           fsr2h	equ	0xFDA
  8858                           fsr2l	equ	0xFD9
  8859                           status	equ	0xFD8
  8860                           
  8861 ;; *************** function ___wmul *****************
  8862 ;; Defined at:
  8863 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  multiplier      2   22[COMRAM] unsigned int 
  8866 ;;  multiplicand    2   24[COMRAM] unsigned int 
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;  product         2   26[COMRAM] unsigned int 
  8869 ;; Return value:  Size  Location     Type
  8870 ;;                  2   22[COMRAM] unsigned int 
  8871 ;; Registers used:
  8872 ;;		wreg, status,2, status,0, prodl, prodh
  8873 ;; Tracked objects:
  8874 ;;		On entry : F/0
  8875 ;;		On exit  : F/0
  8876 ;;		Unchanged: F/0
  8877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8881 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8882 ;;Total ram usage:        6 bytes
  8883 ;; Hardware stack levels used:    1
  8884 ;; Hardware stack levels required when called:    8
  8885 ;; This function calls:
  8886 ;;		Nothing
  8887 ;; This function is called by:
  8888 ;;		_ETH_Copy
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892                           	psect	text37
  8893  0060F2                     __ptext37:
  8894                           	opt stack 0
  8895  0060F2                     ___wmul:
  8896                           	opt stack 16
  8897                           
  8898                           ; BSR set to: 0
  8899                           
  8900                           ;incstack = 0
  8901  0060F2  5017               	movf	___wmul@multiplier,w,c
  8902  0060F4  0219               	mulwf	___wmul@multiplicand,c
  8903  0060F6  CFF3 F01B          	movff	prodl,___wmul@product
  8904  0060FA  CFF4 F01C          	movff	prodh,___wmul@product+1
  8905  0060FE  5017               	movf	___wmul@multiplier,w,c
  8906  006100  021A               	mulwf	___wmul@multiplicand+1,c
  8907  006102  50F3               	movf	prodl,w,c
  8908  006104  261C               	addwf	___wmul@product+1,f,c
  8909  006106  5018               	movf	___wmul@multiplier+1,w,c
  8910  006108  0219               	mulwf	___wmul@multiplicand,c
  8911  00610A  50F3               	movf	prodl,w,c
  8912  00610C  261C               	addwf	___wmul@product+1,f,c
  8913                           
  8914                           ; BSR set to: 0
  8915  00610E  C01B  F017         	movff	___wmul@product,?___wmul
  8916  006112  C01C  F018         	movff	___wmul@product+1,?___wmul+1
  8917                           
  8918                           ; BSR set to: 0
  8919  006116  0012               	return		;funcret
  8920  006118                     __end_of___wmul:
  8921                           	opt stack 0
  8922                           tosu	equ	0xFFF
  8923                           tosh	equ	0xFFE
  8924                           tosl	equ	0xFFD
  8925                           pclath	equ	0xFFA
  8926                           tblptru	equ	0xFF8
  8927                           tblptrh	equ	0xFF7
  8928                           tblptrl	equ	0xFF6
  8929                           tablat	equ	0xFF5
  8930                           prodh	equ	0xFF4
  8931                           prodl	equ	0xFF3
  8932                           intcon	equ	0xFF2
  8933                           indf0	equ	0xFEF
  8934                           postinc0	equ	0xFEE
  8935                           fsr0h	equ	0xFEA
  8936                           fsr0l	equ	0xFE9
  8937                           wreg	equ	0xFE8
  8938                           indf1	equ	0xFE7
  8939                           postinc1	equ	0xFE6
  8940                           postdec1	equ	0xFE5
  8941                           plusw1	equ	0xFE3
  8942                           fsr1h	equ	0xFE2
  8943                           fsr1l	equ	0xFE1
  8944                           bsr	equ	0xFE0
  8945                           indf2	equ	0xFDF
  8946                           postinc2	equ	0xFDE
  8947                           postdec2	equ	0xFDD
  8948                           plusw2	equ	0xFDB
  8949                           fsr2h	equ	0xFDA
  8950                           fsr2l	equ	0xFD9
  8951                           status	equ	0xFD8
  8952                           
  8953 ;; *************** function _SYSLOG_Write *****************
  8954 ;; Defined at:
  8955 ;;		line 50 in file "../../TCPIP Library/source/syslog.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;  message         2   48[COMRAM] PTR const unsigned char 
  8958 ;;		 -> main@str(32), STR_6(13), STR_5(17), STR_1(15), 
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;  t               2   11[BANK0 ] unsigned int 
  8961 ;; Return value:  Size  Location     Type
  8962 ;;		None               void
  8963 ;; Registers used:
  8964 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/1
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8973 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8974 ;;Total ram usage:        4 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; Hardware stack levels required when called:   11
  8977 ;; This function calls:
  8978 ;;		_printf
  8979 ;;		_time
  8980 ;; This function is called by:
  8981 ;;		_ETH_Copy
  8982 ;;		_main
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           	psect	text38
  8987  006118                     __ptext38:
  8988                           	opt stack 0
  8989  006118                     _SYSLOG_Write:
  8990                           	opt stack 19
  8991                           
  8992                           ;syslog.c: 52: unsigned int t = (unsigned int) time(0);
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;incstack = 0
  8996  006118  6A17               	clrf	time@t,c
  8997  00611A  6A18               	clrf	time@t+1,c
  8998  00611C  ECC2  F02C         	call	_time	;wreg free
  8999  006120  C017  F06B         	movff	?_time,SYSLOG_Write@t
  9000  006124  C018  F06C         	movff	?_time+1,SYSLOG_Write@t+1
  9001                           
  9002                           ;syslog.c: 53: printf("%u : %s\r\n",t,message);
  9003  006128  C06B  F060         	movff	SYSLOG_Write@t,?_printf
  9004  00612C  C06C  F061         	movff	SYSLOG_Write@t+1,?_printf+1
  9005  006130  C031  F062         	movff	SYSLOG_Write@message,?_printf+2
  9006  006134  C032  F063         	movff	SYSLOG_Write@message+1,?_printf+3
  9007  006138  0E9F               	movlw	STR_4& (0+255)
  9008  00613A  EF9F  F030         	goto	_printf
  9009  00613E                     __end_of_SYSLOG_Write:
  9010                           	opt stack 0
  9011                           tosu	equ	0xFFF
  9012                           tosh	equ	0xFFE
  9013                           tosl	equ	0xFFD
  9014                           pclath	equ	0xFFA
  9015                           tblptru	equ	0xFF8
  9016                           tblptrh	equ	0xFF7
  9017                           tblptrl	equ	0xFF6
  9018                           tablat	equ	0xFF5
  9019                           prodh	equ	0xFF4
  9020                           prodl	equ	0xFF3
  9021                           intcon	equ	0xFF2
  9022                           indf0	equ	0xFEF
  9023                           postinc0	equ	0xFEE
  9024                           fsr0h	equ	0xFEA
  9025                           fsr0l	equ	0xFE9
  9026                           wreg	equ	0xFE8
  9027                           indf1	equ	0xFE7
  9028                           postinc1	equ	0xFE6
  9029                           postdec1	equ	0xFE5
  9030                           plusw1	equ	0xFE3
  9031                           fsr1h	equ	0xFE2
  9032                           fsr1l	equ	0xFE1
  9033                           bsr	equ	0xFE0
  9034                           indf2	equ	0xFDF
  9035                           postinc2	equ	0xFDE
  9036                           postdec2	equ	0xFDD
  9037                           plusw2	equ	0xFDB
  9038                           fsr2h	equ	0xFDA
  9039                           fsr2l	equ	0xFD9
  9040                           status	equ	0xFD8
  9041                           
  9042 ;; *************** function _printf *****************
  9043 ;; Defined at:
  9044 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\printf.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;  f               1    wreg     PTR const unsigned char 
  9047 ;;		 -> STR_4(10), STR_3(28), 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  9050 ;;		 -> STR_4(10), STR_3(28), 
  9051 ;;  pb              5    6[BANK0 ] struct __prbuf
  9052 ;;  ap              1    5[BANK0 ] PTR void [1]
  9053 ;;		 -> ?_sprintf(2), ?_printf(2), 
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  2    0[BANK0 ] int 
  9056 ;; Registers used:
  9057 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/1
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9063 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9064 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9066 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9067 ;;Total ram usage:       11 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:   10
  9070 ;; This function calls:
  9071 ;;		__doprnt
  9072 ;; This function is called by:
  9073 ;;		_SYSLOG_Init
  9074 ;;		_SYSLOG_Write
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text39
  9079  00613E                     __ptext39:
  9080                           	opt stack 0
  9081  00613E                     _printf:
  9082                           	opt stack 19
  9083                           
  9084                           ;incstack = 0
  9085                           ;printf@f stored from wreg
  9086  00613E  0100               	movlb	0	; () banked
  9087  006140  6F64               	movwf	printf@f& (0+255),b
  9088  006142  6B66               	clrf	printf@pb& (0+255),b
  9089  006144  6B67               	clrf	(printf@pb+1)& (0+255),b
  9090                           
  9091                           ; BSR set to: 0
  9092  006146  0EA4               	movlw	low _putch
  9093  006148  6F68               	movwf	(printf@pb+2)& (0+255),b
  9094  00614A  0E62               	movlw	high _putch
  9095  00614C  6F69               	movwf	(printf@pb+3)& (0+255),b
  9096  00614E  0E00               	movlw	low (_putch shr (0+16))
  9097  006150  6F6A               	movwf	(printf@pb+4)& (0+255),b
  9098  006152  0E60               	movlw	low ?_printf
  9099  006154  6F65               	movwf	printf@ap& (0+255),b
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;	Return value of _printf is never used
  9103  006156  C064  F023         	movff	printf@f,__doprnt@f
  9104  00615A  0E65               	movlw	low printf@ap
  9105  00615C  6E24               	movwf	__doprnt@ap,c
  9106  00615E  0E66               	movlw	printf@pb& (0+255)
  9107  006160  EF47  F01B         	goto	__doprnt
  9108  006164                     __end_of_printf:
  9109                           	opt stack 0
  9110                           tosu	equ	0xFFF
  9111                           tosh	equ	0xFFE
  9112                           tosl	equ	0xFFD
  9113                           pclath	equ	0xFFA
  9114                           tblptru	equ	0xFF8
  9115                           tblptrh	equ	0xFF7
  9116                           tblptrl	equ	0xFF6
  9117                           tablat	equ	0xFF5
  9118                           prodh	equ	0xFF4
  9119                           prodl	equ	0xFF3
  9120                           intcon	equ	0xFF2
  9121                           indf0	equ	0xFEF
  9122                           postinc0	equ	0xFEE
  9123                           fsr0h	equ	0xFEA
  9124                           fsr0l	equ	0xFE9
  9125                           wreg	equ	0xFE8
  9126                           indf1	equ	0xFE7
  9127                           postinc1	equ	0xFE6
  9128                           postdec1	equ	0xFE5
  9129                           plusw1	equ	0xFE3
  9130                           fsr1h	equ	0xFE2
  9131                           fsr1l	equ	0xFE1
  9132                           bsr	equ	0xFE0
  9133                           indf2	equ	0xFDF
  9134                           postinc2	equ	0xFDE
  9135                           postdec2	equ	0xFDD
  9136                           plusw2	equ	0xFDB
  9137                           fsr2h	equ	0xFDA
  9138                           fsr2l	equ	0xFD9
  9139                           status	equ	0xFD8
  9140                           
  9141 ;; *************** function __doprnt *****************
  9142 ;; Defined at:
  9143 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  pb              1    wreg     PTR struct __prbuf
  9146 ;;		 -> sprintf@pb(5), printf@pb(5), 
  9147 ;;  f               1   34[COMRAM] PTR const unsigned char 
  9148 ;;		 -> STR_7(12), STR_4(10), STR_3(28), STR_2(8), 
  9149 ;;  ap              1   35[COMRAM] PTR PTR void 
  9150 ;;		 -> sprintf@ap(1), printf@ap(1), 
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;  pb              1   47[COMRAM] PTR struct __prbuf
  9153 ;;		 -> sprintf@pb(5), printf@pb(5), 
  9154 ;;  idx             1   39[COMRAM] unsigned char 
  9155 ;;  tmpval          4    0        struct .
  9156 ;;  val             2   44[COMRAM] unsigned int 
  9157 ;;  cp              2   41[COMRAM] PTR const unsigned char 
  9158 ;;		 -> ?_sprintf(2), ?_printf(2), STR_8(7), main@str(32), 
  9159 ;;		 -> STR_6(13), STR_5(17), Network_Read@debug_str(80), STR_1(15), 
  9160 ;;		 -> NULL(0), 
  9161 ;;  len             2    0        unsigned int 
  9162 ;;  c               1   46[COMRAM] char 
  9163 ;;  flag            1   43[COMRAM] unsigned char 
  9164 ;;  prec            1   40[COMRAM] char 
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  2   34[COMRAM] int 
  9167 ;; Registers used:
  9168 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9169 ;; Tracked objects:
  9170 ;;		On entry : F/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9175 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9176 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9177 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9178 ;;Total ram usage:       14 bytes
  9179 ;; Hardware stack levels used:    1
  9180 ;; Hardware stack levels required when called:    9
  9181 ;; This function calls:
  9182 ;;		Absolute function
  9183 ;;		___lwdiv
  9184 ;;		___lwmod
  9185 ;;		_putch
  9186 ;; This function is called by:
  9187 ;;		_printf
  9188 ;;		_sprintf
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           	psect	text40
  9193  00368E                     __ptext40:
  9194                           	opt stack 0
  9195  00368E                     __doprnt:
  9196                           	opt stack 20
  9197                           
  9198                           ;incstack = 0
  9199                           ;__doprnt@pb stored from wreg
  9200  00368E  6E30               	movwf	__doprnt@pb,c
  9201                           
  9202                           ;doprnt.c: 499: signed char c;
  9203                           ;doprnt.c: 506: signed char prec;
  9204                           ;doprnt.c: 508: unsigned char flag;
  9205                           ;doprnt.c: 523: union {
  9206                           ;doprnt.c: 524: unsigned long vd;
  9207                           ;doprnt.c: 525: double integ;
  9208                           ;doprnt.c: 526: } tmpval;
  9209                           ;doprnt.c: 528: unsigned int val;
  9210                           ;doprnt.c: 529: unsigned len;
  9211                           ;doprnt.c: 530: const char * cp;
  9212                           ;doprnt.c: 536: while(c = *f++) {
  9213  003690  D11E               	goto	l7874
  9214  003692                     l7760:
  9215                           
  9216                           ;doprnt.c: 538: if(c != '%')
  9217  003692  0E25               	movlw	37
  9218  003694  182F               	xorwf	__doprnt@c,w,c
  9219  003696  E018               	bz	l1590
  9220                           
  9221                           ;doprnt.c: 540: {
  9222                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  9223  003698  D937               	call	PL485	;call to abstracted procedure
  9224  00369A  50DE               	movf	postinc2,w,c
  9225  00369C  10DE               	iorwf	postinc2,w,c
  9226  00369E  10DE               	iorwf	postinc2,w,c
  9227  0036A0  E00E               	bz	l7766
  9228  0036A2  D932               	call	PL485	;call to abstracted procedure
  9229  0036A4  D801               	call	u10848
  9230  0036A6  D113               	goto	l7874
  9231  0036A8                     u10848:
  9232  0036A8  0005               	push	
  9233  0036AA  6EFA               	movwf	pclath,c
  9234  0036AC  50DE               	movf	postinc2,w,c
  9235  0036AE  6EFD               	movwf	tosl,c
  9236  0036B0  50DE               	movf	postinc2,w,c
  9237  0036B2  6EFE               	movwf	tosh,c
  9238  0036B4  50DE               	movf	postinc2,w,c
  9239  0036B6  6EFF               	movwf	tosu,c
  9240  0036B8  50FA               	movf	pclath,w,c
  9241  0036BA  502F               	movf	__doprnt@c,w,c
  9242  0036BC  0012               	return		;indir
  9243  0036BE                     l7766:
  9244  0036BE  D918               	call	PL463	;call to abstracted procedure
  9245  0036C0  C02F  FFDF         	movff	__doprnt@c,indf2
  9246  0036C4  D930               	call	PL533	;call to abstracted procedure
  9247  0036C6  D103               	goto	l7874
  9248  0036C8                     l1590:
  9249                           
  9250                           ;doprnt.c: 543: }
  9251                           ;doprnt.c: 548: flag = 0;
  9252  0036C8  6A2C               	clrf	__doprnt@flag,c
  9253                           
  9254                           ;doprnt.c: 635: switch(c = *f++) {
  9255  0036CA  D050               	goto	l7796
  9256  0036CC                     l7770:
  9257                           
  9258                           ;doprnt.c: 721: flag |= 0x80;
  9259  0036CC  8E2C               	bsf	__doprnt@flag,7,c
  9260                           
  9261                           ;doprnt.c: 723: break;
  9262  0036CE  D05F               	goto	l7798
  9263  0036D0                     l7772:
  9264                           
  9265                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  9266  0036D0  D921               	call	PL517	;call to abstracted procedure
  9267  0036D2  CFDE F02A          	movff	postinc2,__doprnt@cp
  9268  0036D6  CFDE F02B          	movff	postinc2,__doprnt@cp+1
  9269                           
  9270                           ;doprnt.c: 740: if(!cp)
  9271  0036DA  502A               	movf	__doprnt@cp,w,c
  9272  0036DC  102B               	iorwf	__doprnt@cp+1,w,c
  9273  0036DE  E135               	bnz	l7790
  9274                           
  9275                           ;doprnt.c: 741: cp = "(null)";
  9276  0036E0  0EB1               	movlw	low STR_8
  9277  0036E2  6E2A               	movwf	__doprnt@cp,c
  9278  0036E4  502A               	movf	__doprnt@cp,w,c
  9279  0036E6  A4D8               	btfss	status,2,c
  9280  0036E8  0E10               	movlw	high __smallconst
  9281  0036EA  6E2B               	movwf	__doprnt@cp+1,c
  9282  0036EC  D02E               	goto	l7790
  9283  0036EE                     l7778:
  9284                           
  9285                           ;doprnt.c: 778: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  9286  0036EE  D90C               	call	PL485	;call to abstracted procedure
  9287  0036F0  50DE               	movf	postinc2,w,c
  9288  0036F2  10DE               	iorwf	postinc2,w,c
  9289  0036F4  10DE               	iorwf	postinc2,w,c
  9290  0036F6  E01A               	bz	l7784
  9291  0036F8  D907               	call	PL485	;call to abstracted procedure
  9292  0036FA  D801               	call	u10878
  9293  0036FC  D014               	goto	l7782
  9294  0036FE                     u10878:
  9295  0036FE  0005               	push	
  9296  003700  6EFA               	movwf	pclath,c
  9297  003702  50DE               	movf	postinc2,w,c
  9298  003704  6EFD               	movwf	tosl,c
  9299  003706  50DE               	movf	postinc2,w,c
  9300  003708  6EFE               	movwf	tosh,c
  9301  00370A  50DE               	movf	postinc2,w,c
  9302  00370C  6EFF               	movwf	tosu,c
  9303  00370E  50FA               	movf	pclath,w,c
  9304  003710  D919               	call	PL589	;call to abstracted procedure
  9305  003712  0E0F               	movlw	(high __ramtop+-1)
  9306  003714  64F7               	cpfsgt	tblptrh,c
  9307  003716  D003               	bra	u10887
  9308  003718  0008               	tblrd		*
  9309  00371A  50F5               	movf	tablat,w,c
  9310  00371C  D003               	bra	u10880
  9311  00371E                     u10887:
  9312  00371E  EC66  F011         	call	PL389	;call to abstracted procedure
  9313  003722  50EF               	movf	indf0,w,c
  9314  003724                     u10880:
  9315  003724  0012               	return		;indir
  9316  003726                     l7782:
  9317  003726  4A2A               	infsnz	__doprnt@cp,f,c
  9318  003728  2A2B               	incf	__doprnt@cp+1,f,c
  9319  00372A  D00F               	goto	l7790
  9320  00372C                     l7784:
  9321  00372C  D90B               	call	PL589	;call to abstracted procedure
  9322  00372E  D8E0               	call	PL463	;call to abstracted procedure
  9323  003730  0E0F               	movlw	(high __ramtop+-1)
  9324  003732  64F7               	cpfsgt	tblptrh,c
  9325  003734  D003               	bra	u10897
  9326  003736  0008               	tblrd		*
  9327  003738  50F5               	movf	tablat,w,c
  9328  00373A  D003               	bra	u10890
  9329  00373C                     u10897:
  9330  00373C  EC66  F011         	call	PL389	;call to abstracted procedure
  9331  003740  50EF               	movf	indf0,w,c
  9332  003742                     u10890:
  9333  003742  6EDF               	movwf	indf2,c
  9334  003744  4A2A               	infsnz	__doprnt@cp,f,c
  9335  003746  2A2B               	incf	__doprnt@cp+1,f,c
  9336  003748  D8EE               	call	PL533	;call to abstracted procedure
  9337  00374A                     l7790:
  9338  00374A  D8FC               	call	PL589	;call to abstracted procedure
  9339  00374C  0E0F               	movlw	(high __ramtop+-1)
  9340  00374E  64F7               	cpfsgt	tblptrh,c
  9341  003750  D003               	bra	u10907
  9342  003752  0008               	tblrd		*
  9343  003754  50F5               	movf	tablat,w,c
  9344  003756  D003               	bra	u10900
  9345  003758                     u10907:
  9346  003758  EC66  F011         	call	PL389	;call to abstracted procedure
  9347  00375C  50EF               	movf	indf0,w,c
  9348  00375E                     u10900:
  9349  00375E  0900               	iorlw	0
  9350  003760  E101 D0B5          	bz	l7874
  9351  003764  D7C4               	goto	l7778
  9352  003766                     l7792:
  9353                           
  9354                           ;doprnt.c: 818: flag |= 0xC0;
  9355  003766  0EC0               	movlw	192
  9356  003768  122C               	iorwf	__doprnt@flag,f,c
  9357                           
  9358                           ;doprnt.c: 819: break;
  9359  00376A  D011               	goto	l7798
  9360  00376C                     l7796:
  9361  00376C  2A23               	incf	__doprnt@f,f,c
  9362  00376E  0423               	decf	__doprnt@f,w,c
  9363  003770  D8B7               	call	PL461	;call to abstracted procedure
  9364  003772  D8F6               	call	PL703	;call to abstracted procedure
  9365                           
  9366                           ; Switch size 1, requested type "space"
  9367                           ; Number of cases is 6, Range of values is 0 to 120
  9368                           ; switch strategies available:
  9369                           ; Name         Instructions Cycles
  9370                           ; simple_byte           19    10 (average)
  9371                           ;	Chosen strategy is simple_byte
  9372  003774  E101 D0B1          	bz	l1595
  9373  003778  0A64               	xorlw	100	; case 100
  9374  00377A  E009               	bz	l7798
  9375  00377C  0A0D               	xorlw	13	; case 105
  9376  00377E  E007               	bz	l7798
  9377  003780  0A1A               	xorlw	26	; case 115
  9378  003782  E0A6               	bz	l7772
  9379  003784  0A06               	xorlw	6	; case 117
  9380  003786  E0EF               	bz	l7792
  9381  003788  0A0D               	xorlw	13	; case 120
  9382  00378A  E0A0               	bz	l7770
  9383  00378C  D0A0               	goto	l7874
  9384  00378E                     l7798:
  9385                           
  9386                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
  9387  00378E  C02C  F025         	movff	__doprnt@flag,??__doprnt
  9388  003792  0EC0               	movlw	192
  9389  003794  1625               	andwf	??__doprnt,f,c
  9390  003796  E10B               	bnz	l7808
  9391                           
  9392                           ;doprnt.c: 1253: {
  9393                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  9394  003798  D8BD               	call	PL517	;call to abstracted procedure
  9395  00379A  D8EC               	call	PL723	;call to abstracted procedure
  9396                           
  9397                           ;doprnt.c: 1261: if((int)val < 0) {
  9398  00379C  AE2E               	btfss	__doprnt@val+1,7,c
  9399  00379E  D02C               	goto	l7840
  9400                           
  9401                           ;doprnt.c: 1262: flag |= 0x03;
  9402  0037A0  0E03               	movlw	3
  9403  0037A2  122C               	iorwf	__doprnt@flag,f,c
  9404                           
  9405                           ;doprnt.c: 1263: val = -val;
  9406  0037A4  6C2D               	negf	__doprnt@val,c
  9407  0037A6  1E2E               	comf	__doprnt@val+1,f,c
  9408  0037A8  B0D8               	btfsc	status,0,c
  9409  0037AA  2A2E               	incf	__doprnt@val+1,f,c
  9410  0037AC  D025               	goto	l7840
  9411  0037AE                     l7808:
  9412                           
  9413                           ;doprnt.c: 1268: else
  9414                           ;doprnt.c: 1273: {
  9415                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  9416  0037AE  D8B2               	call	PL517	;call to abstracted procedure
  9417  0037B0  D8E1               	call	PL723	;call to abstracted procedure
  9418  0037B2  D022               	goto	l7840
  9419  0037B4                     l7810:
  9420                           
  9421                           ;doprnt.c: 1302: case 0xC0:
  9422                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9423  0037B4  0E01               	movlw	1
  9424  0037B6  6E2F               	movwf	__doprnt@c,c
  9425  0037B8                     l7816:
  9426                           
  9427                           ;doprnt.c: 1306: if(val < dpowers[c])
  9428  0037B8  502F               	movf	__doprnt@c,w,c
  9429  0037BA  D8C0               	call	PL575	;call to abstracted procedure
  9430  0037BC  D891               	call	PL461	;call to abstracted procedure
  9431  0037BE  0009               	tblrd		*+
  9432  0037C0  50F5               	movf	tablat,w,c
  9433  0037C2  5C2D               	subwf	__doprnt@val,w,c
  9434  0037C4  0009               	tblrd		*+
  9435  0037C6  50F5               	movf	tablat,w,c
  9436  0037C8  582E               	subwfb	__doprnt@val+1,w,c
  9437  0037CA  E31D               	bnc	l7842
  9438  0037CC  2A2F               	incf	__doprnt@c,f,c
  9439  0037CE  0E05               	movlw	5
  9440  0037D0  182F               	xorwf	__doprnt@c,w,c
  9441  0037D2  E019               	bz	l7842
  9442  0037D4  D7F1               	goto	l7816
  9443  0037D6                     l7824:
  9444                           
  9445                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  9446  0037D6  0E01               	movlw	1
  9447  0037D8  6E2F               	movwf	__doprnt@c,c
  9448  0037DA                     l7830:
  9449                           
  9450                           ;doprnt.c: 1317: if(val < hexpowers[c])
  9451  0037DA  502F               	movf	__doprnt@c,w,c
  9452  0037DC  D8AB               	call	PL571	;call to abstracted procedure
  9453  0037DE  D880               	call	PL461	;call to abstracted procedure
  9454  0037E0  0009               	tblrd		*+
  9455  0037E2  50F5               	movf	tablat,w,c
  9456  0037E4  5C2D               	subwf	__doprnt@val,w,c
  9457  0037E6  0009               	tblrd		*+
  9458  0037E8  50F5               	movf	tablat,w,c
  9459  0037EA  582E               	subwfb	__doprnt@val+1,w,c
  9460  0037EC  E30C               	bnc	l7842
  9461  0037EE  2A2F               	incf	__doprnt@c,f,c
  9462  0037F0  0E04               	movlw	4
  9463  0037F2  182F               	xorwf	__doprnt@c,w,c
  9464  0037F4  E008               	bz	l7842
  9465  0037F6  D7F1               	goto	l7830
  9466  0037F8                     l7840:
  9467  0037F8  502C               	movf	__doprnt@flag,w,c
  9468  0037FA  0BC0               	andlw	192
  9469                           
  9470                           ; Switch size 1, requested type "space"
  9471                           ; Number of cases is 3, Range of values is 0 to 192
  9472                           ; switch strategies available:
  9473                           ; Name         Instructions Cycles
  9474                           ; simple_byte           10     6 (average)
  9475                           ;	Chosen strategy is simple_byte
  9476  0037FC  E0DB               	bz	l7810
  9477  0037FE  0A80               	xorlw	128	; case 128
  9478  003800  E0EA               	bz	l7824
  9479  003802  0A40               	xorlw	64	; case 192
  9480  003804  E0D7               	bz	l7810
  9481  003806                     l7842:
  9482                           
  9483                           ;doprnt.c: 1422: {
  9484                           ;doprnt.c: 1438: if(flag & 0x03)
  9485  003806  C02C  F025         	movff	__doprnt@flag,??__doprnt
  9486  00380A  0E03               	movlw	3
  9487  00380C  1625               	andwf	??__doprnt,f,c
  9488  00380E  E016               	bz	l7852
  9489                           
  9490                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  9491  003810  D87B               	call	PL485	;call to abstracted procedure
  9492  003812  50DE               	movf	postinc2,w,c
  9493  003814  10DE               	iorwf	postinc2,w,c
  9494  003816  10DE               	iorwf	postinc2,w,c
  9495  003818  E00D               	bz	l7848
  9496  00381A  D876               	call	PL485	;call to abstracted procedure
  9497  00381C  D801               	call	u11008
  9498  00381E  D00E               	goto	l7852
  9499  003820                     u11008:
  9500  003820  0005               	push	
  9501  003822  6EFA               	movwf	pclath,c
  9502  003824  50DE               	movf	postinc2,w,c
  9503  003826  6EFD               	movwf	tosl,c
  9504  003828  50DE               	movf	postinc2,w,c
  9505  00382A  6EFE               	movwf	tosh,c
  9506  00382C  50DE               	movf	postinc2,w,c
  9507  00382E  6EFF               	movwf	tosu,c
  9508  003830  50FA               	movf	pclath,w,c
  9509  003832  0C2D               	retlw	45	;indir
  9510  003834                     l7848:
  9511  003834  D85D               	call	PL463	;call to abstracted procedure
  9512  003836  0E2D               	movlw	45
  9513  003838  6EDF               	movwf	indf2,c
  9514  00383A  D875               	call	PL533	;call to abstracted procedure
  9515  00383C                     l7852:
  9516                           
  9517                           ;doprnt.c: 1469: }
  9518                           ;doprnt.c: 1472: prec = c;
  9519  00383C  C02F  F029         	movff	__doprnt@c,__doprnt@prec
  9520                           
  9521                           ;doprnt.c: 1474: while(prec--) {
  9522  003840  D043               	goto	l7872
  9523  003842                     l7854:
  9524                           
  9525                           ;doprnt.c: 1486: case 0xC0:
  9526                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9527  003842  5029               	movf	__doprnt@prec,w,c
  9528  003844  D87B               	call	PL575	;call to abstracted procedure
  9529  003846  D84C               	call	PL461	;call to abstracted procedure
  9530  003848  D884               	call	PL647	;call to abstracted procedure
  9531  00384A  D88F               	call	PL721	;call to abstracted procedure
  9532  00384C  EC48  F02E         	call	___lwdiv
  9533  003850  C017  F01E         	movff	?___lwdiv,___lwmod@dividend
  9534  003854  C018  F01F         	movff	?___lwdiv+1,___lwmod@dividend+1
  9535  003858  6A21               	clrf	___lwmod@divisor+1,c
  9536  00385A  0E0A               	movlw	10
  9537  00385C  6E20               	movwf	___lwmod@divisor,c
  9538  00385E  ECF6  F02E         	call	___lwmod	;wreg free
  9539  003862  501E               	movf	?___lwmod,w,c
  9540  003864  0F30               	addlw	48
  9541  003866  6E2F               	movwf	__doprnt@c,c
  9542                           
  9543                           ;doprnt.c: 1491: break;
  9544  003868  D018               	goto	l7864
  9545  00386A                     l7856:
  9546                           
  9547                           ;doprnt.c: 1499: {
  9548                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  9549  00386A  D87F               	call	PL721	;call to abstracted procedure
  9550  00386C  5029               	movf	__doprnt@prec,w,c
  9551  00386E  D862               	call	PL571	;call to abstracted procedure
  9552  003870  D837               	call	PL461	;call to abstracted procedure
  9553  003872  D86F               	call	PL647	;call to abstracted procedure
  9554  003874  EC48  F02E         	call	___lwdiv	;wreg free
  9555  003878  5017               	movf	?___lwdiv,w,c
  9556  00387A  0B0F               	andlw	15
  9557  00387C  6E28               	movwf	__doprnt@idx,c
  9558                           
  9559                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  9560  00387E  5028               	movf	__doprnt@idx,w,c
  9561  003880  0F55               	addlw	low STR_9
  9562  003882  D82E               	call	PL461	;call to abstracted procedure
  9563  003884  0008               	tblrd		*
  9564  003886  CFF5 F02F          	movff	tablat,__doprnt@c
  9565                           
  9566                           ;doprnt.c: 1508: }
  9567                           ;doprnt.c: 1510: break;
  9568  00388A  D007               	goto	l7864
  9569  00388C                     l7862:
  9570  00388C  502C               	movf	__doprnt@flag,w,c
  9571  00388E  0BC0               	andlw	192
  9572                           
  9573                           ; Switch size 1, requested type "space"
  9574                           ; Number of cases is 3, Range of values is 0 to 192
  9575                           ; switch strategies available:
  9576                           ; Name         Instructions Cycles
  9577                           ; simple_byte           10     6 (average)
  9578                           ;	Chosen strategy is simple_byte
  9579  003890  E0D8               	bz	l7854
  9580  003892  0A80               	xorlw	128	; case 128
  9581  003894  E0EA               	bz	l7856
  9582  003896  0A40               	xorlw	64	; case 192
  9583  003898  E0D4               	bz	l7854
  9584  00389A                     l7864:
  9585                           
  9586                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  9587  00389A  D836               	call	PL485	;call to abstracted procedure
  9588  00389C  50DE               	movf	postinc2,w,c
  9589  00389E  10DE               	iorwf	postinc2,w,c
  9590  0038A0  10DE               	iorwf	postinc2,w,c
  9591  0038A2  E00E               	bz	l7868
  9592  0038A4  D831               	call	PL485	;call to abstracted procedure
  9593  0038A6  D801               	call	u11028
  9594  0038A8  D00F               	goto	l7872
  9595  0038AA                     u11028:
  9596  0038AA  0005               	push	
  9597  0038AC  6EFA               	movwf	pclath,c
  9598  0038AE  50DE               	movf	postinc2,w,c
  9599  0038B0  6EFD               	movwf	tosl,c
  9600  0038B2  50DE               	movf	postinc2,w,c
  9601  0038B4  6EFE               	movwf	tosh,c
  9602  0038B6  50DE               	movf	postinc2,w,c
  9603  0038B8  6EFF               	movwf	tosu,c
  9604  0038BA  50FA               	movf	pclath,w,c
  9605  0038BC  502F               	movf	__doprnt@c,w,c
  9606  0038BE  0012               	return		;indir
  9607  0038C0                     l7868:
  9608  0038C0  D817               	call	PL463	;call to abstracted procedure
  9609  0038C2  C02F  FFDF         	movff	__doprnt@c,indf2
  9610  0038C6  D82F               	call	PL533	;call to abstracted procedure
  9611  0038C8                     l7872:
  9612  0038C8  0629               	decf	__doprnt@prec,f,c
  9613  0038CA  2829               	incf	__doprnt@prec,w,c
  9614  0038CC  E1DF               	bnz	l7862
  9615  0038CE                     l7874:
  9616  0038CE  2A23               	incf	__doprnt@f,f,c
  9617  0038D0  0423               	decf	__doprnt@f,w,c
  9618  0038D2  D806               	call	PL461	;call to abstracted procedure
  9619  0038D4  D845               	call	PL703	;call to abstracted procedure
  9620  0038D6  E001 D6DC          	bnz	l7760
  9621  0038DA                     l1595:
  9622                           
  9623                           ;doprnt.c: 1540: return 0;
  9624  0038DA  6A23               	clrf	?__doprnt,c
  9625  0038DC  6A24               	clrf	?__doprnt+1,c
  9626  0038DE  0012               	return		;funcret
  9627  0038E0                     __end_of__doprnt:
  9628                           	opt stack 0
  9629  0038E0                     PL461:
  9630                           	opt stack 20
  9631  0038E0  6E25               	movwf	??__doprnt& (0+255),c
  9632  0038E2  C025  FFF6         	movff	??__doprnt,tblptrl
  9633  0038E6                     	if	1	;There is more than 1 active tblptr byte
  9634  0038E6  0E10               	movlw	high __smallconst
  9635  0038E8  6EF7               	movwf	tblptrh,c
  9636  0038EA                     	endif
  9637  0038EA                     	if	0	;tblptru may be non-zero
  9638  0038EA                     	endif
  9639  0038EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9640  0038EA  0E00               	movlw	low (__smallconst shr (0+16))
  9641  0038EC  6EF8               	movwf	tblptru,c
  9642  0038EE                     	endif
  9643  0038EE  0012               	return	
  9644  0038F0                     __end_ofPL461:
  9645                           	opt stack 0
  9646  0038F0                     PL463:
  9647                           	opt stack 20
  9648  0038F0  5030               	movf	__doprnt@pb,w,c
  9649  0038F2  6ED9               	movwf	fsr2l,c
  9650  0038F4  6ADA               	clrf	fsr2h,c
  9651  0038F6  CFDE F025          	movff	postinc2,??__doprnt
  9652  0038FA  CFDD F026          	movff	postdec2,??__doprnt+1
  9653  0038FE  C025  FFD9         	movff	??__doprnt,fsr2l
  9654  003902  C026  FFDA         	movff	??__doprnt+1,fsr2h
  9655  003906  0012               	return	
  9656  003908                     __end_ofPL463:
  9657                           	opt stack 0
  9658  003908                     PL485:
  9659                           	opt stack 20
  9660  003908  5030               	movf	__doprnt@pb,w,c
  9661  00390A  6ED9               	movwf	fsr2l,c
  9662  00390C  6ADA               	clrf	fsr2h,c
  9663  00390E  0E02               	movlw	2
  9664  003910  26D9               	addwf	fsr2l,f,c
  9665  003912  0C02               	retlw	2
  9666  003914                     __end_ofPL485:
  9667                           	opt stack 0
  9668  003914                     PL517:
  9669                           	opt stack 20
  9670  003914  5024               	movf	__doprnt@ap,w,c
  9671  003916  6ED9               	movwf	fsr2l,c
  9672  003918  6ADA               	clrf	fsr2h,c
  9673  00391A  0E02               	movlw	2
  9674  00391C  26DF               	addwf	indf2,f,c
  9675  00391E  5CDF               	subwf	indf2,w,c
  9676  003920  6ED9               	movwf	fsr2l,c
  9677  003922  6ADA               	clrf	fsr2h,c
  9678  003924  0012               	return	
  9679  003926                     __end_ofPL517:
  9680                           	opt stack 0
  9681  003926                     PL533:
  9682                           	opt stack 20
  9683  003926  5030               	movf	__doprnt@pb,w,c
  9684  003928  6ED9               	movwf	fsr2l,c
  9685  00392A  6ADA               	clrf	fsr2h,c
  9686  00392C  2ADE               	incf	postinc2,f,c
  9687  00392E  0E00               	movlw	0
  9688  003930  22DD               	addwfc	postdec2,f,c
  9689  003932  0C00               	retlw	0
  9690  003934                     __end_ofPL533:
  9691                           	opt stack 0
  9692  003934                     PL571:
  9693                           	opt stack 20
  9694  003934  0D02               	mullw	2
  9695  003936  50F3               	movf	prodl,w,c
  9696  003938  0F0B               	addlw	low _hexpowers
  9697  00393A  0012               	return	
  9698  00393C                     __end_ofPL571:
  9699                           	opt stack 0
  9700  00393C                     PL575:
  9701                           	opt stack 20
  9702  00393C  0D02               	mullw	2
  9703  00393E  50F3               	movf	prodl,w,c
  9704  003940  0F01               	addlw	low _dpowers
  9705  003942  0012               	return	
  9706  003944                     __end_ofPL575:
  9707                           	opt stack 0
  9708  003944                     PL589:
  9709                           	opt stack 20
  9710  003944  C02A  FFF6         	movff	__doprnt@cp,tblptrl
  9711  003948  C02B  FFF7         	movff	__doprnt@cp+1,tblptrh
  9712  00394C  0E00               	movlw	low (__smallconst shr (0+16))
  9713  00394E  6EF8               	movwf	tblptru,c
  9714  003950  0012               	return	
  9715  003952                     __end_ofPL589:
  9716                           	opt stack 0
  9717  003952                     PL647:
  9718                           	opt stack 20
  9719  003952  0009               	tblrd		*+
  9720  003954  CFF5 F019          	movff	tablat,___lwdiv@divisor
  9721  003958  000A               	tblrd		*-
  9722  00395A  CFF5 F01A          	movff	tablat,___lwdiv@divisor+1
  9723  00395E  0012               	return	
  9724  003960                     __end_ofPL647:
  9725                           	opt stack 0
  9726  003960                     PL703:
  9727                           	opt stack 20
  9728  003960  0008               	tblrd		*
  9729  003962  CFF5 F02F          	movff	tablat,__doprnt@c
  9730  003966  502F               	movf	__doprnt@c,w,c
  9731  003968  0012               	return	
  9732  00396A                     __end_ofPL703:
  9733                           	opt stack 0
  9734  00396A                     PL721:
  9735                           	opt stack 20
  9736  00396A  C02D  F017         	movff	__doprnt@val,___lwdiv@dividend
  9737  00396E  C02E  F018         	movff	__doprnt@val+1,___lwdiv@dividend+1
  9738  003972  0012               	return	
  9739  003974                     __end_ofPL721:
  9740                           	opt stack 0
  9741  003974                     PL723:
  9742                           	opt stack 20
  9743  003974  CFDE F02D          	movff	postinc2,__doprnt@val
  9744  003978  CFDE F02E          	movff	postinc2,__doprnt@val+1
  9745  00397C  0012               	return	
  9746  00397E                     __end_ofPL723:
  9747                           	opt stack 0
  9748                           tosu	equ	0xFFF
  9749                           tosh	equ	0xFFE
  9750                           tosl	equ	0xFFD
  9751                           pclath	equ	0xFFA
  9752                           tblptru	equ	0xFF8
  9753                           tblptrh	equ	0xFF7
  9754                           tblptrl	equ	0xFF6
  9755                           tablat	equ	0xFF5
  9756                           prodh	equ	0xFF4
  9757                           prodl	equ	0xFF3
  9758                           intcon	equ	0xFF2
  9759                           indf0	equ	0xFEF
  9760                           postinc0	equ	0xFEE
  9761                           fsr0h	equ	0xFEA
  9762                           fsr0l	equ	0xFE9
  9763                           wreg	equ	0xFE8
  9764                           indf1	equ	0xFE7
  9765                           postinc1	equ	0xFE6
  9766                           postdec1	equ	0xFE5
  9767                           plusw1	equ	0xFE3
  9768                           fsr1h	equ	0xFE2
  9769                           fsr1l	equ	0xFE1
  9770                           bsr	equ	0xFE0
  9771                           indf2	equ	0xFDF
  9772                           postinc2	equ	0xFDE
  9773                           postdec2	equ	0xFDD
  9774                           plusw2	equ	0xFDB
  9775                           fsr2h	equ	0xFDA
  9776                           fsr2l	equ	0xFD9
  9777                           status	equ	0xFD8
  9778                           
  9779 ;; *************** function _putch *****************
  9780 ;; Defined at:
  9781 ;;		line 77 in file "../board_support_package/picdem2_net/uart.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  data            1    wreg     unsigned char 
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;  data            1   22[COMRAM] unsigned char 
  9786 ;; Return value:  Size  Location     Type
  9787 ;;		None               void
  9788 ;; Registers used:
  9789 ;;		wreg, status,2, status,0
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9798 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9799 ;;Total ram usage:        1 bytes
  9800 ;; Hardware stack levels used:    1
  9801 ;; Hardware stack levels required when called:    8
  9802 ;; This function calls:
  9803 ;;		Nothing
  9804 ;; This function is called by:
  9805 ;;		_printf
  9806 ;;		__doprnt
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           	psect	text41
  9811  0062A4                     __ptext41:
  9812                           	opt stack 0
  9813  0062A4                     _putch:
  9814                           	opt stack 20
  9815                           
  9816                           ;incstack = 0
  9817                           ;putch@data stored from wreg
  9818  0062A4  6E17               	movwf	putch@data,c
  9819                           
  9820                           ;uart.c: 79: if(data == '\n')
  9821  0062A6  0E0A               	movlw	10
  9822  0062A8  1817               	xorwf	putch@data,w,c
  9823  0062AA  E104               	bnz	l350
  9824  0062AC                     l347:
  9825  0062AC  A89E               	btfss	3998,4,c	;volatile
  9826  0062AE  D7FE               	goto	l347
  9827                           
  9828                           ;uart.c: 83: TXREG1 = '\r';
  9829  0062B0  0E0D               	movlw	13
  9830  0062B2  6EAD               	movwf	4013,c	;volatile
  9831  0062B4                     l350:
  9832  0062B4  A89E               	btfss	3998,4,c	;volatile
  9833  0062B6  D7FE               	goto	l350
  9834                           
  9835                           ;uart.c: 87: TXREG1 = data;
  9836  0062B8  C017  FFAD         	movff	putch@data,4013	;volatile
  9837  0062BC  0012               	return		;funcret
  9838  0062BE                     __end_of_putch:
  9839                           	opt stack 0
  9840                           tosu	equ	0xFFF
  9841                           tosh	equ	0xFFE
  9842                           tosl	equ	0xFFD
  9843                           pclath	equ	0xFFA
  9844                           tblptru	equ	0xFF8
  9845                           tblptrh	equ	0xFF7
  9846                           tblptrl	equ	0xFF6
  9847                           tablat	equ	0xFF5
  9848                           prodh	equ	0xFF4
  9849                           prodl	equ	0xFF3
  9850                           intcon	equ	0xFF2
  9851                           indf0	equ	0xFEF
  9852                           postinc0	equ	0xFEE
  9853                           fsr0h	equ	0xFEA
  9854                           fsr0l	equ	0xFE9
  9855                           wreg	equ	0xFE8
  9856                           indf1	equ	0xFE7
  9857                           postinc1	equ	0xFE6
  9858                           postdec1	equ	0xFE5
  9859                           plusw1	equ	0xFE3
  9860                           fsr1h	equ	0xFE2
  9861                           fsr1l	equ	0xFE1
  9862                           bsr	equ	0xFE0
  9863                           indf2	equ	0xFDF
  9864                           postinc2	equ	0xFDE
  9865                           postdec2	equ	0xFDD
  9866                           plusw2	equ	0xFDB
  9867                           fsr2h	equ	0xFDA
  9868                           fsr2l	equ	0xFD9
  9869                           status	equ	0xFD8
  9870                           
  9871 ;; *************** function ___lwmod *****************
  9872 ;; Defined at:
  9873 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;  dividend        2   29[COMRAM] unsigned int 
  9876 ;;  divisor         2   31[COMRAM] unsigned int 
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;  counter         1   33[COMRAM] unsigned char 
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  2   29[COMRAM] unsigned int 
  9881 ;; Registers used:
  9882 ;;		wreg, status,2, status,0
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9891 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9892 ;;Total ram usage:        5 bytes
  9893 ;; Hardware stack levels used:    1
  9894 ;; Hardware stack levels required when called:    8
  9895 ;; This function calls:
  9896 ;;		Nothing
  9897 ;; This function is called by:
  9898 ;;		__doprnt
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           	psect	text42
  9903  005DEC                     __ptext42:
  9904                           	opt stack 0
  9905  005DEC                     ___lwmod:
  9906                           	opt stack 20
  9907                           
  9908                           ;incstack = 0
  9909  005DEC  5020               	movf	___lwmod@divisor,w,c
  9910  005DEE  1021               	iorwf	___lwmod@divisor+1,w,c
  9911  005DF0  E017               	bz	l2050
  9912  005DF2  0E01               	movlw	1
  9913  005DF4  6E22               	movwf	___lwmod@counter,c
  9914  005DF6  D004               	goto	l7660
  9915  005DF8                     l7658:
  9916  005DF8  90D8               	bcf	status,0,c
  9917  005DFA  3620               	rlcf	___lwmod@divisor,f,c
  9918  005DFC  3621               	rlcf	___lwmod@divisor+1,f,c
  9919  005DFE  2A22               	incf	___lwmod@counter,f,c
  9920  005E00                     l7660:
  9921  005E00  AE21               	btfss	___lwmod@divisor+1,7,c
  9922  005E02  D7FA               	goto	l7658
  9923  005E04                     l7662:
  9924  005E04  5020               	movf	___lwmod@divisor,w,c
  9925  005E06  5C1E               	subwf	___lwmod@dividend,w,c
  9926  005E08  5021               	movf	___lwmod@divisor+1,w,c
  9927  005E0A  581F               	subwfb	___lwmod@dividend+1,w,c
  9928  005E0C  E304               	bnc	l7666
  9929  005E0E  5020               	movf	___lwmod@divisor,w,c
  9930  005E10  5E1E               	subwf	___lwmod@dividend,f,c
  9931  005E12  5021               	movf	___lwmod@divisor+1,w,c
  9932  005E14  5A1F               	subwfb	___lwmod@dividend+1,f,c
  9933  005E16                     l7666:
  9934  005E16  90D8               	bcf	status,0,c
  9935  005E18  3221               	rrcf	___lwmod@divisor+1,f,c
  9936  005E1A  3220               	rrcf	___lwmod@divisor,f,c
  9937  005E1C  2E22               	decfsz	___lwmod@counter,f,c
  9938  005E1E  D7F2               	goto	l7662
  9939  005E20                     l2050:
  9940  005E20  C01E  F01E         	movff	___lwmod@dividend,?___lwmod
  9941  005E24  C01F  F01F         	movff	___lwmod@dividend+1,?___lwmod+1
  9942  005E28  0012               	return		;funcret
  9943  005E2A                     __end_of___lwmod:
  9944                           	opt stack 0
  9945                           tosu	equ	0xFFF
  9946                           tosh	equ	0xFFE
  9947                           tosl	equ	0xFFD
  9948                           pclath	equ	0xFFA
  9949                           tblptru	equ	0xFF8
  9950                           tblptrh	equ	0xFF7
  9951                           tblptrl	equ	0xFF6
  9952                           tablat	equ	0xFF5
  9953                           prodh	equ	0xFF4
  9954                           prodl	equ	0xFF3
  9955                           intcon	equ	0xFF2
  9956                           indf0	equ	0xFEF
  9957                           postinc0	equ	0xFEE
  9958                           fsr0h	equ	0xFEA
  9959                           fsr0l	equ	0xFE9
  9960                           wreg	equ	0xFE8
  9961                           indf1	equ	0xFE7
  9962                           postinc1	equ	0xFE6
  9963                           postdec1	equ	0xFE5
  9964                           plusw1	equ	0xFE3
  9965                           fsr1h	equ	0xFE2
  9966                           fsr1l	equ	0xFE1
  9967                           bsr	equ	0xFE0
  9968                           indf2	equ	0xFDF
  9969                           postinc2	equ	0xFDE
  9970                           postdec2	equ	0xFDD
  9971                           plusw2	equ	0xFDB
  9972                           fsr2h	equ	0xFDA
  9973                           fsr2l	equ	0xFD9
  9974                           status	equ	0xFD8
  9975                           
  9976 ;; *************** function ___lwdiv *****************
  9977 ;; Defined at:
  9978 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;  dividend        2   22[COMRAM] unsigned int 
  9981 ;;  divisor         2   24[COMRAM] unsigned int 
  9982 ;; Auto vars:     Size  Location     Type
  9983 ;;  quotient        2   27[COMRAM] unsigned int 
  9984 ;;  counter         1   26[COMRAM] unsigned char 
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  2   22[COMRAM] unsigned int 
  9987 ;; Registers used:
  9988 ;;		wreg, status,2, status,0
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;Total ram usage:        7 bytes
  9999 ;; Hardware stack levels used:    1
 10000 ;; Hardware stack levels required when called:    8
 10001 ;; This function calls:
 10002 ;;		Nothing
 10003 ;; This function is called by:
 10004 ;;		__doprnt
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           	psect	text43
 10009  005C90                     __ptext43:
 10010                           	opt stack 0
 10011  005C90                     ___lwdiv:
 10012                           	opt stack 20
 10013                           
 10014                           ;incstack = 0
 10015  005C90  6A1C               	clrf	___lwdiv@quotient,c
 10016  005C92  6A1D               	clrf	___lwdiv@quotient+1,c
 10017  005C94  5019               	movf	___lwdiv@divisor,w,c
 10018  005C96  101A               	iorwf	___lwdiv@divisor+1,w,c
 10019  005C98  E01B               	bz	l2040
 10020  005C9A  0E01               	movlw	1
 10021  005C9C  6E1B               	movwf	___lwdiv@counter,c
 10022  005C9E  D004               	goto	l7640
 10023  005CA0                     l7638:
 10024  005CA0  90D8               	bcf	status,0,c
 10025  005CA2  3619               	rlcf	___lwdiv@divisor,f,c
 10026  005CA4  361A               	rlcf	___lwdiv@divisor+1,f,c
 10027  005CA6  2A1B               	incf	___lwdiv@counter,f,c
 10028  005CA8                     l7640:
 10029  005CA8  AE1A               	btfss	___lwdiv@divisor+1,7,c
 10030  005CAA  D7FA               	goto	l7638
 10031  005CAC                     l7642:
 10032  005CAC  90D8               	bcf	status,0,c
 10033  005CAE  361C               	rlcf	___lwdiv@quotient,f,c
 10034  005CB0  361D               	rlcf	___lwdiv@quotient+1,f,c
 10035  005CB2  5019               	movf	___lwdiv@divisor,w,c
 10036  005CB4  5C17               	subwf	___lwdiv@dividend,w,c
 10037  005CB6  501A               	movf	___lwdiv@divisor+1,w,c
 10038  005CB8  5818               	subwfb	___lwdiv@dividend+1,w,c
 10039  005CBA  E305               	bnc	l7650
 10040  005CBC  5019               	movf	___lwdiv@divisor,w,c
 10041  005CBE  5E17               	subwf	___lwdiv@dividend,f,c
 10042  005CC0  501A               	movf	___lwdiv@divisor+1,w,c
 10043  005CC2  5A18               	subwfb	___lwdiv@dividend+1,f,c
 10044  005CC4  801C               	bsf	___lwdiv@quotient,0,c
 10045  005CC6                     l7650:
 10046  005CC6  90D8               	bcf	status,0,c
 10047  005CC8  321A               	rrcf	___lwdiv@divisor+1,f,c
 10048  005CCA  3219               	rrcf	___lwdiv@divisor,f,c
 10049  005CCC  2E1B               	decfsz	___lwdiv@counter,f,c
 10050  005CCE  D7EE               	goto	l7642
 10051  005CD0                     l2040:
 10052  005CD0  C01C  F017         	movff	___lwdiv@quotient,?___lwdiv
 10053  005CD4  C01D  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10054  005CD8  0012               	return		;funcret
 10055  005CDA                     __end_of___lwdiv:
 10056                           	opt stack 0
 10057                           tosu	equ	0xFFF
 10058                           tosh	equ	0xFFE
 10059                           tosl	equ	0xFFD
 10060                           pclath	equ	0xFFA
 10061                           tblptru	equ	0xFF8
 10062                           tblptrh	equ	0xFF7
 10063                           tblptrl	equ	0xFF6
 10064                           tablat	equ	0xFF5
 10065                           prodh	equ	0xFF4
 10066                           prodl	equ	0xFF3
 10067                           intcon	equ	0xFF2
 10068                           indf0	equ	0xFEF
 10069                           postinc0	equ	0xFEE
 10070                           fsr0h	equ	0xFEA
 10071                           fsr0l	equ	0xFE9
 10072                           wreg	equ	0xFE8
 10073                           indf1	equ	0xFE7
 10074                           postinc1	equ	0xFE6
 10075                           postdec1	equ	0xFE5
 10076                           plusw1	equ	0xFE3
 10077                           fsr1h	equ	0xFE2
 10078                           fsr1l	equ	0xFE1
 10079                           bsr	equ	0xFE0
 10080                           indf2	equ	0xFDF
 10081                           postinc2	equ	0xFDE
 10082                           postdec2	equ	0xFDD
 10083                           plusw2	equ	0xFDB
 10084                           fsr2h	equ	0xFDA
 10085                           fsr2l	equ	0xFD9
 10086                           status	equ	0xFD8
 10087                           
 10088 ;; *************** function _ETH_RxComputeChecksum *****************
 10089 ;; Defined at:
 10090 ;;		line 781 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 10091 ;; Parameters:    Size  Location     Type
 10092 ;;  len             2   36[COMRAM] unsigned int 
 10093 ;;  seed            2   38[COMRAM] unsigned int 
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;  cksm            4   46[COMRAM] unsigned long 
 10096 ;;  rxptr           2   44[COMRAM] unsigned int 
 10097 ;; Return value:  Size  Location     Type
 10098 ;;                  2   36[COMRAM] unsigned int 
 10099 ;; Registers used:
 10100 ;;		wreg, status,2, status,0, cstack
 10101 ;; Tracked objects:
 10102 ;;		On entry : F/1
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10107 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10108 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10109 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10110 ;;Total ram usage:       14 bytes
 10111 ;; Hardware stack levels used:    1
 10112 ;; Hardware stack levels required when called:   10
 10113 ;; This function calls:
 10114 ;;		_ETH_ComputeChecksum
 10115 ;; This function is called by:
 10116 ;;		_IPV4_Packet
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           	psect	text44
 10121  005CDA                     __ptext44:
 10122                           	opt stack 0
 10123  005CDA                     _ETH_RxComputeChecksum:
 10124                           	opt stack 17
 10125                           
 10126                           ; BSR set to: 1
 10127                           ;j60_driver.c: 783: uint16_t rxptr;
 10128                           ;j60_driver.c: 784: uint32_t cksm;
 10129                           ;j60_driver.c: 787: rxptr = ERDPT;
 10130                           
 10131                           ;incstack = 0
 10132  005CDA  CF7A F02D          	movff	3962,ETH_RxComputeChecksum@rxptr	;volatile
 10133  005CDE  CF7B F02E          	movff	3963,ETH_RxComputeChecksum@rxptr+1	;volatile
 10134                           
 10135                           ; BSR set to: 1
 10136                           ;j60_driver.c: 789: cksm = ETH_ComputeChecksum( len, seed);
 10137  005CE2  C025  F017         	movff	ETH_RxComputeChecksum@len,ETH_ComputeChecksum@len
 10138  005CE6  C026  F018         	movff	ETH_RxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 10139  005CEA  C027  F019         	movff	ETH_RxComputeChecksum@seed,ETH_ComputeChecksum@seed
 10140  005CEE  C028  F01A         	movff	ETH_RxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 10141  005CF2  EC9B  F028         	call	_ETH_ComputeChecksum
 10142  005CF6  C017  F02F         	movff	?_ETH_ComputeChecksum,ETH_RxComputeChecksum@cksm
 10143  005CFA  C018  F030         	movff	?_ETH_ComputeChecksum+1,ETH_RxComputeChecksum@cksm+1
 10144  005CFE  6A31               	clrf	ETH_RxComputeChecksum@cksm+2,c
 10145  005D00  6A32               	clrf	ETH_RxComputeChecksum@cksm+3,c
 10146                           
 10147                           ;j60_driver.c: 792: ERDPT = rxptr;
 10148  005D02  C02D  FF7A         	movff	ETH_RxComputeChecksum@rxptr,3962	;volatile
 10149  005D06  C02E  FF7B         	movff	ETH_RxComputeChecksum@rxptr+1,3963	;volatile
 10150                           
 10151                           ;j60_driver.c: 795: return ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 10152  005D0A  502F               	movf	ETH_RxComputeChecksum@cksm,w,c
 10153  005D0C  6E2A               	movwf	(??_ETH_RxComputeChecksum+1)& (0+255),c
 10154  005D0E  6A29               	clrf	??_ETH_RxComputeChecksum& (0+255),c
 10155  005D10  5030               	movf	ETH_RxComputeChecksum@cksm+1,w,c
 10156  005D12  6E2B               	movwf	(??_ETH_RxComputeChecksum+2)& (0+255),c
 10157  005D14  6A2C               	clrf	(??_ETH_RxComputeChecksum+3)& (0+255),c
 10158  005D16  1029               	iorwf	??_ETH_RxComputeChecksum,w,c
 10159  005D18  6E25               	movwf	?_ETH_RxComputeChecksum,c
 10160  005D1A  502A               	movf	??_ETH_RxComputeChecksum+1,w,c
 10161  005D1C  102C               	iorwf	??_ETH_RxComputeChecksum+3,w,c
 10162  005D1E  6E26               	movwf	?_ETH_RxComputeChecksum+1,c
 10163  005D20  0012               	return		;funcret
 10164  005D22                     __end_of_ETH_RxComputeChecksum:
 10165                           	opt stack 0
 10166                           tosu	equ	0xFFF
 10167                           tosh	equ	0xFFE
 10168                           tosl	equ	0xFFD
 10169                           pclath	equ	0xFFA
 10170                           tblptru	equ	0xFF8
 10171                           tblptrh	equ	0xFF7
 10172                           tblptrl	equ	0xFF6
 10173                           tablat	equ	0xFF5
 10174                           prodh	equ	0xFF4
 10175                           prodl	equ	0xFF3
 10176                           intcon	equ	0xFF2
 10177                           indf0	equ	0xFEF
 10178                           postinc0	equ	0xFEE
 10179                           fsr0h	equ	0xFEA
 10180                           fsr0l	equ	0xFE9
 10181                           wreg	equ	0xFE8
 10182                           indf1	equ	0xFE7
 10183                           postinc1	equ	0xFE6
 10184                           postdec1	equ	0xFE5
 10185                           plusw1	equ	0xFE3
 10186                           fsr1h	equ	0xFE2
 10187                           fsr1l	equ	0xFE1
 10188                           bsr	equ	0xFE0
 10189                           indf2	equ	0xFDF
 10190                           postinc2	equ	0xFDE
 10191                           postdec2	equ	0xFDD
 10192                           plusw2	equ	0xFDB
 10193                           fsr2h	equ	0xFDA
 10194                           fsr2l	equ	0xFD9
 10195                           status	equ	0xFD8
 10196                           
 10197 ;; *************** function _ETH_NextPacketUpdate *****************
 10198 ;; Defined at:
 10199 ;;		line 266 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;		None
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;		None
 10204 ;; Return value:  Size  Location     Type
 10205 ;;		None               void
 10206 ;; Registers used:
 10207 ;;		wreg, status,2, status,0, cstack
 10208 ;; Tracked objects:
 10209 ;;		On entry : F/1
 10210 ;;		On exit  : F/1
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;Total ram usage:        0 bytes
 10218 ;; Hardware stack levels used:    1
 10219 ;; Hardware stack levels required when called:    9
 10220 ;; This function calls:
 10221 ;;		_ETH_EdataRead
 10222 ;; This function is called by:
 10223 ;;		_Network_Read
 10224 ;; This function uses a non-reentrant model
 10225 ;;
 10226                           
 10227                           	psect	text45
 10228  00592E                     __ptext45:
 10229                           	opt stack 0
 10230  00592E                     _ETH_NextPacketUpdate:
 10231                           	opt stack 19
 10232                           
 10233                           ; BSR set to: 1
 10234                           ;j60_driver.c: 269: ERDPT = nextPacketPointer;
 10235                           
 10236                           ;incstack = 0
 10237  00592E  C041  FF7A         	movff	_nextPacketPointer,3962	;volatile
 10238  005932  C042  FF7B         	movff	_nextPacketPointer+1,3963	;volatile
 10239  005936                     i8L__ptext96:
 10240                           	opt stack 0
 10241  005936                     i8L_ETH_EdataRead:
 10242                           	opt stack 0
 10243  005936                     i8Ll7486:
 10244                           	opt stack 15
 10245  005936  CF61 FE7E          	movff	3937,_errataTemp	;# 
 10246  00593A                     i8Ll7488:
 10247                           	opt stack 15
 10248                           
 10249                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 10250  00593A  010E               	movlb	14	; () banked
 10251  00593C  517E               	movf	126,w,b
 10252  00593E                     i8Ll460:
 10253                           	opt stack 19
 10254  00593E  6E41               	movwf	_nextPacketPointer,c
 10255  005940                     i9L__ptext96:
 10256                           	opt stack 0
 10257  005940                     i9L_ETH_EdataRead:
 10258                           	opt stack 0
 10259  005940                     i9Ll7486:
 10260                           	opt stack 15
 10261  005940  CF61 FE7E          	movff	3937,_errataTemp	;# 
 10262  005944                     i9Ll7488:
 10263                           	opt stack 15
 10264                           
 10265                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 10266  005944  010E               	movlb	14	; () banked
 10267  005946  517E               	movf	126,w,b
 10268  005948                     i9Ll460:
 10269                           	opt stack 19
 10270  005948  6E42               	movwf	_nextPacketPointer+1,c
 10271  00594A                     i10L__ptext96:
 10272                           	opt stack 0
 10273  00594A                     i10L_ETH_EdataRead:
 10274                           	opt stack 0
 10275  00594A                     i10Ll7486:
 10276                           	opt stack 15
 10277  00594A  CF61 FE7E          	movff	3937,_errataTemp	;# 
 10278  00594E                     i10Ll7488:
 10279                           	opt stack 15
 10280                           
 10281                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 10282  00594E  010E               	movlb	14	; () banked
 10283  005950  517E               	movf	126,w,b
 10284  005952                     i10Ll460:
 10285                           	opt stack 19
 10286  005952  0101               	movlb	1	; () banked
 10287  005954  6FCC               	movwf	_rxPacketStatusVector& (0+255),b
 10288  005956                     i11L__ptext96:
 10289                           	opt stack 0
 10290  005956                     i11L_ETH_EdataRead:
 10291                           	opt stack 0
 10292  005956                     i11Ll7486:
 10293                           	opt stack 15
 10294  005956  CF61 FE7E          	movff	3937,_errataTemp	;# 
 10295  00595A                     i11Ll7488:
 10296                           	opt stack 15
 10297                           
 10298                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 10299  00595A  010E               	movlb	14	; () banked
 10300  00595C  517E               	movf	126,w,b
 10301  00595E                     i11Ll460:
 10302                           	opt stack 19
 10303  00595E  0101               	movlb	1	; () banked
 10304  005960  6FCD               	movwf	(_rxPacketStatusVector+1)& (0+255),b
 10305  005962                     i12L__ptext96:
 10306                           	opt stack 0
 10307  005962                     i12L_ETH_EdataRead:
 10308                           	opt stack 0
 10309  005962                     i12Ll7486:
 10310                           	opt stack 15
 10311  005962  CF61 FE7E          	movff	3937,_errataTemp	;# 
 10312  005966                     i12Ll7488:
 10313                           	opt stack 15
 10314                           
 10315                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 10316  005966  010E               	movlb	14	; () banked
 10317  005968  517E               	movf	126,w,b
 10318  00596A                     i12Ll460:
 10319                           	opt stack 19
 10320  00596A  0101               	movlb	1	; () banked
 10321  00596C  6FCE               	movwf	(_rxPacketStatusVector+2)& (0+255),b
 10322  00596E                     i13L__ptext96:
 10323                           	opt stack 0
 10324  00596E                     i13L_ETH_EdataRead:
 10325                           	opt stack 0
 10326  00596E                     i13Ll7486:
 10327                           	opt stack 15
 10328  00596E  CF61 FE7E          	movff	3937,_errataTemp	;# 
 10329  005972                     i13Ll7488:
 10330                           	opt stack 15
 10331                           
 10332                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 10333  005972  010E               	movlb	14	; () banked
 10334  005974  517E               	movf	126,w,b
 10335  005976                     i13Ll460:
 10336                           	opt stack 19
 10337  005976  0101               	movlb	1	; () banked
 10338  005978  6FCF               	movwf	(_rxPacketStatusVector+3)& (0+255),b
 10339                           
 10340                           ; BSR set to: 1
 10341                           ;j60_driver.c: 281: rxPacketStatusVector.byteCount -= 4;
 10342  00597A  0E04               	movlw	4
 10343  00597C  5FCC               	subwf	_rxPacketStatusVector& (0+255),f,b
 10344  00597E  0E00               	movlw	0
 10345  005980  5BCD               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 10346                           
 10347                           ; BSR set to: 1
 10348  005982  0C00               	retlw	0	;funcret
 10349  005984                     __end_of_ETH_NextPacketUpdate:
 10350                           	opt stack 0
 10351                           tosu	equ	0xFFF
 10352                           tosh	equ	0xFFE
 10353                           tosl	equ	0xFFD
 10354                           pclath	equ	0xFFA
 10355                           tblptru	equ	0xFF8
 10356                           tblptrh	equ	0xFF7
 10357                           tblptrl	equ	0xFF6
 10358                           tablat	equ	0xFF5
 10359                           prodh	equ	0xFF4
 10360                           prodl	equ	0xFF3
 10361                           intcon	equ	0xFF2
 10362                           indf0	equ	0xFEF
 10363                           postinc0	equ	0xFEE
 10364                           fsr0h	equ	0xFEA
 10365                           fsr0l	equ	0xFE9
 10366                           wreg	equ	0xFE8
 10367                           indf1	equ	0xFE7
 10368                           postinc1	equ	0xFE6
 10369                           postdec1	equ	0xFE5
 10370                           plusw1	equ	0xFE3
 10371                           fsr1h	equ	0xFE2
 10372                           fsr1l	equ	0xFE1
 10373                           bsr	equ	0xFE0
 10374                           indf2	equ	0xFDF
 10375                           postinc2	equ	0xFDE
 10376                           postdec2	equ	0xFDD
 10377                           plusw2	equ	0xFDB
 10378                           fsr2h	equ	0xFDA
 10379                           fsr2l	equ	0xFD9
 10380                           status	equ	0xFD8
 10381                           
 10382 ;; *************** function _ETH_Flush *****************
 10383 ;; Defined at:
 10384 ;;		line 625 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;		None
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;		None
 10389 ;; Return value:  Size  Location     Type
 10390 ;;		None               void
 10391 ;; Registers used:
 10392 ;;		wreg, status,2, status,0
 10393 ;; Tracked objects:
 10394 ;;		On entry : 0/1
 10395 ;;		On exit  : F/E
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10400 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10401 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10402 ;;Total ram usage:        4 bytes
 10403 ;; Hardware stack levels used:    1
 10404 ;; Hardware stack levels required when called:    8
 10405 ;; This function calls:
 10406 ;;		Nothing
 10407 ;; This function is called by:
 10408 ;;		_Network_Read
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           	psect	text46
 10413  0059D8                     __ptext46:
 10414                           	opt stack 0
 10415  0059D8                     _ETH_Flush:
 10416                           	opt stack 20
 10417                           
 10418                           ;j60_driver.c: 627: ethData.pktReady = 0;
 10419                           
 10420                           ; BSR set to: 1
 10421                           ;incstack = 0
 10422  0059D8  0101               	movlb	1	; () banked
 10423  0059DA  93BD               	bcf	_ethData& (0+255),1,b	;volatile
 10424                           
 10425                           ; BSR set to: 1
 10426                           ;j60_driver.c: 629: ECON2 = ECON2 | 0x40;
 10427  0059DC  010E               	movlb	14	; () banked
 10428  0059DE  8DFE               	bsf	254,6,b	;volatile
 10429                           
 10430                           ; BSR set to: 14
 10431                           ;j60_driver.c: 635: if (((nextPacketPointer - 1) < ERXST) ||
 10432                           ;j60_driver.c: 636: ((nextPacketPointer - 1) > ERXND))
 10433  0059E0  D818               	call	PL587	;call to abstracted procedure
 10434  0059E2  51E8               	movf	232,w,b	;volatile
 10435  0059E4  5C19               	subwf	??_ETH_Flush+2,w,c
 10436  0059E6  51E9               	movf	233,w,b	;volatile
 10437  0059E8  581A               	subwfb	??_ETH_Flush+3,w,c
 10438  0059EA  E306               	bnc	l594
 10439                           
 10440                           ; BSR set to: 14
 10441  0059EC  D812               	call	PL587	;call to abstracted procedure
 10442  0059EE  5019               	movf	??_ETH_Flush+2,w,c
 10443  0059F0  5DEA               	subwf	234,w,b	;volatile
 10444  0059F2  501A               	movf	??_ETH_Flush+3,w,c
 10445  0059F4  59EB               	subwfb	235,w,b	;volatile
 10446  0059F6  E205               	bc	l9096
 10447  0059F8                     l594:
 10448                           
 10449                           ; BSR set to: 14
 10450                           ;j60_driver.c: 637: ERXRDPT = ERXND;
 10451  0059F8  CEEA FEEC          	movff	3818,3820	;volatile
 10452  0059FC  CEEB FEED          	movff	3819,3821	;volatile
 10453  005A00  D006               	goto	l9098
 10454  005A02                     l9096:
 10455                           
 10456                           ; BSR set to: 14
 10457                           ;j60_driver.c: 638: else
 10458                           ;j60_driver.c: 639: ERXRDPT = nextPacketPointer - 1;
 10459  005A02  0EFF               	movlw	255
 10460  005A04  2441               	addwf	_nextPacketPointer,w,c
 10461  005A06  6FEC               	movwf	236,b	;volatile
 10462  005A08  0EFF               	movlw	255
 10463  005A0A  2042               	addwfc	_nextPacketPointer+1,w,c
 10464  005A0C  6FED               	movwf	237,b	;volatile
 10465  005A0E                     l9098:
 10466                           
 10467                           ; BSR set to: 14
 10468                           ;j60_driver.c: 641: EIEbits.PKTIE = 1;
 10469  005A0E  8DFB               	bsf	251,6,b	;volatile
 10470                           
 10471                           ; BSR set to: 14
 10472  005A10  0012               	return		;funcret
 10473  005A12                     __end_of_ETH_Flush:
 10474                           	opt stack 0
 10475  005A12                     PL587:
 10476                           	opt stack 20
 10477  005A12  6817               	setf	??_ETH_Flush& (0+255),c
 10478  005A14  6818               	setf	(??_ETH_Flush+1)& (0+255),c
 10479  005A16  C041  F019         	movff	_nextPacketPointer,??_ETH_Flush+2
 10480  005A1A  C042  F01A         	movff	_nextPacketPointer+1,??_ETH_Flush+3
 10481  005A1E  5017               	movf	??_ETH_Flush,w,c
 10482  005A20  2619               	addwf	??_ETH_Flush+2,f,c
 10483  005A22  5018               	movf	??_ETH_Flush+1,w,c
 10484  005A24  221A               	addwfc	??_ETH_Flush+3,f,c
 10485  005A26  0012               	return	
 10486  005A28                     __end_ofPL587:
 10487                           	opt stack 0
 10488                           tosu	equ	0xFFF
 10489                           tosh	equ	0xFFE
 10490                           tosl	equ	0xFFD
 10491                           pclath	equ	0xFFA
 10492                           tblptru	equ	0xFF8
 10493                           tblptrh	equ	0xFF7
 10494                           tblptrl	equ	0xFF6
 10495                           tablat	equ	0xFF5
 10496                           prodh	equ	0xFF4
 10497                           prodl	equ	0xFF3
 10498                           intcon	equ	0xFF2
 10499                           indf0	equ	0xFEF
 10500                           postinc0	equ	0xFEE
 10501                           fsr0h	equ	0xFEA
 10502                           fsr0l	equ	0xFE9
 10503                           wreg	equ	0xFE8
 10504                           indf1	equ	0xFE7
 10505                           postinc1	equ	0xFE6
 10506                           postdec1	equ	0xFE5
 10507                           plusw1	equ	0xFE3
 10508                           fsr1h	equ	0xFE2
 10509                           fsr1l	equ	0xFE1
 10510                           bsr	equ	0xFE0
 10511                           indf2	equ	0xFDF
 10512                           postinc2	equ	0xFDE
 10513                           postdec2	equ	0xFDD
 10514                           plusw2	equ	0xFDB
 10515                           fsr2h	equ	0xFDA
 10516                           fsr2l	equ	0xFD9
 10517                           status	equ	0xFD8
 10518                           
 10519 ;; *************** function _ARPV4_Packet *****************
 10520 ;; Defined at:
 10521 ;;		line 97 in file "../../TCPIP Library/source/arpv4.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;		None
 10524 ;; Auto vars:     Size  Location     Type
 10525 ;;  x               1   39[BANK0 ] unsigned char 
 10526 ;;  arpPtr          2   36[BANK0 ] PTR struct .
 10527 ;;		 -> arpMap(104), 
 10528 ;;  x               1   38[BANK0 ] unsigned char 
 10529 ;;  header         28   42[BANK0 ] struct .
 10530 ;;  entryPointer    2   40[BANK0 ] PTR struct .
 10531 ;;		 -> arpMap(104), 
 10532 ;;  length          2   32[BANK0 ] unsigned int 
 10533 ;;  ret             1   35[BANK0 ] enum E450
 10534 ;;  mergeFlag       1   34[BANK0 ] unsigned char 
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  1    wreg      enum E450
 10537 ;; Registers used:
 10538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/1
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10545 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10546 ;;      Temps:          0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10547 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10548 ;;Total ram usage:       70 bytes
 10549 ;; Hardware stack levels used:    1
 10550 ;; Hardware stack levels required when called:   10
 10551 ;; This function calls:
 10552 ;;		_ETH_GetMAC
 10553 ;;		_ETH_ReadBlock
 10554 ;;		_ETH_Send
 10555 ;;		_ETH_WriteBlock
 10556 ;;		_ETH_WriteStart
 10557 ;; This function is called by:
 10558 ;;		_Network_Read
 10559 ;; This function uses a non-reentrant model
 10560 ;;
 10561                           
 10562                           	psect	text47
 10563  003054                     __ptext47:
 10564                           	opt stack 0
 10565  003054                     _ARPV4_Packet:
 10566                           	opt stack 18
 10567                           
 10568                           ;arpv4.c: 107: length = ETH_ReadBlock((char*)&header,sizeof(arpHeader_t));
 10569                           
 10570                           ; BSR set to: 14
 10571                           ;incstack = 0
 10572  003054  0E8A               	movlw	low ARPV4_Packet@header
 10573  003056  6E17               	movwf	ETH_ReadBlock@buffer,c
 10574  003058  6A18               	clrf	ETH_ReadBlock@buffer+1,c
 10575  00305A  6A1A               	clrf	ETH_ReadBlock@length+1,c
 10576  00305C  0E1C               	movlw	28
 10577  00305E  6E19               	movwf	ETH_ReadBlock@length,c
 10578  003060  EC0C  F02C         	call	_ETH_ReadBlock	;wreg free
 10579  003064  C017  F080         	movff	?_ETH_ReadBlock,ARPV4_Packet@length
 10580  003068  C018  F081         	movff	?_ETH_ReadBlock+1,ARPV4_Packet@length+1
 10581                           
 10582                           ; BSR set to: 1
 10583                           ;arpv4.c: 108: if(length == sizeof(arpHeader_t))
 10584  00306C  0E1C               	movlw	28
 10585  00306E  0100               	movlb	0	; () banked
 10586  003070  1980               	xorwf	ARPV4_Packet@length& (0+255),w,b
 10587  003072  1181               	iorwf	(ARPV4_Packet@length+1)& (0+255),w,b
 10588  003074  A4D8               	btfss	status,2,c
 10589  003076  0012               	return	
 10590                           
 10591                           ; BSR set to: 0
 10592                           ;arpv4.c: 109: {
 10593                           ;arpv4.c: 111: mergeFlag = 0;
 10594  003078  6B82               	clrf	ARPV4_Packet@mergeFlag& (0+255),b
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;arpv4.c: 112: entryPointer = arpMap;
 10598  00307A  D988               	call	PL695	;call to abstracted procedure
 10599                           
 10600                           ; BSR set to: 0
 10601                           ;arpv4.c: 114: for(uint8_t x=8; x > 0; x--)
 10602  00307C  0E08               	movlw	8
 10603  00307E  6F86               	movwf	ARPV4_Packet@x& (0+255),b
 10604  003080                     l9116:
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;arpv4.c: 115: {
 10608                           ;arpv4.c: 116: if( (header.spa == entryPointer->ipAddress) && (header.ptype == entryPoin
      +                          ter->protocolType) )
 10609  003080  EE20 F006          	lfsr	2,6
 10610  003084  D97E               	call	PL583	;call to abstracted procedure
 10611  003086  50DE               	movf	postinc2,w,c
 10612  003088  1998               	xorwf	(ARPV4_Packet@header+14)& (0+255),w,b
 10613  00308A  E11A               	bnz	l9126
 10614  00308C  50DE               	movf	postinc2,w,c
 10615  00308E  1999               	xorwf	(ARPV4_Packet@header+15)& (0+255),w,b
 10616  003090  E117               	bnz	l9126
 10617  003092  50DE               	movf	postinc2,w,c
 10618  003094  199A               	xorwf	(ARPV4_Packet@header+16)& (0+255),w,b
 10619  003096  E114               	bnz	l9126
 10620  003098  50DE               	movf	postinc2,w,c
 10621  00309A  199B               	xorwf	(ARPV4_Packet@header+17)& (0+255),w,b
 10622  00309C  E111               	bnz	l9126
 10623                           
 10624                           ; BSR set to: 0
 10625  00309E  EE20 F00A          	lfsr	2,10
 10626  0030A2  D96F               	call	PL583	;call to abstracted procedure
 10627  0030A4  50DE               	movf	postinc2,w,c
 10628  0030A6  198C               	xorwf	(ARPV4_Packet@header+2)& (0+255),w,b
 10629  0030A8  E10B               	bnz	l9126
 10630  0030AA  50DE               	movf	postinc2,w,c
 10631  0030AC  198D               	xorwf	(ARPV4_Packet@header+3)& (0+255),w,b
 10632  0030AE  E108               	bnz	l9126
 10633                           
 10634                           ; BSR set to: 0
 10635                           ;arpv4.c: 117: {
 10636                           ;arpv4.c: 118: entryPointer->age = 0;
 10637                           
 10638                           ; BSR set to: 0
 10639                           ;arpv4.c: 119: entryPointer->macAddress.s = header.sha.s;
 10640  0030B0  D94D               	call	PL511	;call to abstracted procedure
 10641  0030B2                     u14651:
 10642  0030B2  CFDB FFE3          	movff	plusw2,plusw1
 10643  0030B6  06E8               	decf	wreg,f,c
 10644  0030B8  E2FC               	bc	u14651
 10645                           
 10646                           ; BSR set to: 0
 10647                           ;arpv4.c: 120: mergeFlag = 1;
 10648  0030BA  0E01               	movlw	1
 10649  0030BC  6F82               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
 10650                           
 10651                           ;arpv4.c: 121: break;
 10652  0030BE  D007               	goto	l9132
 10653  0030C0                     l9126:
 10654                           
 10655                           ; BSR set to: 0
 10656                           ;arpv4.c: 122: }
 10657                           ;arpv4.c: 123: entryPointer++;
 10658  0030C0  0E0D               	movlw	13
 10659  0030C2  2788               	addwf	ARPV4_Packet@entryPointer& (0+255),f,b
 10660  0030C4  0E00               	movlw	0
 10661  0030C6  2389               	addwfc	(ARPV4_Packet@entryPointer+1)& (0+255),f,b
 10662                           
 10663                           ; BSR set to: 0
 10664  0030C8  0786               	decf	ARPV4_Packet@x& (0+255),f,b
 10665                           
 10666                           ; BSR set to: 0
 10667  0030CA  5186               	movf	ARPV4_Packet@x& (0+255),w,b
 10668  0030CC  E1D9               	bnz	l9116
 10669  0030CE                     l9132:
 10670                           
 10671                           ; BSR set to: 0
 10672                           ;arpv4.c: 124: }
 10673                           ;arpv4.c: 126: if(ipv4Address && (ipv4Address == ((((uint32_t)header.tpa&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)header.tpa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.
      +                          tpa&(uint32_t)0x0000ff00) << 8) | (((uint32_t)header.tpa&(uint32_t)0x000000ff) << 24) ))
      +                          )
 10674  0030CE  ECBD  F021         	call	PL679	;call to abstracted procedure
 10675  0030D2  B4D8               	btfsc	status,2,c
 10676  0030D4  0012               	return	
 10677                           
 10678                           ; BSR set to: 0
 10679  0030D6  51A2               	movf	(ARPV4_Packet@header+24)& (0+255),w,b
 10680  0030D8  D92F               	call	PL505	;call to abstracted procedure
 10681  0030DA  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
 10682  0030DE  D918               	call	PL491	;call to abstracted procedure
 10683  0030E0  C0A2  F068         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+8
 10684  0030E4  C0A3  F069         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+9
 10685  0030E8  C0A4  F06A         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+10
 10686  0030EC  C0A5  F06B         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+11
 10687  0030F0  D93B               	call	PL541	;call to abstracted procedure
 10688  0030F2  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
 10689  0030F6  D8D3               	call	PL421	;call to abstracted procedure
 10690  0030F8  5037               	movf	_ipv4Address,w,c
 10691  0030FA  197C               	xorwf	(??_ARPV4_Packet+28)& (0+255),w,b
 10692  0030FC  E109               	bnz	u14691
 10693  0030FE  5038               	movf	_ipv4Address+1,w,c
 10694  003100  197D               	xorwf	(??_ARPV4_Packet+29)& (0+255),w,b
 10695  003102  E106               	bnz	u14691
 10696  003104  5039               	movf	_ipv4Address+2,w,c
 10697  003106  197E               	xorwf	(??_ARPV4_Packet+30)& (0+255),w,b
 10698  003108  E103               	bnz	u14691
 10699  00310A  503A               	movf	_ipv4Address+3,w,c
 10700  00310C  197F               	xorwf	(??_ARPV4_Packet+31)& (0+255),w,b
 10701  00310E  A4D8               	btfss	status,2,c
 10702  003110                     u14691:
 10703  003110  0012               	return	
 10704                           
 10705                           ; BSR set to: 0
 10706                           ;arpv4.c: 127: {
 10707                           ;arpv4.c: 128: if(!mergeFlag)
 10708  003112  5182               	movf	ARPV4_Packet@mergeFlag& (0+255),w,b
 10709  003114  E149               	bnz	l9162
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;arpv4.c: 129: {
 10713                           ;arpv4.c: 131: entryPointer = arpMap;
 10714  003116  D93A               	call	PL695	;call to abstracted procedure
 10715                           
 10716                           ;arpv4.c: 132: arpMap_t *arpPtr = arpMap;
 10717  003118  0E00               	movlw	low _arpMap
 10718  00311A  6F84               	movwf	ARPV4_Packet@arpPtr& (0+255),b
 10719  00311C  0E03               	movlw	high _arpMap
 10720  00311E  6F85               	movwf	(ARPV4_Packet@arpPtr+1)& (0+255),b
 10721                           
 10722                           ; BSR set to: 0
 10723                           ;arpv4.c: 133: for(uint8_t x=8; x !=0; x--)
 10724  003120  0E08               	movlw	8
 10725  003122  6F87               	movwf	ARPV4_Packet@x_1672& (0+255),b
 10726  003124                     l9146:
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;arpv4.c: 134: {
 10730                           ;arpv4.c: 135: if(entryPointer->age < arpPtr->age)
 10731  003124  EE20 F00C          	lfsr	2,12
 10732  003128  5184               	movf	ARPV4_Packet@arpPtr& (0+255),w,b
 10733  00312A  26D9               	addwf	fsr2l,f,c
 10734  00312C  5185               	movf	(ARPV4_Packet@arpPtr+1)& (0+255),w,b
 10735  00312E  22DA               	addwfc	fsr2h,f,c
 10736  003130  EE10 F00C          	lfsr	1,12
 10737  003134  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 10738  003136  26E1               	addwf	fsr1l,f,c
 10739  003138  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 10740  00313A  22E2               	addwfc	fsr1h,f,c
 10741  00313C  50DE               	movf	postinc2,w,c
 10742  00313E  5CE6               	subwf	postinc1,w,c
 10743  003140  E204               	bc	l680
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;arpv4.c: 136: {
 10747                           ;arpv4.c: 137: entryPointer = arpPtr;
 10748  003142  C084  F088         	movff	ARPV4_Packet@arpPtr,ARPV4_Packet@entryPointer
 10749  003146  C085  F089         	movff	ARPV4_Packet@arpPtr+1,ARPV4_Packet@entryPointer+1
 10750  00314A                     l680:
 10751                           
 10752                           ; BSR set to: 0
 10753                           ;arpv4.c: 138: }
 10754                           ;arpv4.c: 140: arpPtr++;
 10755  00314A  0E0D               	movlw	13
 10756  00314C  2784               	addwf	ARPV4_Packet@arpPtr& (0+255),f,b
 10757  00314E  0E00               	movlw	0
 10758  003150  2385               	addwfc	(ARPV4_Packet@arpPtr+1)& (0+255),f,b
 10759                           
 10760                           ; BSR set to: 0
 10761  003152  0787               	decf	ARPV4_Packet@x_1672& (0+255),f,b
 10762                           
 10763                           ; BSR set to: 0
 10764  003154  5187               	movf	ARPV4_Packet@x_1672& (0+255),w,b
 10765  003156  E1E6               	bnz	l9146
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;arpv4.c: 141: }
 10769                           ;arpv4.c: 144: entryPointer->age = 0;
 10770                           
 10771                           ; BSR set to: 0
 10772                           ;arpv4.c: 145: entryPointer->macAddress.s = header.sha.s;
 10773  003158  D8F9               	call	PL511	;call to abstracted procedure
 10774  00315A                     u14731:
 10775  00315A  CFDB FFE3          	movff	plusw2,plusw1
 10776  00315E  06E8               	decf	wreg,f,c
 10777  003160  E2FC               	bc	u14731
 10778                           
 10779                           ; BSR set to: 0
 10780                           ;arpv4.c: 146: entryPointer->ipAddress = ((((uint32_t)header.spa&(uint32_t)0xff000000) >
      +                          > 24) | (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uin
      +                          t32_t)0x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) );
 10781  003162  5198               	movf	(ARPV4_Packet@header+14)& (0+255),w,b
 10782  003164  D8E9               	call	PL505	;call to abstracted procedure
 10783  003166  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
 10784  00316A  D8D2               	call	PL491	;call to abstracted procedure
 10785  00316C  C098  F068         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+8
 10786  003170  C099  F069         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+9
 10787  003174  C09A  F06A         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+10
 10788  003178  C09B  F06B         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+11
 10789  00317C  D8F5               	call	PL541	;call to abstracted procedure
 10790  00317E  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
 10791  003182  D88D               	call	PL421	;call to abstracted procedure
 10792  003184  EE20 F006          	lfsr	2,6
 10793  003188  D8FC               	call	PL583	;call to abstracted procedure
 10794  00318A  C07C  FFDE         	movff	??_ARPV4_Packet+28,postinc2
 10795  00318E  C07D  FFDE         	movff	??_ARPV4_Packet+29,postinc2
 10796  003192  C07E  FFDE         	movff	??_ARPV4_Packet+30,postinc2
 10797  003196  C07F  FFDE         	movff	??_ARPV4_Packet+31,postinc2
 10798                           
 10799                           ; BSR set to: 0
 10800                           ;arpv4.c: 147: entryPointer->protocolType = header.ptype;
 10801  00319A  EE20 F00A          	lfsr	2,10
 10802  00319E  D8F1               	call	PL583	;call to abstracted procedure
 10803  0031A0  C08C  FFDE         	movff	ARPV4_Packet@header+2,postinc2
 10804  0031A4  C08D  FFDD         	movff	ARPV4_Packet@header+3,postdec2
 10805  0031A8                     l9162:
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;arpv4.c: 148: }
 10809                           ;arpv4.c: 149: if(header.oper == ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)
      +                          1 & (uint16_t)0x00FF) << 8)))
 10810  0031A8  0591               	decf	(ARPV4_Packet@header+7)& (0+255),w,b
 10811  0031AA  1190               	iorwf	(ARPV4_Packet@header+6)& (0+255),w,b
 10812  0031AC  A4D8               	btfss	status,2,c
 10813  0031AE  0012               	return	
 10814                           
 10815                           ; BSR set to: 0
 10816                           ;arpv4.c: 150: {
 10817                           ;arpv4.c: 151: ret = ETH_WriteStart(&header.sha ,0x0806);
 10818  0031B0  0E92               	movlw	low (ARPV4_Packet@header+8)
 10819  0031B2  6E17               	movwf	ETH_WriteStart@dest_mac,c
 10820  0031B4  6A18               	clrf	ETH_WriteStart@dest_mac+1,c
 10821  0031B6  EC24  F023         	call	PL719	;call to abstracted procedure
 10822  0031BA  EC69  F024         	call	_ETH_WriteStart	;wreg free
 10823  0031BE  0100               	movlb	0	; () banked
 10824  0031C0  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 10825                           
 10826                           ; BSR set to: 0
 10827                           ;arpv4.c: 152: if(ret == SUCCESS)
 10828  0031C2  0583               	decf	ARPV4_Packet@ret& (0+255),w,b
 10829  0031C4  A4D8               	btfss	status,2,c
 10830  0031C6  0012               	return	
 10831                           
 10832                           ; BSR set to: 0
 10833                           ;arpv4.c: 153: {
 10834                           ;arpv4.c: 155: header.tha.s = header.sha.s;
 10835  0031C8  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 10836  0031CC  EE10  F09C         	lfsr	1,ARPV4_Packet@header+18
 10837  0031D0  0E05               	movlw	5
 10838  0031D2                     u14771:
 10839  0031D2  CFDB FFE3          	movff	plusw2,plusw1
 10840  0031D6  06E8               	decf	wreg,f,c
 10841  0031D8  E2FC               	bc	u14771
 10842                           
 10843                           ; BSR set to: 0
 10844                           ;arpv4.c: 156: ETH_GetMAC((char*)&header.sha.s);
 10845  0031DA  0E8A               	movlw	ARPV4_Packet@header& (0+255)
 10846  0031DC  0F08               	addlw	8
 10847  0031DE  EC4C  F02F         	call	_ETH_GetMAC
 10848                           
 10849                           ;arpv4.c: 157: header.tpa = header.spa;
 10850  0031E2  C098  F0A2         	movff	ARPV4_Packet@header+14,ARPV4_Packet@header+24
 10851  0031E6  C099  F0A3         	movff	ARPV4_Packet@header+15,ARPV4_Packet@header+25
 10852  0031EA  C09A  F0A4         	movff	ARPV4_Packet@header+16,ARPV4_Packet@header+26
 10853  0031EE  C09B  F0A5         	movff	ARPV4_Packet@header+17,ARPV4_Packet@header+27
 10854                           
 10855                           ;arpv4.c: 158: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
 10856  0031F2  5037               	movf	_ipv4Address,w,c
 10857  0031F4  0100               	movlb	0	; () banked
 10858  0031F6  D8A0               	call	PL505	;call to abstracted procedure
 10859  0031F8  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 10860  0031FA  5038               	movf	_ipv4Address+1,w,c
 10861  0031FC  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 10862  0031FE  6B66               	clrf	(??_ARPV4_Packet+6)& (0+255),b
 10863  003200  6B67               	clrf	(??_ARPV4_Packet+7)& (0+255),b
 10864  003202  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 10865  003206  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 10866  00320A  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 10867  00320E  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 10868  003210  6B68               	clrf	(??_ARPV4_Packet+8)& (0+255),b
 10869  003212  5039               	movf	_ipv4Address+2,w,c
 10870  003214  6F69               	movwf	(??_ARPV4_Packet+9)& (0+255),b
 10871  003216  6B6A               	clrf	(??_ARPV4_Packet+10)& (0+255),b
 10872  003218  5168               	movf	(??_ARPV4_Packet+8)& (0+255),w,b
 10873  00321A  6F6B               	movwf	(??_ARPV4_Packet+11)& (0+255),b
 10874  00321C  5169               	movf	(??_ARPV4_Packet+9)& (0+255),w,b
 10875  00321E  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
 10876  003220  516A               	movf	(??_ARPV4_Packet+10)& (0+255),w,b
 10877  003222  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 10878  003224  6B6E               	clrf	(??_ARPV4_Packet+14)& (0+255),b
 10879  003226  6B6F               	clrf	(??_ARPV4_Packet+15)& (0+255),b
 10880  003228  6B70               	clrf	(??_ARPV4_Packet+16)& (0+255),b
 10881  00322A  6B71               	clrf	(??_ARPV4_Packet+17)& (0+255),b
 10882  00322C  503A               	movf	_ipv4Address+3,w,c
 10883  00322E  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 10884  003230  0E19               	movlw	25
 10885  003232  D005               	goto	u14780
 10886  003234                     u14785:
 10887  003234  90D8               	bcf	status,0,c
 10888  003236  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 10889  003238  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 10890  00323A  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 10891  00323C  336F               	rrcf	(??_ARPV4_Packet+15)& (0+255),f,b
 10892  00323E                     u14780:
 10893  00323E  2EE8               	decfsz	wreg,f,c
 10894  003240  D7F9               	goto	u14785
 10895  003242  516B               	movf	(??_ARPV4_Packet+11)& (0+255),w,b
 10896  003244  116F               	iorwf	(??_ARPV4_Packet+15)& (0+255),w,b
 10897  003246  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 10898  003248  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 10899  00324A  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 10900  00324C  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 10901  00324E  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 10902  003250  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 10903  003252  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 10904  003254  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 10905  003256  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 10906  003258  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 10907  00325A  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 10908  00325C  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 10909  00325E  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 10910  003260  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 10911  003262  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 10912  003264  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 10913  003266  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 10914  003268  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 10915  00326A  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 10916  00326C  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 10917  00326E  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 10918  003270  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 10919  003272  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 10920  003274  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 10921  003276  6F98               	movwf	(ARPV4_Packet@header+14)& (0+255),b
 10922  003278  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 10923  00327A  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 10924  00327C  6F99               	movwf	(ARPV4_Packet@header+15)& (0+255),b
 10925  00327E  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 10926  003280  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 10927  003282  6F9A               	movwf	(ARPV4_Packet@header+16)& (0+255),b
 10928  003284  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 10929  003286  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 10930  003288  6F9B               	movwf	(ARPV4_Packet@header+17)& (0+255),b
 10931                           
 10932                           ; BSR set to: 0
 10933                           ;arpv4.c: 159: header.oper = ((((uint16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & 
      +                          (uint16_t)0x00FF) << 8));
 10934  00328A  0E02               	movlw	2
 10935  00328C  6F91               	movwf	(ARPV4_Packet@header+7)& (0+255),b
 10936  00328E  6B90               	clrf	(ARPV4_Packet@header+6)& (0+255),b
 10937                           
 10938                           ; BSR set to: 0
 10939                           ;arpv4.c: 160: ETH_WriteBlock((char*)&header,sizeof(header));
 10940  003290  0E8A               	movlw	low ARPV4_Packet@header
 10941  003292  EC18  F023         	call	PL673	;call to abstracted procedure
 10942  003296  EC22  F02E         	call	_ETH_WriteBlock	;wreg free
 10943  00329A  EF67  F02F         	goto	_ETH_Send	;wreg free
 10944  00329E                     __end_of_ARPV4_Packet:
 10945                           	opt stack 0
 10946  00329E                     PL421:
 10947                           	opt stack 18
 10948  00329E  14DE               	andwf	postinc2,w,c
 10949  0032A0  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
 10950  0032A2  0E00               	movlw	0
 10951  0032A4  14DE               	andwf	postinc2,w,c
 10952  0032A6  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
 10953  0032A8  0E00               	movlw	0
 10954  0032AA  14DE               	andwf	postinc2,w,c
 10955  0032AC  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 10956  0032AE  0EFF               	movlw	255
 10957  0032B0  14DE               	andwf	postinc2,w,c
 10958  0032B2  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 10959  0032B4  0E19               	movlw	25
 10960  0032B6  D005               	goto	u14680
 10961  0032B8                     u14685:
 10962  0032B8  90D8               	bcf	status,0,c
 10963  0032BA  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
 10964  0032BC  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 10965  0032BE  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 10966  0032C0  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 10967  0032C2                     u14680:
 10968  0032C2  2EE8               	decfsz	wreg,f,c
 10969  0032C4  D7F9               	goto	u14685
 10970  0032C6  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 10971  0032C8  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 10972  0032CA  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 10973  0032CC  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 10974  0032CE  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 10975  0032D0  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 10976  0032D2  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 10977  0032D4  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 10978  0032D6  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 10979  0032D8  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
 10980  0032DA  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 10981  0032DC  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 10982  0032DE  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 10983  0032E0  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 10984  0032E2  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 10985  0032E4  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 10986  0032E6  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 10987  0032E8  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 10988  0032EA  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 10989  0032EC  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 10990  0032EE  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 10991  0032F0  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 10992  0032F2  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 10993  0032F4  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
 10994  0032F6  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 10995  0032F8  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 10996  0032FA  6F7C               	movwf	(??_ARPV4_Packet+28)& (0+255),b
 10997  0032FC  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 10998  0032FE  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 10999  003300  6F7D               	movwf	(??_ARPV4_Packet+29)& (0+255),b
 11000  003302  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 11001  003304  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 11002  003306  6F7E               	movwf	(??_ARPV4_Packet+30)& (0+255),b
 11003  003308  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 11004  00330A  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
 11005  00330C  6F7F               	movwf	(??_ARPV4_Packet+31)& (0+255),b
 11006  00330E  0012               	return	
 11007  003310                     __end_ofPL421:
 11008                           	opt stack 0
 11009  003310                     PL491:
 11010                           	opt stack 18
 11011  003310  0E00               	movlw	0
 11012  003312  14DE               	andwf	postinc2,w,c
 11013  003314  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
 11014  003316  0EFF               	movlw	255
 11015  003318  14DE               	andwf	postinc2,w,c
 11016  00331A  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 11017  00331C  0E00               	movlw	0
 11018  00331E  14DE               	andwf	postinc2,w,c
 11019  003320  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
 11020  003322  0E00               	movlw	0
 11021  003324  14DE               	andwf	postinc2,w,c
 11022  003326  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
 11023  003328  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 11024  00332C  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 11025  003330  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 11026  003334  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 11027  003336  0012               	return	
 11028  003338                     __end_ofPL491:
 11029                           	opt stack 0
 11030  003338                     PL505:
 11031                           	opt stack 18
 11032  003338  6F60               	movwf	??_ARPV4_Packet& (0+255),b
 11033  00333A  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 11034  00333C  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 11035  00333E  6B63               	clrf	(??_ARPV4_Packet+3)& (0+255),b
 11036  003340  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 11037  003344  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 11038  003346  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 11039  003348  6B60               	clrf	??_ARPV4_Packet& (0+255),b
 11040  00334A  0012               	return	
 11041  00334C                     __end_ofPL505:
 11042                           	opt stack 0
 11043  00334C                     PL511:
 11044                           	opt stack 18
 11045  00334C  EE20 F00C          	lfsr	2,12
 11046  003350  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 11047  003352  26D9               	addwf	fsr2l,f,c
 11048  003354  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 11049  003356  22DA               	addwfc	fsr2h,f,c
 11050  003358  6ADF               	clrf	indf2,c
 11051  00335A  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 11052  00335E  C088  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 11053  003362  C089  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 11054  003366  0C05               	retlw	5
 11055  003368                     __end_ofPL511:
 11056                           	opt stack 0
 11057  003368                     PL541:
 11058                           	opt stack 18
 11059  003368  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 11060  00336C  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 11061  003370  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 11062  003374  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
 11063  003376  6B6C               	clrf	(??_ARPV4_Packet+12)& (0+255),b
 11064  003378  5169               	movf	(??_ARPV4_Packet+9)& (0+255),w,b
 11065  00337A  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 11066  00337C  6B6E               	clrf	(??_ARPV4_Packet+14)& (0+255),b
 11067  00337E  6B6F               	clrf	(??_ARPV4_Packet+15)& (0+255),b
 11068  003380  0C00               	retlw	0
 11069  003382                     __end_ofPL541:
 11070                           	opt stack 0
 11071  003382                     PL583:
 11072                           	opt stack 18
 11073  003382  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 11074  003384  26D9               	addwf	fsr2l,f,c
 11075  003386  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 11076  003388  22DA               	addwfc	fsr2h,f,c
 11077  00338A  0012               	return	
 11078  00338C                     __end_ofPL583:
 11079                           	opt stack 0
 11080  00338C                     PL695:
 11081                           	opt stack 18
 11082  00338C  0E00               	movlw	low _arpMap
 11083  00338E  6F88               	movwf	ARPV4_Packet@entryPointer& (0+255),b
 11084  003390  0E03               	movlw	high _arpMap
 11085  003392  6F89               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
 11086  003394  0012               	return	
 11087  003396                     __end_ofPL695:
 11088                           	opt stack 0
 11089                           tosu	equ	0xFFF
 11090                           tosh	equ	0xFFE
 11091                           tosl	equ	0xFFD
 11092                           pclath	equ	0xFFA
 11093                           tblptru	equ	0xFF8
 11094                           tblptrh	equ	0xFF7
 11095                           tblptrl	equ	0xFF6
 11096                           tablat	equ	0xFF5
 11097                           prodh	equ	0xFF4
 11098                           prodl	equ	0xFF3
 11099                           intcon	equ	0xFF2
 11100                           indf0	equ	0xFEF
 11101                           postinc0	equ	0xFEE
 11102                           fsr0h	equ	0xFEA
 11103                           fsr0l	equ	0xFE9
 11104                           wreg	equ	0xFE8
 11105                           indf1	equ	0xFE7
 11106                           postinc1	equ	0xFE6
 11107                           postdec1	equ	0xFE5
 11108                           plusw1	equ	0xFE3
 11109                           fsr1h	equ	0xFE2
 11110                           fsr1l	equ	0xFE1
 11111                           bsr	equ	0xFE0
 11112                           indf2	equ	0xFDF
 11113                           postinc2	equ	0xFDE
 11114                           postdec2	equ	0xFDD
 11115                           plusw2	equ	0xFDB
 11116                           fsr2h	equ	0xFDA
 11117                           fsr2l	equ	0xFD9
 11118                           status	equ	0xFD8
 11119                           
 11120 ;; *************** function _ETH_EventHandler *****************
 11121 ;; Defined at:
 11122 ;;		line 215 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;		None
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;		None
 11127 ;; Return value:  Size  Location     Type
 11128 ;;		None               void
 11129 ;; Registers used:
 11130 ;;		wreg, status,2, status,0, cstack
 11131 ;; Tracked objects:
 11132 ;;		On entry : 0/1
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11140 ;;Total ram usage:        0 bytes
 11141 ;; Hardware stack levels used:    1
 11142 ;; Hardware stack levels required when called:   12
 11143 ;; This function calls:
 11144 ;;		_ETH_CheckLinkUp
 11145 ;;		_PHY_Read
 11146 ;; This function is called by:
 11147 ;;		_Network_Manage
 11148 ;; This function uses a non-reentrant model
 11149 ;;
 11150                           
 11151                           	psect	text48
 11152  005BF8                     __ptext48:
 11153                           	opt stack 0
 11154  005BF8                     _ETH_EventHandler:
 11155                           	opt stack 0
 11156                           
 11157                           ;j60_driver.c: 218: PIR2bits.ETHIF = 0;
 11158                           
 11159                           ;incstack = 0
 11160                           
 11161                           ;j60_driver.c: 219: if(EPKTCNT >= 3)
 11162  005BF8  D81E               	call	PL741	;call to abstracted procedure
 11163  005BFA  65D9               	cpfsgt	217,b	;volatile
 11164  005BFC  D008               	goto	l484
 11165                           
 11166                           ; BSR set to: 14
 11167                           ;j60_driver.c: 222: if (EIRbits.LINKIF)
 11168  005BFE  A860               	btfss	3936,4,c	;volatile
 11169  005C00  D006               	goto	l484
 11170                           
 11171                           ; BSR set to: 14
 11172                           ;j60_driver.c: 223: {
 11173                           ;j60_driver.c: 224: PHY_Read(PHIR);
 11174  005C02  0E13               	movlw	19
 11175  005C04  ECA0  F027         	call	_PHY_Read
 11176                           
 11177                           ; BSR set to: 14
 11178                           ;j60_driver.c: 226: ethData.linkChange = 1;
 11179                           
 11180                           ; BSR set to: 1
 11181                           ;j60_driver.c: 227: ethData.up = 0;
 11182  005C08  D819               	call	PL751	;call to abstracted procedure
 11183                           
 11184                           ;j60_driver.c: 230: if(ETH_CheckLinkUp())
 11185  005C0A  EC9D  F02F         	call	_ETH_CheckLinkUp	;wreg free
 11186  005C0E                     l484:
 11187                           
 11188                           ;j60_driver.c: 233: }
 11189                           ;j60_driver.c: 234: }
 11190                           ;j60_driver.c: 236: if(EIRbits.RXERIF)
 11191  005C0E  B060               	btfsc	3936,0,c	;volatile
 11192                           
 11193                           ;j60_driver.c: 237: {
 11194                           ;j60_driver.c: 239: EIRbits.RXERIF = 0;
 11195  005C10  9060               	bcf	3936,0,c	;volatile
 11196                           
 11197                           ;j60_driver.c: 240: }
 11198                           ;j60_driver.c: 242: if (EIRbits.TXERIF)
 11199  005C12  B260               	btfsc	3936,1,c	;volatile
 11200                           
 11201                           ;j60_driver.c: 243: {
 11202                           ;j60_driver.c: 245: EIRbits.TXERIF = 0;
 11203  005C14  9260               	bcf	3936,1,c	;volatile
 11204                           
 11205                           ;j60_driver.c: 246: }
 11206                           ;j60_driver.c: 248: if(EIRbits.TXIF)
 11207  005C16  B660               	btfsc	3936,3,c	;volatile
 11208                           
 11209                           ;j60_driver.c: 249: {
 11210                           ;j60_driver.c: 251: EIRbits.TXIF = 0;
 11211                           
 11212                           ;j60_driver.c: 252: ethData.bufferBusy = 0;
 11213  005C18  D80A               	call	PL739	;call to abstracted procedure
 11214  005C1A                     l489:
 11215                           
 11216                           ;j60_driver.c: 253: }
 11217                           ;j60_driver.c: 255: if (EIRbits.PKTIF)
 11218  005C1A  AC60               	btfss	3936,6,c	;volatile
 11219  005C1C  0012               	return	
 11220                           
 11221                           ;j60_driver.c: 256: {
 11222                           ;j60_driver.c: 257: if(ethData.pktReady == 0)
 11223  005C1E  0101               	movlb	1	; () banked
 11224  005C20  B3BD               	btfsc	_ethData& (0+255),1,b	;volatile
 11225  005C22  0012               	return	
 11226                           
 11227                           ; BSR set to: 1
 11228                           ;j60_driver.c: 258: {
 11229                           ;j60_driver.c: 260: ethData.pktReady = 1;
 11230                           
 11231                           ;j60_driver.c: 261: EIEbits.PKTIE = 0;
 11232  005C24  D000               	goto	PL699	;call to abstracted procedure
 11233  005C26                     __end_of_ETH_EventHandler:
 11234                           	opt stack 0
 11235  005C26                     PL699:
 11236                           	opt stack 12
 11237  005C26  83BD               	bsf	_ethData& (0+255),1,b	;volatile
 11238  005C28  010E               	movlb	14	; () banked
 11239  005C2A  9DFB               	bcf	251,6,b	;volatile
 11240  005C2C  0012               	return		;funcret
 11241  005C2E                     __end_ofPL699:
 11242                           	opt stack 0
 11243  005C2E                     PL739:
 11244                           	opt stack 12
 11245  005C2E  9660               	bcf	3936,3,c	;volatile
 11246  005C30  0101               	movlb	1	; () banked
 11247  005C32  9BBD               	bcf	_ethData& (0+255),5,b	;volatile
 11248  005C34  0012               	return	
 11249  005C36                     __end_ofPL739:
 11250                           	opt stack 0
 11251  005C36                     PL741:
 11252                           	opt stack 12
 11253  005C36  9AA1               	bcf	4001,5,c	;volatile
 11254  005C38  010E               	movlb	14	; () banked
 11255  005C3A  0C02               	retlw	2
 11256  005C3C                     __end_ofPL741:
 11257                           	opt stack 0
 11258  005C3C                     PL751:
 11259                           	opt stack 12
 11260  005C3C  0101               	movlb	1	; () banked
 11261  005C3E  89BD               	bsf	_ethData& (0+255),4,b	;volatile
 11262  005C40  95BD               	bcf	_ethData& (0+255),2,b	;volatile
 11263  005C42  0012               	return	
 11264  005C44                     __end_ofPL751:
 11265                           	opt stack 0
 11266                           tosu	equ	0xFFF
 11267                           tosh	equ	0xFFE
 11268                           tosl	equ	0xFFD
 11269                           pclath	equ	0xFFA
 11270                           tblptru	equ	0xFF8
 11271                           tblptrh	equ	0xFF7
 11272                           tblptrl	equ	0xFF6
 11273                           tablat	equ	0xFF5
 11274                           prodh	equ	0xFF4
 11275                           prodl	equ	0xFF3
 11276                           intcon	equ	0xFF2
 11277                           indf0	equ	0xFEF
 11278                           postinc0	equ	0xFEE
 11279                           fsr0h	equ	0xFEA
 11280                           fsr0l	equ	0xFE9
 11281                           wreg	equ	0xFE8
 11282                           indf1	equ	0xFE7
 11283                           postinc1	equ	0xFE6
 11284                           postdec1	equ	0xFE5
 11285                           plusw1	equ	0xFE3
 11286                           fsr1h	equ	0xFE2
 11287                           fsr1l	equ	0xFE1
 11288                           bsr	equ	0xFE0
 11289                           indf2	equ	0xFDF
 11290                           postinc2	equ	0xFDE
 11291                           postdec2	equ	0xFDD
 11292                           plusw2	equ	0xFDB
 11293                           fsr2h	equ	0xFDA
 11294                           fsr2l	equ	0xFD9
 11295                           status	equ	0xFD8
 11296                           
 11297 ;; *************** function _DHCP_Manage *****************
 11298 ;; Defined at:
 11299 ;;		line 130 in file "../../TCPIP Library/source/dhcp_client.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;		None
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;		None
 11304 ;; Return value:  Size  Location     Type
 11305 ;;		None               void
 11306 ;; Registers used:
 11307 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11308 ;; Tracked objects:
 11309 ;;		On entry : F/0
 11310 ;;		On exit  : E/0
 11311 ;;		Unchanged: 0/0
 11312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11317 ;;Total ram usage:        0 bytes
 11318 ;; Hardware stack levels used:    1
 11319 ;; Hardware stack levels required when called:   14
 11320 ;; This function calls:
 11321 ;;		_DHCP_Request
 11322 ;; This function is called by:
 11323 ;;		_Network_Manage
 11324 ;; This function uses a non-reentrant model
 11325 ;;
 11326                           
 11327                           	psect	text49
 11328  005550                     __ptext49:
 11329                           	opt stack 0
 11330  005550                     _DHCP_Manage:
 11331                           	opt stack 15
 11332                           
 11333                           ; BSR set to: 0
 11334                           ;dhcp_client.c: 132: if(ethData.linkChange)
 11335                           
 11336                           ;incstack = 0
 11337  005550  0101               	movlb	1	; () banked
 11338  005552  A9BD               	btfss	_ethData& (0+255),4,b	;volatile
 11339  005554  D015               	goto	l9476
 11340                           
 11341                           ; BSR set to: 1
 11342                           ;dhcp_client.c: 133: {
 11343                           ;dhcp_client.c: 134: if (clientState == BOUND && dhcpLeaseTime)
 11344  005556  0E05               	movlw	5
 11345  005558  1848               	xorwf	_clientState,w,c
 11346  00555A  E10B               	bnz	l9470
 11347                           
 11348                           ; BSR set to: 1
 11349  00555C  D838               	call	PL657	;call to abstracted procedure
 11350  00555E  E009               	bz	l9470
 11351                           
 11352                           ; BSR set to: 1
 11353                           ;dhcp_client.c: 135: {
 11354                           ;dhcp_client.c: 136: dhcpServerId = 0xFFFFFFFF;
 11355  005560  0102               	movlb	2	; () banked
 11356  005562  691C               	setf	_dhcpServerId& (0+255),b
 11357  005564  691D               	setf	(_dhcpServerId+1)& (0+255),b
 11358  005566  691E               	setf	(_dhcpServerId+2)& (0+255),b
 11359  005568  691F               	setf	(_dhcpServerId+3)& (0+255),b
 11360                           
 11361                           ; BSR set to: 2
 11362                           ;dhcp_client.c: 137: DHCP_Request(DHCP_REQUEST);
 11363  00556A  0E03               	movlw	3
 11364  00556C  EC28  F020         	call	_DHCP_Request
 11365                           
 11366                           ;dhcp_client.c: 138: }
 11367  005570  D004               	goto	l9474
 11368  005572                     l9470:
 11369                           
 11370                           ; BSR set to: 1
 11371                           ;dhcp_client.c: 139: else
 11372                           ;dhcp_client.c: 140: {
 11373                           ;dhcp_client.c: 141: clientState = INIT;
 11374  005572  0E01               	movlw	1
 11375  005574  6E48               	movwf	_clientState,c
 11376                           
 11377                           ; BSR set to: 1
 11378                           ;dhcp_client.c: 142: DHCP_Request(DHCP_DISCOVER);
 11379  005576  EC28  F020         	call	_DHCP_Request
 11380  00557A                     l9474:
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;dhcp_client.c: 143: }
 11384                           ;dhcp_client.c: 144: ethData.linkChange=0;
 11385  00557A  0101               	movlb	1	; () banked
 11386  00557C  99BD               	bcf	_ethData& (0+255),4,b	;volatile
 11387                           
 11388                           ;dhcp_client.c: 145: }
 11389  00557E  0012               	return	
 11390  005580                     l9476:
 11391                           
 11392                           ; BSR set to: 1
 11393                           ;dhcp_client.c: 146: else if (clientState == INIT || clientState == INIT_REBOOT)
 11394  005580  0448               	decf	_clientState,w,c
 11395  005582  E003               	bz	l9480
 11396                           
 11397                           ; BSR set to: 1
 11398  005584  0E02               	movlw	2
 11399  005586  1848               	xorwf	_clientState,w,c
 11400  005588  E104               	bnz	l9484
 11401  00558A                     l9480:
 11402                           
 11403                           ; BSR set to: 1
 11404                           ;dhcp_client.c: 147: {
 11405                           ;dhcp_client.c: 148: clientState = INIT;
 11406  00558A  0E01               	movlw	1
 11407  00558C  6E48               	movwf	_clientState,c
 11408                           
 11409                           ; BSR set to: 1
 11410                           ;dhcp_client.c: 149: DHCP_Request(DHCP_DISCOVER);
 11411  00558E  EF28  F020         	goto	_DHCP_Request
 11412  005592                     l9484:
 11413                           
 11414                           ; BSR set to: 1
 11415                           ;dhcp_client.c: 151: else if ((dhcpLeaseTime < 100)&& clientState == BOUND)
 11416  005592  5036               	movf	_dhcpLeaseTime+3,w,c
 11417  005594  1035               	iorwf	_dhcpLeaseTime+2,w,c
 11418  005596  1034               	iorwf	_dhcpLeaseTime+1,w,c
 11419  005598  E109               	bnz	l9490
 11420  00559A  0E64               	movlw	100
 11421  00559C  5C33               	subwf	_dhcpLeaseTime,w,c
 11422  00559E  E206               	bc	l9490
 11423                           
 11424                           ; BSR set to: 1
 11425  0055A0  0E05               	movlw	5
 11426  0055A2  1848               	xorwf	_clientState,w,c
 11427  0055A4  E103               	bnz	l9490
 11428                           
 11429                           ; BSR set to: 1
 11430                           ;dhcp_client.c: 152: {
 11431                           ;dhcp_client.c: 153: DHCP_Request(DHCP_REQUEST);
 11432  0055A6  0E03               	movlw	3
 11433  0055A8  EF28  F020         	goto	_DHCP_Request
 11434  0055AC                     l9490:
 11435                           
 11436                           ; BSR set to: 1
 11437                           ;dhcp_client.c: 155: else
 11438                           ;dhcp_client.c: 156: {
 11439                           ;dhcp_client.c: 157: if(clientState == BOUND && dhcpLeaseTime) dhcpLeaseTime --;
 11440  0055AC  0E05               	movlw	5
 11441  0055AE  1848               	xorwf	_clientState,w,c
 11442  0055B0  E108               	bnz	l9496
 11443                           
 11444                           ; BSR set to: 1
 11445  0055B2  D80D               	call	PL657	;call to abstracted procedure
 11446  0055B4  E006               	bz	l9496
 11447                           
 11448                           ; BSR set to: 1
 11449  0055B6  0633               	decf	_dhcpLeaseTime,f,c
 11450  0055B8  0E00               	movlw	0
 11451  0055BA  5A34               	subwfb	_dhcpLeaseTime+1,f,c
 11452  0055BC  5A35               	subwfb	_dhcpLeaseTime+2,f,c
 11453  0055BE  5A36               	subwfb	_dhcpLeaseTime+3,f,c
 11454  0055C0  0C00               	retlw	0
 11455  0055C2                     l9496:
 11456                           
 11457                           ; BSR set to: 1
 11458                           ;dhcp_client.c: 158: else if (!dhcpLeaseTime) clientState = INIT_REBOOT;
 11459  0055C2  D805               	call	PL657	;call to abstracted procedure
 11460  0055C4  A4D8               	btfss	status,2,c
 11461  0055C6  0012               	return	
 11462                           
 11463                           ; BSR set to: 1
 11464  0055C8  0E02               	movlw	2
 11465  0055CA  6E48               	movwf	_clientState,c
 11466  0055CC  0C02               	retlw	2
 11467  0055CE                     __end_of_DHCP_Manage:
 11468                           	opt stack 0
 11469  0055CE                     PL657:
 11470                           	opt stack 15
 11471  0055CE  5033               	movf	_dhcpLeaseTime,w,c
 11472  0055D0  1034               	iorwf	_dhcpLeaseTime+1,w,c
 11473  0055D2  1035               	iorwf	_dhcpLeaseTime+2,w,c
 11474  0055D4  1036               	iorwf	_dhcpLeaseTime+3,w,c
 11475  0055D6  0012               	return	
 11476  0055D8                     __end_ofPL657:
 11477                           	opt stack 0
 11478                           tosu	equ	0xFFF
 11479                           tosh	equ	0xFFE
 11480                           tosl	equ	0xFFD
 11481                           pclath	equ	0xFFA
 11482                           tblptru	equ	0xFF8
 11483                           tblptrh	equ	0xFF7
 11484                           tblptrl	equ	0xFF6
 11485                           tablat	equ	0xFF5
 11486                           prodh	equ	0xFF4
 11487                           prodl	equ	0xFF3
 11488                           intcon	equ	0xFF2
 11489                           indf0	equ	0xFEF
 11490                           postinc0	equ	0xFEE
 11491                           fsr0h	equ	0xFEA
 11492                           fsr0l	equ	0xFE9
 11493                           wreg	equ	0xFE8
 11494                           indf1	equ	0xFE7
 11495                           postinc1	equ	0xFE6
 11496                           postdec1	equ	0xFE5
 11497                           plusw1	equ	0xFE3
 11498                           fsr1h	equ	0xFE2
 11499                           fsr1l	equ	0xFE1
 11500                           bsr	equ	0xFE0
 11501                           indf2	equ	0xFDF
 11502                           postinc2	equ	0xFDE
 11503                           postdec2	equ	0xFDD
 11504                           plusw2	equ	0xFDB
 11505                           fsr2h	equ	0xFDA
 11506                           fsr2l	equ	0xFD9
 11507                           status	equ	0xFD8
 11508                           
 11509 ;; *************** function _DHCP_Request *****************
 11510 ;; Defined at:
 11511 ;;		line 71 in file "../../TCPIP Library/source/dhcp_client.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;  type            1    wreg     enum E592
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;  type            1   72[BANK0 ] enum E592
 11516 ;;  ethMAC          6   73[BANK0 ] struct .
 11517 ;;  msglength       2    0        unsigned int 
 11518 ;;  started         1   71[BANK0 ] unsigned char 
 11519 ;; Return value:  Size  Location     Type
 11520 ;;		None               void
 11521 ;; Registers used:
 11522 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11523 ;; Tracked objects:
 11524 ;;		On entry : C/0
 11525 ;;		On exit  : F/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11531 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11532 ;;Total ram usage:        8 bytes
 11533 ;; Hardware stack levels used:    1
 11534 ;; Hardware stack levels required when called:   13
 11535 ;; This function calls:
 11536 ;;		_DHCP_WriteZeros
 11537 ;;		_ETH_GetMAC
 11538 ;;		_ETH_Write16
 11539 ;;		_ETH_Write32
 11540 ;;		_ETH_Write8
 11541 ;;		_ETH_WriteBlock
 11542 ;;		_UDP_Send
 11543 ;;		_UDP_Start
 11544 ;; This function is called by:
 11545 ;;		_DHCP_Manage
 11546 ;;		_DHCP_Handler
 11547 ;; This function uses a non-reentrant model
 11548 ;;
 11549                           
 11550                           	psect	text50
 11551  004050                     __ptext50:
 11552                           	opt stack 0
 11553  004050                     _DHCP_Request:
 11554                           	opt stack 12
 11555                           
 11556                           ;incstack = 0
 11557                           ;DHCP_Request@type stored from wreg
 11558  004050  0100               	movlb	0	; () banked
 11559  004052  6FA8               	movwf	DHCP_Request@type& (0+255),b
 11560                           
 11561                           ;dhcp_client.c: 78: ETH_GetMAC((char*)&ethMAC);
 11562  004054  0EA9               	movlw	DHCP_Request@ethMAC& (0+255)
 11563  004056  EC4C  F02F         	call	_ETH_GetMAC
 11564                           
 11565                           ;dhcp_client.c: 83: }
 11566                           ;dhcp_client.c: 85: started = UDP_Start(0xFFFFFFFF,68,67);
 11567  00405A  0100               	movlb	0	; () banked
 11568  00405C  699F               	setf	UDP_Start@destIP& (0+255),b
 11569  00405E  69A0               	setf	(UDP_Start@destIP+1)& (0+255),b
 11570  004060  69A1               	setf	(UDP_Start@destIP+2)& (0+255),b
 11571  004062  69A2               	setf	(UDP_Start@destIP+3)& (0+255),b
 11572  004064  6BA4               	clrf	(UDP_Start@srcPort+1)& (0+255),b
 11573  004066  0E44               	movlw	68
 11574  004068  6FA3               	movwf	UDP_Start@srcPort& (0+255),b
 11575  00406A  6BA6               	clrf	(UDP_Start@dstPort+1)& (0+255),b
 11576  00406C  0E43               	movlw	67
 11577  00406E  6FA5               	movwf	UDP_Start@dstPort& (0+255),b
 11578  004070  EC3C  F02D         	call	_UDP_Start	;wreg free
 11579  004074  0100               	movlb	0	; () banked
 11580  004076  6FA7               	movwf	DHCP_Request@started& (0+255),b
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;dhcp_client.c: 87: if(started==SUCCESS)
 11584  004078  05A7               	decf	DHCP_Request@started& (0+255),w,b
 11585  00407A  A4D8               	btfss	status,2,c
 11586  00407C  0012               	return	
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;dhcp_client.c: 88: {
 11590                           ;dhcp_client.c: 89: ETH_Write32(0x01010600);
 11591  00407E  6A17               	clrf	ETH_Write32@data,c
 11592  004080  0E06               	movlw	6
 11593  004082  6E18               	movwf	ETH_Write32@data+1,c
 11594  004084  0E01               	movlw	1
 11595  004086  6E19               	movwf	ETH_Write32@data+2,c
 11596  004088  6E1A               	movwf	ETH_Write32@data+3,c
 11597  00408A  EC6C  F031         	call	_ETH_Write32	;wreg free
 11598                           
 11599                           ;dhcp_client.c: 90: ETH_Write32(xidValue);
 11600  00408E  0E50               	movlw	80
 11601  004090  6E17               	movwf	ETH_Write32@data,c
 11602  004092  0E48               	movlw	72
 11603  004094  6E18               	movwf	ETH_Write32@data+1,c
 11604  004096  0E43               	movlw	67
 11605  004098  6E19               	movwf	ETH_Write32@data+2,c
 11606  00409A  0E4D               	movlw	77
 11607  00409C  6E1A               	movwf	ETH_Write32@data+3,c
 11608  00409E  EC6C  F031         	call	_ETH_Write32	;wreg free
 11609                           
 11610                           ;dhcp_client.c: 91: ETH_Write32(0x00008000);
 11611  0040A2  6A17               	clrf	ETH_Write32@data,c
 11612  0040A4  0E80               	movlw	128
 11613  0040A6  6E18               	movwf	ETH_Write32@data+1,c
 11614  0040A8  6A19               	clrf	ETH_Write32@data+2,c
 11615  0040AA  6A1A               	clrf	ETH_Write32@data+3,c
 11616  0040AC  EC6C  F031         	call	_ETH_Write32	;wreg free
 11617                           
 11618                           ;dhcp_client.c: 92: if (type == DHCP_REQUEST)
 11619  0040B0  0E03               	movlw	3
 11620  0040B2  0100               	movlb	0	; () banked
 11621  0040B4  19A8               	xorwf	DHCP_Request@type& (0+255),w,b
 11622  0040B6  E104               	bnz	l8210
 11623                           
 11624                           ; BSR set to: 0
 11625                           ;dhcp_client.c: 93: {
 11626                           ;dhcp_client.c: 94: ETH_Write32(0);
 11627  0040B8  D898               	call	PL623	;call to abstracted procedure
 11628  0040BA  EC6C  F031         	call	_ETH_Write32	;wreg free
 11629                           
 11630                           ;dhcp_client.c: 95: }
 11631  0040BE  D003               	goto	l760
 11632  0040C0                     l8210:
 11633                           
 11634                           ; BSR set to: 0
 11635                           ;dhcp_client.c: 96: else
 11636                           ;dhcp_client.c: 97: {
 11637                           ;dhcp_client.c: 98: ETH_Write32(ipv4Address);
 11638  0040C0  D88B               	call	PL521	;call to abstracted procedure
 11639  0040C2  EC6C  F031         	call	_ETH_Write32	;wreg free
 11640  0040C6                     l760:
 11641                           
 11642                           ;dhcp_client.c: 99: }
 11643                           ;dhcp_client.c: 100: ETH_Write32(0);
 11644  0040C6  D891               	call	PL623	;call to abstracted procedure
 11645  0040C8  EC6C  F031         	call	_ETH_Write32	;wreg free
 11646                           
 11647                           ;dhcp_client.c: 101: ETH_Write32(0);
 11648  0040CC  D88E               	call	PL623	;call to abstracted procedure
 11649  0040CE  EC6C  F031         	call	_ETH_Write32	;wreg free
 11650                           
 11651                           ;dhcp_client.c: 102: ETH_Write32(0);
 11652  0040D2  D88B               	call	PL623	;call to abstracted procedure
 11653  0040D4  EC6C  F031         	call	_ETH_Write32	;wreg free
 11654                           
 11655                           ;dhcp_client.c: 103: ETH_WriteBlock((char *)&ethMAC,6);
 11656  0040D8  D88D               	call	PL643	;call to abstracted procedure
 11657  0040DA  EC22  F02E         	call	_ETH_WriteBlock	;wreg free
 11658                           
 11659                           ;dhcp_client.c: 104: DHCP_WriteZeros(202);
 11660  0040DE  6A19               	clrf	DHCP_WriteZeros@length+1,c
 11661  0040E0  0ECA               	movlw	202
 11662  0040E2  6E18               	movwf	DHCP_WriteZeros@length,c
 11663  0040E4  EC79  F031         	call	_DHCP_WriteZeros	;wreg free
 11664                           
 11665                           ;dhcp_client.c: 105: ETH_Write32(0x63825363);
 11666  0040E8  0E63               	movlw	99
 11667  0040EA  6E17               	movwf	ETH_Write32@data,c
 11668  0040EC  0E53               	movlw	83
 11669  0040EE  6E18               	movwf	ETH_Write32@data+1,c
 11670  0040F0  0E82               	movlw	130
 11671  0040F2  6E19               	movwf	ETH_Write32@data+2,c
 11672  0040F4  0E63               	movlw	99
 11673  0040F6  6E1A               	movwf	ETH_Write32@data+3,c
 11674  0040F8  EC6C  F031         	call	_ETH_Write32	;wreg free
 11675                           
 11676                           ;dhcp_client.c: 107: ETH_Write8(53);
 11677  0040FC  0E35               	movlw	53
 11678  0040FE  ECD3  F031         	call	_ETH_Write8
 11679                           
 11680                           ;dhcp_client.c: 108: ETH_Write8(1);
 11681  004102  0E01               	movlw	1
 11682  004104  ECD3  F031         	call	_ETH_Write8
 11683                           
 11684                           ;dhcp_client.c: 109: ETH_Write8(type);
 11685  004108  0100               	movlb	0	; () banked
 11686  00410A  51A8               	movf	DHCP_Request@type& (0+255),w,b
 11687  00410C  ECD3  F031         	call	_ETH_Write8
 11688                           
 11689                           ;dhcp_client.c: 110: if(type == DHCP_REQUEST)
 11690  004110  0E03               	movlw	3
 11691  004112  0100               	movlb	0	; () banked
 11692  004114  19A8               	xorwf	DHCP_Request@type& (0+255),w,b
 11693  004116  E119               	bnz	l761
 11694                           
 11695                           ; BSR set to: 0
 11696                           ;dhcp_client.c: 111: {
 11697                           ;dhcp_client.c: 112: ETH_Write8(54);ETH_Write8(4);ETH_Write32(dhcpServerId);
 11698  004118  0E36               	movlw	54
 11699  00411A  ECD3  F031         	call	_ETH_Write8
 11700  00411E  0E04               	movlw	4
 11701  004120  ECD3  F031         	call	_ETH_Write8
 11702  004124  C21C  F017         	movff	_dhcpServerId,ETH_Write32@data
 11703  004128  C21D  F018         	movff	_dhcpServerId+1,ETH_Write32@data+1
 11704  00412C  C21E  F019         	movff	_dhcpServerId+2,ETH_Write32@data+2
 11705  004130  C21F  F01A         	movff	_dhcpServerId+3,ETH_Write32@data+3
 11706  004134  EC6C  F031         	call	_ETH_Write32	;wreg free
 11707                           
 11708                           ;dhcp_client.c: 113: ETH_Write8(50);ETH_Write8(4);ETH_Write32(ipv4Address);
 11709  004138  0E32               	movlw	50
 11710  00413A  ECD3  F031         	call	_ETH_Write8
 11711  00413E  0E04               	movlw	4
 11712  004140  ECD3  F031         	call	_ETH_Write8
 11713  004144  D849               	call	PL521	;call to abstracted procedure
 11714  004146  EC6C  F031         	call	_ETH_Write32	;wreg free
 11715  00414A                     l761:
 11716                           
 11717                           ;dhcp_client.c: 114: }
 11718                           ;dhcp_client.c: 115: ETH_Write8(55); ETH_Write8(4); ETH_Write8(1); ETH_Write8(3); ETH_Wr
      +                          ite8(6); ETH_Write8(15);
 11719  00414A  0E37               	movlw	55
 11720  00414C  ECD3  F031         	call	_ETH_Write8
 11721  004150  0E04               	movlw	4
 11722  004152  ECD3  F031         	call	_ETH_Write8
 11723  004156  0E01               	movlw	1
 11724  004158  ECD3  F031         	call	_ETH_Write8
 11725  00415C  0E03               	movlw	3
 11726  00415E  ECD3  F031         	call	_ETH_Write8
 11727  004162  0E06               	movlw	6
 11728  004164  ECD3  F031         	call	_ETH_Write8
 11729  004168  0E0F               	movlw	15
 11730  00416A  ECD3  F031         	call	_ETH_Write8
 11731                           
 11732                           ;dhcp_client.c: 116: ETH_Write8(57); ETH_Write8(2); ETH_Write16(512);
 11733  00416E  0E39               	movlw	57
 11734  004170  ECD3  F031         	call	_ETH_Write8
 11735  004174  0E02               	movlw	2
 11736  004176  ECD3  F031         	call	_ETH_Write8
 11737  00417A  0E02               	movlw	2
 11738  00417C  6E18               	movwf	ETH_Write16@data+1,c
 11739  00417E  6A17               	clrf	ETH_Write16@data,c
 11740  004180  ECB2  F031         	call	_ETH_Write16	;wreg free
 11741                           
 11742                           ;dhcp_client.c: 117: ETH_Write8(12); ETH_Write8(20); ETH_WriteBlock((char *)dhcpName,20)
      +                          ;
 11743  004184  0E0C               	movlw	12
 11744  004186  ECD3  F031         	call	_ETH_Write8
 11745  00418A  0E14               	movlw	20
 11746  00418C  ECD3  F031         	call	_ETH_Write8
 11747  004190  0E13               	movlw	low _dhcpName
 11748  004192  6E17               	movwf	ETH_WriteBlock@buffer,c
 11749  004194  5017               	movf	ETH_WriteBlock@buffer,w,c
 11750  004196  A4D8               	btfss	status,2,c
 11751  004198  0E10               	movlw	high __smallconst
 11752  00419A  6E18               	movwf	ETH_WriteBlock@buffer+1,c
 11753  00419C  EC3D  F016         	call	PL747	;call to abstracted procedure
 11754  0041A0  EC22  F02E         	call	_ETH_WriteBlock	;wreg free
 11755                           
 11756                           ;dhcp_client.c: 119: ETH_Write8(61); ETH_Write8(7); ETH_Write8(1); ETH_WriteBlock((char 
      +                          *)&ethMAC,6);
 11757  0041A4  0E3D               	movlw	61
 11758  0041A6  ECD3  F031         	call	_ETH_Write8
 11759  0041AA  0E07               	movlw	7
 11760  0041AC  ECD3  F031         	call	_ETH_Write8
 11761  0041B0  0E01               	movlw	1
 11762  0041B2  ECD3  F031         	call	_ETH_Write8
 11763  0041B6  D81E               	call	PL643	;call to abstracted procedure
 11764  0041B8  EC22  F02E         	call	_ETH_WriteBlock	;wreg free
 11765                           
 11766                           ;dhcp_client.c: 120: ETH_Write8(255);
 11767  0041BC  0EFF               	movlw	255
 11768  0041BE  ECD3  F031         	call	_ETH_Write8
 11769                           
 11770                           ;dhcp_client.c: 122: ETH_Write8(0);
 11771  0041C2  0E00               	movlw	0
 11772  0041C4  ECD3  F031         	call	_ETH_Write8
 11773                           
 11774                           ;dhcp_client.c: 124: UDP_Send();
 11775  0041C8  EC62  F02A         	call	_UDP_Send	;wreg free
 11776                           
 11777                           ; BSR set to: 0
 11778                           ;dhcp_client.c: 125: if (type == DHCP_DISCOVER)
 11779  0041CC  05A8               	decf	DHCP_Request@type& (0+255),w,b
 11780  0041CE  A4D8               	btfss	status,2,c
 11781  0041D0  0012               	return	
 11782                           
 11783                           ; BSR set to: 0
 11784                           ;dhcp_client.c: 126: clientState=SELECTING;
 11785  0041D2  0E03               	movlw	3
 11786  0041D4  6E48               	movwf	_clientState,c
 11787                           
 11788                           ; BSR set to: 0
 11789  0041D6  0C03               	retlw	3	;funcret
 11790  0041D8                     __end_of_DHCP_Request:
 11791                           	opt stack 0
 11792  0041D8                     PL521:
 11793                           	opt stack 12
 11794  0041D8  C037  F017         	movff	_ipv4Address,ETH_Write32@data
 11795  0041DC  C038  F018         	movff	_ipv4Address+1,ETH_Write32@data+1
 11796  0041E0  C039  F019         	movff	_ipv4Address+2,ETH_Write32@data+2
 11797  0041E4  C03A  F01A         	movff	_ipv4Address+3,ETH_Write32@data+3
 11798  0041E8  0012               	return	
 11799  0041EA                     __end_ofPL521:
 11800                           	opt stack 0
 11801  0041EA                     PL623:
 11802                           	opt stack 12
 11803  0041EA  6A17               	clrf	ETH_Write32@data,c
 11804  0041EC  6A18               	clrf	ETH_Write32@data+1,c
 11805  0041EE  6A19               	clrf	ETH_Write32@data+2,c
 11806  0041F0  6A1A               	clrf	ETH_Write32@data+3,c
 11807  0041F2  0012               	return	
 11808  0041F4                     __end_ofPL623:
 11809                           	opt stack 0
 11810  0041F4                     PL643:
 11811                           	opt stack 12
 11812  0041F4  0EA9               	movlw	low DHCP_Request@ethMAC
 11813  0041F6  6E17               	movwf	ETH_WriteBlock@buffer,c
 11814  0041F8  6A18               	clrf	ETH_WriteBlock@buffer+1,c
 11815  0041FA  6A1A               	clrf	ETH_WriteBlock@length+1,c
 11816  0041FC  0E06               	movlw	6
 11817  0041FE  6E19               	movwf	ETH_WriteBlock@length,c
 11818  004200  0C06               	retlw	6
 11819  004202                     __end_ofPL643:
 11820                           	opt stack 0
 11821                           tosu	equ	0xFFF
 11822                           tosh	equ	0xFFE
 11823                           tosl	equ	0xFFD
 11824                           pclath	equ	0xFFA
 11825                           tblptru	equ	0xFF8
 11826                           tblptrh	equ	0xFF7
 11827                           tblptrl	equ	0xFF6
 11828                           tablat	equ	0xFF5
 11829                           prodh	equ	0xFF4
 11830                           prodl	equ	0xFF3
 11831                           intcon	equ	0xFF2
 11832                           indf0	equ	0xFEF
 11833                           postinc0	equ	0xFEE
 11834                           fsr0h	equ	0xFEA
 11835                           fsr0l	equ	0xFE9
 11836                           wreg	equ	0xFE8
 11837                           indf1	equ	0xFE7
 11838                           postinc1	equ	0xFE6
 11839                           postdec1	equ	0xFE5
 11840                           plusw1	equ	0xFE3
 11841                           fsr1h	equ	0xFE2
 11842                           fsr1l	equ	0xFE1
 11843                           bsr	equ	0xFE0
 11844                           indf2	equ	0xFDF
 11845                           postinc2	equ	0xFDE
 11846                           postdec2	equ	0xFDD
 11847                           plusw2	equ	0xFDB
 11848                           fsr2h	equ	0xFDA
 11849                           fsr2l	equ	0xFD9
 11850                           status	equ	0xFD8
 11851                           
 11852 ;; *************** function _UDP_Start *****************
 11853 ;; Defined at:
 11854 ;;		line 71 in file "../../TCPIP Library/source/udpv4.c"
 11855 ;; Parameters:    Size  Location     Type
 11856 ;;  destIP          4   63[BANK0 ] unsigned long 
 11857 ;;  srcPort         2   67[BANK0 ] unsigned int 
 11858 ;;  dstPort         2   69[BANK0 ] unsigned int 
 11859 ;; Auto vars:     Size  Location     Type
 11860 ;;  ret             1   46[COMRAM] enum E367
 11861 ;; Return value:  Size  Location     Type
 11862 ;;                  1    wreg      enum E449
 11863 ;; Registers used:
 11864 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11865 ;; Tracked objects:
 11866 ;;		On entry : F/0
 11867 ;;		On exit  : 0/0
 11868 ;;		Unchanged: 0/0
 11869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11870 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11873 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11874 ;;Total ram usage:        9 bytes
 11875 ;; Hardware stack levels used:    1
 11876 ;; Hardware stack levels required when called:   12
 11877 ;; This function calls:
 11878 ;;		_ETH_ResetByteCount
 11879 ;;		_ETH_Write16
 11880 ;;		_IPv4_Start
 11881 ;; This function is called by:
 11882 ;;		_DHCP_Request
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886                           	psect	text51
 11887  005A78                     __ptext51:
 11888                           	opt stack 0
 11889  005A78                     _UDP_Start:
 11890                           	opt stack 12
 11891                           
 11892                           ; BSR set to: 0
 11893                           ;udpv4.c: 77: ret = IPv4_Start(destIP,UDP);
 11894                           
 11895                           ; BSR set to: 0
 11896                           
 11897                           ; BSR set to: 0
 11898                           ;incstack = 0
 11899  005A78  C09F  F022         	movff	UDP_Start@destIP,IPv4_Start@destAddress
 11900  005A7C  C0A0  F023         	movff	UDP_Start@destIP+1,IPv4_Start@destAddress+1
 11901  005A80  C0A1  F024         	movff	UDP_Start@destIP+2,IPv4_Start@destAddress+2
 11902  005A84  C0A2  F025         	movff	UDP_Start@destIP+3,IPv4_Start@destAddress+3
 11903  005A88  0E11               	movlw	17
 11904  005A8A  6E26               	movwf	IPv4_Start@protocol,c
 11905  005A8C  EC01  F021         	call	_IPv4_Start	;wreg free
 11906  005A90  6E2F               	movwf	UDP_Start@ret,c
 11907                           
 11908                           ; BSR set to: 0
 11909                           ;udpv4.c: 78: if(ret == SUCCESS)
 11910  005A92  042F               	decf	UDP_Start@ret,w,c
 11911  005A94  E116               	bnz	l8002
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;udpv4.c: 79: {
 11915                           ;udpv4.c: 81: ETH_ResetByteCount();
 11916  005A96  ECD8  F031         	call	_ETH_ResetByteCount	;wreg free
 11917                           
 11918                           ;udpv4.c: 84: ETH_Write16(srcPort);
 11919  005A9A  C0A3  F017         	movff	UDP_Start@srcPort,ETH_Write16@data
 11920  005A9E  C0A4  F018         	movff	UDP_Start@srcPort+1,ETH_Write16@data+1
 11921  005AA2  ECB2  F031         	call	_ETH_Write16	;wreg free
 11922                           
 11923                           ;udpv4.c: 87: ETH_Write16(dstPort);
 11924  005AA6  C0A5  F017         	movff	UDP_Start@dstPort,ETH_Write16@data
 11925  005AAA  C0A6  F018         	movff	UDP_Start@dstPort+1,ETH_Write16@data+1
 11926  005AAE  ECB2  F031         	call	_ETH_Write16	;wreg free
 11927                           
 11928                           ;udpv4.c: 90: ETH_Write16(0);
 11929  005AB2  6A18               	clrf	ETH_Write16@data+1,c
 11930  005AB4  6A17               	clrf	ETH_Write16@data,c
 11931  005AB6  ECB2  F031         	call	_ETH_Write16	;wreg free
 11932                           
 11933                           ;udpv4.c: 93: ETH_Write16(0);
 11934  005ABA  6A18               	clrf	ETH_Write16@data+1,c
 11935  005ABC  6A17               	clrf	ETH_Write16@data,c
 11936  005ABE  ECB2  F031         	call	_ETH_Write16	;wreg free
 11937  005AC2                     l8002:
 11938                           
 11939                           ;udpv4.c: 95: }
 11940                           ;udpv4.c: 96: return ret;
 11941  005AC2  502F               	movf	UDP_Start@ret,w,c
 11942  005AC4  0012               	return		;funcret
 11943  005AC6                     __end_of_UDP_Start:
 11944                           	opt stack 0
 11945                           tosu	equ	0xFFF
 11946                           tosh	equ	0xFFE
 11947                           tosl	equ	0xFFD
 11948                           pclath	equ	0xFFA
 11949                           tblptru	equ	0xFF8
 11950                           tblptrh	equ	0xFF7
 11951                           tblptrl	equ	0xFF6
 11952                           tablat	equ	0xFF5
 11953                           prodh	equ	0xFF4
 11954                           prodl	equ	0xFF3
 11955                           intcon	equ	0xFF2
 11956                           indf0	equ	0xFEF
 11957                           postinc0	equ	0xFEE
 11958                           fsr0h	equ	0xFEA
 11959                           fsr0l	equ	0xFE9
 11960                           wreg	equ	0xFE8
 11961                           indf1	equ	0xFE7
 11962                           postinc1	equ	0xFE6
 11963                           postdec1	equ	0xFE5
 11964                           plusw1	equ	0xFE3
 11965                           fsr1h	equ	0xFE2
 11966                           fsr1l	equ	0xFE1
 11967                           bsr	equ	0xFE0
 11968                           indf2	equ	0xFDF
 11969                           postinc2	equ	0xFDE
 11970                           postdec2	equ	0xFDD
 11971                           plusw2	equ	0xFDB
 11972                           fsr2h	equ	0xFDA
 11973                           fsr2l	equ	0xFD9
 11974                           status	equ	0xFD8
 11975                           
 11976 ;; *************** function _UDP_Send *****************
 11977 ;; Defined at:
 11978 ;;		line 99 in file "../../TCPIP Library/source/udpv4.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;		None
 11981 ;; Auto vars:     Size  Location     Type
 11982 ;;  udpLength       2   27[BANK0 ] unsigned int 
 11983 ;;  cksm            2   25[BANK0 ] unsigned int 
 11984 ;;  ret             1    0        enum E367
 11985 ;; Return value:  Size  Location     Type
 11986 ;;                  1    wreg      enum E449
 11987 ;; Registers used:
 11988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11989 ;; Tracked objects:
 11990 ;;		On entry : 0/0
 11991 ;;		On exit  : F/0
 11992 ;;		Unchanged: 0/0
 11993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11995 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11996 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11997 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11998 ;;Total ram usage:        9 bytes
 11999 ;; Hardware stack levels used:    1
 12000 ;; Hardware stack levels required when called:   12
 12001 ;; This function calls:
 12002 ;;		_ETH_GetByteCount
 12003 ;;		_ETH_Insert
 12004 ;;		_ETH_TxComputeChecksum
 12005 ;;		_IPV4_Send
 12006 ;; This function is called by:
 12007 ;;		_DHCP_Request
 12008 ;; This function uses a non-reentrant model
 12009 ;;
 12010                           
 12011                           	psect	text52
 12012  0054C4                     __ptext52:
 12013                           	opt stack 0
 12014  0054C4                     _UDP_Send:
 12015                           	opt stack 12
 12016                           
 12017                           ;udpv4.c: 105: udpLength = ETH_GetByteCount();
 12018                           
 12019                           ;incstack = 0
 12020  0054C4  EC27  F031         	call	_ETH_GetByteCount	;wreg free
 12021  0054C8  C017  F07B         	movff	?_ETH_GetByteCount,UDP_Send@udpLength
 12022  0054CC  C018  F07C         	movff	?_ETH_GetByteCount+1,UDP_Send@udpLength+1
 12023                           
 12024                           ; BSR set to: 14
 12025                           ;udpv4.c: 106: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 12026  0054D0  D831               	call	PL523	;call to abstracted procedure
 12027                           
 12028                           ; BSR set to: 0
 12029                           ;udpv4.c: 107: ETH_Insert((char *)&udpLength, 2, sizeof(ethernetFrame_t) + sizeof(ipv4He
      +                          ader_t) + (int)(((char*)&((udpHeader_t *)1)->length)-1));
 12030  0054D2  EC9A  F02B         	call	PL579	;call to abstracted procedure
 12031  0054D6  0E26               	movlw	38
 12032  0054D8  6E19               	movwf	ETH_Insert@offset,c
 12033  0054DA  0E7B               	movlw	UDP_Send@udpLength& (0+255)
 12034  0054DC  ECD6  F02E         	call	_ETH_Insert
 12035                           
 12036                           ;udpv4.c: 108: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 12037  0054E0  D829               	call	PL523	;call to abstracted procedure
 12038                           
 12039                           ; BSR set to: 0
 12040                           ;udpv4.c: 111: cksm = udpLength + UDP;
 12041  0054E2  0E11               	movlw	17
 12042  0054E4  257B               	addwf	UDP_Send@udpLength& (0+255),w,b
 12043  0054E6  6F79               	movwf	UDP_Send@cksm& (0+255),b
 12044  0054E8  0E00               	movlw	0
 12045  0054EA  217C               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 12046  0054EC  6F7A               	movwf	(UDP_Send@cksm+1)& (0+255),b
 12047                           
 12048                           ; BSR set to: 0
 12049                           ;udpv4.c: 112: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, udpLength + 8, cksm);
 12050  0054EE  EC34  F016         	call	PL711	;call to abstracted procedure
 12051  0054F2  257B               	addwf	UDP_Send@udpLength& (0+255),w,b
 12052  0054F4  6E27               	movwf	ETH_TxComputeChecksum@len,c
 12053  0054F6  0E00               	movlw	0
 12054  0054F8  217C               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 12055  0054FA  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 12056  0054FC  C079  F029         	movff	UDP_Send@cksm,ETH_TxComputeChecksum@seed
 12057  005500  C07A  F02A         	movff	UDP_Send@cksm+1,ETH_TxComputeChecksum@seed+1
 12058  005504  EC1B  F02A         	call	_ETH_TxComputeChecksum	;wreg free
 12059  005508  C025  F079         	movff	?_ETH_TxComputeChecksum,UDP_Send@cksm
 12060  00550C  C026  F07A         	movff	?_ETH_TxComputeChecksum+1,UDP_Send@cksm+1
 12061                           
 12062                           ; BSR set to: 0
 12063                           ;udpv4.c: 115: if (cksm == 0){
 12064  005510  5179               	movf	UDP_Send@cksm& (0+255),w,b
 12065  005512  117A               	iorwf	(UDP_Send@cksm+1)& (0+255),w,b
 12066  005514  E102               	bnz	l8030
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;udpv4.c: 116: cksm = 0xffff;
 12070  005516  6979               	setf	UDP_Send@cksm& (0+255),b
 12071  005518  697A               	setf	(UDP_Send@cksm+1)& (0+255),b
 12072  00551A                     l8030:
 12073                           
 12074                           ; BSR set to: 0
 12075                           ;udpv4.c: 117: }
 12076                           ;udpv4.c: 119: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (int)(((char*)&((udpHeader_t *)1)->checksum)-1));
 12077  00551A  EC9A  F02B         	call	PL579	;call to abstracted procedure
 12078  00551E  0E28               	movlw	40
 12079  005520  6E19               	movwf	ETH_Insert@offset,c
 12080  005522  0E79               	movlw	UDP_Send@cksm& (0+255)
 12081  005524  ECD6  F02E         	call	_ETH_Insert
 12082  005528  C07B  F031         	movff	UDP_Send@udpLength,IPV4_Send@payloadLength
 12083  00552C  C07C  F032         	movff	UDP_Send@udpLength+1,IPV4_Send@payloadLength+1
 12084  005530  EF67  F02B         	goto	_IPV4_Send	;wreg free
 12085  005534                     __end_of_UDP_Send:
 12086                           	opt stack 0
 12087  005534                     PL523:
 12088                           	opt stack 12
 12089  005534  0100               	movlb	0	; () banked
 12090  005536  517B               	movf	UDP_Send@udpLength& (0+255),w,b
 12091  005538  6F75               	movwf	(??_UDP_Send+1)& (0+255),b
 12092  00553A  6B74               	clrf	??_UDP_Send& (0+255),b
 12093  00553C  517C               	movf	(UDP_Send@udpLength+1)& (0+255),w,b
 12094  00553E  6F76               	movwf	(??_UDP_Send+2)& (0+255),b
 12095  005540  6B77               	clrf	(??_UDP_Send+3)& (0+255),b
 12096  005542  5174               	movf	??_UDP_Send& (0+255),w,b
 12097  005544  1176               	iorwf	(??_UDP_Send+2)& (0+255),w,b
 12098  005546  6F7B               	movwf	UDP_Send@udpLength& (0+255),b
 12099  005548  5175               	movf	(??_UDP_Send+1)& (0+255),w,b
 12100  00554A  1177               	iorwf	(??_UDP_Send+3)& (0+255),w,b
 12101  00554C  6F7C               	movwf	(UDP_Send@udpLength+1)& (0+255),b
 12102  00554E  0012               	return	
 12103  005550                     __end_ofPL523:
 12104                           	opt stack 0
 12105                           tosu	equ	0xFFF
 12106                           tosh	equ	0xFFE
 12107                           tosl	equ	0xFFD
 12108                           pclath	equ	0xFFA
 12109                           tblptru	equ	0xFF8
 12110                           tblptrh	equ	0xFF7
 12111                           tblptrl	equ	0xFF6
 12112                           tablat	equ	0xFF5
 12113                           prodh	equ	0xFF4
 12114                           prodl	equ	0xFF3
 12115                           intcon	equ	0xFF2
 12116                           indf0	equ	0xFEF
 12117                           postinc0	equ	0xFEE
 12118                           fsr0h	equ	0xFEA
 12119                           fsr0l	equ	0xFE9
 12120                           wreg	equ	0xFE8
 12121                           indf1	equ	0xFE7
 12122                           postinc1	equ	0xFE6
 12123                           postdec1	equ	0xFE5
 12124                           plusw1	equ	0xFE3
 12125                           fsr1h	equ	0xFE2
 12126                           fsr1l	equ	0xFE1
 12127                           bsr	equ	0xFE0
 12128                           indf2	equ	0xFDF
 12129                           postinc2	equ	0xFDE
 12130                           postdec2	equ	0xFDD
 12131                           plusw2	equ	0xFDB
 12132                           fsr2h	equ	0xFDA
 12133                           fsr2l	equ	0xFD9
 12134                           status	equ	0xFD8
 12135                           
 12136 ;; *************** function _ETH_GetByteCount *****************
 12137 ;; Defined at:
 12138 ;;		line 843 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 12139 ;; Parameters:    Size  Location     Type
 12140 ;;		None
 12141 ;; Auto vars:     Size  Location     Type
 12142 ;;  val             2   24[COMRAM] unsigned int 
 12143 ;; Return value:  Size  Location     Type
 12144 ;;                  2   22[COMRAM] unsigned int 
 12145 ;; Registers used:
 12146 ;;		wreg, status,2, status,0
 12147 ;; Tracked objects:
 12148 ;;		On entry : 0/0
 12149 ;;		On exit  : F/E
 12150 ;;		Unchanged: 0/0
 12151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12156 ;;Total ram usage:        4 bytes
 12157 ;; Hardware stack levels used:    1
 12158 ;; Hardware stack levels required when called:    8
 12159 ;; This function calls:
 12160 ;;		Nothing
 12161 ;; This function is called by:
 12162 ;;		_UDP_Send
 12163 ;; This function uses a non-reentrant model
 12164 ;;
 12165                           
 12166                           	psect	text53
 12167  00624E                     __ptext53:
 12168                           	opt stack 0
 12169  00624E                     _ETH_GetByteCount:
 12170                           	opt stack 15
 12171                           
 12172                           ;j60_driver.c: 845: uint16_t val;
 12173                           ;j60_driver.c: 846: val = EWRPT - ethData.saveWRPT;
 12174                           
 12175                           ; BSR set to: 0
 12176                           ;incstack = 0
 12177  00624E  0101               	movlb	1	; () banked
 12178  006250  51C2               	movf	(_ethData+5)& (0+255),w,b	;volatile
 12179  006252  010E               	movlb	14	; () banked
 12180  006254  5DE2               	subwf	226,w,b	;volatile
 12181  006256  6E19               	movwf	ETH_GetByteCount@val,c
 12182  006258  0101               	movlb	1	; () banked
 12183  00625A  51C3               	movf	(_ethData+6)& (0+255),w,b	;volatile
 12184  00625C  010E               	movlb	14	; () banked
 12185  00625E  59E3               	subwfb	227,w,b	;volatile
 12186  006260  6E1A               	movwf	ETH_GetByteCount@val+1,c
 12187                           
 12188                           ; BSR set to: 14
 12189                           ;j60_driver.c: 847: return val ;
 12190  006262  C019  F017         	movff	ETH_GetByteCount@val,?_ETH_GetByteCount
 12191  006266  C01A  F018         	movff	ETH_GetByteCount@val+1,?_ETH_GetByteCount+1
 12192                           
 12193                           ; BSR set to: 14
 12194  00626A  0012               	return		;funcret
 12195  00626C                     __end_of_ETH_GetByteCount:
 12196                           	opt stack 0
 12197                           tosu	equ	0xFFF
 12198                           tosh	equ	0xFFE
 12199                           tosl	equ	0xFFD
 12200                           pclath	equ	0xFFA
 12201                           tblptru	equ	0xFF8
 12202                           tblptrh	equ	0xFF7
 12203                           tblptrl	equ	0xFF6
 12204                           tablat	equ	0xFF5
 12205                           prodh	equ	0xFF4
 12206                           prodl	equ	0xFF3
 12207                           intcon	equ	0xFF2
 12208                           indf0	equ	0xFEF
 12209                           postinc0	equ	0xFEE
 12210                           fsr0h	equ	0xFEA
 12211                           fsr0l	equ	0xFE9
 12212                           wreg	equ	0xFE8
 12213                           indf1	equ	0xFE7
 12214                           postinc1	equ	0xFE6
 12215                           postdec1	equ	0xFE5
 12216                           plusw1	equ	0xFE3
 12217                           fsr1h	equ	0xFE2
 12218                           fsr1l	equ	0xFE1
 12219                           bsr	equ	0xFE0
 12220                           indf2	equ	0xFDF
 12221                           postinc2	equ	0xFDE
 12222                           postdec2	equ	0xFDD
 12223                           plusw2	equ	0xFDB
 12224                           fsr2h	equ	0xFDA
 12225                           fsr2l	equ	0xFD9
 12226                           status	equ	0xFD8
 12227                           
 12228 ;; *************** function _DHCP_WriteZeros *****************
 12229 ;; Defined at:
 12230 ;;		line 277 in file "../../TCPIP Library/source/dhcp_client.c"
 12231 ;; Parameters:    Size  Location     Type
 12232 ;;  length          2   23[COMRAM] unsigned int 
 12233 ;; Auto vars:     Size  Location     Type
 12234 ;;		None
 12235 ;; Return value:  Size  Location     Type
 12236 ;;		None               void
 12237 ;; Registers used:
 12238 ;;		wreg, status,2, status,0, cstack
 12239 ;; Tracked objects:
 12240 ;;		On entry : 0/0
 12241 ;;		On exit  : 0/0
 12242 ;;		Unchanged: 0/0
 12243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12247 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12248 ;;Total ram usage:        2 bytes
 12249 ;; Hardware stack levels used:    1
 12250 ;; Hardware stack levels required when called:   10
 12251 ;; This function calls:
 12252 ;;		_ETH_Write8
 12253 ;; This function is called by:
 12254 ;;		_DHCP_Request
 12255 ;; This function uses a non-reentrant model
 12256 ;;
 12257                           
 12258                           	psect	text54
 12259  0062F2                     __ptext54:
 12260                           	opt stack 0
 12261  0062F2                     _DHCP_WriteZeros:
 12262                           	opt stack 14
 12263                           
 12264                           ;dhcp_client.c: 279: while(length--)
 12265                           
 12266                           ; BSR set to: 14
 12267                           ;incstack = 0
 12268  0062F2  D003               	goto	l8010
 12269  0062F4                     l8008:
 12270                           
 12271                           ;dhcp_client.c: 280: {
 12272                           ;dhcp_client.c: 281: ETH_Write8(0);
 12273  0062F4  0E00               	movlw	0
 12274  0062F6  ECD3  F031         	call	_ETH_Write8
 12275  0062FA                     l8010:
 12276  0062FA  0618               	decf	DHCP_WriteZeros@length,f,c
 12277  0062FC  A0D8               	btfss	status,0,c
 12278  0062FE  0619               	decf	DHCP_WriteZeros@length+1,f,c
 12279  006300  2818               	incf	DHCP_WriteZeros@length,w,c
 12280  006302  E1F8               	bnz	l8008
 12281  006304  2819               	incf	DHCP_WriteZeros@length+1,w,c
 12282  006306  E1F6               	bnz	l8008
 12283  006308  0012               	return		;funcret
 12284  00630A                     __end_of_DHCP_WriteZeros:
 12285                           	opt stack 0
 12286                           tosu	equ	0xFFF
 12287                           tosh	equ	0xFFE
 12288                           tosl	equ	0xFFD
 12289                           pclath	equ	0xFFA
 12290                           tblptru	equ	0xFF8
 12291                           tblptrh	equ	0xFF7
 12292                           tblptrl	equ	0xFF6
 12293                           tablat	equ	0xFF5
 12294                           prodh	equ	0xFF4
 12295                           prodl	equ	0xFF3
 12296                           intcon	equ	0xFF2
 12297                           indf0	equ	0xFEF
 12298                           postinc0	equ	0xFEE
 12299                           fsr0h	equ	0xFEA
 12300                           fsr0l	equ	0xFE9
 12301                           wreg	equ	0xFE8
 12302                           indf1	equ	0xFE7
 12303                           postinc1	equ	0xFE6
 12304                           postdec1	equ	0xFE5
 12305                           plusw1	equ	0xFE3
 12306                           fsr1h	equ	0xFE2
 12307                           fsr1l	equ	0xFE1
 12308                           bsr	equ	0xFE0
 12309                           indf2	equ	0xFDF
 12310                           postinc2	equ	0xFDE
 12311                           postdec2	equ	0xFDD
 12312                           plusw2	equ	0xFDB
 12313                           fsr2h	equ	0xFDA
 12314                           fsr2l	equ	0xFD9
 12315                           status	equ	0xFD8
 12316                           
 12317 ;; *************** function _ARPV4_Update *****************
 12318 ;; Defined at:
 12319 ;;		line 179 in file "../../TCPIP Library/source/arpv4.c"
 12320 ;; Parameters:    Size  Location     Type
 12321 ;;		None
 12322 ;; Auto vars:     Size  Location     Type
 12323 ;;  x               1   24[COMRAM] unsigned char 
 12324 ;;  entryPointer    2   22[COMRAM] PTR struct .
 12325 ;;		 -> arpMap(104), 
 12326 ;; Return value:  Size  Location     Type
 12327 ;;		None               void
 12328 ;; Registers used:
 12329 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12330 ;; Tracked objects:
 12331 ;;		On entry : F/0
 12332 ;;		On exit  : F/0
 12333 ;;		Unchanged: F/0
 12334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12336 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12339 ;;Total ram usage:        3 bytes
 12340 ;; Hardware stack levels used:    1
 12341 ;; Hardware stack levels required when called:    8
 12342 ;; This function calls:
 12343 ;;		Nothing
 12344 ;; This function is called by:
 12345 ;;		_Network_Manage
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           	psect	text55
 12350  006076                     __ptext55:
 12351                           	opt stack 0
 12352  006076                     _ARPV4_Update:
 12353                           	opt stack 21
 12354                           
 12355                           ; BSR set to: 0
 12356                           ;arpv4.c: 181: arpMap_t *entryPointer = arpMap;
 12357                           
 12358                           ;incstack = 0
 12359  006076  0E00               	movlw	low _arpMap
 12360  006078  6E17               	movwf	ARPV4_Update@entryPointer,c
 12361  00607A  0E03               	movlw	high _arpMap
 12362  00607C  6E18               	movwf	ARPV4_Update@entryPointer+1,c
 12363                           
 12364                           ; BSR set to: 0
 12365                           ;arpv4.c: 182: for(uint8_t x=0; x < 8; x++)
 12366  00607E  6A19               	clrf	ARPV4_Update@x,c
 12367  006080                     l9452:
 12368                           
 12369                           ; BSR set to: 0
 12370                           ;arpv4.c: 183: {
 12371                           ;arpv4.c: 184: entryPointer->age ++;
 12372  006080  EE20 F00C          	lfsr	2,12
 12373  006084  5017               	movf	ARPV4_Update@entryPointer,w,c
 12374  006086  26D9               	addwf	fsr2l,f,c
 12375  006088  5018               	movf	ARPV4_Update@entryPointer+1,w,c
 12376  00608A  22DA               	addwfc	fsr2h,f,c
 12377  00608C  2ADF               	incf	indf2,f,c
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;arpv4.c: 185: entryPointer ++;
 12381  00608E  0E0D               	movlw	13
 12382  006090  2617               	addwf	ARPV4_Update@entryPointer,f,c
 12383  006092  0E00               	movlw	0
 12384  006094  2218               	addwfc	ARPV4_Update@entryPointer+1,f,c
 12385                           
 12386                           ; BSR set to: 0
 12387  006096  2A19               	incf	ARPV4_Update@x,f,c
 12388                           
 12389                           ; BSR set to: 0
 12390  006098  0E07               	movlw	7
 12391  00609A  6419               	cpfsgt	ARPV4_Update@x,c
 12392  00609C  D7F1               	goto	l9452
 12393  00609E  0C07               	retlw	7
 12394  0060A0                     __end_of_ARPV4_Update:
 12395                           	opt stack 0
 12396                           tosu	equ	0xFFF
 12397                           tosh	equ	0xFFE
 12398                           tosl	equ	0xFFD
 12399                           pclath	equ	0xFFA
 12400                           tblptru	equ	0xFF8
 12401                           tblptrh	equ	0xFF7
 12402                           tblptrl	equ	0xFF6
 12403                           tablat	equ	0xFF5
 12404                           prodh	equ	0xFF4
 12405                           prodl	equ	0xFF3
 12406                           intcon	equ	0xFF2
 12407                           indf0	equ	0xFEF
 12408                           postinc0	equ	0xFEE
 12409                           fsr0h	equ	0xFEA
 12410                           fsr0l	equ	0xFE9
 12411                           wreg	equ	0xFE8
 12412                           indf1	equ	0xFE7
 12413                           postinc1	equ	0xFE6
 12414                           postdec1	equ	0xFE5
 12415                           plusw1	equ	0xFE3
 12416                           fsr1h	equ	0xFE2
 12417                           fsr1l	equ	0xFE1
 12418                           bsr	equ	0xFE0
 12419                           indf2	equ	0xFDF
 12420                           postinc2	equ	0xFDE
 12421                           postdec2	equ	0xFDD
 12422                           plusw2	equ	0xFDB
 12423                           fsr2h	equ	0xFDA
 12424                           fsr2l	equ	0xFD9
 12425                           status	equ	0xFD8
 12426                           
 12427 ;; *************** function _Network_Init *****************
 12428 ;; Defined at:
 12429 ;;		line 65 in file "../../TCPIP Library/source/network.c"
 12430 ;; Parameters:    Size  Location     Type
 12431 ;;		None
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;		None
 12434 ;; Return value:  Size  Location     Type
 12435 ;;		None               void
 12436 ;; Registers used:
 12437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12438 ;; Tracked objects:
 12439 ;;		On entry : 0/2
 12440 ;;		On exit  : F/1
 12441 ;;		Unchanged: 0/0
 12442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12447 ;;Total ram usage:        0 bytes
 12448 ;; Hardware stack levels used:    1
 12449 ;; Hardware stack levels required when called:   13
 12450 ;; This function calls:
 12451 ;;		_ARPV4_Init
 12452 ;;		_ETH_Init
 12453 ;;		_IPV4_Init
 12454 ;;		_TCP_Init
 12455 ;;		_time
 12456 ;; This function is called by:
 12457 ;;		_main
 12458 ;; This function uses a non-reentrant model
 12459 ;;
 12460                           
 12461                           	psect	text56
 12462  0061AE                     __ptext56:
 12463                           	opt stack 0
 12464  0061AE                     _Network_Init:
 12465                           	opt stack 17
 12466                           
 12467                           ;network.c: 67: ETH_Init();
 12468                           
 12469                           ; BSR set to: 0
 12470                           ;incstack = 0
 12471  0061AE  ECD3  F023         	call	_ETH_Init	;wreg free
 12472                           
 12473                           ; BSR set to: 14
 12474                           ;network.c: 68: ARPV4_Init();
 12475  0061B2  EC5F  F031         	call	_ARPV4_Init	;wreg free
 12476                           
 12477                           ; BSR set to: 14
 12478                           ;network.c: 69: IPV4_Init();
 12479  0061B6  ECCE  F031         	call	_IPV4_Init	;wreg free
 12480                           
 12481                           ; BSR set to: 14
 12482                           ;network.c: 70: TCP_Init();
 12483  0061BA  EC44  F031         	call	_TCP_Init	;wreg free
 12484                           
 12485                           ; BSR set to: 2
 12486                           ;network.c: 72: time(&arpTimer);
 12487  0061BE  0EE8               	movlw	low _arpTimer
 12488  0061C0  6E17               	movwf	time@t,c
 12489  0061C2  0E01               	movlw	high _arpTimer
 12490  0061C4  6E18               	movwf	time@t+1,c
 12491  0061C6  ECC2  F02C         	call	_time	;wreg free
 12492                           
 12493                           ;network.c: 73: arpTimer += 10;
 12494  0061CA  EC0E  F02A         	call	PL617	;call to abstracted procedure
 12495                           
 12496                           ; BSR set to: 1
 12497  0061CE  0C00               	retlw	0	;funcret
 12498  0061D0                     __end_of_Network_Init:
 12499                           	opt stack 0
 12500                           tosu	equ	0xFFF
 12501                           tosh	equ	0xFFE
 12502                           tosl	equ	0xFFD
 12503                           pclath	equ	0xFFA
 12504                           tblptru	equ	0xFF8
 12505                           tblptrh	equ	0xFF7
 12506                           tblptrl	equ	0xFF6
 12507                           tablat	equ	0xFF5
 12508                           prodh	equ	0xFF4
 12509                           prodl	equ	0xFF3
 12510                           intcon	equ	0xFF2
 12511                           indf0	equ	0xFEF
 12512                           postinc0	equ	0xFEE
 12513                           fsr0h	equ	0xFEA
 12514                           fsr0l	equ	0xFE9
 12515                           wreg	equ	0xFE8
 12516                           indf1	equ	0xFE7
 12517                           postinc1	equ	0xFE6
 12518                           postdec1	equ	0xFE5
 12519                           plusw1	equ	0xFE3
 12520                           fsr1h	equ	0xFE2
 12521                           fsr1l	equ	0xFE1
 12522                           bsr	equ	0xFE0
 12523                           indf2	equ	0xFDF
 12524                           postinc2	equ	0xFDE
 12525                           postdec2	equ	0xFDD
 12526                           plusw2	equ	0xFDB
 12527                           fsr2h	equ	0xFDA
 12528                           fsr2l	equ	0xFD9
 12529                           status	equ	0xFD8
 12530                           
 12531 ;; *************** function _time *****************
 12532 ;; Defined at:
 12533 ;;		line 198 in file "../board_support_package/picdem2_net/rtcc.c"
 12534 ;; Parameters:    Size  Location     Type
 12535 ;;  t               2   22[COMRAM] PTR long 
 12536 ;;		 -> main@t(4), Network_Manage@now(4), arpTimer(4), NULL(0), 
 12537 ;; Auto vars:     Size  Location     Type
 12538 ;;  the_time        4   27[COMRAM] long 
 12539 ;;  gie_val         1   26[COMRAM] unsigned char 
 12540 ;; Return value:  Size  Location     Type
 12541 ;;                  4   22[COMRAM] long 
 12542 ;; Registers used:
 12543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12544 ;; Tracked objects:
 12545 ;;		On entry : 0/1
 12546 ;;		On exit  : 0/0
 12547 ;;		Unchanged: 0/0
 12548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12550 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12552 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12553 ;;Total ram usage:        9 bytes
 12554 ;; Hardware stack levels used:    1
 12555 ;; Hardware stack levels required when called:    8
 12556 ;; This function calls:
 12557 ;;		Nothing
 12558 ;; This function is called by:
 12559 ;;		_Network_Init
 12560 ;;		_Network_Manage
 12561 ;;		_SYSLOG_Init
 12562 ;;		_SYSLOG_Write
 12563 ;;		_main
 12564 ;; This function uses a non-reentrant model
 12565 ;;
 12566                           
 12567                           	psect	text57
 12568  005984                     __ptext57:
 12569                           	opt stack 0
 12570  005984                     _time:
 12571                           	opt stack 22
 12572                           
 12573                           ;rtcc.c: 200: bool gie_val;
 12574                           ;rtcc.c: 201: time_t the_time;
 12575                           ;rtcc.c: 203: gie_val = GIE;
 12576                           
 12577                           ; BSR set to: 1
 12578                           ;incstack = 0
 12579  005984  0E00               	movlw	0
 12580  005986  BEF2               	btfsc	intcon,7,c	;volatile
 12581  005988  0E01               	movlw	1
 12582  00598A  6E1B               	movwf	time@gie_val,c
 12583                           
 12584                           ;rtcc.c: 204: GIE = 0;
 12585  00598C  9EF2               	bcf	intcon,7,c	;volatile
 12586                           
 12587                           ;rtcc.c: 205: the_time = deviceTime;
 12588  00598E  C2D0  F01C         	movff	_deviceTime,time@the_time	;volatile
 12589  005992  C2D1  F01D         	movff	_deviceTime+1,time@the_time+1	;volatile
 12590  005996  C2D2  F01E         	movff	_deviceTime+2,time@the_time+2	;volatile
 12591  00599A  C2D3  F01F         	movff	_deviceTime+3,time@the_time+3	;volatile
 12592                           
 12593                           ;rtcc.c: 206: GIE = gie_val;
 12594  00599E  A01B               	btfss	time@gie_val,0,c
 12595  0059A0  D002               	goto	u11050
 12596  0059A2  8EF2               	bsf	intcon,7,c	;volatile
 12597  0059A4  D001               	goto	l7884
 12598  0059A6                     u11050:
 12599  0059A6  9EF2               	bcf	intcon,7,c	;volatile
 12600  0059A8                     l7884:
 12601                           
 12602                           ;rtcc.c: 208: if(t)
 12603  0059A8  5017               	movf	time@t,w,c
 12604  0059AA  1018               	iorwf	time@t+1,w,c
 12605  0059AC  E00C               	bz	l7888
 12606                           
 12607                           ;rtcc.c: 209: {
 12608                           ;rtcc.c: 210: *t = the_time;
 12609  0059AE  C017  FFD9         	movff	time@t,fsr2l
 12610  0059B2  C018  FFDA         	movff	time@t+1,fsr2h
 12611  0059B6  C01C  FFDE         	movff	time@the_time,postinc2
 12612  0059BA  C01D  FFDE         	movff	time@the_time+1,postinc2
 12613  0059BE  C01E  FFDE         	movff	time@the_time+2,postinc2
 12614  0059C2  C01F  FFDE         	movff	time@the_time+3,postinc2
 12615  0059C6                     l7888:
 12616                           
 12617                           ;rtcc.c: 211: }
 12618                           ;rtcc.c: 213: return (the_time);
 12619  0059C6  C01C  F017         	movff	time@the_time,?_time
 12620  0059CA  C01D  F018         	movff	time@the_time+1,?_time+1
 12621  0059CE  C01E  F019         	movff	time@the_time+2,?_time+2
 12622  0059D2  C01F  F01A         	movff	time@the_time+3,?_time+3
 12623  0059D6  0012               	return		;funcret
 12624  0059D8                     __end_of_time:
 12625                           	opt stack 0
 12626                           tosu	equ	0xFFF
 12627                           tosh	equ	0xFFE
 12628                           tosl	equ	0xFFD
 12629                           pclath	equ	0xFFA
 12630                           tblptru	equ	0xFF8
 12631                           tblptrh	equ	0xFF7
 12632                           tblptrl	equ	0xFF6
 12633                           tablat	equ	0xFF5
 12634                           prodh	equ	0xFF4
 12635                           prodl	equ	0xFF3
 12636                           intcon	equ	0xFF2
 12637                           indf0	equ	0xFEF
 12638                           postinc0	equ	0xFEE
 12639                           fsr0h	equ	0xFEA
 12640                           fsr0l	equ	0xFE9
 12641                           wreg	equ	0xFE8
 12642                           indf1	equ	0xFE7
 12643                           postinc1	equ	0xFE6
 12644                           postdec1	equ	0xFE5
 12645                           plusw1	equ	0xFE3
 12646                           fsr1h	equ	0xFE2
 12647                           fsr1l	equ	0xFE1
 12648                           bsr	equ	0xFE0
 12649                           indf2	equ	0xFDF
 12650                           postinc2	equ	0xFDE
 12651                           postdec2	equ	0xFDD
 12652                           plusw2	equ	0xFDB
 12653                           fsr2h	equ	0xFDA
 12654                           fsr2l	equ	0xFD9
 12655                           status	equ	0xFD8
 12656                           
 12657 ;; *************** function _TCP_Init *****************
 12658 ;; Defined at:
 12659 ;;		line 1173 in file "../../TCPIP Library/source/tcpv4.c"
 12660 ;; Parameters:    Size  Location     Type
 12661 ;;		None
 12662 ;; Auto vars:     Size  Location     Type
 12663 ;;		None
 12664 ;; Return value:  Size  Location     Type
 12665 ;;		None               void
 12666 ;; Registers used:
 12667 ;;		wreg, status,2
 12668 ;; Tracked objects:
 12669 ;;		On entry : F/E
 12670 ;;		On exit  : F/2
 12671 ;;		Unchanged: 0/0
 12672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12677 ;;Total ram usage:        0 bytes
 12678 ;; Hardware stack levels used:    1
 12679 ;; Hardware stack levels required when called:    8
 12680 ;; This function calls:
 12681 ;;		Nothing
 12682 ;; This function is called by:
 12683 ;;		_Network_Init
 12684 ;; This function uses a non-reentrant model
 12685 ;;
 12686                           
 12687                           	psect	text58
 12688  006288                     __ptext58:
 12689                           	opt stack 0
 12690  006288                     _TCP_Init:
 12691                           	opt stack 21
 12692                           
 12693                           ; BSR set to: 14
 12694                           ;tcpv4.c: 1175: tcbList = (0);
 12695                           
 12696                           ;incstack = 0
 12697  006288  6A43               	clrf	_tcbList,c
 12698  00628A  6A44               	clrf	_tcbList+1,c
 12699                           
 12700                           ;tcpv4.c: 1176: tcbListSize = 0;
 12701  00628C  6A47               	clrf	_tcbListSize,c
 12702                           
 12703                           ; BSR set to: 14
 12704                           ;tcpv4.c: 1177: nextAvailablePort = (1024u);
 12705  00628E  0E04               	movlw	4
 12706  006290  0101               	movlb	1	; () banked
 12707  006292  6FD1               	movwf	(_nextAvailablePort+1)& (0+255),b
 12708  006294  0E00               	movlw	0
 12709  006296  6BD0               	clrf	_nextAvailablePort& (0+255),b
 12710                           
 12711                           ; BSR set to: 1
 12712                           ;tcpv4.c: 1178: nextSequenceNumber = 0;
 12713  006298  0102               	movlb	2	; () banked
 12714  00629A  6B20               	clrf	_nextSequenceNumber& (0+255),b
 12715  00629C  6B21               	clrf	(_nextSequenceNumber+1)& (0+255),b
 12716  00629E  6B22               	clrf	(_nextSequenceNumber+2)& (0+255),b
 12717  0062A0  6B23               	clrf	(_nextSequenceNumber+3)& (0+255),b
 12718                           
 12719                           ; BSR set to: 2
 12720  0062A2  0012               	return		;funcret
 12721  0062A4                     __end_of_TCP_Init:
 12722                           	opt stack 0
 12723                           tosu	equ	0xFFF
 12724                           tosh	equ	0xFFE
 12725                           tosl	equ	0xFFD
 12726                           pclath	equ	0xFFA
 12727                           tblptru	equ	0xFF8
 12728                           tblptrh	equ	0xFF7
 12729                           tblptrl	equ	0xFF6
 12730                           tablat	equ	0xFF5
 12731                           prodh	equ	0xFF4
 12732                           prodl	equ	0xFF3
 12733                           intcon	equ	0xFF2
 12734                           indf0	equ	0xFEF
 12735                           postinc0	equ	0xFEE
 12736                           fsr0h	equ	0xFEA
 12737                           fsr0l	equ	0xFE9
 12738                           wreg	equ	0xFE8
 12739                           indf1	equ	0xFE7
 12740                           postinc1	equ	0xFE6
 12741                           postdec1	equ	0xFE5
 12742                           plusw1	equ	0xFE3
 12743                           fsr1h	equ	0xFE2
 12744                           fsr1l	equ	0xFE1
 12745                           bsr	equ	0xFE0
 12746                           indf2	equ	0xFDF
 12747                           postinc2	equ	0xFDE
 12748                           postdec2	equ	0xFDD
 12749                           plusw2	equ	0xFDB
 12750                           fsr2h	equ	0xFDA
 12751                           fsr2l	equ	0xFD9
 12752                           status	equ	0xFD8
 12753                           
 12754 ;; *************** function _IPV4_Init *****************
 12755 ;; Defined at:
 12756 ;;		line 78 in file "../../TCPIP Library/source/ipv4.c"
 12757 ;; Parameters:    Size  Location     Type
 12758 ;;		None
 12759 ;; Auto vars:     Size  Location     Type
 12760 ;;		None
 12761 ;; Return value:  Size  Location     Type
 12762 ;;		None               void
 12763 ;; Registers used:
 12764 ;;		None
 12765 ;; Tracked objects:
 12766 ;;		On entry : F/E
 12767 ;;		On exit  : F/E
 12768 ;;		Unchanged: F/0
 12769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12774 ;;Total ram usage:        0 bytes
 12775 ;; Hardware stack levels used:    1
 12776 ;; Hardware stack levels required when called:    8
 12777 ;; This function calls:
 12778 ;;		Nothing
 12779 ;; This function is called by:
 12780 ;;		_Network_Init
 12781 ;; This function uses a non-reentrant model
 12782 ;;
 12783                           
 12784                           	psect	text59
 12785  00639C                     __ptext59:
 12786                           	opt stack 0
 12787  00639C                     _IPV4_Init:
 12788                           	opt stack 21
 12789                           
 12790                           ; BSR set to: 14
 12791                           ;ipv4.c: 80: ipv4Address = 0;
 12792                           
 12793                           ; BSR set to: 2
 12794                           ;incstack = 0
 12795  00639C  6A37               	clrf	_ipv4Address,c
 12796  00639E  6A38               	clrf	_ipv4Address+1,c
 12797  0063A0  6A39               	clrf	_ipv4Address+2,c
 12798  0063A2  6A3A               	clrf	_ipv4Address+3,c
 12799                           
 12800                           ; BSR set to: 14
 12801  0063A4  0012               	return		;funcret
 12802  0063A6                     __end_of_IPV4_Init:
 12803                           	opt stack 0
 12804                           tosu	equ	0xFFF
 12805                           tosh	equ	0xFFE
 12806                           tosl	equ	0xFFD
 12807                           pclath	equ	0xFFA
 12808                           tblptru	equ	0xFF8
 12809                           tblptrh	equ	0xFF7
 12810                           tblptrl	equ	0xFF6
 12811                           tablat	equ	0xFF5
 12812                           prodh	equ	0xFF4
 12813                           prodl	equ	0xFF3
 12814                           intcon	equ	0xFF2
 12815                           indf0	equ	0xFEF
 12816                           postinc0	equ	0xFEE
 12817                           fsr0h	equ	0xFEA
 12818                           fsr0l	equ	0xFE9
 12819                           wreg	equ	0xFE8
 12820                           indf1	equ	0xFE7
 12821                           postinc1	equ	0xFE6
 12822                           postdec1	equ	0xFE5
 12823                           plusw1	equ	0xFE3
 12824                           fsr1h	equ	0xFE2
 12825                           fsr1l	equ	0xFE1
 12826                           bsr	equ	0xFE0
 12827                           indf2	equ	0xFDF
 12828                           postinc2	equ	0xFDE
 12829                           postdec2	equ	0xFDD
 12830                           plusw2	equ	0xFDB
 12831                           fsr2h	equ	0xFDA
 12832                           fsr2l	equ	0xFD9
 12833                           status	equ	0xFD8
 12834                           
 12835 ;; *************** function _ETH_Init *****************
 12836 ;; Defined at:
 12837 ;;		line 100 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 12838 ;; Parameters:    Size  Location     Type
 12839 ;;		None
 12840 ;; Auto vars:     Size  Location     Type
 12841 ;;  phycon1_valu    2    0        unsigned int 
 12842 ;;  mac             1   44[COMRAM] PTR const struct .
 12843 ;;		 -> macAddress(6), 
 12844 ;; Return value:  Size  Location     Type
 12845 ;;		None               void
 12846 ;; Registers used:
 12847 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12848 ;; Tracked objects:
 12849 ;;		On entry : 0/2
 12850 ;;		On exit  : F/E
 12851 ;;		Unchanged: 0/0
 12852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12856 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12857 ;;Total ram usage:        4 bytes
 12858 ;; Hardware stack levels used:    1
 12859 ;; Hardware stack levels required when called:   12
 12860 ;; This function calls:
 12861 ;;		_ETH_CheckLinkUp
 12862 ;;		_MAC_getAddress
 12863 ;;		_PHY_Write
 12864 ;; This function is called by:
 12865 ;;		_Network_Init
 12866 ;; This function uses a non-reentrant model
 12867 ;;
 12868                           
 12869                           	psect	text60
 12870  0047A6                     __ptext60:
 12871                           	opt stack 0
 12872  0047A6                     _ETH_Init:
 12873                           	opt stack 17
 12874                           
 12875                           ;j60_driver.c: 102: const mac48Address_t *mac;
 12876                           ;j60_driver.c: 103: uint16_t phycon1_value;
 12877                           ;j60_driver.c: 106: ethData.error = 0;
 12878                           
 12879                           ; BSR set to: 14
 12880                           ;incstack = 0
 12881  0047A6  0101               	movlb	1	; () banked
 12882  0047A8  91BD               	bcf	_ethData& (0+255),0,b	;volatile
 12883                           
 12884                           ;j60_driver.c: 107: ethData.up = 0;
 12885  0047AA  95BD               	bcf	_ethData& (0+255),2,b	;volatile
 12886                           
 12887                           ;j60_driver.c: 108: ethData.linkChange = 0;
 12888  0047AC  99BD               	bcf	_ethData& (0+255),4,b	;volatile
 12889                           
 12890                           ;j60_driver.c: 109: ethData.bufferBusy = 0;
 12891  0047AE  9BBD               	bcf	_ethData& (0+255),5,b	;volatile
 12892                           
 12893                           ;j60_driver.c: 110: ethData.saveRDPT = 0;
 12894  0047B0  6BC0               	clrf	(_ethData+3)& (0+255),b	;volatile
 12895  0047B2  6BC1               	clrf	(_ethData+4)& (0+255),b	;volatile
 12896                           
 12897                           ;j60_driver.c: 112: nextPacketPointer = (0);
 12898  0047B4  6A41               	clrf	_nextPacketPointer,c
 12899  0047B6  6A42               	clrf	_nextPacketPointer+1,c
 12900                           
 12901                           ; BSR set to: 1
 12902                           ;j60_driver.c: 115: ECON2 = 0xA0;
 12903  0047B8  0EA0               	movlw	160
 12904  0047BA  010E               	movlb	14	; () banked
 12905  0047BC  6FFE               	movwf	254,b	;volatile
 12906  0047BE                     l470:
 12907                           
 12908                           ; BSR set to: 14
 12909  0047BE  A1FD               	btfss	253,0,b	;volatile
 12910  0047C0  D7FE               	goto	l470
 12911                           
 12912                           ; BSR set to: 14
 12913                           ;j60_driver.c: 122: MACON1 = 0b00001101; __nop();
 12914  0047C2  0E0D               	movlw	13
 12915  0047C4  6FA0               	movwf	160,b	;volatile
 12916                           
 12917                           ; BSR set to: 14
 12918  0047C6  F000               	nop	
 12919                           
 12920                           ;j60_driver.c: 123: MACON3 = 0b10110011; __nop();
 12921  0047C8  0EB3               	movlw	179
 12922  0047CA  010E               	movlb	14	; () banked
 12923  0047CC  6FA2               	movwf	162,b	;volatile
 12924                           
 12925                           ; BSR set to: 14
 12926  0047CE  F000               	nop	
 12927                           
 12928                           ;j60_driver.c: 124: MACON4 = 0b00000000; __nop();
 12929  0047D0  6BA3               	clrf	163,b	;volatile
 12930                           
 12931                           ; BSR set to: 14
 12932  0047D2  F000               	nop	
 12933                           
 12934                           ;j60_driver.c: 125: MABBIPG = 0x15; __nop();
 12935  0047D4  0E15               	movlw	21
 12936  0047D6  6FA4               	movwf	164,b	;volatile
 12937                           
 12938                           ; BSR set to: 14
 12939  0047D8  F000               	nop	
 12940                           
 12941                           ;j60_driver.c: 126: MAIPG = 0x0012; __nop();
 12942  0047DA  6BA7               	clrf	167,b	;volatile
 12943  0047DC  0E12               	movlw	18
 12944  0047DE  6FA6               	movwf	166,b	;volatile
 12945                           
 12946                           ; BSR set to: 14
 12947  0047E0  F000               	nop	
 12948                           
 12949                           ;j60_driver.c: 142: ETXST = ((8192) - (1518));
 12950  0047E2  0E1A               	movlw	26
 12951  0047E4  6FE5               	movwf	229,b	;volatile
 12952  0047E6  0E12               	movlw	18
 12953  0047E8  6FE4               	movwf	228,b	;volatile
 12954                           
 12955                           ;j60_driver.c: 143: ETXND = ((8192)-1);
 12956  0047EA  0E1F               	movlw	31
 12957  0047EC  6FE7               	movwf	231,b	;volatile
 12958  0047EE  69E6               	setf	230,b	;volatile
 12959                           
 12960                           ; BSR set to: 14
 12961                           ;j60_driver.c: 144: ERXST = (0);
 12962  0047F0  6BE8               	clrf	232,b	;volatile
 12963  0047F2  6BE9               	clrf	233,b	;volatile
 12964                           
 12965                           ;j60_driver.c: 145: ERXND = (((8192) - (1518)) - 2);
 12966  0047F4  0E1A               	movlw	26
 12967  0047F6  6FEB               	movwf	235,b	;volatile
 12968  0047F8  0E10               	movlw	16
 12969  0047FA  6FEA               	movwf	234,b	;volatile
 12970                           
 12971                           ; BSR set to: 14
 12972                           ;j60_driver.c: 148: ERDPT = (0);
 12973  0047FC  6A7A               	clrf	3962,c	;volatile
 12974  0047FE  6A7B               	clrf	3963,c	;volatile
 12975                           
 12976                           ;j60_driver.c: 149: EWRPT = ((8192) - (1518));
 12977  004800  ECF4  F024         	call	PL701	;call to abstracted procedure
 12978                           
 12979                           ; BSR set to: 14
 12980                           ;j60_driver.c: 152: ERXRDPT = -1;
 12981  004804  69EC               	setf	236,b	;volatile
 12982  004806  69ED               	setf	237,b	;volatile
 12983                           
 12984                           ;j60_driver.c: 154: MAMXFL = (1518);
 12985  004808  0E05               	movlw	5
 12986  00480A  6FAB               	movwf	171,b	;volatile
 12987  00480C  0EEE               	movlw	238
 12988  00480E  6FAA               	movwf	170,b	;volatile
 12989                           
 12990                           ; BSR set to: 14
 12991                           ;j60_driver.c: 157: mac = MAC_getAddress();
 12992  004810  ECE1  F031         	call	_MAC_getAddress	;wreg free
 12993  004814  6E2D               	movwf	ETH_Init@mac,c
 12994                           
 12995                           ; BSR set to: 14
 12996                           ;j60_driver.c: 158: MAADR1 = mac->mac_array[0]; __nop();
 12997  004816  C02D  FFF6         	movff	ETH_Init@mac,tblptrl
 12998  00481A                     	if	1	;There is more than 1 active tblptr byte
 12999  00481A  D851               	call	PL479	;call to abstracted procedure
 13000  00481C  CFF5 FE84          	movff	tablat,3716	;volatile
 13001                           
 13002                           ; BSR set to: 14
 13003  004820  F000               	nop	
 13004                           
 13005                           ;j60_driver.c: 159: MAADR2 = mac->mac_array[1]; __nop();
 13006  004822  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 13007  004826  2A2A               	incf	??_ETH_Init,f,c
 13008  004828  C02A  FFF6         	movff	??_ETH_Init,tblptrl
 13009  00482C                     	if	1	;There is more than 1 active tblptr byte
 13010  00482C  D848               	call	PL479	;call to abstracted procedure
 13011  00482E  CFF5 FE85          	movff	tablat,3717	;volatile
 13012  004832  F000               	nop	
 13013                           
 13014                           ;j60_driver.c: 160: MAADR3 = mac->mac_array[2]; __nop();
 13015  004834  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 13016  004838  0E02               	movlw	2
 13017  00483A  D847               	call	PL497	;call to abstracted procedure
 13018  00483C  D840               	call	PL479	;call to abstracted procedure
 13019  00483E  CFF5 FE82          	movff	tablat,3714	;volatile
 13020  004842  F000               	nop	
 13021                           
 13022                           ;j60_driver.c: 161: MAADR4 = mac->mac_array[3]; __nop();
 13023  004844  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 13024  004848  0E03               	movlw	3
 13025  00484A  D83F               	call	PL497	;call to abstracted procedure
 13026  00484C  D838               	call	PL479	;call to abstracted procedure
 13027  00484E  CFF5 FE83          	movff	tablat,3715	;volatile
 13028  004852  F000               	nop	
 13029                           
 13030                           ;j60_driver.c: 162: MAADR5 = mac->mac_array[4]; __nop();
 13031  004854  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 13032  004858  0E04               	movlw	4
 13033  00485A  D837               	call	PL497	;call to abstracted procedure
 13034  00485C  D830               	call	PL479	;call to abstracted procedure
 13035  00485E  CFF5 FE80          	movff	tablat,3712	;volatile
 13036  004862  F000               	nop	
 13037                           
 13038                           ;j60_driver.c: 163: MAADR6 = mac->mac_array[5]; __nop();
 13039  004864  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 13040  004868  0E05               	movlw	5
 13041  00486A  D82F               	call	PL497	;call to abstracted procedure
 13042  00486C  D828               	call	PL479	;call to abstracted procedure
 13043  00486E  CFF5 FE81          	movff	tablat,3713	;volatile
 13044  004872  F000               	nop	
 13045                           
 13046                           ;j60_driver.c: 167: ERXFCON = 0b10101011;
 13047  004874  0EAB               	movlw	171
 13048  004876  010E               	movlb	14	; () banked
 13049  004878  6FD8               	movwf	216,b	;volatile
 13050                           
 13051                           ; BSR set to: 14
 13052                           ;j60_driver.c: 170: ECON1=0x04;
 13053  00487A  0E04               	movlw	4
 13054  00487C  6ED2               	movwf	4050,c	;volatile
 13055                           
 13056                           ;j60_driver.c: 173: PHY_Write(PHCON1, phycon1_value);
 13057  00487E  0E01               	movlw	1
 13058  004880  6E1A               	movwf	PHY_Write@data+1,c
 13059  004882  0E00               	movlw	0
 13060  004884  6A19               	clrf	PHY_Write@data,c
 13061  004886  EC14  F02D         	call	_PHY_Write
 13062                           
 13063                           ;j60_driver.c: 174: PHY_Write(PHCON2, 0x0110);
 13064  00488A  0E01               	movlw	1
 13065  00488C  6E1A               	movwf	PHY_Write@data+1,c
 13066  00488E  0E10               	movlw	16
 13067  004890  6E19               	movwf	PHY_Write@data,c
 13068  004892  EC14  F02D         	call	_PHY_Write
 13069                           
 13070                           ;j60_driver.c: 175: PHY_Write(PHLCON, 0b01110101001010);
 13071  004896  0E1D               	movlw	29
 13072  004898  6E1A               	movwf	PHY_Write@data+1,c
 13073  00489A  0E4A               	movlw	74
 13074  00489C  6E19               	movwf	PHY_Write@data,c
 13075  00489E  0E14               	movlw	20
 13076  0048A0  EC14  F02D         	call	_PHY_Write
 13077                           
 13078                           ;j60_driver.c: 178: ETH_CheckLinkUp();
 13079  0048A4  EC9D  F02F         	call	_ETH_CheckLinkUp	;wreg free
 13080                           
 13081                           ;j60_driver.c: 181: EIE = 0b01011001;
 13082  0048A8  0E59               	movlw	89
 13083  0048AA  010E               	movlb	14	; () banked
 13084  0048AC  6FFB               	movwf	251,b	;volatile
 13085                           
 13086                           ; BSR set to: 14
 13087                           ;j60_driver.c: 182: PHY_Write(PHIE,0x0012);
 13088  0048AE  6A1A               	clrf	PHY_Write@data+1,c
 13089  0048B0  0E12               	movlw	18
 13090  0048B2  6E19               	movwf	PHY_Write@data,c
 13091  0048B4  EC14  F02D         	call	_PHY_Write
 13092                           
 13093                           ; BSR set to: 14
 13094                           ;j60_driver.c: 185: IPR2bits.ETHIP = 0;
 13095  0048B8  9AA2               	bcf	4002,5,c	;volatile
 13096                           
 13097                           ; BSR set to: 14
 13098                           ;j60_driver.c: 186: PIE2bits.ETHIE = 1;
 13099  0048BA  8AA0               	bsf	4000,5,c	;volatile
 13100                           
 13101                           ; BSR set to: 14
 13102  0048BC  0012               	return		;funcret
 13103  0048BE                     __end_of_ETH_Init:
 13104                           	opt stack 0
 13105  0048BE                     PL479:
 13106                           	opt stack 17
 13107  0048BE  0E10               	movlw	high __smallconst
 13108  0048C0  6EF7               	movwf	tblptrh,c
 13109  0048C2                     	endif
 13110  0048C2                     	if	0	;tblptru may be non-zero
 13111  0048C2                     	endif
 13112  0048C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13113  0048C2  0E00               	movlw	low (__smallconst shr (0+16))
 13114  0048C4  6EF8               	movwf	tblptru,c
 13115  0048C6                     	endif
 13116  0048C6  0008               	tblrd		*
 13117  0048C8  0012               	return	
 13118  0048CA                     __end_ofPL479:
 13119                           	opt stack 0
 13120  0048CA                     PL497:
 13121                           	opt stack 17
 13122  0048CA  262A               	addwf	??_ETH_Init,f,c
 13123  0048CC  C02A  FFF6         	movff	??_ETH_Init,tblptrl
 13124  0048D0                     	if	1	;There is more than 1 active tblptr byte
 13125  0048D0  0012               	return	
 13126  0048D2                     __end_ofPL497:
 13127                           	opt stack 0
 13128                           tosu	equ	0xFFF
 13129                           tosh	equ	0xFFE
 13130                           tosl	equ	0xFFD
 13131                           pclath	equ	0xFFA
 13132                           tblptru	equ	0xFF8
 13133                           tblptrh	equ	0xFF7
 13134                           tblptrl	equ	0xFF6
 13135                           tablat	equ	0xFF5
 13136                           prodh	equ	0xFF4
 13137                           prodl	equ	0xFF3
 13138                           intcon	equ	0xFF2
 13139                           indf0	equ	0xFEF
 13140                           postinc0	equ	0xFEE
 13141                           fsr0h	equ	0xFEA
 13142                           fsr0l	equ	0xFE9
 13143                           wreg	equ	0xFE8
 13144                           indf1	equ	0xFE7
 13145                           postinc1	equ	0xFE6
 13146                           postdec1	equ	0xFE5
 13147                           plusw1	equ	0xFE3
 13148                           fsr1h	equ	0xFE2
 13149                           fsr1l	equ	0xFE1
 13150                           bsr	equ	0xFE0
 13151                           indf2	equ	0xFDF
 13152                           postinc2	equ	0xFDE
 13153                           postdec2	equ	0xFDD
 13154                           plusw2	equ	0xFDB
 13155                           fsr2h	equ	0xFDA
 13156                           fsr2l	equ	0xFD9
 13157                           status	equ	0xFD8
 13158                           
 13159 ;; *************** function _PHY_Write *****************
 13160 ;; Defined at:
 13161 ;;		line 317 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 13162 ;; Parameters:    Size  Location     Type
 13163 ;;  reg             1    wreg     enum E7098
 13164 ;;  data            2   24[COMRAM] unsigned int 
 13165 ;; Auto vars:     Size  Location     Type
 13166 ;;  reg             1   26[COMRAM] enum E7098
 13167 ;;  GIESave         1   27[COMRAM] unsigned char 
 13168 ;; Return value:  Size  Location     Type
 13169 ;;                  1    wreg      enum E7107
 13170 ;; Registers used:
 13171 ;;		wreg, status,2, status,0, cstack
 13172 ;; Tracked objects:
 13173 ;;		On entry : F/E
 13174 ;;		On exit  : F/E
 13175 ;;		Unchanged: 0/0
 13176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13180 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13181 ;;Total ram usage:        4 bytes
 13182 ;; Hardware stack levels used:    1
 13183 ;; Hardware stack levels required when called:    9
 13184 ;; This function calls:
 13185 ;;		_PHY_WaitForBusy
 13186 ;; This function is called by:
 13187 ;;		_ETH_Init
 13188 ;; This function uses a non-reentrant model
 13189 ;;
 13190                           
 13191                           	psect	text61
 13192  005A28                     __ptext61:
 13193                           	opt stack 0
 13194  005A28                     _PHY_Write:
 13195                           	opt stack 19
 13196                           
 13197                           ; BSR set to: 14
 13198                           ;incstack = 0
 13199                           ;PHY_Write@reg stored from wreg
 13200  005A28  6E1B               	movwf	PHY_Write@reg,c
 13201                           
 13202                           ;j60_driver.c: 319: uint8_t GIESave;
 13203                           ;j60_driver.c: 321: MIREGADR = reg;
 13204  005A2A  C01B  FEB4         	movff	PHY_Write@reg,3764	;volatile
 13205                           
 13206                           ;j60_driver.c: 333: errataTemp = data;
 13207  005A2E  C019  FE7E         	movff	PHY_Write@data,3710
 13208  005A32  C01A  FE7F         	movff	PHY_Write@data+1,3711
 13209                           
 13210                           ;j60_driver.c: 334: GIESave = INTCON;
 13211  005A36  CFF2 F01C          	movff	intcon,PHY_Write@GIESave	;volatile
 13212                           
 13213                           ;j60_driver.c: 335: INTCON = 0;
 13214  005A3A  6AF2               	clrf	intcon,c	;volatile
 13215                           
 13216                           ;j60_driver.c: 336: MIWR = errataTemp;
 13217  005A3C  CE7E FEB6          	movff	3710,3766	;volatile
 13218  005A40  CE7F FEB7          	movff	3711,3767	;volatile
 13219                           
 13220                           ;j60_driver.c: 337: INTCON = GIESave;
 13221  005A44  C01C  FFF2         	movff	PHY_Write@GIESave,intcon	;volatile
 13222  005A48                     i14L__ptext66:
 13223                           	opt stack 0
 13224  005A48                     i14L_PHY_WaitForBusy:
 13225                           	opt stack 0
 13226  005A48                     i14Ll8100:
 13227                           	opt stack 18
 13228                           
 13229                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 13230  005A48  6A17               	clrf	PHY_WaitForBusy@ret,c
 13231                           
 13232                           ;j60_driver.c: 301: uint8_t timeout;
 13233                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 13234  005A4A  6A18               	clrf	PHY_WaitForBusy@timeout,c
 13235  005A4C                     i14Ll504:
 13236                           	opt stack 18
 13237  005A4C  F000               	nop	
 13238  005A4E                     i14Ll8106:
 13239                           	opt stack 18
 13240  005A4E  2A18               	incf	PHY_WaitForBusy@timeout,f,c
 13241  005A50                     i14Ll8108:
 13242                           	opt stack 18
 13243  005A50  0E09               	movlw	9
 13244  005A52  6418               	cpfsgt	PHY_WaitForBusy@timeout,c
 13245  005A54  D7FB               	goto	i14Ll504
 13246  005A56  D001               	goto	i14Lu11670
 13247  005A58                     i14Lu11671:
 13248                           	opt stack 0
 13249  005A58  D7F9               	goto	i14Ll504
 13250  005A5A                     i14Lu11670:
 13251                           	opt stack 0
 13252  005A5A                     i14Ll8110:
 13253                           	opt stack 18
 13254                           
 13255                           ;j60_driver.c: 304: timeout = 90;
 13256  005A5A  0E5A               	movlw	90
 13257  005A5C  6E18               	movwf	PHY_WaitForBusy@timeout,c
 13258  005A5E  D001               	goto	i14Ll506
 13259  005A60                     i14Ll507:
 13260                           	opt stack 18
 13261                           
 13262                           ; BSR set to: 14
 13263  005A60  F000               	nop	
 13264  005A62                     i14Ll506:
 13265                           	opt stack 18
 13266  005A62  010E               	movlb	14	; () banked
 13267  005A64  A18A               	btfss	138,0,b	;volatile
 13268  005A66                     i14Lu11681:
 13269                           	opt stack 0
 13270  005A66  D002               	goto	i14Ll8114
 13271  005A68                     i14Lu11680:
 13272                           	opt stack 0
 13273  005A68                     i14Ll8112:
 13274                           	opt stack 18
 13275                           
 13276                           ; BSR set to: 14
 13277  005A68  2E18               	decfsz	PHY_WaitForBusy@timeout,f,c
 13278  005A6A  D7FA               	goto	i14Ll507
 13279  005A6C                     i14Ll8114:
 13280                           	opt stack 18
 13281                           
 13282                           ; BSR set to: 14
 13283                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 13284  005A6C  5018               	movf	PHY_WaitForBusy@timeout,w,c
 13285  005A6E  A4D8               	btfss	status,2,c
 13286  005A70                     i14Lu11691:
 13287                           	opt stack 0
 13288  005A70  D001               	goto	i14Ll8118
 13289  005A72                     i14Lu11690:
 13290                           	opt stack 0
 13291  005A72                     i14Ll8116:
 13292                           	opt stack 18
 13293                           
 13294                           ; BSR set to: 14
 13295  005A72  6817               	setf	PHY_WaitForBusy@ret,c
 13296  005A74                     i14Ll8118:
 13297                           	opt stack 18
 13298                           
 13299                           ; BSR set to: 14
 13300                           ;j60_driver.c: 308: return ret;
 13301  005A74  5017               	movf	PHY_WaitForBusy@ret,w,c
 13302  005A76                     i14Ll512:
 13303                           	opt stack 0
 13304  005A76  0012               	return	
 13305  005A78                     __end_of_PHY_Write:
 13306                           	opt stack 0
 13307                           tosu	equ	0xFFF
 13308                           tosh	equ	0xFFE
 13309                           tosl	equ	0xFFD
 13310                           pclath	equ	0xFFA
 13311                           tblptru	equ	0xFF8
 13312                           tblptrh	equ	0xFF7
 13313                           tblptrl	equ	0xFF6
 13314                           tablat	equ	0xFF5
 13315                           prodh	equ	0xFF4
 13316                           prodl	equ	0xFF3
 13317                           intcon	equ	0xFF2
 13318                           indf0	equ	0xFEF
 13319                           postinc0	equ	0xFEE
 13320                           fsr0h	equ	0xFEA
 13321                           fsr0l	equ	0xFE9
 13322                           wreg	equ	0xFE8
 13323                           indf1	equ	0xFE7
 13324                           postinc1	equ	0xFE6
 13325                           postdec1	equ	0xFE5
 13326                           plusw1	equ	0xFE3
 13327                           fsr1h	equ	0xFE2
 13328                           fsr1l	equ	0xFE1
 13329                           bsr	equ	0xFE0
 13330                           indf2	equ	0xFDF
 13331                           postinc2	equ	0xFDE
 13332                           postdec2	equ	0xFDD
 13333                           plusw2	equ	0xFDB
 13334                           fsr2h	equ	0xFDA
 13335                           fsr2l	equ	0xFD9
 13336                           status	equ	0xFD8
 13337                           
 13338 ;; *************** function _MAC_getAddress *****************
 13339 ;; Defined at:
 13340 ;;		line 46 in file "../../TCPIP Library/source/mac_address.c"
 13341 ;; Parameters:    Size  Location     Type
 13342 ;;		None
 13343 ;; Auto vars:     Size  Location     Type
 13344 ;;		None
 13345 ;; Return value:  Size  Location     Type
 13346 ;;                  1    wreg      PTR const struct .
 13347 ;; Registers used:
 13348 ;;		wreg
 13349 ;; Tracked objects:
 13350 ;;		On entry : F/E
 13351 ;;		On exit  : F/E
 13352 ;;		Unchanged: F/0
 13353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13358 ;;Total ram usage:        2 bytes
 13359 ;; Hardware stack levels used:    1
 13360 ;; Hardware stack levels required when called:    8
 13361 ;; This function calls:
 13362 ;;		Nothing
 13363 ;; This function is called by:
 13364 ;;		_ETH_Init
 13365 ;; This function uses a non-reentrant model
 13366 ;;
 13367                           
 13368                           	psect	text62
 13369  0063C2                     __ptext62:
 13370                           	opt stack 0
 13371  0063C2                     _MAC_getAddress:
 13372                           	opt stack 20
 13373                           
 13374                           ; BSR set to: 14
 13375                           ;mac_address.c: 48: return &macAddress;
 13376                           
 13377                           ; BSR set to: 14
 13378                           ;incstack = 0
 13379  0063C2  0E2E               	movlw	_macAddress& (0+255)
 13380                           
 13381                           ; BSR set to: 14
 13382  0063C4  0012               	return		;funcret
 13383  0063C6                     __end_of_MAC_getAddress:
 13384                           	opt stack 0
 13385                           tosu	equ	0xFFF
 13386                           tosh	equ	0xFFE
 13387                           tosl	equ	0xFFD
 13388                           pclath	equ	0xFFA
 13389                           tblptru	equ	0xFF8
 13390                           tblptrh	equ	0xFF7
 13391                           tblptrl	equ	0xFF6
 13392                           tablat	equ	0xFF5
 13393                           prodh	equ	0xFF4
 13394                           prodl	equ	0xFF3
 13395                           intcon	equ	0xFF2
 13396                           indf0	equ	0xFEF
 13397                           postinc0	equ	0xFEE
 13398                           fsr0h	equ	0xFEA
 13399                           fsr0l	equ	0xFE9
 13400                           wreg	equ	0xFE8
 13401                           indf1	equ	0xFE7
 13402                           postinc1	equ	0xFE6
 13403                           postdec1	equ	0xFE5
 13404                           plusw1	equ	0xFE3
 13405                           fsr1h	equ	0xFE2
 13406                           fsr1l	equ	0xFE1
 13407                           bsr	equ	0xFE0
 13408                           indf2	equ	0xFDF
 13409                           postinc2	equ	0xFDE
 13410                           postdec2	equ	0xFDD
 13411                           plusw2	equ	0xFDB
 13412                           fsr2h	equ	0xFDA
 13413                           fsr2l	equ	0xFD9
 13414                           status	equ	0xFD8
 13415                           
 13416 ;; *************** function _ETH_CheckLinkUp *****************
 13417 ;; Defined at:
 13418 ;;		line 198 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 13419 ;; Parameters:    Size  Location     Type
 13420 ;;		None
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;  value           4   37[COMRAM] unsigned long 
 13423 ;; Return value:  Size  Location     Type
 13424 ;;                  1    wreg      unsigned char 
 13425 ;; Registers used:
 13426 ;;		wreg, status,2, status,0, cstack
 13427 ;; Tracked objects:
 13428 ;;		On entry : 0/1
 13429 ;;		On exit  : 0/0
 13430 ;;		Unchanged: 0/0
 13431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13433 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13435 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13436 ;;Total ram usage:        4 bytes
 13437 ;; Hardware stack levels used:    1
 13438 ;; Hardware stack levels required when called:   11
 13439 ;; This function calls:
 13440 ;;		_ETH_readLinkStatus
 13441 ;; This function is called by:
 13442 ;;		_ETH_Init
 13443 ;;		_ETH_EventHandler
 13444 ;;		_Network_WaitForLink
 13445 ;; This function uses a non-reentrant model
 13446 ;;
 13447                           
 13448                           	psect	text63
 13449  005F3A                     __ptext63:
 13450                           	opt stack 0
 13451  005F3A                     _ETH_CheckLinkUp:
 13452                           	opt stack 0
 13453  005F3A                     i15L__ptext64:
 13454                           	opt stack 0
 13455  005F3A                     i15L_ETH_readLinkStatus:
 13456                           	opt stack 0
 13457  005F3A                     i15Ll8838:
 13458                           	opt stack 18
 13459                           
 13460                           ;j60_driver.c: 195: return (PHY_Read(PHSTAT2));
 13461  005F3A  0E11               	movlw	17
 13462  005F3C  ECA0  F027         	call	_PHY_Read
 13463  005F40  C019  F022         	movff	?_PHY_Read,?_ETH_readLinkStatus
 13464  005F44  C01A  F023         	movff	?_PHY_Read+1,?_ETH_readLinkStatus+1
 13465  005F48  C01B  F024         	movff	?_PHY_Read+2,?_ETH_readLinkStatus+2
 13466  005F4C  C01C  F025         	movff	?_PHY_Read+3,?_ETH_readLinkStatus+3
 13467  005F50                     i15Ll476:
 13468                           	opt stack 18
 13469  005F50  C022  F026         	movff	?_ETH_readLinkStatus,ETH_CheckLinkUp@value
 13470  005F54  C023  F027         	movff	?_ETH_readLinkStatus+1,ETH_CheckLinkUp@value+1
 13471  005F58  C024  F028         	movff	?_ETH_readLinkStatus+2,ETH_CheckLinkUp@value+2
 13472  005F5C  C025  F029         	movff	?_ETH_readLinkStatus+3,ETH_CheckLinkUp@value+3
 13473                           
 13474                           ; BSR set to: 14
 13475                           ;j60_driver.c: 203: if(value & 0x0400)
 13476  005F60  A427               	btfss	ETH_CheckLinkUp@value+1,2,c
 13477  005F62  0C00               	retlw	0
 13478                           
 13479                           ; BSR set to: 14
 13480                           ;j60_driver.c: 204: {
 13481                           ;j60_driver.c: 205: ethData.up = 1;
 13482                           
 13483                           ; BSR set to: 1
 13484                           ;j60_driver.c: 206: return 1;
 13485  005F64  D000               	goto	PL737	;call to abstracted procedure
 13486  005F66                     __end_of_ETH_CheckLinkUp:
 13487                           	opt stack 0
 13488  005F66                     PL737:
 13489                           	opt stack 12
 13490  005F66  0101               	movlb	1	; () banked
 13491  005F68  85BD               	bsf	_ethData& (0+255),2,b	;volatile
 13492  005F6A  0C01               	retlw	1
 13493  005F6C                     __end_ofPL737:
 13494                           	opt stack 0
 13495                           tosu	equ	0xFFF
 13496                           tosh	equ	0xFFE
 13497                           tosl	equ	0xFFD
 13498                           pclath	equ	0xFFA
 13499                           tblptru	equ	0xFF8
 13500                           tblptrh	equ	0xFF7
 13501                           tblptrl	equ	0xFF6
 13502                           tablat	equ	0xFF5
 13503                           prodh	equ	0xFF4
 13504                           prodl	equ	0xFF3
 13505                           intcon	equ	0xFF2
 13506                           indf0	equ	0xFEF
 13507                           postinc0	equ	0xFEE
 13508                           fsr0h	equ	0xFEA
 13509                           fsr0l	equ	0xFE9
 13510                           wreg	equ	0xFE8
 13511                           indf1	equ	0xFE7
 13512                           postinc1	equ	0xFE6
 13513                           postdec1	equ	0xFE5
 13514                           plusw1	equ	0xFE3
 13515                           fsr1h	equ	0xFE2
 13516                           fsr1l	equ	0xFE1
 13517                           bsr	equ	0xFE0
 13518                           indf2	equ	0xFDF
 13519                           postinc2	equ	0xFDE
 13520                           postdec2	equ	0xFDD
 13521                           plusw2	equ	0xFDB
 13522                           fsr2h	equ	0xFDA
 13523                           fsr2l	equ	0xFD9
 13524                           status	equ	0xFD8
 13525                           
 13526 ;; *************** function _ETH_readLinkStatus *****************
 13527 ;; Defined at:
 13528 ;;		line 193 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 13529 ;; Parameters:    Size  Location     Type
 13530 ;;		None
 13531 ;; Auto vars:     Size  Location     Type
 13532 ;;		None
 13533 ;; Return value:  Size  Location     Type
 13534 ;;                  4   33[COMRAM] unsigned long 
 13535 ;; Registers used:
 13536 ;;		wreg, status,2, status,0, cstack
 13537 ;; Tracked objects:
 13538 ;;		On entry : 0/1
 13539 ;;		On exit  : F/E
 13540 ;;		Unchanged: 0/0
 13541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13545 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13546 ;;Total ram usage:        4 bytes
 13547 ;; Hardware stack levels used:    1
 13548 ;; Hardware stack levels required when called:   10
 13549 ;; This function calls:
 13550 ;;		_PHY_Read
 13551 ;; This function is called by:
 13552 ;;		_ETH_CheckLinkUp
 13553 ;; This function uses a non-reentrant model
 13554 ;;
 13555                           
 13556                           	psect	text64
 13557  000000                     __ptext64:
 13558                           	opt stack 0
 13559  000000                     _ETH_readLinkStatus:
 13560                           	opt stack 0
 13561  000000                     __end_of_ETH_readLinkStatus:
 13562                           	opt stack 0
 13563                           tosu	equ	0xFFF
 13564                           tosh	equ	0xFFE
 13565                           tosl	equ	0xFFD
 13566                           pclath	equ	0xFFA
 13567                           tblptru	equ	0xFF8
 13568                           tblptrh	equ	0xFF7
 13569                           tblptrl	equ	0xFF6
 13570                           tablat	equ	0xFF5
 13571                           prodh	equ	0xFF4
 13572                           prodl	equ	0xFF3
 13573                           intcon	equ	0xFF2
 13574                           indf0	equ	0xFEF
 13575                           postinc0	equ	0xFEE
 13576                           fsr0h	equ	0xFEA
 13577                           fsr0l	equ	0xFE9
 13578                           wreg	equ	0xFE8
 13579                           indf1	equ	0xFE7
 13580                           postinc1	equ	0xFE6
 13581                           postdec1	equ	0xFE5
 13582                           plusw1	equ	0xFE3
 13583                           fsr1h	equ	0xFE2
 13584                           fsr1l	equ	0xFE1
 13585                           bsr	equ	0xFE0
 13586                           indf2	equ	0xFDF
 13587                           postinc2	equ	0xFDE
 13588                           postdec2	equ	0xFDD
 13589                           plusw2	equ	0xFDB
 13590                           fsr2h	equ	0xFDA
 13591                           fsr2l	equ	0xFD9
 13592                           status	equ	0xFD8
 13593                           
 13594 ;; *************** function _PHY_Read *****************
 13595 ;; Defined at:
 13596 ;;		line 350 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 13597 ;; Parameters:    Size  Location     Type
 13598 ;;  reg             1    wreg     enum E7098
 13599 ;; Auto vars:     Size  Location     Type
 13600 ;;  reg             1   28[COMRAM] enum E7098
 13601 ;;  ret             4   29[COMRAM] long 
 13602 ;; Return value:  Size  Location     Type
 13603 ;;                  4   24[COMRAM] long 
 13604 ;; Registers used:
 13605 ;;		wreg, status,2, status,0, cstack
 13606 ;; Tracked objects:
 13607 ;;		On entry : 0/E
 13608 ;;		On exit  : F/E
 13609 ;;		Unchanged: 0/0
 13610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13612 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13614 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13615 ;;Total ram usage:        9 bytes
 13616 ;; Hardware stack levels used:    1
 13617 ;; Hardware stack levels required when called:    9
 13618 ;; This function calls:
 13619 ;;		_PHY_WaitForBusy
 13620 ;; This function is called by:
 13621 ;;		_ETH_readLinkStatus
 13622 ;;		_ETH_EventHandler
 13623 ;; This function uses a non-reentrant model
 13624 ;;
 13625                           
 13626                           	psect	text65
 13627  004F40                     __ptext65:
 13628                           	opt stack 0
 13629  004F40                     _PHY_Read:
 13630                           	opt stack 18
 13631                           
 13632                           ; BSR set to: 14
 13633                           ;incstack = 0
 13634                           ;PHY_Read@reg stored from wreg
 13635  004F40  6E1D               	movwf	PHY_Read@reg,c
 13636  004F42                     i16L__ptext66:
 13637                           	opt stack 0
 13638  004F42                     i16L_PHY_WaitForBusy:
 13639                           	opt stack 0
 13640  004F42                     i16Ll8100:
 13641                           	opt stack 18
 13642                           
 13643                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 13644  004F42  6A17               	clrf	PHY_WaitForBusy@ret,c
 13645                           
 13646                           ;j60_driver.c: 301: uint8_t timeout;
 13647                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 13648  004F44  6A18               	clrf	PHY_WaitForBusy@timeout,c
 13649  004F46                     i16Ll504:
 13650                           	opt stack 18
 13651  004F46  F000               	nop	
 13652  004F48                     i16Ll8106:
 13653                           	opt stack 18
 13654  004F48  2A18               	incf	PHY_WaitForBusy@timeout,f,c
 13655  004F4A                     i16Ll8108:
 13656                           	opt stack 18
 13657  004F4A  0E09               	movlw	9
 13658  004F4C  6418               	cpfsgt	PHY_WaitForBusy@timeout,c
 13659  004F4E  D7FB               	goto	i16Ll504
 13660  004F50  D001               	goto	i16Lu11670
 13661  004F52                     i16Lu11671:
 13662                           	opt stack 0
 13663  004F52  D7F9               	goto	i16Ll504
 13664  004F54                     i16Lu11670:
 13665                           	opt stack 0
 13666  004F54                     i16Ll8110:
 13667                           	opt stack 18
 13668                           
 13669                           ;j60_driver.c: 304: timeout = 90;
 13670  004F54  0E5A               	movlw	90
 13671  004F56  6E18               	movwf	PHY_WaitForBusy@timeout,c
 13672  004F58  D001               	goto	i16Ll506
 13673  004F5A                     i16Ll507:
 13674                           	opt stack 18
 13675                           
 13676                           ; BSR set to: 14
 13677  004F5A  F000               	nop	
 13678  004F5C                     i16Ll506:
 13679                           	opt stack 18
 13680  004F5C  010E               	movlb	14	; () banked
 13681  004F5E  A18A               	btfss	138,0,b	;volatile
 13682  004F60                     i16Lu11681:
 13683                           	opt stack 0
 13684  004F60  D002               	goto	i16Ll8114
 13685  004F62                     i16Lu11680:
 13686                           	opt stack 0
 13687  004F62                     i16Ll8112:
 13688                           	opt stack 18
 13689                           
 13690                           ; BSR set to: 14
 13691  004F62  2E18               	decfsz	PHY_WaitForBusy@timeout,f,c
 13692  004F64  D7FA               	goto	i16Ll507
 13693  004F66                     i16Ll8114:
 13694                           	opt stack 18
 13695                           
 13696                           ; BSR set to: 14
 13697                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 13698  004F66  5018               	movf	PHY_WaitForBusy@timeout,w,c
 13699  004F68  A4D8               	btfss	status,2,c
 13700  004F6A                     i16Lu11691:
 13701                           	opt stack 0
 13702  004F6A  D001               	goto	i16Ll8118
 13703  004F6C                     i16Lu11690:
 13704                           	opt stack 0
 13705  004F6C                     i16Ll8116:
 13706                           	opt stack 18
 13707                           
 13708                           ; BSR set to: 14
 13709  004F6C  6817               	setf	PHY_WaitForBusy@ret,c
 13710  004F6E                     i16Ll8118:
 13711                           	opt stack 18
 13712                           
 13713                           ; BSR set to: 14
 13714                           ;j60_driver.c: 308: return ret;
 13715  004F6E  5017               	movf	PHY_WaitForBusy@ret,w,c
 13716  004F70                     i16Ll512:
 13717                           	opt stack 18
 13718  004F70  0900               	iorlw	0
 13719  004F72  E12C               	bnz	l518
 13720                           
 13721                           ; BSR set to: 14
 13722                           ;j60_driver.c: 354: {
 13723                           ;j60_driver.c: 355: MIREGADR = reg;
 13724  004F74  C01D  FEB4         	movff	PHY_Read@reg,3764	;volatile
 13725                           
 13726                           ;j60_driver.c: 356: MICMD = 0;
 13727  004F78  6BB2               	clrf	178,b	;volatile
 13728                           
 13729                           ;j60_driver.c: 357: MICMDbits.MIIRD = 1;
 13730  004F7A  81B2               	bsf	178,0,b	;volatile
 13731                           
 13732                           ;j60_driver.c: 358: __nop(); __nop();
 13733  004F7C  F000               	nop	
 13734  004F7E  F000               	nop	
 13735  004F80                     i17L__ptext66:
 13736                           	opt stack 0
 13737  004F80                     i17L_PHY_WaitForBusy:
 13738                           	opt stack 0
 13739  004F80                     i17Ll8100:
 13740                           	opt stack 18
 13741                           
 13742                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 13743  004F80  6A17               	clrf	PHY_WaitForBusy@ret,c
 13744                           
 13745                           ;j60_driver.c: 301: uint8_t timeout;
 13746                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 13747  004F82  6A18               	clrf	PHY_WaitForBusy@timeout,c
 13748  004F84                     i17Ll504:
 13749                           	opt stack 18
 13750  004F84  F000               	nop	
 13751  004F86                     i17Ll8106:
 13752                           	opt stack 18
 13753  004F86  2A18               	incf	PHY_WaitForBusy@timeout,f,c
 13754  004F88                     i17Ll8108:
 13755                           	opt stack 18
 13756  004F88  0E09               	movlw	9
 13757  004F8A  6418               	cpfsgt	PHY_WaitForBusy@timeout,c
 13758  004F8C  D7FB               	goto	i17Ll504
 13759  004F8E  D001               	goto	i17Lu11670
 13760  004F90                     i17Lu11671:
 13761                           	opt stack 0
 13762  004F90  D7F9               	goto	i17Ll504
 13763  004F92                     i17Lu11670:
 13764                           	opt stack 0
 13765  004F92                     i17Ll8110:
 13766                           	opt stack 18
 13767                           
 13768                           ;j60_driver.c: 304: timeout = 90;
 13769  004F92  0E5A               	movlw	90
 13770  004F94  6E18               	movwf	PHY_WaitForBusy@timeout,c
 13771  004F96  D001               	goto	i17Ll506
 13772  004F98                     i17Ll507:
 13773                           	opt stack 18
 13774                           
 13775                           ; BSR set to: 14
 13776  004F98  F000               	nop	
 13777  004F9A                     i17Ll506:
 13778                           	opt stack 18
 13779  004F9A  010E               	movlb	14	; () banked
 13780  004F9C  A18A               	btfss	138,0,b	;volatile
 13781  004F9E                     i17Lu11681:
 13782                           	opt stack 0
 13783  004F9E  D002               	goto	i17Ll8114
 13784  004FA0                     i17Lu11680:
 13785                           	opt stack 0
 13786  004FA0                     i17Ll8112:
 13787                           	opt stack 18
 13788                           
 13789                           ; BSR set to: 14
 13790  004FA0  2E18               	decfsz	PHY_WaitForBusy@timeout,f,c
 13791  004FA2  D7FA               	goto	i17Ll507
 13792  004FA4                     i17Ll8114:
 13793                           	opt stack 18
 13794                           
 13795                           ; BSR set to: 14
 13796                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 13797  004FA4  5018               	movf	PHY_WaitForBusy@timeout,w,c
 13798  004FA6  A4D8               	btfss	status,2,c
 13799  004FA8                     i17Lu11691:
 13800                           	opt stack 0
 13801  004FA8  D001               	goto	i17Ll8118
 13802  004FAA                     i17Lu11690:
 13803                           	opt stack 0
 13804  004FAA                     i17Ll8116:
 13805                           	opt stack 18
 13806                           
 13807                           ; BSR set to: 14
 13808  004FAA  6817               	setf	PHY_WaitForBusy@ret,c
 13809  004FAC                     i17Ll8118:
 13810                           	opt stack 18
 13811                           
 13812                           ; BSR set to: 14
 13813                           ;j60_driver.c: 308: return ret;
 13814  004FAC  5017               	movf	PHY_WaitForBusy@ret,w,c
 13815  004FAE                     i17Ll512:
 13816                           	opt stack 18
 13817  004FAE  0AFF               	xorlw	-1
 13818  004FB0  E105               	bnz	l519
 13819                           
 13820                           ; BSR set to: 14
 13821                           ;j60_driver.c: 360: {
 13822                           ;j60_driver.c: 361: ret = READ_FAIL;
 13823  004FB2  0EFD               	movlw	253
 13824  004FB4  6E1E               	movwf	PHY_Read@ret,c
 13825  004FB6  0EFF               	movlw	255
 13826  004FB8  D814               	call	PL735	;call to abstracted procedure
 13827                           
 13828                           ;j60_driver.c: 362: }
 13829  004FBA  D00A               	goto	l521
 13830  004FBC                     l519:
 13831                           
 13832                           ; BSR set to: 14
 13833                           ;j60_driver.c: 363: else
 13834                           ;j60_driver.c: 364: {
 13835                           ;j60_driver.c: 365: MICMDbits.MIIRD = 0;
 13836  004FBC  91B2               	bcf	178,0,b	;volatile
 13837                           
 13838                           ; BSR set to: 14
 13839                           ;j60_driver.c: 366: ret = MIRD;
 13840  004FBE  CEB8 F01E          	movff	3768,PHY_Read@ret	;volatile
 13841  004FC2  CEB9 F01F          	movff	3769,PHY_Read@ret+1	;volatile
 13842  004FC6  6A20               	clrf	PHY_Read@ret+2,c
 13843  004FC8  6A21               	clrf	PHY_Read@ret+3,c
 13844  004FCA  D002               	goto	l521
 13845  004FCC                     l518:
 13846                           
 13847                           ; BSR set to: 14
 13848                           ;j60_driver.c: 369: else
 13849                           ;j60_driver.c: 370: {
 13850                           ;j60_driver.c: 371: ret = BUSY_TIMEOUT;
 13851  004FCC  681E               	setf	PHY_Read@ret,c
 13852  004FCE  D809               	call	PL735	;call to abstracted procedure
 13853  004FD0                     l521:
 13854                           
 13855                           ; BSR set to: 14
 13856                           ;j60_driver.c: 372: }
 13857                           ;j60_driver.c: 373: return ret;
 13858  004FD0  C01E  F019         	movff	PHY_Read@ret,?_PHY_Read
 13859  004FD4  C01F  F01A         	movff	PHY_Read@ret+1,?_PHY_Read+1
 13860  004FD8  C020  F01B         	movff	PHY_Read@ret+2,?_PHY_Read+2
 13861  004FDC  C021  F01C         	movff	PHY_Read@ret+3,?_PHY_Read+3
 13862                           
 13863                           ; BSR set to: 14
 13864  004FE0  0012               	return		;funcret
 13865  004FE2                     __end_of_PHY_Read:
 13866                           	opt stack 0
 13867  004FE2                     PL735:
 13868                           	opt stack 18
 13869  004FE2  681F               	setf	PHY_Read@ret+1,c
 13870  004FE4  6820               	setf	PHY_Read@ret+2,c
 13871  004FE6  6821               	setf	PHY_Read@ret+3,c
 13872  004FE8  0012               	return	
 13873  004FEA                     __end_ofPL735:
 13874                           	opt stack 0
 13875                           tosu	equ	0xFFF
 13876                           tosh	equ	0xFFE
 13877                           tosl	equ	0xFFD
 13878                           pclath	equ	0xFFA
 13879                           tblptru	equ	0xFF8
 13880                           tblptrh	equ	0xFF7
 13881                           tblptrl	equ	0xFF6
 13882                           tablat	equ	0xFF5
 13883                           prodh	equ	0xFF4
 13884                           prodl	equ	0xFF3
 13885                           intcon	equ	0xFF2
 13886                           indf0	equ	0xFEF
 13887                           postinc0	equ	0xFEE
 13888                           fsr0h	equ	0xFEA
 13889                           fsr0l	equ	0xFE9
 13890                           wreg	equ	0xFE8
 13891                           indf1	equ	0xFE7
 13892                           postinc1	equ	0xFE6
 13893                           postdec1	equ	0xFE5
 13894                           plusw1	equ	0xFE3
 13895                           fsr1h	equ	0xFE2
 13896                           fsr1l	equ	0xFE1
 13897                           bsr	equ	0xFE0
 13898                           indf2	equ	0xFDF
 13899                           postinc2	equ	0xFDE
 13900                           postdec2	equ	0xFDD
 13901                           plusw2	equ	0xFDB
 13902                           fsr2h	equ	0xFDA
 13903                           fsr2l	equ	0xFD9
 13904                           status	equ	0xFD8
 13905                           
 13906 ;; *************** function _PHY_WaitForBusy *****************
 13907 ;; Defined at:
 13908 ;;		line 298 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 13909 ;; Parameters:    Size  Location     Type
 13910 ;;		None
 13911 ;; Auto vars:     Size  Location     Type
 13912 ;;  timeout         1   23[COMRAM] unsigned char 
 13913 ;;  ret             1   22[COMRAM] enum E7107
 13914 ;; Return value:  Size  Location     Type
 13915 ;;                  1    wreg      enum E7107
 13916 ;; Registers used:
 13917 ;;		wreg, status,2, status,0
 13918 ;; Tracked objects:
 13919 ;;		On entry : 0/E
 13920 ;;		On exit  : F/E
 13921 ;;		Unchanged: 0/0
 13922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13927 ;;Total ram usage:        2 bytes
 13928 ;; Hardware stack levels used:    1
 13929 ;; Hardware stack levels required when called:    8
 13930 ;; This function calls:
 13931 ;;		Nothing
 13932 ;; This function is called by:
 13933 ;;		_PHY_Write
 13934 ;;		_PHY_Read
 13935 ;; This function uses a non-reentrant model
 13936 ;;
 13937                           
 13938                           	psect	text66
 13939  000000                     __ptext66:
 13940                           	opt stack 0
 13941  000000                     _PHY_WaitForBusy:
 13942                           	opt stack 0
 13943  000000                     __end_of_PHY_WaitForBusy:
 13944                           	opt stack 0
 13945                           tosu	equ	0xFFF
 13946                           tosh	equ	0xFFE
 13947                           tosl	equ	0xFFD
 13948                           pclath	equ	0xFFA
 13949                           tblptru	equ	0xFF8
 13950                           tblptrh	equ	0xFF7
 13951                           tblptrl	equ	0xFF6
 13952                           tablat	equ	0xFF5
 13953                           prodh	equ	0xFF4
 13954                           prodl	equ	0xFF3
 13955                           intcon	equ	0xFF2
 13956                           indf0	equ	0xFEF
 13957                           postinc0	equ	0xFEE
 13958                           fsr0h	equ	0xFEA
 13959                           fsr0l	equ	0xFE9
 13960                           wreg	equ	0xFE8
 13961                           indf1	equ	0xFE7
 13962                           postinc1	equ	0xFE6
 13963                           postdec1	equ	0xFE5
 13964                           plusw1	equ	0xFE3
 13965                           fsr1h	equ	0xFE2
 13966                           fsr1l	equ	0xFE1
 13967                           bsr	equ	0xFE0
 13968                           indf2	equ	0xFDF
 13969                           postinc2	equ	0xFDE
 13970                           postdec2	equ	0xFDD
 13971                           plusw2	equ	0xFDB
 13972                           fsr2h	equ	0xFDA
 13973                           fsr2l	equ	0xFD9
 13974                           status	equ	0xFD8
 13975                           
 13976 ;; *************** function _ARPV4_Init *****************
 13977 ;; Defined at:
 13978 ;;		line 86 in file "../../TCPIP Library/source/arpv4.c"
 13979 ;; Parameters:    Size  Location     Type
 13980 ;;		None
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;  x               1   22[COMRAM] unsigned char 
 13983 ;; Return value:  Size  Location     Type
 13984 ;;		None               void
 13985 ;; Registers used:
 13986 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13987 ;; Tracked objects:
 13988 ;;		On entry : F/E
 13989 ;;		On exit  : F/E
 13990 ;;		Unchanged: F/0
 13991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13996 ;;Total ram usage:        1 bytes
 13997 ;; Hardware stack levels used:    1
 13998 ;; Hardware stack levels required when called:    8
 13999 ;; This function calls:
 14000 ;;		Nothing
 14001 ;; This function is called by:
 14002 ;;		_Network_Init
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006                           	psect	text67
 14007  0062BE                     __ptext67:
 14008                           	opt stack 0
 14009  0062BE                     _ARPV4_Init:
 14010                           	opt stack 21
 14011                           
 14012                           ; BSR set to: 14
 14013                           ;arpv4.c: 88: for(uint8_t x= 0 ; x < sizeof(arpMap); x++)
 14014                           
 14015                           ; BSR set to: 14
 14016                           ;incstack = 0
 14017  0062BE  6A17               	clrf	ARPV4_Init@x,c
 14018  0062C0                     l9440:
 14019                           
 14020                           ; BSR set to: 14
 14021                           ;arpv4.c: 89: ((char *)arpMap)[x] = 0;
 14022  0062C0  0E00               	movlw	low _arpMap
 14023  0062C2  2417               	addwf	ARPV4_Init@x,w,c
 14024  0062C4  6ED9               	movwf	fsr2l,c
 14025  0062C6  6ADA               	clrf	fsr2h,c
 14026  0062C8  0E03               	movlw	high _arpMap
 14027  0062CA  22DA               	addwfc	fsr2h,f,c
 14028  0062CC  6ADF               	clrf	indf2,c
 14029                           
 14030                           ; BSR set to: 14
 14031  0062CE  2A17               	incf	ARPV4_Init@x,f,c
 14032                           
 14033                           ; BSR set to: 14
 14034  0062D0  0E67               	movlw	103
 14035  0062D2  6417               	cpfsgt	ARPV4_Init@x,c
 14036  0062D4  D7F5               	goto	l9440
 14037  0062D6  0C67               	retlw	103
 14038  0062D8                     __end_of_ARPV4_Init:
 14039                           	opt stack 0
 14040                           tosu	equ	0xFFF
 14041                           tosh	equ	0xFFE
 14042                           tosl	equ	0xFFD
 14043                           pclath	equ	0xFFA
 14044                           tblptru	equ	0xFF8
 14045                           tblptrh	equ	0xFF7
 14046                           tblptrl	equ	0xFF6
 14047                           tablat	equ	0xFF5
 14048                           prodh	equ	0xFF4
 14049                           prodl	equ	0xFF3
 14050                           intcon	equ	0xFF2
 14051                           indf0	equ	0xFEF
 14052                           postinc0	equ	0xFEE
 14053                           fsr0h	equ	0xFEA
 14054                           fsr0l	equ	0xFE9
 14055                           wreg	equ	0xFE8
 14056                           indf1	equ	0xFE7
 14057                           postinc1	equ	0xFE6
 14058                           postdec1	equ	0xFE5
 14059                           plusw1	equ	0xFE3
 14060                           fsr1h	equ	0xFE2
 14061                           fsr1l	equ	0xFE1
 14062                           bsr	equ	0xFE0
 14063                           indf2	equ	0xFDF
 14064                           postinc2	equ	0xFDE
 14065                           postdec2	equ	0xFDD
 14066                           plusw2	equ	0xFDB
 14067                           fsr2h	equ	0xFDA
 14068                           fsr2l	equ	0xFD9
 14069                           status	equ	0xFD8
 14070                           
 14071 ;; *************** function _IPV4_GetMyIP *****************
 14072 ;; Defined at:
 14073 ;;		line 288 in file "../../TCPIP Library/source/ipv4.c"
 14074 ;; Parameters:    Size  Location     Type
 14075 ;;		None
 14076 ;; Auto vars:     Size  Location     Type
 14077 ;;		None
 14078 ;; Return value:  Size  Location     Type
 14079 ;;                  4   22[COMRAM] unsigned long 
 14080 ;; Registers used:
 14081 ;;		None
 14082 ;; Tracked objects:
 14083 ;;		On entry : 0/1
 14084 ;;		On exit  : 0/0
 14085 ;;		Unchanged: 0/0
 14086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14090 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14091 ;;Total ram usage:        4 bytes
 14092 ;; Hardware stack levels used:    1
 14093 ;; Hardware stack levels required when called:    8
 14094 ;; This function calls:
 14095 ;;		Nothing
 14096 ;; This function is called by:
 14097 ;;		_main
 14098 ;; This function uses a non-reentrant model
 14099 ;;
 14100                           
 14101                           	psect	text68
 14102  006336                     __ptext68:
 14103                           	opt stack 0
 14104  006336                     _IPV4_GetMyIP:
 14105                           	opt stack 22
 14106                           
 14107                           ;ipv4.c: 290: return(ipv4Address);
 14108                           
 14109                           ; BSR set to: 14
 14110                           ;incstack = 0
 14111  006336  C037  F017         	movff	_ipv4Address,?_IPV4_GetMyIP
 14112  00633A  C038  F018         	movff	_ipv4Address+1,?_IPV4_GetMyIP+1
 14113  00633E  C039  F019         	movff	_ipv4Address+2,?_IPV4_GetMyIP+2
 14114  006342  C03A  F01A         	movff	_ipv4Address+3,?_IPV4_GetMyIP+3
 14115  006346  0012               	return		;funcret
 14116  006348                     __end_of_IPV4_GetMyIP:
 14117                           	opt stack 0
 14118                           tosu	equ	0xFFF
 14119                           tosh	equ	0xFFE
 14120                           tosl	equ	0xFFD
 14121                           pclath	equ	0xFFA
 14122                           tblptru	equ	0xFF8
 14123                           tblptrh	equ	0xFF7
 14124                           tblptrl	equ	0xFF6
 14125                           tablat	equ	0xFF5
 14126                           prodh	equ	0xFF4
 14127                           prodl	equ	0xFF3
 14128                           intcon	equ	0xFF2
 14129                           indf0	equ	0xFEF
 14130                           postinc0	equ	0xFEE
 14131                           fsr0h	equ	0xFEA
 14132                           fsr0l	equ	0xFE9
 14133                           wreg	equ	0xFE8
 14134                           indf1	equ	0xFE7
 14135                           postinc1	equ	0xFE6
 14136                           postdec1	equ	0xFE5
 14137                           plusw1	equ	0xFE3
 14138                           fsr1h	equ	0xFE2
 14139                           fsr1l	equ	0xFE1
 14140                           bsr	equ	0xFE0
 14141                           indf2	equ	0xFDF
 14142                           postinc2	equ	0xFDE
 14143                           postdec2	equ	0xFDD
 14144                           plusw2	equ	0xFDB
 14145                           fsr2h	equ	0xFDA
 14146                           fsr2l	equ	0xFD9
 14147                           status	equ	0xFD8
 14148                           
 14149 ;; *************** function _DEMO_TCP_EchoServer *****************
 14150 ;; Defined at:
 14151 ;;		line 76 in file "main.c"
 14152 ;; Parameters:    Size  Location     Type
 14153 ;;		None
 14154 ;; Auto vars:     Size  Location     Type
 14155 ;;  i               2   26[BANK1 ] unsigned int 
 14156 ;;  rxLen           2   24[BANK1 ] unsigned int 
 14157 ;;  txLen           2   21[BANK1 ] unsigned int 
 14158 ;;  socket_state    1   23[BANK1 ] enum E7343
 14159 ;; Return value:  Size  Location     Type
 14160 ;;		None               void
 14161 ;; Registers used:
 14162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14163 ;; Tracked objects:
 14164 ;;		On entry : F/2
 14165 ;;		On exit  : 0/0
 14166 ;;		Unchanged: 0/0
 14167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14169 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14171 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14172 ;;Total ram usage:        7 bytes
 14173 ;; Hardware stack levels used:    1
 14174 ;; Hardware stack levels required when called:   16
 14175 ;; This function calls:
 14176 ;;		_TCP_Bind
 14177 ;;		_TCP_GetReceivedData
 14178 ;;		_TCP_GetRxLength
 14179 ;;		_TCP_InsertRxBuffer
 14180 ;;		_TCP_Listen
 14181 ;;		_TCP_Send
 14182 ;;		_TCP_SendDone
 14183 ;;		_TCP_SocketInit
 14184 ;;		_TCP_SocketPoll
 14185 ;; This function is called by:
 14186 ;;		_main
 14187 ;; This function uses a non-reentrant model
 14188 ;;
 14189                           
 14190                           	psect	text69
 14191  004B00                     __ptext69:
 14192                           	opt stack 0
 14193  004B00                     _DEMO_TCP_EchoServer:
 14194                           	opt stack 14
 14195                           
 14196                           ; BSR set to: 2
 14197                           ;main.c: 79: static tcpTCB_t port7TCB;
 14198                           ;main.c: 82: static uint8_t rxdataPort7[20];
 14199                           ;main.c: 83: static uint8_t txdataPort7[20];
 14200                           ;main.c: 85: uint16_t rxLen, txLen, i;
 14201                           ;main.c: 86: socketState_t socket_state;
 14202                           ;main.c: 88: socket_state = TCP_SocketPoll(&port7TCB);
 14203                           
 14204                           ;incstack = 0
 14205  004B00  0E28               	movlw	low DEMO_TCP_EchoServer@port7TCB
 14206  004B02  6E1F               	movwf	TCP_SocketPoll@socket_ptr,c
 14207  004B04  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 14208  004B06  6E20               	movwf	TCP_SocketPoll@socket_ptr+1,c
 14209  004B08  ECB2  F030         	call	_TCP_SocketPoll	;wreg free
 14210  004B0C  0101               	movlb	1	; () banked
 14211  004B0E  6F17               	movwf	DEMO_TCP_EchoServer@socket_state& (0+255),b
 14212                           
 14213                           ;main.c: 90: switch(socket_state)
 14214  004B10  D06A               	goto	l9832
 14215  004B12                     l9802:
 14216                           
 14217                           ; BSR set to: 1
 14218                           ;main.c: 94: TCP_SocketInit(&port7TCB);
 14219  004B12  0E28               	movlw	low DEMO_TCP_EchoServer@port7TCB
 14220  004B14  6E1F               	movwf	TCP_SocketInit@tcbPtr,c
 14221  004B16  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 14222  004B18  6E20               	movwf	TCP_SocketInit@tcbPtr+1,c
 14223  004B1A  EF3A  F029         	goto	_TCP_SocketInit	;wreg free
 14224  004B1E                     l9804:
 14225                           
 14226                           ; BSR set to: 1
 14227                           ;main.c: 98: TCP_Bind(&port7TCB, 7);
 14228  004B1E  0E28               	movlw	low DEMO_TCP_EchoServer@port7TCB
 14229  004B20  6E1F               	movwf	TCP_Bind@tcbPtr,c
 14230  004B22  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 14231  004B24  6E20               	movwf	TCP_Bind@tcbPtr+1,c
 14232  004B26  6A22               	clrf	TCP_Bind@port+1,c
 14233  004B28  0E07               	movlw	7
 14234  004B2A  6E21               	movwf	TCP_Bind@port,c
 14235  004B2C  ECC5  F030         	call	_TCP_Bind	;wreg free
 14236                           
 14237                           ;main.c: 100: TCP_InsertRxBuffer(&port7TCB, rxdataPort7, sizeof(rxdataPort7));
 14238  004B30  D861               	call	PL567	;call to abstracted procedure
 14239  004B32  ECD6  F02B         	call	_TCP_InsertRxBuffer	;wreg free
 14240                           
 14241                           ;main.c: 102: TCP_Listen(&port7TCB);
 14242  004B36  0E28               	movlw	low DEMO_TCP_EchoServer@port7TCB
 14243  004B38  0101               	movlb	1	; () banked
 14244  004B3A  6F11               	movwf	TCP_Listen@tcbPtr& (0+255),b
 14245  004B3C  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 14246  004B3E  6F12               	movwf	(TCP_Listen@tcbPtr+1)& (0+255),b
 14247  004B40  EF2B  F02B         	goto	_TCP_Listen	;wreg free
 14248  004B44                     l9810:
 14249                           
 14250                           ; BSR set to: 1
 14251                           ;main.c: 106: if(TCP_SendDone(&port7TCB))
 14252  004B44  0E28               	movlw	low DEMO_TCP_EchoServer@port7TCB
 14253  004B46  6E1F               	movwf	TCP_SendDone@tcbPtr,c
 14254  004B48  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 14255  004B4A  6E20               	movwf	TCP_SendDone@tcbPtr+1,c
 14256  004B4C  EC50  F030         	call	_TCP_SendDone	;wreg free
 14257  004B50  0900               	iorlw	0
 14258  004B52  B4D8               	btfsc	status,2,c
 14259  004B54  0012               	return	
 14260                           
 14261                           ;main.c: 107: {
 14262                           ;main.c: 109: rxLen = TCP_GetRxLength(&port7TCB);
 14263  004B56  0E28               	movlw	low DEMO_TCP_EchoServer@port7TCB
 14264  004B58  6E1F               	movwf	TCP_GetRxLength@tcbPtr,c
 14265  004B5A  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 14266  004B5C  6E20               	movwf	TCP_GetRxLength@tcbPtr+1,c
 14267  004B5E  EC3E  F02C         	call	_TCP_GetRxLength	;wreg free
 14268  004B62  C01F  F118         	movff	?_TCP_GetRxLength,DEMO_TCP_EchoServer@rxLen
 14269  004B66  C020  F119         	movff	?_TCP_GetRxLength+1,DEMO_TCP_EchoServer@rxLen+1
 14270                           
 14271                           ;main.c: 110: if(rxLen > 0)
 14272  004B6A  0101               	movlb	1	; () banked
 14273  004B6C  5118               	movf	DEMO_TCP_EchoServer@rxLen& (0+255),w,b
 14274  004B6E  1119               	iorwf	(DEMO_TCP_EchoServer@rxLen+1)& (0+255),w,b
 14275  004B70  B4D8               	btfsc	status,2,c
 14276  004B72  0012               	return	
 14277                           
 14278                           ; BSR set to: 1
 14279                           ;main.c: 111: {
 14280                           ;main.c: 112: rxLen = TCP_GetReceivedData(&port7TCB);
 14281  004B74  0E28               	movlw	low DEMO_TCP_EchoServer@port7TCB
 14282  004B76  6E1F               	movwf	TCP_GetReceivedData@tcbPtr,c
 14283  004B78  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 14284  004B7A  6E20               	movwf	TCP_GetReceivedData@tcbPtr+1,c
 14285  004B7C  EC9F  F02B         	call	_TCP_GetReceivedData	;wreg free
 14286  004B80  C01F  F118         	movff	?_TCP_GetReceivedData,DEMO_TCP_EchoServer@rxLen
 14287  004B84  C020  F119         	movff	?_TCP_GetReceivedData+1,DEMO_TCP_EchoServer@rxLen+1
 14288                           
 14289                           ;main.c: 115: for(i = 0; i < rxLen; i++)
 14290  004B88  0101               	movlb	1	; () banked
 14291  004B8A  6B1A               	clrf	DEMO_TCP_EchoServer@i& (0+255),b
 14292  004B8C  6B1B               	clrf	(DEMO_TCP_EchoServer@i+1)& (0+255),b
 14293  004B8E  D010               	goto	l9824
 14294  004B90                     l9820:
 14295                           
 14296                           ; BSR set to: 1
 14297                           ;main.c: 116: {
 14298                           ;main.c: 117: txdataPort7[i] = rxdataPort7[i];
 14299  004B90  0E5F               	movlw	low DEMO_TCP_EchoServer@rxdataPort7
 14300  004B92  251A               	addwf	DEMO_TCP_EchoServer@i& (0+255),w,b
 14301  004B94  6ED9               	movwf	fsr2l,c
 14302  004B96  0E02               	movlw	high DEMO_TCP_EchoServer@rxdataPort7
 14303  004B98  211B               	addwfc	(DEMO_TCP_EchoServer@i+1)& (0+255),w,b
 14304  004B9A  6EDA               	movwf	fsr2h,c
 14305  004B9C  0E73               	movlw	low DEMO_TCP_EchoServer@txdataPort7
 14306  004B9E  251A               	addwf	DEMO_TCP_EchoServer@i& (0+255),w,b
 14307  004BA0  6EE1               	movwf	fsr1l,c
 14308  004BA2  0E02               	movlw	high DEMO_TCP_EchoServer@txdataPort7
 14309  004BA4  211B               	addwfc	(DEMO_TCP_EchoServer@i+1)& (0+255),w,b
 14310  004BA6  6EE2               	movwf	fsr1h,c
 14311  004BA8  CFDF FFE7          	movff	indf2,indf1
 14312                           
 14313                           ; BSR set to: 1
 14314  004BAC  4B1A               	infsnz	DEMO_TCP_EchoServer@i& (0+255),f,b
 14315  004BAE  2B1B               	incf	(DEMO_TCP_EchoServer@i+1)& (0+255),f,b
 14316  004BB0                     l9824:
 14317                           
 14318                           ; BSR set to: 1
 14319  004BB0  5118               	movf	DEMO_TCP_EchoServer@rxLen& (0+255),w,b
 14320  004BB2  5D1A               	subwf	DEMO_TCP_EchoServer@i& (0+255),w,b
 14321  004BB4  5119               	movf	(DEMO_TCP_EchoServer@rxLen+1)& (0+255),w,b
 14322  004BB6  591B               	subwfb	(DEMO_TCP_EchoServer@i+1)& (0+255),w,b
 14323  004BB8  E3EB               	bnc	l9820
 14324                           
 14325                           ; BSR set to: 1
 14326                           ;main.c: 118: }
 14327                           ;main.c: 121: TCP_InsertRxBuffer(&port7TCB, rxdataPort7, sizeof(rxdataPort7));
 14328  004BBA  D81C               	call	PL567	;call to abstracted procedure
 14329  004BBC  ECD6  F02B         	call	_TCP_InsertRxBuffer	;wreg free
 14330                           
 14331                           ;main.c: 122: txLen = rxLen;
 14332  004BC0  C118  F115         	movff	DEMO_TCP_EchoServer@rxLen,DEMO_TCP_EchoServer@txLen
 14333  004BC4  C119  F116         	movff	DEMO_TCP_EchoServer@rxLen+1,DEMO_TCP_EchoServer@txLen+1
 14334                           
 14335                           ;main.c: 124: TCP_Send(&port7TCB, txdataPort7, txLen);
 14336  004BC8  0E28               	movlw	low DEMO_TCP_EchoServer@port7TCB
 14337  004BCA  0100               	movlb	0	; () banked
 14338  004BCC  6FEE               	movwf	TCP_Send@tcbPtr& (0+255),b
 14339  004BCE  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 14340  004BD0  6FEF               	movwf	(TCP_Send@tcbPtr+1)& (0+255),b
 14341  004BD2  0E73               	movlw	low DEMO_TCP_EchoServer@txdataPort7
 14342  004BD4  6FF0               	movwf	TCP_Send@data& (0+255),b
 14343  004BD6  0E02               	movlw	high DEMO_TCP_EchoServer@txdataPort7
 14344  004BD8  6FF1               	movwf	(TCP_Send@data+1)& (0+255),b
 14345  004BDA  C115  F0F2         	movff	DEMO_TCP_EchoServer@txLen,TCP_Send@dataLen
 14346  004BDE  C116  F0F3         	movff	DEMO_TCP_EchoServer@txLen+1,TCP_Send@dataLen+1
 14347  004BE2  EF4A  F028         	goto	_TCP_Send	;wreg free
 14348  004BE6                     l9832:
 14349                           
 14350                           ; BSR set to: 1
 14351  004BE6  5117               	movf	DEMO_TCP_EchoServer@socket_state& (0+255),w,b
 14352                           
 14353                           ; Switch size 1, requested type "space"
 14354                           ; Number of cases is 3, Range of values is 0 to 3
 14355                           ; switch strategies available:
 14356                           ; Name         Instructions Cycles
 14357                           ; simple_byte           10     6 (average)
 14358                           ;	Chosen strategy is simple_byte
 14359  004BE8  E094               	bz	l9802
 14360  004BEA  0A01               	xorlw	1	; case 1
 14361  004BEC  E098               	bz	l9804
 14362  004BEE  0A02               	xorlw	2	; case 3
 14363  004BF0  E0A9               	bz	l9810
 14364  004BF2  0012               	return		;funcret
 14365  004BF4                     __end_of_DEMO_TCP_EchoServer:
 14366                           	opt stack 0
 14367  004BF4                     PL567:
 14368                           	opt stack 14
 14369  004BF4  0E28               	movlw	low DEMO_TCP_EchoServer@port7TCB
 14370  004BF6  6E1F               	movwf	TCP_InsertRxBuffer@tcbPtr,c
 14371  004BF8  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 14372  004BFA  6E20               	movwf	TCP_InsertRxBuffer@tcbPtr+1,c
 14373  004BFC  0E5F               	movlw	low DEMO_TCP_EchoServer@rxdataPort7
 14374  004BFE  6E21               	movwf	TCP_InsertRxBuffer@data,c
 14375  004C00  0E02               	movlw	high DEMO_TCP_EchoServer@rxdataPort7
 14376  004C02  6E22               	movwf	TCP_InsertRxBuffer@data+1,c
 14377  004C04  6A24               	clrf	TCP_InsertRxBuffer@data_len+1,c
 14378  004C06  0E14               	movlw	20
 14379  004C08  6E23               	movwf	TCP_InsertRxBuffer@data_len,c
 14380  004C0A  0C14               	retlw	20
 14381  004C0C                     __end_ofPL567:
 14382                           	opt stack 0
 14383                           tosu	equ	0xFFF
 14384                           tosh	equ	0xFFE
 14385                           tosl	equ	0xFFD
 14386                           pclath	equ	0xFFA
 14387                           tblptru	equ	0xFF8
 14388                           tblptrh	equ	0xFF7
 14389                           tblptrl	equ	0xFF6
 14390                           tablat	equ	0xFF5
 14391                           prodh	equ	0xFF4
 14392                           prodl	equ	0xFF3
 14393                           intcon	equ	0xFF2
 14394                           indf0	equ	0xFEF
 14395                           postinc0	equ	0xFEE
 14396                           fsr0h	equ	0xFEA
 14397                           fsr0l	equ	0xFE9
 14398                           wreg	equ	0xFE8
 14399                           indf1	equ	0xFE7
 14400                           postinc1	equ	0xFE6
 14401                           postdec1	equ	0xFE5
 14402                           plusw1	equ	0xFE3
 14403                           fsr1h	equ	0xFE2
 14404                           fsr1l	equ	0xFE1
 14405                           bsr	equ	0xFE0
 14406                           indf2	equ	0xFDF
 14407                           postinc2	equ	0xFDE
 14408                           postdec2	equ	0xFDD
 14409                           plusw2	equ	0xFDB
 14410                           fsr2h	equ	0xFDA
 14411                           fsr2l	equ	0xFD9
 14412                           status	equ	0xFD8
 14413                           
 14414 ;; *************** function _TCP_SocketInit *****************
 14415 ;; Defined at:
 14416 ;;		line 1181 in file "../../TCPIP Library/source/tcpv4.c"
 14417 ;; Parameters:    Size  Location     Type
 14418 ;;  tcbPtr          2   30[COMRAM] PTR struct .
 14419 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14420 ;; Auto vars:     Size  Location     Type
 14421 ;;  ret             1    0        enum E177
 14422 ;; Return value:  Size  Location     Type
 14423 ;;                  1    wreg      enum E177
 14424 ;; Registers used:
 14425 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14426 ;; Tracked objects:
 14427 ;;		On entry : C/1
 14428 ;;		On exit  : 0/0
 14429 ;;		Unchanged: 0/0
 14430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14434 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14435 ;;Total ram usage:        3 bytes
 14436 ;; Hardware stack levels used:    1
 14437 ;; Hardware stack levels required when called:    9
 14438 ;; This function calls:
 14439 ;;		_TCB_Check
 14440 ;;		_TCB_Insert
 14441 ;;		_TCB_Reset
 14442 ;; This function is called by:
 14443 ;;		_DEMO_TCP_EchoServer
 14444 ;; This function uses a non-reentrant model
 14445 ;;
 14446                           
 14447                           	psect	text70
 14448  005274                     __ptext70:
 14449                           	opt stack 0
 14450  005274                     _TCP_SocketInit:
 14451                           	opt stack 20
 14452                           
 14453                           ;tcpv4.c: 1186: if(TCB_Check(tcbPtr) == 0)
 14454                           
 14455                           ;incstack = 0
 14456  005274  C01F  F017         	movff	TCP_SocketInit@tcbPtr,TCB_Check@ptr
 14457  005278  C020  F018         	movff	TCP_SocketInit@tcbPtr+1,TCB_Check@ptr+1
 14458  00527C  ECEC  F02A         	call	_TCB_Check	;wreg free
 14459  005280  0900               	iorlw	0
 14460  005282  A4D8               	btfss	status,2,c
 14461  005284  0012               	return	
 14462                           
 14463                           ;tcpv4.c: 1187: {
 14464                           ;tcpv4.c: 1188: TCB_Reset(tcbPtr);
 14465  005286  C01F  F017         	movff	TCP_SocketInit@tcbPtr,TCB_Reset@tcbPtr
 14466  00528A  C020  F018         	movff	TCP_SocketInit@tcbPtr+1,TCB_Reset@tcbPtr+1
 14467  00528E  ECC2  F021         	call	_TCB_Reset	;wreg free
 14468                           
 14469                           ;tcpv4.c: 1190: tcbPtr->localWnd = 0;
 14470  005292  EE20 F01A          	lfsr	2,26
 14471  005296  D831               	call	PL503	;call to abstracted procedure
 14472  005298  6ADE               	clrf	postinc2,c
 14473  00529A  6ADD               	clrf	postdec2,c
 14474                           
 14475                           ;tcpv4.c: 1191: tcbPtr->mss = 1460u;
 14476  00529C  EE20 F01C          	lfsr	2,28
 14477  0052A0  D82C               	call	PL503	;call to abstracted procedure
 14478  0052A2  0EB4               	movlw	180
 14479  0052A4  6EDE               	movwf	postinc2,c
 14480  0052A6  0E05               	movlw	5
 14481  0052A8  6EDD               	movwf	postdec2,c
 14482                           
 14483                           ;tcpv4.c: 1192: tcbPtr->fsmState = CLOSED;
 14484  0052AA  EE20 F02A          	lfsr	2,42
 14485  0052AE  D825               	call	PL503	;call to abstracted procedure
 14486  0052B0  6ADF               	clrf	indf2,c
 14487                           
 14488                           ;tcpv4.c: 1193: tcbPtr->connectionEvent = NOP;
 14489  0052B2  EE20 F02B          	lfsr	2,43
 14490  0052B6  D821               	call	PL503	;call to abstracted procedure
 14491  0052B8  0E0D               	movlw	13
 14492  0052BA  6EDF               	movwf	indf2,c
 14493                           
 14494                           ;tcpv4.c: 1194: tcbPtr->rxBufferStart = (0);
 14495  0052BC  EE20 F01E          	lfsr	2,30
 14496  0052C0  D81C               	call	PL503	;call to abstracted procedure
 14497                           
 14498                           ;tcpv4.c: 1195: tcbPtr->rxBufState = NO_BUFF;
 14499  0052C2  D820               	call	PL705	;call to abstracted procedure
 14500  0052C4  D81A               	call	PL503	;call to abstracted procedure
 14501  0052C6  6ADF               	clrf	indf2,c
 14502                           
 14503                           ;tcpv4.c: 1196: tcbPtr->txBufferStart = (0);
 14504  0052C8  EE20 F023          	lfsr	2,35
 14505  0052CC  D816               	call	PL503	;call to abstracted procedure
 14506  0052CE  6ADE               	clrf	postinc2,c
 14507  0052D0  6ADD               	clrf	postdec2,c
 14508                           
 14509                           ;tcpv4.c: 1197: tcbPtr->txBufferPtr = (0);
 14510  0052D2  EE20 F025          	lfsr	2,37
 14511  0052D6  D811               	call	PL503	;call to abstracted procedure
 14512  0052D8  6ADE               	clrf	postinc2,c
 14513  0052DA  6ADD               	clrf	postdec2,c
 14514                           
 14515                           ;tcpv4.c: 1198: tcbPtr->bytesToSend = 0;
 14516  0052DC  EE20 F027          	lfsr	2,39
 14517  0052E0  D80C               	call	PL503	;call to abstracted procedure
 14518  0052E2  6ADE               	clrf	postinc2,c
 14519  0052E4  6ADD               	clrf	postdec2,c
 14520                           
 14521                           ;tcpv4.c: 1199: tcbPtr->txBufState = NO_BUFF;
 14522  0052E6  EE20 F029          	lfsr	2,41
 14523  0052EA  D807               	call	PL503	;call to abstracted procedure
 14524  0052EC  6ADF               	clrf	indf2,c
 14525                           
 14526                           ;tcpv4.c: 1201: TCB_Insert(tcbPtr);
 14527  0052EE  C01F  F017         	movff	TCP_SocketInit@tcbPtr,TCB_Insert@ptr
 14528  0052F2  C020  F018         	movff	TCP_SocketInit@tcbPtr+1,TCB_Insert@ptr+1
 14529  0052F6  EF91  F02E         	goto	_TCB_Insert	;wreg free
 14530  0052FA                     __end_of_TCP_SocketInit:
 14531                           	opt stack 0
 14532  0052FA                     PL503:
 14533                           	opt stack 20
 14534  0052FA  501F               	movf	TCP_SocketInit@tcbPtr,w,c
 14535  0052FC  26D9               	addwf	fsr2l,f,c
 14536  0052FE  5020               	movf	TCP_SocketInit@tcbPtr+1,w,c
 14537  005300  22DA               	addwfc	fsr2h,f,c
 14538  005302  0012               	return	
 14539  005304                     __end_ofPL503:
 14540                           	opt stack 0
 14541  005304                     PL705:
 14542                           	opt stack 20
 14543  005304  6ADE               	clrf	postinc2,c
 14544  005306  6ADD               	clrf	postdec2,c
 14545  005308  EE20 F022          	lfsr	2,34
 14546  00530C  0012               	return	
 14547  00530E                     __end_ofPL705:
 14548                           	opt stack 0
 14549                           tosu	equ	0xFFF
 14550                           tosh	equ	0xFFE
 14551                           tosl	equ	0xFFD
 14552                           pclath	equ	0xFFA
 14553                           tblptru	equ	0xFF8
 14554                           tblptrh	equ	0xFF7
 14555                           tblptrl	equ	0xFF6
 14556                           tablat	equ	0xFF5
 14557                           prodh	equ	0xFF4
 14558                           prodl	equ	0xFF3
 14559                           intcon	equ	0xFF2
 14560                           indf0	equ	0xFEF
 14561                           postinc0	equ	0xFEE
 14562                           fsr0h	equ	0xFEA
 14563                           fsr0l	equ	0xFE9
 14564                           wreg	equ	0xFE8
 14565                           indf1	equ	0xFE7
 14566                           postinc1	equ	0xFE6
 14567                           postdec1	equ	0xFE5
 14568                           plusw1	equ	0xFE3
 14569                           fsr1h	equ	0xFE2
 14570                           fsr1l	equ	0xFE1
 14571                           bsr	equ	0xFE0
 14572                           indf2	equ	0xFDF
 14573                           postinc2	equ	0xFDE
 14574                           postdec2	equ	0xFDD
 14575                           plusw2	equ	0xFDB
 14576                           fsr2h	equ	0xFDA
 14577                           fsr2l	equ	0xFD9
 14578                           status	equ	0xFD8
 14579                           
 14580 ;; *************** function _TCB_Insert *****************
 14581 ;; Defined at:
 14582 ;;		line 80 in file "../../TCPIP Library/source/tcpv4.c"
 14583 ;; Parameters:    Size  Location     Type
 14584 ;;  ptr             2   22[COMRAM] PTR struct .
 14585 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14586 ;; Auto vars:     Size  Location     Type
 14587 ;;		None
 14588 ;; Return value:  Size  Location     Type
 14589 ;;		None               void
 14590 ;; Registers used:
 14591 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14592 ;; Tracked objects:
 14593 ;;		On entry : 0/1
 14594 ;;		On exit  : 0/0
 14595 ;;		Unchanged: 0/0
 14596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14601 ;;Total ram usage:        2 bytes
 14602 ;; Hardware stack levels used:    1
 14603 ;; Hardware stack levels required when called:    8
 14604 ;; This function calls:
 14605 ;;		Nothing
 14606 ;; This function is called by:
 14607 ;;		_TCP_SocketInit
 14608 ;; This function uses a non-reentrant model
 14609 ;;
 14610                           
 14611                           	psect	text71
 14612  005D22                     __ptext71:
 14613                           	opt stack 0
 14614  005D22                     _TCB_Insert:
 14615                           	opt stack 20
 14616                           
 14617                           ;tcpv4.c: 84: if(tcbList != (0))
 14618                           
 14619                           ;incstack = 0
 14620  005D22  5043               	movf	_tcbList,w,c
 14621  005D24  1044               	iorwf	_tcbList+1,w,c
 14622  005D26  E00A               	bz	l1086
 14623                           
 14624                           ;tcpv4.c: 85: {
 14625                           ;tcpv4.c: 87: tcbList->prevTCB = ptr;
 14626  005D28  EE20 F02E          	lfsr	2,46
 14627  005D2C  5043               	movf	_tcbList,w,c
 14628  005D2E  26D9               	addwf	fsr2l,f,c
 14629  005D30  5044               	movf	_tcbList+1,w,c
 14630  005D32  22DA               	addwfc	fsr2h,f,c
 14631  005D34  C017  FFDE         	movff	TCB_Insert@ptr,postinc2
 14632  005D38  C018  FFDD         	movff	TCB_Insert@ptr+1,postdec2
 14633  005D3C                     l1086:
 14634                           
 14635                           ;tcpv4.c: 88: }
 14636                           ;tcpv4.c: 89: ptr->nextTCB = tcbList;
 14637  005D3C  EE20 F02C          	lfsr	2,44
 14638  005D40  D80F               	call	PL707	;call to abstracted procedure
 14639  005D42  C043  FFDE         	movff	_tcbList,postinc2
 14640  005D46  C044  FFDD         	movff	_tcbList+1,postdec2
 14641                           
 14642                           ;tcpv4.c: 90: tcbList = ptr;
 14643  005D4A  C017  F043         	movff	TCB_Insert@ptr,_tcbList
 14644  005D4E  C018  F044         	movff	TCB_Insert@ptr+1,_tcbList+1
 14645                           
 14646                           ;tcpv4.c: 91: ptr->prevTCB = (0);
 14647  005D52  EE20 F02E          	lfsr	2,46
 14648  005D56  D804               	call	PL707	;call to abstracted procedure
 14649  005D58  6ADE               	clrf	postinc2,c
 14650  005D5A  6ADD               	clrf	postdec2,c
 14651                           
 14652                           ;tcpv4.c: 92: tcbListSize ++;
 14653  005D5C  2A47               	incf	_tcbListSize,f,c
 14654  005D5E  0C00               	retlw	0	;funcret
 14655  005D60                     __end_of_TCB_Insert:
 14656                           	opt stack 0
 14657  005D60                     PL707:
 14658                           	opt stack 20
 14659  005D60  5017               	movf	TCB_Insert@ptr,w,c
 14660  005D62  26D9               	addwf	fsr2l,f,c
 14661  005D64  5018               	movf	TCB_Insert@ptr+1,w,c
 14662  005D66  22DA               	addwfc	fsr2h,f,c
 14663  005D68  0012               	return	
 14664  005D6A                     __end_ofPL707:
 14665                           	opt stack 0
 14666                           tosu	equ	0xFFF
 14667                           tosh	equ	0xFFE
 14668                           tosl	equ	0xFFD
 14669                           pclath	equ	0xFFA
 14670                           tblptru	equ	0xFF8
 14671                           tblptrh	equ	0xFF7
 14672                           tblptrl	equ	0xFF6
 14673                           tablat	equ	0xFF5
 14674                           prodh	equ	0xFF4
 14675                           prodl	equ	0xFF3
 14676                           intcon	equ	0xFF2
 14677                           indf0	equ	0xFEF
 14678                           postinc0	equ	0xFEE
 14679                           fsr0h	equ	0xFEA
 14680                           fsr0l	equ	0xFE9
 14681                           wreg	equ	0xFE8
 14682                           indf1	equ	0xFE7
 14683                           postinc1	equ	0xFE6
 14684                           postdec1	equ	0xFE5
 14685                           plusw1	equ	0xFE3
 14686                           fsr1h	equ	0xFE2
 14687                           fsr1l	equ	0xFE1
 14688                           bsr	equ	0xFE0
 14689                           indf2	equ	0xFDF
 14690                           postinc2	equ	0xFDE
 14691                           postdec2	equ	0xFDD
 14692                           plusw2	equ	0xFDB
 14693                           fsr2h	equ	0xFDA
 14694                           fsr2l	equ	0xFD9
 14695                           status	equ	0xFD8
 14696                           
 14697 ;; *************** function _TCP_SendDone *****************
 14698 ;; Defined at:
 14699 ;;		line 1347 in file "../../TCPIP Library/source/tcpv4.c"
 14700 ;; Parameters:    Size  Location     Type
 14701 ;;  tcbPtr          2   30[COMRAM] PTR struct .
 14702 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14703 ;; Auto vars:     Size  Location     Type
 14704 ;;  ret             1   32[COMRAM] unsigned char 
 14705 ;; Return value:  Size  Location     Type
 14706 ;;                  1    wreg      unsigned char 
 14707 ;; Registers used:
 14708 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14709 ;; Tracked objects:
 14710 ;;		On entry : C/1
 14711 ;;		On exit  : 0/0
 14712 ;;		Unchanged: 0/0
 14713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14717 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14718 ;;Total ram usage:        3 bytes
 14719 ;; Hardware stack levels used:    1
 14720 ;; Hardware stack levels required when called:    9
 14721 ;; This function calls:
 14722 ;;		_TCB_Check
 14723 ;; This function is called by:
 14724 ;;		_DEMO_TCP_EchoServer
 14725 ;; This function uses a non-reentrant model
 14726 ;;
 14727                           
 14728                           	psect	text72
 14729  0060A0                     __ptext72:
 14730                           	opt stack 0
 14731  0060A0                     _TCP_SendDone:
 14732                           	opt stack 20
 14733                           
 14734                           ;tcpv4.c: 1349: bool ret = 0;
 14735                           
 14736                           ;incstack = 0
 14737  0060A0  6A21               	clrf	TCP_SendDone@ret,c
 14738                           
 14739                           ;tcpv4.c: 1351: if(TCB_Check(tcbPtr))
 14740  0060A2  C01F  F017         	movff	TCP_SendDone@tcbPtr,TCB_Check@ptr
 14741  0060A6  C020  F018         	movff	TCP_SendDone@tcbPtr+1,TCB_Check@ptr+1
 14742  0060AA  ECEC  F02A         	call	_TCB_Check	;wreg free
 14743  0060AE  0900               	iorlw	0
 14744  0060B0  E00A               	bz	l1356
 14745                           
 14746                           ;tcpv4.c: 1352: {
 14747                           ;tcpv4.c: 1353: if (tcbPtr->txBufState == NO_BUFF)
 14748  0060B2  EE20 F029          	lfsr	2,41
 14749  0060B6  501F               	movf	TCP_SendDone@tcbPtr,w,c
 14750  0060B8  26D9               	addwf	fsr2l,f,c
 14751  0060BA  5020               	movf	TCP_SendDone@tcbPtr+1,w,c
 14752  0060BC  22DA               	addwfc	fsr2h,f,c
 14753  0060BE  50DF               	movf	indf2,w,c
 14754  0060C0  E102               	bnz	l1356
 14755                           
 14756                           ;tcpv4.c: 1354: {
 14757                           ;tcpv4.c: 1355: ret = 1;
 14758  0060C2  0E01               	movlw	1
 14759  0060C4  6E21               	movwf	TCP_SendDone@ret,c
 14760  0060C6                     l1356:
 14761                           
 14762                           ;tcpv4.c: 1356: }
 14763                           ;tcpv4.c: 1357: }
 14764                           ;tcpv4.c: 1358: return ret;
 14765  0060C6  5021               	movf	TCP_SendDone@ret,w,c
 14766  0060C8  0012               	return		;funcret
 14767  0060CA                     __end_of_TCP_SendDone:
 14768                           	opt stack 0
 14769                           tosu	equ	0xFFF
 14770                           tosh	equ	0xFFE
 14771                           tosl	equ	0xFFD
 14772                           pclath	equ	0xFFA
 14773                           tblptru	equ	0xFF8
 14774                           tblptrh	equ	0xFF7
 14775                           tblptrl	equ	0xFF6
 14776                           tablat	equ	0xFF5
 14777                           prodh	equ	0xFF4
 14778                           prodl	equ	0xFF3
 14779                           intcon	equ	0xFF2
 14780                           indf0	equ	0xFEF
 14781                           postinc0	equ	0xFEE
 14782                           fsr0h	equ	0xFEA
 14783                           fsr0l	equ	0xFE9
 14784                           wreg	equ	0xFE8
 14785                           indf1	equ	0xFE7
 14786                           postinc1	equ	0xFE6
 14787                           postdec1	equ	0xFE5
 14788                           plusw1	equ	0xFE3
 14789                           fsr1h	equ	0xFE2
 14790                           fsr1l	equ	0xFE1
 14791                           bsr	equ	0xFE0
 14792                           indf2	equ	0xFDF
 14793                           postinc2	equ	0xFDE
 14794                           postdec2	equ	0xFDD
 14795                           plusw2	equ	0xFDB
 14796                           fsr2h	equ	0xFDA
 14797                           fsr2l	equ	0xFD9
 14798                           status	equ	0xFD8
 14799                           
 14800 ;; *************** function _TCP_Send *****************
 14801 ;; Defined at:
 14802 ;;		line 1318 in file "../../TCPIP Library/source/tcpv4.c"
 14803 ;; Parameters:    Size  Location     Type
 14804 ;;  tcbPtr          2  142[BANK0 ] PTR struct .
 14805 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14806 ;;  data            2  144[BANK0 ] PTR unsigned char 
 14807 ;;		 -> DEMO_TCP_EchoServer@txdataPort7(20), 
 14808 ;;  dataLen         2  146[BANK0 ] unsigned int 
 14809 ;; Auto vars:     Size  Location     Type
 14810 ;;  ret             1    0        unsigned char 
 14811 ;; Return value:  Size  Location     Type
 14812 ;;                  1    wreg      unsigned char 
 14813 ;; Registers used:
 14814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14815 ;; Tracked objects:
 14816 ;;		On entry : F/0
 14817 ;;		On exit  : 0/0
 14818 ;;		Unchanged: 0/0
 14819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14820 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14821 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14823 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14824 ;;Total ram usage:        7 bytes
 14825 ;; Hardware stack levels used:    1
 14826 ;; Hardware stack levels required when called:   13
 14827 ;; This function calls:
 14828 ;;		_TCP_Snd
 14829 ;;		_TCP_SocketPoll
 14830 ;; This function is called by:
 14831 ;;		_DEMO_TCP_EchoServer
 14832 ;; This function uses a non-reentrant model
 14833 ;;
 14834                           
 14835                           	psect	text73
 14836  005094                     __ptext73:
 14837                           	opt stack 0
 14838  005094                     _TCP_Send:
 14839                           	opt stack 16
 14840                           
 14841                           ; BSR set to: 0
 14842                           ;tcpv4.c: 1322: if (TCP_SocketPoll(tcbPtr) == SOCKET_CONNECTED)
 14843                           
 14844                           ; BSR set to: 0
 14845                           
 14846                           ;incstack = 0
 14847  005094  C0EE  F01F         	movff	TCP_Send@tcbPtr,TCP_SocketPoll@socket_ptr
 14848  005098  C0EF  F020         	movff	TCP_Send@tcbPtr+1,TCP_SocketPoll@socket_ptr+1
 14849  00509C  ECB2  F030         	call	_TCP_SocketPoll	;wreg free
 14850  0050A0  0A03               	xorlw	3
 14851  0050A2  A4D8               	btfss	status,2,c
 14852  0050A4  0012               	return	
 14853                           
 14854                           ;tcpv4.c: 1323: {
 14855                           ;tcpv4.c: 1324: if (tcbPtr->txBufState == NO_BUFF)
 14856  0050A6  0100               	movlb	0	; () banked
 14857  0050A8  EE20 F029          	lfsr	2,41
 14858  0050AC  D839               	call	PL527	;call to abstracted procedure
 14859  0050AE  50DF               	movf	indf2,w,c
 14860  0050B0  A4D8               	btfss	status,2,c
 14861  0050B2  0012               	return	
 14862                           
 14863                           ; BSR set to: 0
 14864                           ;tcpv4.c: 1325: {
 14865                           ;tcpv4.c: 1326: if (data != (0))
 14866  0050B4  51F0               	movf	TCP_Send@data& (0+255),w,b
 14867  0050B6  11F1               	iorwf	(TCP_Send@data+1)& (0+255),w,b
 14868  0050B8  B4D8               	btfsc	status,2,c
 14869  0050BA  0012               	return	
 14870                           
 14871                           ; BSR set to: 0
 14872                           ;tcpv4.c: 1327: {
 14873                           ;tcpv4.c: 1328: tcbPtr->txBufferStart = data;
 14874  0050BC  EE20 F023          	lfsr	2,35
 14875  0050C0  D82F               	call	PL527	;call to abstracted procedure
 14876  0050C2  C0F0  FFDE         	movff	TCP_Send@data,postinc2
 14877  0050C6  C0F1  FFDD         	movff	TCP_Send@data+1,postdec2
 14878                           
 14879                           ; BSR set to: 0
 14880                           ;tcpv4.c: 1329: tcbPtr->txBufferPtr = tcbPtr->txBufferStart;
 14881  0050CA  EE20 F023          	lfsr	2,35
 14882  0050CE  D828               	call	PL527	;call to abstracted procedure
 14883  0050D0  EE10 F025          	lfsr	1,37
 14884  0050D4  51EE               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14885  0050D6  26E1               	addwf	fsr1l,f,c
 14886  0050D8  51EF               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14887  0050DA  D827               	call	PL675	;call to abstracted procedure
 14888                           
 14889                           ; BSR set to: 0
 14890                           ;tcpv4.c: 1330: tcbPtr->bytesToSend = dataLen;
 14891  0050DC  EE20 F027          	lfsr	2,39
 14892  0050E0  D81F               	call	PL527	;call to abstracted procedure
 14893  0050E2  C0F2  FFDE         	movff	TCP_Send@dataLen,postinc2
 14894  0050E6  C0F3  FFDD         	movff	TCP_Send@dataLen+1,postdec2
 14895                           
 14896                           ; BSR set to: 0
 14897                           ;tcpv4.c: 1331: tcbPtr->txBufState = TX_BUFF_IN_USE;
 14898  0050EA  EE20 F029          	lfsr	2,41
 14899  0050EE  D818               	call	PL527	;call to abstracted procedure
 14900  0050F0  0E02               	movlw	2
 14901  0050F2  6EDF               	movwf	indf2,c
 14902                           
 14903                           ; BSR set to: 0
 14904                           ;tcpv4.c: 1333: tcbPtr->timeoutReloadValue = ((unsigned long)1*2);
 14905  0050F4  EE20 F032          	lfsr	2,50
 14906  0050F8  D813               	call	PL527	;call to abstracted procedure
 14907  0050FA  0E02               	movlw	2
 14908  0050FC  6EDE               	movwf	postinc2,c
 14909  0050FE  6ADD               	clrf	postdec2,c
 14910                           
 14911                           ; BSR set to: 0
 14912                           ;tcpv4.c: 1334: tcbPtr->timeoutsCount = (5u);
 14913  005100  EE20 F034          	lfsr	2,52
 14914  005104  D80D               	call	PL527	;call to abstracted procedure
 14915  005106  0E05               	movlw	5
 14916  005108  6EDF               	movwf	indf2,c
 14917                           
 14918                           ; BSR set to: 0
 14919                           ;tcpv4.c: 1336: tcbPtr->flags = 0x10U;
 14920  00510A  EE20 F035          	lfsr	2,53
 14921  00510E  D808               	call	PL527	;call to abstracted procedure
 14922  005110  0E10               	movlw	16
 14923  005112  6EDF               	movwf	indf2,c
 14924                           
 14925                           ; BSR set to: 0
 14926                           ;tcpv4.c: 1338: TCP_Snd(tcbPtr);
 14927  005114  C0EE  F09F         	movff	TCP_Send@tcbPtr,TCP_Snd@tcbPtr
 14928  005118  C0EF  F0A0         	movff	TCP_Send@tcbPtr+1,TCP_Snd@tcbPtr+1
 14929  00511C  EFAC  F012         	goto	_TCP_Snd	;wreg free
 14930  005120                     __end_of_TCP_Send:
 14931                           	opt stack 0
 14932  005120                     PL527:
 14933                           	opt stack 16
 14934  005120  51EE               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14935  005122  26D9               	addwf	fsr2l,f,c
 14936  005124  51EF               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14937  005126  22DA               	addwfc	fsr2h,f,c
 14938  005128  0012               	return	
 14939  00512A                     __end_ofPL527:
 14940                           	opt stack 0
 14941  00512A                     PL675:
 14942                           	opt stack 20
 14943  00512A  22E2               	addwfc	fsr1h,f,c
 14944  00512C  CFDE FFE6          	movff	postinc2,postinc1
 14945  005130  CFDD FFE5          	movff	postdec2,postdec1
 14946  005134  0012               	return	
 14947  005136                     __end_ofPL675:
 14948                           	opt stack 0
 14949                           tosu	equ	0xFFF
 14950                           tosh	equ	0xFFE
 14951                           tosl	equ	0xFFD
 14952                           pclath	equ	0xFFA
 14953                           tblptru	equ	0xFF8
 14954                           tblptrh	equ	0xFF7
 14955                           tblptrl	equ	0xFF6
 14956                           tablat	equ	0xFF5
 14957                           prodh	equ	0xFF4
 14958                           prodl	equ	0xFF3
 14959                           intcon	equ	0xFF2
 14960                           indf0	equ	0xFEF
 14961                           postinc0	equ	0xFEE
 14962                           fsr0h	equ	0xFEA
 14963                           fsr0l	equ	0xFE9
 14964                           wreg	equ	0xFE8
 14965                           indf1	equ	0xFE7
 14966                           postinc1	equ	0xFE6
 14967                           postdec1	equ	0xFE5
 14968                           plusw1	equ	0xFE3
 14969                           fsr1h	equ	0xFE2
 14970                           fsr1l	equ	0xFE1
 14971                           bsr	equ	0xFE0
 14972                           indf2	equ	0xFDF
 14973                           postinc2	equ	0xFDE
 14974                           postdec2	equ	0xFDD
 14975                           plusw2	equ	0xFDB
 14976                           fsr2h	equ	0xFDA
 14977                           fsr2l	equ	0xFD9
 14978                           status	equ	0xFD8
 14979                           
 14980 ;; *************** function _TCP_SocketPoll *****************
 14981 ;; Defined at:
 14982 ;;		line 1220 in file "../../TCPIP Library/source/tcpv4.c"
 14983 ;; Parameters:    Size  Location     Type
 14984 ;;  socket_ptr      2   30[COMRAM] PTR struct .
 14985 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14986 ;; Auto vars:     Size  Location     Type
 14987 ;;  tmpSocketSta    1   32[COMRAM] enum E667
 14988 ;; Return value:  Size  Location     Type
 14989 ;;                  1    wreg      enum E667
 14990 ;; Registers used:
 14991 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14992 ;; Tracked objects:
 14993 ;;		On entry : D/2
 14994 ;;		On exit  : 0/0
 14995 ;;		Unchanged: 0/0
 14996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15000 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15001 ;;Total ram usage:        3 bytes
 15002 ;; Hardware stack levels used:    1
 15003 ;; Hardware stack levels required when called:    9
 15004 ;; This function calls:
 15005 ;;		_TCB_Check
 15006 ;; This function is called by:
 15007 ;;		_TCP_Send
 15008 ;;		_DEMO_TCP_EchoServer
 15009 ;; This function uses a non-reentrant model
 15010 ;;
 15011                           
 15012                           	psect	text74
 15013  006164                     __ptext74:
 15014                           	opt stack 0
 15015  006164                     _TCP_SocketPoll:
 15016                           	opt stack 20
 15017                           
 15018                           ;tcpv4.c: 1222: socketState_t tmpSocketState;
 15019                           ;tcpv4.c: 1224: tmpSocketState = NOT_A_SOCKET;
 15020                           
 15021                           ;incstack = 0
 15022  006164  6A21               	clrf	TCP_SocketPoll@tmpSocketState,c
 15023                           
 15024                           ;tcpv4.c: 1226: if(TCB_Check(socket_ptr))
 15025  006166  C01F  F017         	movff	TCP_SocketPoll@socket_ptr,TCB_Check@ptr
 15026  00616A  C020  F018         	movff	TCP_SocketPoll@socket_ptr+1,TCB_Check@ptr+1
 15027  00616E  ECEC  F02A         	call	_TCB_Check	;wreg free
 15028  006172  0900               	iorlw	0
 15029  006174  E008               	bz	l9276
 15030                           
 15031                           ;tcpv4.c: 1227: {
 15032                           ;tcpv4.c: 1228: tmpSocketState = socket_ptr->socketState;
 15033  006176  EE20 F036          	lfsr	2,54
 15034  00617A  501F               	movf	TCP_SocketPoll@socket_ptr,w,c
 15035  00617C  26D9               	addwf	fsr2l,f,c
 15036  00617E  5020               	movf	TCP_SocketPoll@socket_ptr+1,w,c
 15037  006180  22DA               	addwfc	fsr2h,f,c
 15038  006182  50DF               	movf	indf2,w,c
 15039  006184  6E21               	movwf	TCP_SocketPoll@tmpSocketState,c
 15040  006186                     l9276:
 15041                           
 15042                           ;tcpv4.c: 1229: }
 15043                           ;tcpv4.c: 1231: return tmpSocketState;
 15044  006186  5021               	movf	TCP_SocketPoll@tmpSocketState,w,c
 15045  006188  0012               	return		;funcret
 15046  00618A                     __end_of_TCP_SocketPoll:
 15047                           	opt stack 0
 15048                           tosu	equ	0xFFF
 15049                           tosh	equ	0xFFE
 15050                           tosl	equ	0xFFD
 15051                           pclath	equ	0xFFA
 15052                           tblptru	equ	0xFF8
 15053                           tblptrh	equ	0xFF7
 15054                           tblptrl	equ	0xFF6
 15055                           tablat	equ	0xFF5
 15056                           prodh	equ	0xFF4
 15057                           prodl	equ	0xFF3
 15058                           intcon	equ	0xFF2
 15059                           indf0	equ	0xFEF
 15060                           postinc0	equ	0xFEE
 15061                           fsr0h	equ	0xFEA
 15062                           fsr0l	equ	0xFE9
 15063                           wreg	equ	0xFE8
 15064                           indf1	equ	0xFE7
 15065                           postinc1	equ	0xFE6
 15066                           postdec1	equ	0xFE5
 15067                           plusw1	equ	0xFE3
 15068                           fsr1h	equ	0xFE2
 15069                           fsr1l	equ	0xFE1
 15070                           bsr	equ	0xFE0
 15071                           indf2	equ	0xFDF
 15072                           postinc2	equ	0xFDE
 15073                           postdec2	equ	0xFDD
 15074                           plusw2	equ	0xFDB
 15075                           fsr2h	equ	0xFDA
 15076                           fsr2l	equ	0xFD9
 15077                           status	equ	0xFD8
 15078                           
 15079 ;; *************** function _TCP_Listen *****************
 15080 ;; Defined at:
 15081 ;;		line 1250 in file "../../TCPIP Library/source/tcpv4.c"
 15082 ;; Parameters:    Size  Location     Type
 15083 ;;  tcbPtr          2   17[BANK1 ] PTR struct .
 15084 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 15085 ;; Auto vars:     Size  Location     Type
 15086 ;;  ret             1    0        unsigned char 
 15087 ;; Return value:  Size  Location     Type
 15088 ;;                  1    wreg      unsigned char 
 15089 ;; Registers used:
 15090 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15091 ;; Tracked objects:
 15092 ;;		On entry : F/1
 15093 ;;		On exit  : 0/0
 15094 ;;		Unchanged: 0/0
 15095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15096 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15097 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15098 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15099 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15100 ;;Total ram usage:        5 bytes
 15101 ;; Hardware stack levels used:    1
 15102 ;; Hardware stack levels required when called:   15
 15103 ;; This function calls:
 15104 ;;		_TCB_Check
 15105 ;;		_TCP_FiniteStateMachine
 15106 ;; This function is called by:
 15107 ;;		_DEMO_TCP_EchoServer
 15108 ;; This function uses a non-reentrant model
 15109 ;;
 15110                           
 15111                           	psect	text75
 15112  005656                     __ptext75:
 15113                           	opt stack 0
 15114  005656                     _TCP_Listen:
 15115                           	opt stack 14
 15116                           
 15117                           ; BSR set to: 1
 15118                           ;tcpv4.c: 1254: ;
 15119                           ;tcpv4.c: 1256: if (TCB_Check(tcbPtr))
 15120                           
 15121                           ; BSR set to: 1
 15122                           
 15123                           ;incstack = 0
 15124  005656  C111  F017         	movff	TCP_Listen@tcbPtr,TCB_Check@ptr
 15125  00565A  C112  F018         	movff	TCP_Listen@tcbPtr+1,TCB_Check@ptr+1
 15126  00565E  ECEC  F02A         	call	_TCB_Check	;wreg free
 15127  005662  0900               	iorlw	0
 15128  005664  B4D8               	btfsc	status,2,c
 15129  005666  0012               	return	
 15130                           
 15131                           ;tcpv4.c: 1257: {
 15132                           ;tcpv4.c: 1258: tcbPtr->connectionEvent = PASIVE_OPEN;
 15133  005668  0101               	movlb	1	; () banked
 15134  00566A  EE20 F02B          	lfsr	2,43
 15135  00566E  D825               	call	PL659	;call to abstracted procedure
 15136  005670  0E02               	movlw	2
 15137  005672  6EDF               	movwf	indf2,c
 15138                           
 15139                           ;tcpv4.c: 1259: tcbPtr->socketState = SOCKET_IN_PROGRESS;
 15140  005674  EE20 F036          	lfsr	2,54
 15141  005678  D820               	call	PL659	;call to abstracted procedure
 15142  00567A  0E02               	movlw	2
 15143  00567C  6EDF               	movwf	indf2,c
 15144                           
 15145                           ;tcpv4.c: 1260: tcbPtr->localSeqno = nextSequenceNumber;
 15146  00567E  EE20 F010          	lfsr	2,16
 15147  005682  D81B               	call	PL659	;call to abstracted procedure
 15148  005684  C220  FFDE         	movff	_nextSequenceNumber,postinc2
 15149  005688  C221  FFDE         	movff	_nextSequenceNumber+1,postinc2
 15150  00568C  C222  FFDE         	movff	_nextSequenceNumber+2,postinc2
 15151  005690  C223  FFDE         	movff	_nextSequenceNumber+3,postinc2
 15152                           
 15153                           ; BSR set to: 1
 15154                           ;tcpv4.c: 1261: currentTCB = tcbPtr;
 15155  005694  C111  F03F         	movff	TCP_Listen@tcbPtr,_currentTCB
 15156  005698  C112  F040         	movff	TCP_Listen@tcbPtr+1,_currentTCB+1
 15157                           
 15158                           ; BSR set to: 1
 15159                           ;tcpv4.c: 1262: if (tcbPtr->localPort == 0)
 15160  00569C  D813               	call	PL709	;call to abstracted procedure
 15161  00569E  50DE               	movf	postinc2,w,c
 15162  0056A0  10DE               	iorwf	postinc2,w,c
 15163  0056A2  E002 EF5D  F008    	bnz	_TCP_FiniteStateMachine
 15164                           
 15165                           ; BSR set to: 1
 15166                           ;tcpv4.c: 1263: {
 15167                           ;tcpv4.c: 1264: tcbPtr->localPort = nextAvailablePort++;
 15168  0056A8  D80D               	call	PL709	;call to abstracted procedure
 15169  0056AA  C1D0  FFDE         	movff	_nextAvailablePort,postinc2
 15170  0056AE  C1D1  FFDD         	movff	_nextAvailablePort+1,postdec2
 15171                           
 15172                           ; BSR set to: 1
 15173  0056B2  4BD0               	infsnz	_nextAvailablePort& (0+255),f,b
 15174  0056B4  2BD1               	incf	(_nextAvailablePort+1)& (0+255),f,b
 15175                           
 15176                           ; BSR set to: 1
 15177  0056B6  EF5D  F008         	goto	_TCP_FiniteStateMachine	;wreg free
 15178  0056BA                     __end_of_TCP_Listen:
 15179                           	opt stack 0
 15180  0056BA                     PL659:
 15181                           	opt stack 14
 15182  0056BA  5111               	movf	TCP_Listen@tcbPtr& (0+255),w,b
 15183  0056BC  26D9               	addwf	fsr2l,f,c
 15184  0056BE  5112               	movf	(TCP_Listen@tcbPtr+1)& (0+255),w,b
 15185  0056C0  22DA               	addwfc	fsr2h,f,c
 15186  0056C2  0012               	return	
 15187  0056C4                     __end_ofPL659:
 15188                           	opt stack 0
 15189  0056C4                     PL709:
 15190                           	opt stack 14
 15191  0056C4  C111  FFD9         	movff	TCP_Listen@tcbPtr,fsr2l
 15192  0056C8  C112  FFDA         	movff	TCP_Listen@tcbPtr+1,fsr2h
 15193  0056CC  0012               	return	
 15194  0056CE                     __end_ofPL709:
 15195                           	opt stack 0
 15196                           tosu	equ	0xFFF
 15197                           tosh	equ	0xFFE
 15198                           tosl	equ	0xFFD
 15199                           pclath	equ	0xFFA
 15200                           tblptru	equ	0xFF8
 15201                           tblptrh	equ	0xFF7
 15202                           tblptrl	equ	0xFF6
 15203                           tablat	equ	0xFF5
 15204                           prodh	equ	0xFF4
 15205                           prodl	equ	0xFF3
 15206                           intcon	equ	0xFF2
 15207                           indf0	equ	0xFEF
 15208                           postinc0	equ	0xFEE
 15209                           fsr0h	equ	0xFEA
 15210                           fsr0l	equ	0xFE9
 15211                           wreg	equ	0xFE8
 15212                           indf1	equ	0xFE7
 15213                           postinc1	equ	0xFE6
 15214                           postdec1	equ	0xFE5
 15215                           plusw1	equ	0xFE3
 15216                           fsr1h	equ	0xFE2
 15217                           fsr1l	equ	0xFE1
 15218                           bsr	equ	0xFE0
 15219                           indf2	equ	0xFDF
 15220                           postinc2	equ	0xFDE
 15221                           postdec2	equ	0xFDD
 15222                           plusw2	equ	0xFDB
 15223                           fsr2h	equ	0xFDA
 15224                           fsr2l	equ	0xFD9
 15225                           status	equ	0xFD8
 15226                           
 15227 ;; *************** function _TCP_FiniteStateMachine *****************
 15228 ;; Defined at:
 15229 ;;		line 602 in file "../../TCPIP Library/source/tcpv4.c"
 15230 ;; Parameters:    Size  Location     Type
 15231 ;;		None
 15232 ;; Auto vars:     Size  Location     Type
 15233 ;;  notAckBytes     2   13[BANK1 ] unsigned int 
 15234 ;;  nextState       1   16[BANK1 ] enum E638
 15235 ;;  event           1   15[BANK1 ] enum E651
 15236 ;;  ret             1   12[BANK1 ] unsigned char 
 15237 ;; Return value:  Size  Location     Type
 15238 ;;                  1    wreg      unsigned char 
 15239 ;; Registers used:
 15240 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15241 ;; Tracked objects:
 15242 ;;		On entry : 0/1
 15243 ;;		On exit  : F/1
 15244 ;;		Unchanged: 0/0
 15245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15247 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15248 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15249 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15250 ;;Total ram usage:       17 bytes
 15251 ;; Hardware stack levels used:    1
 15252 ;; Hardware stack levels required when called:   14
 15253 ;; This function calls:
 15254 ;;		_TCB_Reset
 15255 ;;		_TCP_PayloadSave
 15256 ;;		_TCP_Snd
 15257 ;; This function is called by:
 15258 ;;		_TCP_Recv
 15259 ;;		_TCP_Listen
 15260 ;;		_TCP_Update
 15261 ;; This function uses a non-reentrant model
 15262 ;;
 15263                           
 15264                           	psect	text76
 15265  0010BA                     __ptext76:
 15266                           	opt stack 0
 15267  0010BA                     _TCP_FiniteStateMachine:
 15268                           	opt stack 14
 15269                           
 15270                           ;tcpv4.c: 604: uint16_t notAckBytes;
 15271                           ;tcpv4.c: 605: bool ret = 0;
 15272                           
 15273                           ;incstack = 0
 15274  0010BA  0101               	movlb	1	; () banked
 15275  0010BC  6B0C               	clrf	TCP_FiniteStateMachine@ret& (0+255),b
 15276                           
 15277                           ; BSR set to: 1
 15278                           ;tcpv4.c: 607: tcp_fsm_states_t nextState = currentTCB->fsmState;
 15279  0010BE  0E2A               	movlw	42
 15280  0010C0  243F               	addwf	_currentTCB,w,c
 15281  0010C2  EC5A  F011         	call	PL387	;call to abstracted procedure
 15282  0010C6  64F7               	cpfsgt	tblptrh,c
 15283  0010C8  D003               	bra	u12377
 15284  0010CA  0008               	tblrd		*
 15285  0010CC  50F5               	movf	tablat,w,c
 15286  0010CE  D003               	bra	u12370
 15287  0010D0                     u12377:
 15288  0010D0  EC66  F011         	call	PL389	;call to abstracted procedure
 15289  0010D4  50EF               	movf	indf0,w,c
 15290  0010D6                     u12370:
 15291  0010D6  0101               	movlb	1	; () banked
 15292  0010D8  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15293                           
 15294                           ;tcpv4.c: 608: tcpEvent_t event = currentTCB->connectionEvent;
 15295  0010DA  0E2B               	movlw	43
 15296  0010DC  243F               	addwf	_currentTCB,w,c
 15297  0010DE  EC5A  F011         	call	PL387	;call to abstracted procedure
 15298  0010E2  64F7               	cpfsgt	tblptrh,c
 15299  0010E4  D003               	bra	u12387
 15300  0010E6  0008               	tblrd		*
 15301  0010E8  50F5               	movf	tablat,w,c
 15302  0010EA  D003               	bra	u12380
 15303  0010EC                     u12387:
 15304  0010EC  EC66  F011         	call	PL389	;call to abstracted procedure
 15305  0010F0  50EF               	movf	indf0,w,c
 15306  0010F2                     u12380:
 15307  0010F2  0101               	movlb	1	; () banked
 15308  0010F4  6F0F               	movwf	TCP_FiniteStateMachine@event& (0+255),b
 15309                           
 15310                           ;tcpv4.c: 610: switch (currentTCB->fsmState)
 15311  0010F6  EF12  F011         	goto	l8830
 15312  0010FA                     l8492:
 15313                           
 15314                           ; BSR set to: 1
 15315                           ;tcpv4.c: 616: ;
 15316                           ;tcpv4.c: 619: currentTCB->destIP = receivedRemoteAddress;
 15317  0010FA  0E02               	movlw	2
 15318  0010FC  243F               	addwf	_currentTCB,w,c
 15319  0010FE  EC5A  F011         	call	PL387	;call to abstracted procedure
 15320  001102  64F7               	cpfsgt	tblptrh,c
 15321  001104  D00D               	bra	u12397
 15322  001106  C03B  FFF5         	movff	_receivedRemoteAddress,tablat
 15323  00110A  000D               	tblwt		*+
 15324  00110C  C03C  FFF5         	movff	_receivedRemoteAddress+1,tablat
 15325  001110  000D               	tblwt		*+
 15326  001112  C03D  FFF5         	movff	_receivedRemoteAddress+2,tablat
 15327  001116  000D               	tblwt		*+
 15328  001118  C03E  FFF5         	movff	_receivedRemoteAddress+3,tablat
 15329  00111C  000C               	tblwt		*
 15330  00111E  D00A               	bra	u12390
 15331  001120                     u12397:
 15332  001120  EC66  F011         	call	PL389	;call to abstracted procedure
 15333  001124  C03B  FFEE         	movff	_receivedRemoteAddress,postinc0
 15334  001128  C03C  FFEE         	movff	_receivedRemoteAddress+1,postinc0
 15335  00112C  C03D  FFEE         	movff	_receivedRemoteAddress+2,postinc0
 15336  001130  C03E  FFEF         	movff	_receivedRemoteAddress+3,indf0
 15337  001134                     u12390:
 15338                           
 15339                           ;tcpv4.c: 620: currentTCB->destPort = tcpHeader.sourcePort;
 15340  001134  EC18  F012         	call	PL447	;call to abstracted procedure
 15341  001138  EC5A  F011         	call	PL387	;call to abstracted procedure
 15342  00113C  64F7               	cpfsgt	tblptrh,c
 15343  00113E  D007               	bra	u12407
 15344  001140  C1D4  FFF5         	movff	_tcpHeader,tablat
 15345  001144  000D               	tblwt		*+
 15346  001146  C1D5  FFF5         	movff	_tcpHeader+1,tablat
 15347  00114A  000C               	tblwt		*
 15348  00114C  D006               	bra	u12400
 15349  00114E                     u12407:
 15350  00114E  EC66  F011         	call	PL389	;call to abstracted procedure
 15351  001152  C1D4  FFEE         	movff	_tcpHeader,postinc0
 15352  001156  C1D5  FFEF         	movff	_tcpHeader+1,indf0
 15353  00115A                     u12400:
 15354                           
 15355                           ;tcpv4.c: 623: currentTCB->localLastAck = 0;
 15356  00115A  EC4F  F012         	call	PL473	;call to abstracted procedure
 15357  00115E  EC5A  F011         	call	PL387	;call to abstracted procedure
 15358  001162  64F7               	cpfsgt	tblptrh,c
 15359  001164  D007               	bra	u12417
 15360  001166  6AF5               	clrf	tablat,c
 15361  001168  000D               	tblwt		*+
 15362  00116A  6AF5               	clrf	tablat,c
 15363  00116C  000D               	tblwt		*+
 15364  00116E  ECD2  F011         	call	PL423	;call to abstracted procedure
 15365  001172  D004               	bra	u12410
 15366  001174                     u12417:
 15367  001174  EC66  F011         	call	PL389	;call to abstracted procedure
 15368  001178  EC46  F012         	call	PL467	;call to abstracted procedure
 15369  00117C                     u12410:
 15370                           
 15371                           ;tcpv4.c: 625: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 15372  00117C  ECCE  F011         	call	PL419	;call to abstracted procedure
 15373  001180  EC5A  F011         	call	PL387	;call to abstracted procedure
 15374  001184  64F7               	cpfsgt	tblptrh,c
 15375  001186  D003               	bra	u12427
 15376  001188  ECF1  F011         	call	PL439	;call to abstracted procedure
 15377  00118C  D004               	bra	u12420
 15378  00118E                     u12427:
 15379  00118E  EC66  F011         	call	PL389	;call to abstracted procedure
 15380  001192  EC5C  F012         	call	PL477	;call to abstracted procedure
 15381  001196                     u12420:
 15382                           
 15383                           ;tcpv4.c: 626: currentTCB->remoteAck = currentTCB->remoteSeqno + 1;
 15384  001196  ECCE  F011         	call	PL419	;call to abstracted procedure
 15385  00119A  EC5A  F011         	call	PL387	;call to abstracted procedure
 15386  00119E  64F7               	cpfsgt	tblptrh,c
 15387  0011A0  D003               	bra	u12437
 15388  0011A2  EC6F  F011         	call	PL395	;call to abstracted procedure
 15389  0011A6  D004               	bra	u12430
 15390  0011A8                     u12437:
 15391  0011A8  EC66  F011         	call	PL389	;call to abstracted procedure
 15392  0011AC  EC90  F011         	call	PL403	;call to abstracted procedure
 15393  0011B0                     u12430:
 15394  0011B0  EC82  F011         	call	PL401	;call to abstracted procedure
 15395  0011B4  0E0C               	movlw	12
 15396  0011B6  EC0B  F012         	call	PL443	;call to abstracted procedure
 15397  0011BA  64F7               	cpfsgt	tblptrh,c
 15398  0011BC  D003               	bra	u12447
 15399  0011BE  ECFE  F011         	call	PL441	;call to abstracted procedure
 15400  0011C2  D004               	bra	u12440
 15401  0011C4                     u12447:
 15402  0011C4  EC66  F011         	call	PL389	;call to abstracted procedure
 15403  0011C8  EC53  F012         	call	PL475	;call to abstracted procedure
 15404  0011CC                     u12440:
 15405                           
 15406                           ;tcpv4.c: 629: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 15407  0011CC  EC99  F011         	call	PL405	;call to abstracted procedure
 15408  0011D0  64F7               	cpfsgt	tblptrh,c
 15409  0011D2  D003               	bra	u12457
 15410  0011D4  EC20  F012         	call	PL453	;call to abstracted procedure
 15411  0011D8  D004               	bra	u12450
 15412  0011DA                     u12457:
 15413  0011DA  EC66  F011         	call	PL389	;call to abstracted procedure
 15414  0011DE  EC77  F012         	call	PL501	;call to abstracted procedure
 15415  0011E2                     u12450:
 15416                           
 15417                           ;tcpv4.c: 630: currentTCB->mss = tcpMss;
 15418  0011E2  ECCA  F011         	call	PL417	;call to abstracted procedure
 15419  0011E6  EC5A  F011         	call	PL387	;call to abstracted procedure
 15420  0011EA  64F7               	cpfsgt	tblptrh,c
 15421  0011EC  D003               	bra	u12467
 15422  0011EE  EC88  F012         	call	PL537	;call to abstracted procedure
 15423  0011F2  D004               	bra	u12460
 15424  0011F4                     u12467:
 15425  0011F4  EC66  F011         	call	PL389	;call to abstracted procedure
 15426  0011F8  EC93  F012         	call	PL627	;call to abstracted procedure
 15427  0011FC                     u12460:
 15428                           
 15429                           ;tcpv4.c: 633: currentTCB->flags = 0x02U | 0x10U;
 15430  0011FC  EC6B  F011         	call	PL393	;call to abstracted procedure
 15431  001200  EC5A  F011         	call	PL387	;call to abstracted procedure
 15432  001204  64F7               	cpfsgt	tblptrh,c
 15433  001206  D004               	bra	u12477
 15434  001208  0E12               	movlw	18
 15435  00120A  6EF5               	movwf	tablat,c
 15436  00120C  000C               	tblwt		*
 15437  00120E  D004               	bra	u12470
 15438  001210                     u12477:
 15439  001210  EC66  F011         	call	PL389	;call to abstracted procedure
 15440  001214  0E12               	movlw	18
 15441  001216  6EEF               	movwf	indf0,c
 15442  001218                     u12470:
 15443                           
 15444                           ;tcpv4.c: 634: currentTCB->timeout = ((unsigned long)1*2);
 15445  001218  ECED  F011         	call	PL431	;call to abstracted procedure
 15446  00121C  EC5A  F011         	call	PL387	;call to abstracted procedure
 15447  001220  64F7               	cpfsgt	tblptrh,c
 15448  001222  D003               	bra	u12487
 15449  001224  EC3B  F012         	call	PL459	;call to abstracted procedure
 15450  001228  D004               	bra	u12480
 15451  00122A                     u12487:
 15452  00122A  EC66  F011         	call	PL389	;call to abstracted procedure
 15453  00122E  EC8F  F012         	call	PL611	;call to abstracted procedure
 15454  001232                     u12480:
 15455                           
 15456                           ;tcpv4.c: 635: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 15457  001232  ECE9  F011         	call	PL429	;call to abstracted procedure
 15458  001236  EC5A  F011         	call	PL387	;call to abstracted procedure
 15459  00123A  64F7               	cpfsgt	tblptrh,c
 15460  00123C  D003               	bra	u12497
 15461  00123E  EC3B  F012         	call	PL459	;call to abstracted procedure
 15462  001242  D004               	bra	u12490
 15463  001244                     u12497:
 15464  001244  EC66  F011         	call	PL389	;call to abstracted procedure
 15465  001248  EC8F  F012         	call	PL611	;call to abstracted procedure
 15466  00124C                     u12490:
 15467                           
 15468                           ;tcpv4.c: 636: currentTCB->timeoutsCount = (3u);
 15469  00124C  ECC6  F011         	call	PL415	;call to abstracted procedure
 15470  001250  EC5A  F011         	call	PL387	;call to abstracted procedure
 15471  001254  64F7               	cpfsgt	tblptrh,c
 15472  001256  D004               	bra	u12507
 15473  001258  0E03               	movlw	3
 15474  00125A  6EF5               	movwf	tablat,c
 15475  00125C  000C               	tblwt		*
 15476  00125E  D004               	bra	u12500
 15477  001260                     u12507:
 15478  001260  EC66  F011         	call	PL389	;call to abstracted procedure
 15479  001264  0E03               	movlw	3
 15480  001266  6EEF               	movwf	indf0,c
 15481  001268                     u12500:
 15482  001268                     l8506:
 15483                           
 15484                           ;tcpv4.c: 638: TCP_Snd(currentTCB);
 15485  001268  EC41  F012         	call	PL465	;call to abstracted procedure
 15486  00126C  ECAC  F012         	call	_TCP_Snd	;wreg free
 15487                           
 15488                           ; BSR set to: 0
 15489                           ;tcpv4.c: 639: nextState = SYN_RECEIVED;
 15490  001270  0E03               	movlw	3
 15491  001272  EF19  F010         	goto	L14
 15492  001276                     l1194:
 15493                           
 15494                           ;tcpv4.c: 642: ;
 15495                           ;tcpv4.c: 643: nextState = CLOSE;
 15496  001276  0101               	movlb	1	; () banked
 15497  001278  6B10               	clrf	TCP_FiniteStateMachine@nextState& (0+255),b
 15498                           
 15499                           ; BSR set to: 1
 15500                           ;tcpv4.c: 644: TCB_Reset(currentTCB);
 15501  00127A  C03F  F017         	movff	_currentTCB,TCB_Reset@tcbPtr
 15502  00127E  C040  F018         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 15503  001282  ECC2  F021         	call	_TCB_Reset	;wreg free
 15504                           
 15505                           ;tcpv4.c: 645: break;
 15506  001286  EF3D  F011         	goto	l8832
 15507  00128A                     l8514:
 15508  00128A  0101               	movlb	1	; () banked
 15509  00128C  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 15510                           
 15511                           ; Switch size 1, requested type "space"
 15512                           ; Number of cases is 2, Range of values is 0 to 3
 15513                           ; switch strategies available:
 15514                           ; Name         Instructions Cycles
 15515                           ; simple_byte            7     4 (average)
 15516                           ;	Chosen strategy is simple_byte
 15517  00128E  E0F3               	bz	l1194
 15518  001290  0A03               	xorlw	3	; case 3
 15519  001292  E101 D732          	bz	l8492
 15520                           
 15521                           ;tcpv4.c: 650: break;
 15522  001296  EF3D  F011         	goto	l8832
 15523  00129A                     l8516:
 15524                           
 15525                           ; BSR set to: 1
 15526                           ;tcpv4.c: 655: ;
 15527                           ;tcpv4.c: 657: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 15528  00129A  0E08               	movlw	8
 15529  00129C  243F               	addwf	_currentTCB,w,c
 15530  00129E  EC5A  F011         	call	PL387	;call to abstracted procedure
 15531  0012A2  64F7               	cpfsgt	tblptrh,c
 15532  0012A4  D003               	bra	u12517
 15533  0012A6  ECF1  F011         	call	PL439	;call to abstracted procedure
 15534  0012AA  D004               	bra	u12510
 15535  0012AC                     u12517:
 15536  0012AC  EC66  F011         	call	PL389	;call to abstracted procedure
 15537  0012B0  EC5C  F012         	call	PL477	;call to abstracted procedure
 15538  0012B4                     u12510:
 15539                           
 15540                           ;tcpv4.c: 658: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 15541  0012B4  ECD7  F011         	call	PL425	;call to abstracted procedure
 15542  0012B8  ECB9  F011         	call	PL407	;call to abstracted procedure
 15543  0012BC  64F7               	cpfsgt	tblptrh,c
 15544  0012BE  D005               	bra	u12527
 15545  0012C0  EC27  F012         	call	PL455	;call to abstracted procedure
 15546  0012C4  EC20  F012         	call	PL453	;call to abstracted procedure
 15547  0012C8  D004               	bra	u12520
 15548  0012CA                     u12527:
 15549  0012CA  EC66  F011         	call	PL389	;call to abstracted procedure
 15550  0012CE  EC65  F012         	call	PL487	;call to abstracted procedure
 15551  0012D2                     u12520:
 15552                           
 15553                           ;tcpv4.c: 661: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 15554  0012D2  EC99  F011         	call	PL405	;call to abstracted procedure
 15555  0012D6  64F7               	cpfsgt	tblptrh,c
 15556  0012D8  D003               	bra	u12537
 15557  0012DA  EC20  F012         	call	PL453	;call to abstracted procedure
 15558  0012DE  D004               	bra	u12530
 15559  0012E0                     u12537:
 15560  0012E0  EC66  F011         	call	PL389	;call to abstracted procedure
 15561  0012E4  EC77  F012         	call	PL501	;call to abstracted procedure
 15562  0012E8                     u12530:
 15563                           
 15564                           ;tcpv4.c: 662: currentTCB->mss = tcpMss;
 15565  0012E8  ECCA  F011         	call	PL417	;call to abstracted procedure
 15566  0012EC  EC5A  F011         	call	PL387	;call to abstracted procedure
 15567  0012F0  64F7               	cpfsgt	tblptrh,c
 15568  0012F2  D003               	bra	u12547
 15569  0012F4  EC88  F012         	call	PL537	;call to abstracted procedure
 15570  0012F8  D004               	bra	u12540
 15571  0012FA                     u12547:
 15572  0012FA  EC66  F011         	call	PL389	;call to abstracted procedure
 15573  0012FE  EC93  F012         	call	PL627	;call to abstracted procedure
 15574  001302                     u12540:
 15575                           
 15576                           ;tcpv4.c: 665: currentTCB->timeout = ((unsigned long)1*2);
 15577  001302  ECED  F011         	call	PL431	;call to abstracted procedure
 15578  001306  EC5A  F011         	call	PL387	;call to abstracted procedure
 15579  00130A  64F7               	cpfsgt	tblptrh,c
 15580  00130C  D003               	bra	u12557
 15581  00130E  EC3B  F012         	call	PL459	;call to abstracted procedure
 15582  001312  D004               	bra	u12550
 15583  001314                     u12557:
 15584  001314  EC66  F011         	call	PL389	;call to abstracted procedure
 15585  001318  EC8F  F012         	call	PL611	;call to abstracted procedure
 15586  00131C                     u12550:
 15587                           
 15588                           ;tcpv4.c: 666: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 15589  00131C  ECE9  F011         	call	PL429	;call to abstracted procedure
 15590  001320  EC5A  F011         	call	PL387	;call to abstracted procedure
 15591  001324  64F7               	cpfsgt	tblptrh,c
 15592  001326  D003               	bra	u12567
 15593  001328  EC3B  F012         	call	PL459	;call to abstracted procedure
 15594  00132C  D004               	bra	u12560
 15595  00132E                     u12567:
 15596  00132E  EC66  F011         	call	PL389	;call to abstracted procedure
 15597  001332  EC8F  F012         	call	PL611	;call to abstracted procedure
 15598  001336                     u12560:
 15599                           
 15600                           ;tcpv4.c: 667: currentTCB->timeoutsCount = (3u);
 15601  001336  ECC6  F011         	call	PL415	;call to abstracted procedure
 15602  00133A  EC5A  F011         	call	PL387	;call to abstracted procedure
 15603  00133E  64F7               	cpfsgt	tblptrh,c
 15604  001340  D004               	bra	u12577
 15605  001342  0E03               	movlw	3
 15606  001344  6EF5               	movwf	tablat,c
 15607  001346  000C               	tblwt		*
 15608  001348  D004               	bra	u12570
 15609  00134A                     u12577:
 15610  00134A  EC66  F011         	call	PL389	;call to abstracted procedure
 15611  00134E  0E03               	movlw	3
 15612  001350  6EEF               	movwf	indf0,c
 15613  001352                     u12570:
 15614                           
 15615                           ;tcpv4.c: 668: currentTCB->flags = 0x02U | 0x10U;
 15616  001352  EC6B  F011         	call	PL393	;call to abstracted procedure
 15617  001356  EC5A  F011         	call	PL387	;call to abstracted procedure
 15618  00135A  64F7               	cpfsgt	tblptrh,c
 15619  00135C  D004               	bra	u12587
 15620  00135E  0E12               	movlw	18
 15621  001360  6EF5               	movwf	tablat,c
 15622  001362  000C               	tblwt		*
 15623  001364  D004               	bra	u12580
 15624  001366                     u12587:
 15625  001366  EC66  F011         	call	PL389	;call to abstracted procedure
 15626  00136A  0E12               	movlw	18
 15627  00136C  6EEF               	movwf	indf0,c
 15628  00136E                     u12580:
 15629  00136E  D77C               	goto	l8506
 15630  001370                     l8534:
 15631                           
 15632                           ; BSR set to: 1
 15633                           ;tcpv4.c: 676: ;
 15634                           ;tcpv4.c: 678: currentTCB->timeout = 0;
 15635  001370  0E30               	movlw	48
 15636  001372  243F               	addwf	_currentTCB,w,c
 15637  001374  EC5A  F011         	call	PL387	;call to abstracted procedure
 15638  001378  64F7               	cpfsgt	tblptrh,c
 15639  00137A  D003               	bra	u12597
 15640  00137C  ECD2  F011         	call	PL423	;call to abstracted procedure
 15641  001380  D004               	bra	u12590
 15642  001382                     u12597:
 15643  001382  EC66  F011         	call	PL389	;call to abstracted procedure
 15644  001386  6AEE               	clrf	postinc0,c
 15645  001388  6AEF               	clrf	indf0,c
 15646  00138A                     u12590:
 15647                           
 15648                           ;tcpv4.c: 680: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 15649  00138A  ECE5  F011         	call	PL427	;call to abstracted procedure
 15650  00138E  EC5A  F011         	call	PL387	;call to abstracted procedure
 15651  001392  64F7               	cpfsgt	tblptrh,c
 15652  001394  D003               	bra	u12607
 15653  001396  EC6F  F011         	call	PL395	;call to abstracted procedure
 15654  00139A  D004               	bra	u12600
 15655  00139C                     u12607:
 15656  00139C  EC66  F011         	call	PL389	;call to abstracted procedure
 15657  0013A0  EC90  F011         	call	PL403	;call to abstracted procedure
 15658  0013A4                     u12600:
 15659  0013A4  EC82  F011         	call	PL401	;call to abstracted procedure
 15660  0013A8  51DC               	movf	(_tcpHeader+8)& (0+255),w,b
 15661  0013AA  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 15662  0013AC  E17E               	bnz	l8548
 15663  0013AE  51DD               	movf	(_tcpHeader+9)& (0+255),w,b
 15664  0013B0  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 15665  0013B2  E17B               	bnz	l8548
 15666  0013B4  51DE               	movf	(_tcpHeader+10)& (0+255),w,b
 15667  0013B6  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 15668  0013B8  E178               	bnz	l8548
 15669  0013BA  51DF               	movf	(_tcpHeader+11)& (0+255),w,b
 15670  0013BC  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 15671  0013BE  A4D8               	btfss	status,2,c
 15672  0013C0                     u12611:
 15673  0013C0  D074               	goto	l8548
 15674                           
 15675                           ; BSR set to: 1
 15676                           ;tcpv4.c: 681: {
 15677                           ;tcpv4.c: 683: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 15678  0013C2  0E10               	movlw	16
 15679  0013C4  243F               	addwf	_currentTCB,w,c
 15680  0013C6  EC5A  F011         	call	PL387	;call to abstracted procedure
 15681  0013CA  64F7               	cpfsgt	tblptrh,c
 15682  0013CC  D003               	bra	u12627
 15683  0013CE  EC6F  F011         	call	PL395	;call to abstracted procedure
 15684  0013D2  D004               	bra	u12620
 15685  0013D4                     u12627:
 15686  0013D4  EC66  F011         	call	PL389	;call to abstracted procedure
 15687  0013D8  EC90  F011         	call	PL403	;call to abstracted procedure
 15688  0013DC                     u12620:
 15689  0013DC  EC82  F011         	call	PL401	;call to abstracted procedure
 15690  0013E0  0E10               	movlw	16
 15691  0013E2  EC0B  F012         	call	PL443	;call to abstracted procedure
 15692  0013E6  64F7               	cpfsgt	tblptrh,c
 15693  0013E8  D003               	bra	u12637
 15694  0013EA  ECFE  F011         	call	PL441	;call to abstracted procedure
 15695  0013EE  D004               	bra	u12630
 15696  0013F0                     u12637:
 15697  0013F0  EC66  F011         	call	PL389	;call to abstracted procedure
 15698  0013F4  EC53  F012         	call	PL475	;call to abstracted procedure
 15699  0013F8                     u12630:
 15700                           
 15701                           ;tcpv4.c: 684: currentTCB->flags = 0x10U;
 15702  0013F8  EC6B  F011         	call	PL393	;call to abstracted procedure
 15703  0013FC  EC5A  F011         	call	PL387	;call to abstracted procedure
 15704  001400  64F7               	cpfsgt	tblptrh,c
 15705  001402  D004               	bra	u12647
 15706  001404  0E10               	movlw	16
 15707  001406  6EF5               	movwf	tablat,c
 15708  001408  000C               	tblwt		*
 15709  00140A  D004               	bra	u12640
 15710  00140C                     u12647:
 15711  00140C  EC66  F011         	call	PL389	;call to abstracted procedure
 15712  001410  0E10               	movlw	16
 15713  001412  6EEF               	movwf	indf0,c
 15714  001414                     u12640:
 15715                           
 15716                           ;tcpv4.c: 687: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 15717  001414  ECCE  F011         	call	PL419	;call to abstracted procedure
 15718  001418  EC5A  F011         	call	PL387	;call to abstracted procedure
 15719  00141C  64F7               	cpfsgt	tblptrh,c
 15720  00141E  D003               	bra	u12657
 15721  001420  ECF1  F011         	call	PL439	;call to abstracted procedure
 15722  001424  D004               	bra	u12650
 15723  001426                     u12657:
 15724  001426  EC66  F011         	call	PL389	;call to abstracted procedure
 15725  00142A  EC5C  F012         	call	PL477	;call to abstracted procedure
 15726  00142E                     u12650:
 15727                           
 15728                           ;tcpv4.c: 689: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 15729  00142E  ECD7  F011         	call	PL425	;call to abstracted procedure
 15730  001432  ECB9  F011         	call	PL407	;call to abstracted procedure
 15731  001436  64F7               	cpfsgt	tblptrh,c
 15732  001438  D005               	bra	u12667
 15733  00143A  EC27  F012         	call	PL455	;call to abstracted procedure
 15734  00143E  EC20  F012         	call	PL453	;call to abstracted procedure
 15735  001442  D004               	bra	u12660
 15736  001444                     u12667:
 15737  001444  EC66  F011         	call	PL389	;call to abstracted procedure
 15738  001448  EC65  F012         	call	PL487	;call to abstracted procedure
 15739  00144C                     u12660:
 15740                           
 15741                           ;tcpv4.c: 691: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 15742  00144C  EC99  F011         	call	PL405	;call to abstracted procedure
 15743  001450  64F7               	cpfsgt	tblptrh,c
 15744  001452  D003               	bra	u12677
 15745  001454  EC20  F012         	call	PL453	;call to abstracted procedure
 15746  001458  D004               	bra	u12670
 15747  00145A                     u12677:
 15748  00145A  EC66  F011         	call	PL389	;call to abstracted procedure
 15749  00145E  EC77  F012         	call	PL501	;call to abstracted procedure
 15750  001462                     u12670:
 15751                           
 15752                           ;tcpv4.c: 692: currentTCB->mss = tcpMss;
 15753  001462  ECCA  F011         	call	PL417	;call to abstracted procedure
 15754  001466  EC5A  F011         	call	PL387	;call to abstracted procedure
 15755  00146A  64F7               	cpfsgt	tblptrh,c
 15756  00146C  D003               	bra	u12687
 15757  00146E  EC88  F012         	call	PL537	;call to abstracted procedure
 15758  001472  D004               	bra	u12680
 15759  001474                     u12687:
 15760  001474  EC66  F011         	call	PL389	;call to abstracted procedure
 15761  001478  EC93  F012         	call	PL627	;call to abstracted procedure
 15762  00147C                     u12680:
 15763                           
 15764                           ;tcpv4.c: 694: if(TCP_Snd(currentTCB))
 15765  00147C  EC41  F012         	call	PL465	;call to abstracted procedure
 15766  001480  ECAC  F012         	call	_TCP_Snd	;wreg free
 15767  001484  0900               	iorlw	0
 15768  001486  E102 EF3D  F011    	bz	l8832
 15769                           
 15770                           ; BSR set to: 0
 15771                           ;tcpv4.c: 695: {
 15772                           ;tcpv4.c: 696: nextState = ESTABLISHED;
 15773  00148C  0E04               	movlw	4
 15774  00148E  0101               	movlb	1	; () banked
 15775                           
 15776                           ; BSR set to: 1
 15777                           ;tcpv4.c: 697: currentTCB->socketState = SOCKET_CONNECTED;
 15778  001490  EC1C  F012         	call	PL449	;call to abstracted procedure
 15779  001494  EC5A  F011         	call	PL387	;call to abstracted procedure
 15780  001498  64F7               	cpfsgt	tblptrh,c
 15781  00149A  D004               	bra	u12707
 15782  00149C  0E03               	movlw	3
 15783  00149E  6EF5               	movwf	tablat,c
 15784  0014A0  000C               	tblwt		*
 15785  0014A2  D001               	bra	u12700
 15786  0014A4                     u12707:
 15787  0014A4  D268               	goto	u13197
 15788  0014A6                     u12700:
 15789  0014A6  EF3D  F011         	goto	l8832
 15790  0014AA                     l8548:
 15791                           
 15792                           ; BSR set to: 1
 15793                           ;tcpv4.c: 700: else
 15794                           ;tcpv4.c: 701: {
 15795                           ;tcpv4.c: 703: currentTCB->localSeqno = tcpHeader.ackNumber;
 15796  0014AA  0E10               	movlw	16
 15797  0014AC  243F               	addwf	_currentTCB,w,c
 15798  0014AE  EC5A  F011         	call	PL387	;call to abstracted procedure
 15799  0014B2  64F7               	cpfsgt	tblptrh,c
 15800  0014B4  D003               	bra	u12717
 15801  0014B6  EC2E  F012         	call	PL457	;call to abstracted procedure
 15802  0014BA  D004               	bra	u12710
 15803  0014BC                     u12717:
 15804  0014BC  EC66  F011         	call	PL389	;call to abstracted procedure
 15805  0014C0  EC6E  F012         	call	PL493	;call to abstracted procedure
 15806  0014C4                     u12710:
 15807                           
 15808                           ;tcpv4.c: 704: currentTCB->flags = 0x04U | 0x10U;
 15809  0014C4  EC6B  F011         	call	PL393	;call to abstracted procedure
 15810  0014C8  EC5A  F011         	call	PL387	;call to abstracted procedure
 15811  0014CC  64F7               	cpfsgt	tblptrh,c
 15812  0014CE  D004               	bra	u12727
 15813  0014D0  0E14               	movlw	20
 15814  0014D2  6EF5               	movwf	tablat,c
 15815  0014D4  000C               	tblwt		*
 15816  0014D6  D004               	bra	u12720
 15817  0014D8                     u12727:
 15818  0014D8  EC66  F011         	call	PL389	;call to abstracted procedure
 15819  0014DC  0E14               	movlw	20
 15820  0014DE  6EEF               	movwf	indf0,c
 15821  0014E0                     u12720:
 15822                           
 15823                           ;tcpv4.c: 705: if(TCP_Snd(currentTCB))
 15824  0014E0  EC41  F012         	call	PL465	;call to abstracted procedure
 15825  0014E4  ECAC  F012         	call	_TCP_Snd	;wreg free
 15826  0014E8                     L10:
 15827  0014E8  0900               	iorlw	0
 15828  0014EA  E001 D6C4          	bnz	l1194
 15829  0014EE  EF3D  F011         	goto	l8832
 15830  0014F2                     l8556:
 15831                           
 15832                           ; BSR set to: 1
 15833                           ;tcpv4.c: 713: ;
 15834                           ;tcpv4.c: 715: currentTCB->timeout = 0;
 15835  0014F2  0E30               	movlw	48
 15836  0014F4  243F               	addwf	_currentTCB,w,c
 15837  0014F6  EC5A  F011         	call	PL387	;call to abstracted procedure
 15838  0014FA  64F7               	cpfsgt	tblptrh,c
 15839  0014FC  D003               	bra	u12747
 15840  0014FE  ECD2  F011         	call	PL423	;call to abstracted procedure
 15841  001502  D004               	bra	u12740
 15842  001504                     u12747:
 15843  001504  EC66  F011         	call	PL389	;call to abstracted procedure
 15844  001508  6AEE               	clrf	postinc0,c
 15845  00150A  6AEF               	clrf	indf0,c
 15846  00150C                     u12740:
 15847                           
 15848                           ;tcpv4.c: 717: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 15849  00150C  ECE5  F011         	call	PL427	;call to abstracted procedure
 15850  001510  EC5A  F011         	call	PL387	;call to abstracted procedure
 15851  001514  64F7               	cpfsgt	tblptrh,c
 15852  001516  D003               	bra	u12757
 15853  001518  EC6F  F011         	call	PL395	;call to abstracted procedure
 15854  00151C  D004               	bra	u12750
 15855  00151E                     u12757:
 15856  00151E  EC66  F011         	call	PL389	;call to abstracted procedure
 15857  001522  EC90  F011         	call	PL403	;call to abstracted procedure
 15858  001526                     u12750:
 15859  001526  EC82  F011         	call	PL401	;call to abstracted procedure
 15860  00152A  51DC               	movf	(_tcpHeader+8)& (0+255),w,b
 15861  00152C  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 15862  00152E  E176               	bnz	l8568
 15863  001530  51DD               	movf	(_tcpHeader+9)& (0+255),w,b
 15864  001532  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 15865  001534  E173               	bnz	l8568
 15866  001536  51DE               	movf	(_tcpHeader+10)& (0+255),w,b
 15867  001538  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 15868  00153A  E170               	bnz	l8568
 15869  00153C  51DF               	movf	(_tcpHeader+11)& (0+255),w,b
 15870  00153E  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 15871  001540  A4D8               	btfss	status,2,c
 15872  001542                     u12761:
 15873  001542  D06C               	goto	l8568
 15874                           
 15875                           ; BSR set to: 1
 15876                           ;tcpv4.c: 718: {
 15877                           ;tcpv4.c: 720: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 15878  001544  0E10               	movlw	16
 15879  001546  243F               	addwf	_currentTCB,w,c
 15880  001548  EC5A  F011         	call	PL387	;call to abstracted procedure
 15881  00154C  64F7               	cpfsgt	tblptrh,c
 15882  00154E  D003               	bra	u12777
 15883  001550  EC6F  F011         	call	PL395	;call to abstracted procedure
 15884  001554  D004               	bra	u12770
 15885  001556                     u12777:
 15886  001556  EC66  F011         	call	PL389	;call to abstracted procedure
 15887  00155A  EC90  F011         	call	PL403	;call to abstracted procedure
 15888  00155E                     u12770:
 15889  00155E  EC82  F011         	call	PL401	;call to abstracted procedure
 15890  001562  0E10               	movlw	16
 15891  001564  EC0B  F012         	call	PL443	;call to abstracted procedure
 15892  001568  64F7               	cpfsgt	tblptrh,c
 15893  00156A  D003               	bra	u12787
 15894  00156C  ECFE  F011         	call	PL441	;call to abstracted procedure
 15895  001570  D004               	bra	u12780
 15896  001572                     u12787:
 15897  001572  EC66  F011         	call	PL389	;call to abstracted procedure
 15898  001576  EC53  F012         	call	PL475	;call to abstracted procedure
 15899  00157A                     u12780:
 15900                           
 15901                           ;tcpv4.c: 721: currentTCB->flags = 0x10U;
 15902  00157A  EC6B  F011         	call	PL393	;call to abstracted procedure
 15903  00157E  EC5A  F011         	call	PL387	;call to abstracted procedure
 15904  001582  64F7               	cpfsgt	tblptrh,c
 15905  001584  D004               	bra	u12797
 15906  001586  0E10               	movlw	16
 15907  001588  6EF5               	movwf	tablat,c
 15908  00158A  000C               	tblwt		*
 15909  00158C  D004               	bra	u12790
 15910  00158E                     u12797:
 15911  00158E  EC66  F011         	call	PL389	;call to abstracted procedure
 15912  001592  0E10               	movlw	16
 15913  001594  6EEF               	movwf	indf0,c
 15914  001596                     u12790:
 15915                           
 15916                           ;tcpv4.c: 724: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 15917  001596  ECCE  F011         	call	PL419	;call to abstracted procedure
 15918  00159A  EC5A  F011         	call	PL387	;call to abstracted procedure
 15919  00159E  64F7               	cpfsgt	tblptrh,c
 15920  0015A0  D003               	bra	u12807
 15921  0015A2  ECF1  F011         	call	PL439	;call to abstracted procedure
 15922  0015A6  D004               	bra	u12800
 15923  0015A8                     u12807:
 15924  0015A8  EC66  F011         	call	PL389	;call to abstracted procedure
 15925  0015AC  EC5C  F012         	call	PL477	;call to abstracted procedure
 15926  0015B0                     u12800:
 15927                           
 15928                           ;tcpv4.c: 725: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 15929  0015B0  ECD7  F011         	call	PL425	;call to abstracted procedure
 15930  0015B4  ECB9  F011         	call	PL407	;call to abstracted procedure
 15931  0015B8  64F7               	cpfsgt	tblptrh,c
 15932  0015BA  D005               	bra	u12817
 15933  0015BC  EC27  F012         	call	PL455	;call to abstracted procedure
 15934  0015C0  EC20  F012         	call	PL453	;call to abstracted procedure
 15935  0015C4  D004               	bra	u12810
 15936  0015C6                     u12817:
 15937  0015C6  EC66  F011         	call	PL389	;call to abstracted procedure
 15938  0015CA  EC65  F012         	call	PL487	;call to abstracted procedure
 15939  0015CE                     u12810:
 15940                           
 15941                           ;tcpv4.c: 727: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 15942  0015CE  EC99  F011         	call	PL405	;call to abstracted procedure
 15943  0015D2  64F7               	cpfsgt	tblptrh,c
 15944  0015D4  D003               	bra	u12827
 15945  0015D6  EC20  F012         	call	PL453	;call to abstracted procedure
 15946  0015DA  D004               	bra	u12820
 15947  0015DC                     u12827:
 15948  0015DC  EC66  F011         	call	PL389	;call to abstracted procedure
 15949  0015E0  EC77  F012         	call	PL501	;call to abstracted procedure
 15950  0015E4                     u12820:
 15951                           
 15952                           ;tcpv4.c: 728: currentTCB->mss = tcpMss;
 15953  0015E4  ECCA  F011         	call	PL417	;call to abstracted procedure
 15954  0015E8  EC5A  F011         	call	PL387	;call to abstracted procedure
 15955  0015EC  64F7               	cpfsgt	tblptrh,c
 15956  0015EE  D003               	bra	u12837
 15957  0015F0  EC88  F012         	call	PL537	;call to abstracted procedure
 15958  0015F4  D004               	bra	u12830
 15959  0015F6                     u12837:
 15960  0015F6  EC66  F011         	call	PL389	;call to abstracted procedure
 15961  0015FA  EC93  F012         	call	PL627	;call to abstracted procedure
 15962  0015FE                     u12830:
 15963                           
 15964                           ;tcpv4.c: 730: nextState = ESTABLISHED;
 15965  0015FE  0E04               	movlw	4
 15966  001600  0101               	movlb	1	; () banked
 15967                           
 15968                           ; BSR set to: 1
 15969                           ;tcpv4.c: 731: currentTCB->socketState = SOCKET_CONNECTED;
 15970  001602  EC1C  F012         	call	PL449	;call to abstracted procedure
 15971  001606  EC5A  F011         	call	PL387	;call to abstracted procedure
 15972  00160A  64F7               	cpfsgt	tblptrh,c
 15973  00160C  D004               	bra	u12847
 15974  00160E  0E03               	movlw	3
 15975  001610  6EF5               	movwf	tablat,c
 15976  001612  000C               	tblwt		*
 15977  001614  D001               	bra	u12840
 15978  001616                     u12847:
 15979  001616  D1AF               	goto	u13197
 15980  001618                     u12840:
 15981                           
 15982                           ;tcpv4.c: 732: }
 15983  001618  EF3D  F011         	goto	l8832
 15984  00161C                     l8568:
 15985                           
 15986                           ; BSR set to: 1
 15987                           ;tcpv4.c: 733: else
 15988                           ;tcpv4.c: 734: {
 15989                           ;tcpv4.c: 736: currentTCB->localSeqno = tcpHeader.ackNumber;
 15990  00161C  0E10               	movlw	16
 15991  00161E  243F               	addwf	_currentTCB,w,c
 15992  001620  EC5A  F011         	call	PL387	;call to abstracted procedure
 15993  001624  64F7               	cpfsgt	tblptrh,c
 15994  001626  D003               	bra	u12857
 15995  001628  EC2E  F012         	call	PL457	;call to abstracted procedure
 15996  00162C  D004               	bra	u12850
 15997  00162E                     u12857:
 15998  00162E  EC66  F011         	call	PL389	;call to abstracted procedure
 15999  001632  EC6E  F012         	call	PL493	;call to abstracted procedure
 16000  001636                     u12850:
 16001                           
 16002                           ;tcpv4.c: 737: currentTCB->flags = 0x04U;
 16003  001636  EC6B  F011         	call	PL393	;call to abstracted procedure
 16004  00163A  EC5A  F011         	call	PL387	;call to abstracted procedure
 16005  00163E  64F7               	cpfsgt	tblptrh,c
 16006  001640  D004               	bra	u12867
 16007  001642  0E04               	movlw	4
 16008  001644  6EF5               	movwf	tablat,c
 16009  001646  000C               	tblwt		*
 16010  001648  D004               	bra	u12860
 16011  00164A                     u12867:
 16012  00164A  EC66  F011         	call	PL389	;call to abstracted procedure
 16013  00164E  0E04               	movlw	4
 16014  001650  6EEF               	movwf	indf0,c
 16015  001652                     u12860:
 16016                           
 16017                           ;tcpv4.c: 738: if(TCP_Snd(currentTCB))
 16018  001652  EC41  F012         	call	PL465	;call to abstracted procedure
 16019  001656  ECAC  F012         	call	_TCP_Snd	;wreg free
 16020  00165A  D746               	goto	L10
 16021  00165C                     l8578:
 16022                           
 16023                           ; BSR set to: 1
 16024                           ;tcpv4.c: 752: ;
 16025                           ;tcpv4.c: 755: if (currentTCB->timeoutsCount)
 16026  00165C  0E34               	movlw	52
 16027  00165E  243F               	addwf	_currentTCB,w,c
 16028  001660  EC5A  F011         	call	PL387	;call to abstracted procedure
 16029  001664  64F7               	cpfsgt	tblptrh,c
 16030  001666  D003               	bra	u12887
 16031  001668  0008               	tblrd		*
 16032  00166A  50F5               	movf	tablat,w,c
 16033  00166C  D003               	bra	u12880
 16034  00166E                     u12887:
 16035  00166E  EC66  F011         	call	PL389	;call to abstracted procedure
 16036  001672  50EF               	movf	indf0,w,c
 16037  001674                     u12880:
 16038  001674  0900               	iorlw	0
 16039  001676  E037               	bz	l8594
 16040                           
 16041                           ;tcpv4.c: 756: {
 16042                           ;tcpv4.c: 757: if(TCP_Snd(currentTCB))
 16043  001678  EC41  F012         	call	PL465	;call to abstracted procedure
 16044  00167C  ECAC  F012         	call	_TCP_Snd	;wreg free
 16045  001680  0900               	iorlw	0
 16046  001682  E102 EF3D  F011    	bz	l8832
 16047                           
 16048                           ; BSR set to: 0
 16049                           ;tcpv4.c: 758: {
 16050                           ;tcpv4.c: 759: if (currentTCB->flags & 0x04U)
 16051  001688  EC6B  F011         	call	PL393	;call to abstracted procedure
 16052  00168C  EC5A  F011         	call	PL387	;call to abstracted procedure
 16053  001690  64F7               	cpfsgt	tblptrh,c
 16054  001692  D003               	bra	u12917
 16055  001694  0008               	tblrd		*
 16056  001696  50F5               	movf	tablat,w,c
 16057  001698  D003               	bra	u12910
 16058  00169A                     u12917:
 16059  00169A  EC66  F011         	call	PL389	;call to abstracted procedure
 16060  00169E  50EF               	movf	indf0,w,c
 16061  0016A0                     u12910:
 16062  0016A0  0101               	movlb	1	; () banked
 16063  0016A2  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 16064  0016A4  B502               	btfsc	(??_TCP_FiniteStateMachine+2)& (0+255),2,b
 16065  0016A6  D5E7               	goto	l1194
 16066                           
 16067                           ; BSR set to: 1
 16068                           ;tcpv4.c: 764: if(currentTCB->flags & 0x10U)
 16069  0016A8  0E35               	movlw	53
 16070  0016AA  243F               	addwf	_currentTCB,w,c
 16071  0016AC  EC5A  F011         	call	PL387	;call to abstracted procedure
 16072  0016B0  64F7               	cpfsgt	tblptrh,c
 16073  0016B2  D003               	bra	u12937
 16074  0016B4  0008               	tblrd		*
 16075  0016B6  50F5               	movf	tablat,w,c
 16076  0016B8  D003               	bra	u12930
 16077  0016BA                     u12937:
 16078  0016BA  EC66  F011         	call	PL389	;call to abstracted procedure
 16079  0016BE  50EF               	movf	indf0,w,c
 16080  0016C0                     u12930:
 16081  0016C0  0101               	movlb	1	; () banked
 16082  0016C2  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 16083  0016C4  A902               	btfss	(??_TCP_FiniteStateMachine+2)& (0+255),4,b
 16084  0016C6  EF3D  F011         	goto	l8832
 16085                           
 16086                           ; BSR set to: 1
 16087                           ;tcpv4.c: 765: {
 16088                           ;tcpv4.c: 766: nextState = ESTABLISHED;
 16089  0016CA  0E04               	movlw	4
 16090                           
 16091                           ; BSR set to: 1
 16092                           ;tcpv4.c: 767: currentTCB->socketState = SOCKET_CONNECTED;
 16093  0016CC  EC1C  F012         	call	PL449	;call to abstracted procedure
 16094  0016D0  EC5A  F011         	call	PL387	;call to abstracted procedure
 16095  0016D4  64F7               	cpfsgt	tblptrh,c
 16096  0016D6  D004               	bra	u12957
 16097  0016D8  0E03               	movlw	3
 16098  0016DA  6EF5               	movwf	tablat,c
 16099  0016DC  000C               	tblwt		*
 16100  0016DE  D001               	bra	u12950
 16101  0016E0                     u12957:
 16102  0016E0  D14A               	goto	u13197
 16103  0016E2                     u12950:
 16104  0016E2  EF3D  F011         	goto	l8832
 16105  0016E6                     l8594:
 16106                           
 16107                           ;tcpv4.c: 771: {
 16108                           ;tcpv4.c: 773: currentTCB->flags = 0x04U;
 16109  0016E6  EC6B  F011         	call	PL393	;call to abstracted procedure
 16110  0016EA  EC5A  F011         	call	PL387	;call to abstracted procedure
 16111  0016EE  64F7               	cpfsgt	tblptrh,c
 16112  0016F0  D004               	bra	u12967
 16113  0016F2  0E04               	movlw	4
 16114  0016F4  6EF5               	movwf	tablat,c
 16115  0016F6  000C               	tblwt		*
 16116  0016F8  D004               	bra	u12960
 16117  0016FA                     u12967:
 16118  0016FA  EC66  F011         	call	PL389	;call to abstracted procedure
 16119  0016FE  0E04               	movlw	4
 16120  001700  6EEF               	movwf	indf0,c
 16121  001702                     u12960:
 16122                           
 16123                           ;tcpv4.c: 774: if(TCP_Snd(currentTCB))
 16124  001702  EC41  F012         	call	PL465	;call to abstracted procedure
 16125  001706  ECAC  F012         	call	_TCP_Snd	;wreg free
 16126  00170A  D6EE               	goto	L10
 16127  00170C                     l8606:
 16128  00170C  0101               	movlb	1	; () banked
 16129  00170E  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 16130                           
 16131                           ; Switch size 1, requested type "space"
 16132                           ; Number of cases is 7, Range of values is 0 to 12
 16133                           ; switch strategies available:
 16134                           ; Name         Instructions Cycles
 16135                           ; simple_byte           22    12 (average)
 16136                           ;	Chosen strategy is simple_byte
 16137  001710  E101 D5B1          	bz	l1194
 16138  001714  0A03               	xorlw	3	; case 3
 16139  001716  E101 D5C0          	bz	l8516
 16140  00171A  0A07               	xorlw	7	; case 4
 16141  00171C  E101 D6E9          	bz	l8556
 16142  001720  0A01               	xorlw	1	; case 5
 16143  001722  E101 D625          	bz	l8534
 16144  001726  0A0C               	xorlw	12	; case 9
 16145  001728  E101 D5A5          	bz	l1194
 16146  00172C  0A03               	xorlw	3	; case 10
 16147  00172E  E101 D5A2          	bz	l1194
 16148  001732  0A06               	xorlw	6	; case 12
 16149  001734  E093               	bz	l8578
 16150  001736  EF3D  F011         	goto	l8832
 16151  00173A                     l8608:
 16152                           
 16153                           ; BSR set to: 1
 16154                           ;tcpv4.c: 796: ;
 16155                           ;tcpv4.c: 797: if (currentTCB->localPort == tcpHeader.destPort)
 16156  00173A  EC98  F012         	call	PL629	;call to abstracted procedure
 16157  00173E  64F7               	cpfsgt	tblptrh,c
 16158  001740  D003               	bra	u12987
 16159  001742  ECA0  F012         	call	PL649	;call to abstracted procedure
 16160  001746  D004               	bra	u12980
 16161  001748                     u12987:
 16162  001748  EC66  F011         	call	PL389	;call to abstracted procedure
 16163  00174C  ECA7  F012         	call	PL733	;call to abstracted procedure
 16164  001750                     u12980:
 16165  001750  0101               	movlb	1	; () banked
 16166  001752  51D6               	movf	(_tcpHeader+2)& (0+255),w,b
 16167  001754  1900               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 16168  001756  E103               	bnz	u12991
 16169  001758  51D7               	movf	(_tcpHeader+3)& (0+255),w,b
 16170  00175A  1901               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 16171  00175C  A4D8               	btfss	status,2,c
 16172  00175E                     u12991:
 16173  00175E  EF3D  F011         	goto	l8832
 16174                           
 16175                           ; BSR set to: 1
 16176                           ;tcpv4.c: 798: {
 16177                           ;tcpv4.c: 800: currentTCB->timeout = 0;
 16178  001762  0E30               	movlw	48
 16179  001764  243F               	addwf	_currentTCB,w,c
 16180  001766  EC5A  F011         	call	PL387	;call to abstracted procedure
 16181  00176A  64F7               	cpfsgt	tblptrh,c
 16182  00176C  D003               	bra	u13007
 16183  00176E  ECD2  F011         	call	PL423	;call to abstracted procedure
 16184  001772  D004               	bra	u13000
 16185  001774                     u13007:
 16186  001774  EC66  F011         	call	PL389	;call to abstracted procedure
 16187  001778  6AEE               	clrf	postinc0,c
 16188  00177A  6AEF               	clrf	indf0,c
 16189  00177C                     u13000:
 16190                           
 16191                           ;tcpv4.c: 804: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 16192  00177C  EC7C  F012         	call	PL509	;call to abstracted procedure
 16193  001780  EC5A  F011         	call	PL387	;call to abstracted procedure
 16194  001784  64F7               	cpfsgt	tblptrh,c
 16195  001786  D003               	bra	u13017
 16196  001788  EC6F  F011         	call	PL395	;call to abstracted procedure
 16197  00178C  D004               	bra	u13010
 16198  00178E                     u13017:
 16199  00178E  EC66  F011         	call	PL389	;call to abstracted procedure
 16200  001792  EC90  F011         	call	PL403	;call to abstracted procedure
 16201  001796                     u13010:
 16202  001796  503B               	movf	_receivedRemoteAddress,w,c
 16203  001798  0101               	movlb	1	; () banked
 16204  00179A  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16205  00179C  E13D               	bnz	l8618
 16206  00179E  503C               	movf	_receivedRemoteAddress+1,w,c
 16207  0017A0  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16208  0017A2  E13A               	bnz	l8618
 16209  0017A4  503D               	movf	_receivedRemoteAddress+2,w,c
 16210  0017A6  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16211  0017A8  E137               	bnz	l8618
 16212  0017AA  503E               	movf	_receivedRemoteAddress+3,w,c
 16213  0017AC  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16214  0017AE  E134               	bnz	l8618
 16215                           
 16216                           ; BSR set to: 1
 16217  0017B0  0E06               	movlw	6
 16218  0017B2  243F               	addwf	_currentTCB,w,c
 16219  0017B4  EC5A  F011         	call	PL387	;call to abstracted procedure
 16220  0017B8  64F7               	cpfsgt	tblptrh,c
 16221  0017BA  D004               	bra	u13037
 16222  0017BC  0009               	tblrd		*+
 16223  0017BE  EC7C  F011         	call	PL397	;call to abstracted procedure
 16224  0017C2  D006               	bra	u13030
 16225  0017C4                     u13037:
 16226  0017C4  EC66  F011         	call	PL389	;call to abstracted procedure
 16227  0017C8  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16228  0017CC  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16229  0017D0                     u13030:
 16230  0017D0  0101               	movlb	1	; () banked
 16231  0017D2  51D4               	movf	_tcpHeader& (0+255),w,b
 16232  0017D4  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16233  0017D6  E120               	bnz	l8618
 16234  0017D8  51D5               	movf	(_tcpHeader+1)& (0+255),w,b
 16235  0017DA  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16236  0017DC  E11D               	bnz	l8618
 16237                           
 16238                           ; BSR set to: 1
 16239                           ;tcpv4.c: 805: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 16240  0017DE  0E10               	movlw	16
 16241  0017E0  243F               	addwf	_currentTCB,w,c
 16242  0017E2  EC5A  F011         	call	PL387	;call to abstracted procedure
 16243  0017E6  64F7               	cpfsgt	tblptrh,c
 16244  0017E8  D003               	bra	u13057
 16245  0017EA  EC6F  F011         	call	PL395	;call to abstracted procedure
 16246  0017EE  D004               	bra	u13050
 16247  0017F0                     u13057:
 16248  0017F0  EC66  F011         	call	PL389	;call to abstracted procedure
 16249  0017F4  EC90  F011         	call	PL403	;call to abstracted procedure
 16250  0017F8                     u13050:
 16251  0017F8  EC82  F011         	call	PL401	;call to abstracted procedure
 16252  0017FC  51DC               	movf	(_tcpHeader+8)& (0+255),w,b
 16253  0017FE  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 16254  001800  E10B               	bnz	l8618
 16255  001802  51DD               	movf	(_tcpHeader+9)& (0+255),w,b
 16256  001804  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 16257  001806  E108               	bnz	l8618
 16258  001808  51DE               	movf	(_tcpHeader+10)& (0+255),w,b
 16259  00180A  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 16260  00180C  E105               	bnz	l8618
 16261  00180E  51DF               	movf	(_tcpHeader+11)& (0+255),w,b
 16262  001810  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 16263  001812  E102               	bnz	l8618
 16264                           
 16265                           ; BSR set to: 1
 16266                           ;tcpv4.c: 807: nextState = ESTABLISHED;
 16267  001814  0E04               	movlw	4
 16268  001816  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16269  001818                     l8618:
 16270                           
 16271                           ; BSR set to: 1
 16272                           ;tcpv4.c: 808: currentTCB->socketState = SOCKET_CONNECTED;
 16273  001818  0E36               	movlw	54
 16274  00181A  243F               	addwf	_currentTCB,w,c
 16275  00181C  EC5A  F011         	call	PL387	;call to abstracted procedure
 16276  001820  64F7               	cpfsgt	tblptrh,c
 16277  001822  D004               	bra	u13077
 16278  001824  0E03               	movlw	3
 16279  001826  6EF5               	movwf	tablat,c
 16280  001828  000C               	tblwt		*
 16281  00182A  D001               	bra	u13070
 16282  00182C                     u13077:
 16283  00182C  D0A4               	goto	u13197
 16284  00182E                     u13070:
 16285  00182E  EF3D  F011         	goto	l8832
 16286  001832                     l8620:
 16287                           
 16288                           ; BSR set to: 1
 16289                           ;tcpv4.c: 812: ;
 16290                           ;tcpv4.c: 816: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 16291  001832  0E02               	movlw	2
 16292  001834  243F               	addwf	_currentTCB,w,c
 16293  001836  EC5A  F011         	call	PL387	;call to abstracted procedure
 16294  00183A  64F7               	cpfsgt	tblptrh,c
 16295  00183C  D003               	bra	u13087
 16296  00183E  EC6F  F011         	call	PL395	;call to abstracted procedure
 16297  001842  D004               	bra	u13080
 16298  001844                     u13087:
 16299  001844  EC66  F011         	call	PL389	;call to abstracted procedure
 16300  001848  EC90  F011         	call	PL403	;call to abstracted procedure
 16301  00184C                     u13080:
 16302  00184C  503B               	movf	_receivedRemoteAddress,w,c
 16303  00184E  0101               	movlb	1	; () banked
 16304  001850  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16305  001852  E109               	bnz	u13091
 16306  001854  503C               	movf	_receivedRemoteAddress+1,w,c
 16307  001856  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16308  001858  E106               	bnz	u13091
 16309  00185A  503D               	movf	_receivedRemoteAddress+2,w,c
 16310  00185C  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16311  00185E  E103               	bnz	u13091
 16312  001860  503E               	movf	_receivedRemoteAddress+3,w,c
 16313  001862  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16314  001864  A4D8               	btfss	status,2,c
 16315  001866                     u13091:
 16316  001866  EF3D  F011         	goto	l8832
 16317                           
 16318                           ; BSR set to: 1
 16319  00186A  0E06               	movlw	6
 16320  00186C  243F               	addwf	_currentTCB,w,c
 16321  00186E  EC5A  F011         	call	PL387	;call to abstracted procedure
 16322  001872  64F7               	cpfsgt	tblptrh,c
 16323  001874  D004               	bra	u13107
 16324  001876  0009               	tblrd		*+
 16325  001878  EC7C  F011         	call	PL397	;call to abstracted procedure
 16326  00187C  D006               	bra	u13100
 16327  00187E                     u13107:
 16328  00187E  EC66  F011         	call	PL389	;call to abstracted procedure
 16329  001882  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16330  001886  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16331  00188A                     u13100:
 16332  00188A  0101               	movlb	1	; () banked
 16333  00188C  51D4               	movf	_tcpHeader& (0+255),w,b
 16334  00188E  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16335  001890  E103               	bnz	u13111
 16336  001892  51D5               	movf	(_tcpHeader+1)& (0+255),w,b
 16337  001894  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16338  001896  A4D8               	btfss	status,2,c
 16339  001898                     u13111:
 16340  001898  EF3D  F011         	goto	l8832
 16341                           
 16342                           ; BSR set to: 1
 16343                           ;tcpv4.c: 817: {
 16344                           ;tcpv4.c: 820: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 16345  00189C  0E0C               	movlw	12
 16346  00189E  243F               	addwf	_currentTCB,w,c
 16347  0018A0  EC5A  F011         	call	PL387	;call to abstracted procedure
 16348  0018A4  64F7               	cpfsgt	tblptrh,c
 16349  0018A6  D003               	bra	u13127
 16350  0018A8  EC6F  F011         	call	PL395	;call to abstracted procedure
 16351  0018AC  D004               	bra	u13120
 16352  0018AE                     u13127:
 16353  0018AE  EC66  F011         	call	PL389	;call to abstracted procedure
 16354  0018B2  EC90  F011         	call	PL403	;call to abstracted procedure
 16355  0018B6                     u13120:
 16356  0018B6  0101               	movlb	1	; () banked
 16357  0018B8  51D8               	movf	(_tcpHeader+4)& (0+255),w,b
 16358  0018BA  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16359  0018BC  E109               	bnz	u13131
 16360  0018BE  51D9               	movf	(_tcpHeader+5)& (0+255),w,b
 16361  0018C0  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16362  0018C2  E106               	bnz	u13131
 16363  0018C4  51DA               	movf	(_tcpHeader+6)& (0+255),w,b
 16364  0018C6  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16365  0018C8  E103               	bnz	u13131
 16366  0018CA  51DB               	movf	(_tcpHeader+7)& (0+255),w,b
 16367  0018CC  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16368  0018CE  A4D8               	btfss	status,2,c
 16369  0018D0                     u13131:
 16370  0018D0  EF3D  F011         	goto	l8832
 16371                           
 16372                           ; BSR set to: 1
 16373                           ;tcpv4.c: 821: {
 16374                           ;tcpv4.c: 823: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 16375  0018D4  0E10               	movlw	16
 16376  0018D6  243F               	addwf	_currentTCB,w,c
 16377  0018D8  EC5A  F011         	call	PL387	;call to abstracted procedure
 16378  0018DC  64F7               	cpfsgt	tblptrh,c
 16379  0018DE  D003               	bra	u13147
 16380  0018E0  EC6F  F011         	call	PL395	;call to abstracted procedure
 16381  0018E4  D004               	bra	u13140
 16382  0018E6                     u13147:
 16383  0018E6  EC66  F011         	call	PL389	;call to abstracted procedure
 16384  0018EA  EC90  F011         	call	PL403	;call to abstracted procedure
 16385  0018EE                     u13140:
 16386  0018EE  EC82  F011         	call	PL401	;call to abstracted procedure
 16387  0018F2  51DC               	movf	(_tcpHeader+8)& (0+255),w,b
 16388  0018F4  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 16389  0018F6  E109               	bnz	u13151
 16390  0018F8  51DD               	movf	(_tcpHeader+9)& (0+255),w,b
 16391  0018FA  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 16392  0018FC  E106               	bnz	u13151
 16393  0018FE  51DE               	movf	(_tcpHeader+10)& (0+255),w,b
 16394  001900  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 16395  001902  E103               	bnz	u13151
 16396  001904  51DF               	movf	(_tcpHeader+11)& (0+255),w,b
 16397  001906  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 16398  001908  A4D8               	btfss	status,2,c
 16399  00190A                     u13151:
 16400  00190A  EF3D  F011         	goto	l8832
 16401                           
 16402                           ; BSR set to: 1
 16403                           ;tcpv4.c: 824: {
 16404                           ;tcpv4.c: 825: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 16405  00190E  0E10               	movlw	16
 16406  001910  243F               	addwf	_currentTCB,w,c
 16407  001912  EC5A  F011         	call	PL387	;call to abstracted procedure
 16408  001916  64F7               	cpfsgt	tblptrh,c
 16409  001918  D003               	bra	u13167
 16410  00191A  EC6F  F011         	call	PL395	;call to abstracted procedure
 16411  00191E  D004               	bra	u13160
 16412  001920                     u13167:
 16413  001920  EC66  F011         	call	PL389	;call to abstracted procedure
 16414  001924  EC90  F011         	call	PL403	;call to abstracted procedure
 16415  001928                     u13160:
 16416  001928  EC82  F011         	call	PL401	;call to abstracted procedure
 16417  00192C  0E10               	movlw	16
 16418  00192E  EC0B  F012         	call	PL443	;call to abstracted procedure
 16419  001932  64F7               	cpfsgt	tblptrh,c
 16420  001934  D003               	bra	u13177
 16421  001936  ECFE  F011         	call	PL441	;call to abstracted procedure
 16422  00193A  D004               	bra	u13170
 16423  00193C                     u13177:
 16424  00193C  EC66  F011         	call	PL389	;call to abstracted procedure
 16425  001940  EC53  F012         	call	PL475	;call to abstracted procedure
 16426  001944                     u13170:
 16427                           
 16428                           ;tcpv4.c: 827: currentTCB->timeout = 0;
 16429  001944  ECED  F011         	call	PL431	;call to abstracted procedure
 16430  001948  EC5A  F011         	call	PL387	;call to abstracted procedure
 16431  00194C  64F7               	cpfsgt	tblptrh,c
 16432  00194E  D003               	bra	u13187
 16433  001950  ECD2  F011         	call	PL423	;call to abstracted procedure
 16434  001954  D004               	bra	u13180
 16435  001956                     u13187:
 16436  001956  EC66  F011         	call	PL389	;call to abstracted procedure
 16437  00195A  6AEE               	clrf	postinc0,c
 16438  00195C  6AEF               	clrf	indf0,c
 16439  00195E                     u13180:
 16440                           
 16441                           ;tcpv4.c: 829: nextState = ESTABLISHED;
 16442  00195E  0E04               	movlw	4
 16443  001960  0101               	movlb	1	; () banked
 16444                           
 16445                           ; BSR set to: 1
 16446                           ;tcpv4.c: 830: currentTCB->socketState = SOCKET_CONNECTED;
 16447  001962  EC1C  F012         	call	PL449	;call to abstracted procedure
 16448  001966  EC5A  F011         	call	PL387	;call to abstracted procedure
 16449  00196A  64F7               	cpfsgt	tblptrh,c
 16450  00196C  D004               	bra	u13197
 16451  00196E  0E03               	movlw	3
 16452  001970  6EF5               	movwf	tablat,c
 16453  001972  000C               	tblwt		*
 16454  001974  D004               	bra	u13190
 16455  001976                     u13197:
 16456  001976  EC66  F011         	call	PL389	;call to abstracted procedure
 16457  00197A  0E03               	movlw	3
 16458  00197C  6EEF               	movwf	indf0,c
 16459  00197E                     u13190:
 16460  00197E  EF3D  F011         	goto	l8832
 16461  001982                     l8634:
 16462                           
 16463                           ; BSR set to: 1
 16464                           ;tcpv4.c: 836: ;
 16465                           ;tcpv4.c: 838: currentTCB->timeout = 0;
 16466  001982  0E30               	movlw	48
 16467  001984  243F               	addwf	_currentTCB,w,c
 16468  001986  EC5A  F011         	call	PL387	;call to abstracted procedure
 16469  00198A  64F7               	cpfsgt	tblptrh,c
 16470  00198C  D003               	bra	u13207
 16471  00198E  ECD2  F011         	call	PL423	;call to abstracted procedure
 16472  001992  D004               	bra	u13200
 16473  001994                     u13207:
 16474  001994  EC66  F011         	call	PL389	;call to abstracted procedure
 16475  001998  6AEE               	clrf	postinc0,c
 16476  00199A  6AEF               	clrf	indf0,c
 16477  00199C                     u13200:
 16478                           
 16479                           ;tcpv4.c: 840: currentTCB->flags = 0x01U;
 16480  00199C  EC6B  F011         	call	PL393	;call to abstracted procedure
 16481  0019A0  EC5A  F011         	call	PL387	;call to abstracted procedure
 16482  0019A4  64F7               	cpfsgt	tblptrh,c
 16483  0019A6  D004               	bra	u13217
 16484  0019A8  0E01               	movlw	1
 16485  0019AA  6EF5               	movwf	tablat,c
 16486  0019AC  000C               	tblwt		*
 16487  0019AE  D004               	bra	u13210
 16488  0019B0                     u13217:
 16489  0019B0  EC66  F011         	call	PL389	;call to abstracted procedure
 16490  0019B4  0E01               	movlw	1
 16491  0019B6  6EEF               	movwf	indf0,c
 16492  0019B8                     u13210:
 16493                           
 16494                           ;tcpv4.c: 841: currentTCB->timeout = ((unsigned long)1*2);
 16495  0019B8  ECED  F011         	call	PL431	;call to abstracted procedure
 16496  0019BC  EC5A  F011         	call	PL387	;call to abstracted procedure
 16497  0019C0  64F7               	cpfsgt	tblptrh,c
 16498  0019C2  D003               	bra	u13227
 16499  0019C4  EC3B  F012         	call	PL459	;call to abstracted procedure
 16500  0019C8  D004               	bra	u13220
 16501  0019CA                     u13227:
 16502  0019CA  EC66  F011         	call	PL389	;call to abstracted procedure
 16503  0019CE  EC8F  F012         	call	PL611	;call to abstracted procedure
 16504  0019D2                     u13220:
 16505                           
 16506                           ;tcpv4.c: 842: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 16507  0019D2  ECE9  F011         	call	PL429	;call to abstracted procedure
 16508  0019D6  EC5A  F011         	call	PL387	;call to abstracted procedure
 16509  0019DA  64F7               	cpfsgt	tblptrh,c
 16510  0019DC  D003               	bra	u13237
 16511  0019DE  EC3B  F012         	call	PL459	;call to abstracted procedure
 16512  0019E2  D004               	bra	u13230
 16513  0019E4                     u13237:
 16514  0019E4  EC66  F011         	call	PL389	;call to abstracted procedure
 16515  0019E8  EC8F  F012         	call	PL611	;call to abstracted procedure
 16516  0019EC                     u13230:
 16517                           
 16518                           ;tcpv4.c: 843: currentTCB->timeoutsCount = (5u);
 16519  0019EC  ECC6  F011         	call	PL415	;call to abstracted procedure
 16520  0019F0  EC5A  F011         	call	PL387	;call to abstracted procedure
 16521  0019F4  64F7               	cpfsgt	tblptrh,c
 16522  0019F6  D004               	bra	u13247
 16523  0019F8  0E05               	movlw	5
 16524  0019FA  6EF5               	movwf	tablat,c
 16525  0019FC  000C               	tblwt		*
 16526  0019FE  D004               	bra	u13240
 16527  001A00                     u13247:
 16528  001A00  EC66  F011         	call	PL389	;call to abstracted procedure
 16529  001A04  0E05               	movlw	5
 16530  001A06  6EEF               	movwf	indf0,c
 16531  001A08                     u13240:
 16532  001A08                     l8636:
 16533                           
 16534                           ;tcpv4.c: 845: nextState = FIN_WAIT_1;
 16535  001A08  0E05               	movlw	5
 16536  001A0A  0101               	movlb	1	; () banked
 16537  001A0C  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16538  001A0E                     l8638:
 16539                           
 16540                           ;tcpv4.c: 846: TCP_Snd(currentTCB);
 16541  001A0E  EC41  F012         	call	PL465	;call to abstracted procedure
 16542  001A12  ECAC  F012         	call	_TCP_Snd	;wreg free
 16543                           
 16544                           ;tcpv4.c: 847: break;
 16545  001A16  EF3D  F011         	goto	l8832
 16546  001A1A                     l8640:
 16547                           
 16548                           ; BSR set to: 1
 16549                           ;tcpv4.c: 849: case RCV_RST:
 16550                           ;tcpv4.c: 851: ;
 16551                           ;tcpv4.c: 853: if (currentTCB->localPort == tcpHeader.destPort)
 16552  001A1A  EC98  F012         	call	PL629	;call to abstracted procedure
 16553  001A1E  64F7               	cpfsgt	tblptrh,c
 16554  001A20  D003               	bra	u13257
 16555  001A22  ECA0  F012         	call	PL649	;call to abstracted procedure
 16556  001A26  D004               	bra	u13250
 16557  001A28                     u13257:
 16558  001A28  EC66  F011         	call	PL389	;call to abstracted procedure
 16559  001A2C  ECA7  F012         	call	PL733	;call to abstracted procedure
 16560  001A30                     u13250:
 16561  001A30  0101               	movlb	1	; () banked
 16562  001A32  51D6               	movf	(_tcpHeader+2)& (0+255),w,b
 16563  001A34  1900               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 16564  001A36  E103               	bnz	u13261
 16565  001A38  51D7               	movf	(_tcpHeader+3)& (0+255),w,b
 16566  001A3A  1901               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 16567  001A3C  A4D8               	btfss	status,2,c
 16568  001A3E                     u13261:
 16569  001A3E  EF3D  F011         	goto	l8832
 16570                           
 16571                           ; BSR set to: 1
 16572                           ;tcpv4.c: 854: {
 16573                           ;tcpv4.c: 855: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 16574  001A42  0E0C               	movlw	12
 16575  001A44  243F               	addwf	_currentTCB,w,c
 16576  001A46  EC5A  F011         	call	PL387	;call to abstracted procedure
 16577  001A4A  64F7               	cpfsgt	tblptrh,c
 16578  001A4C  D003               	bra	u13277
 16579  001A4E  EC6F  F011         	call	PL395	;call to abstracted procedure
 16580  001A52  D004               	bra	u13270
 16581  001A54                     u13277:
 16582  001A54  EC66  F011         	call	PL389	;call to abstracted procedure
 16583  001A58  EC90  F011         	call	PL403	;call to abstracted procedure
 16584  001A5C                     u13270:
 16585  001A5C  0101               	movlb	1	; () banked
 16586  001A5E  51D8               	movf	(_tcpHeader+4)& (0+255),w,b
 16587  001A60  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16588  001A62  E109               	bnz	u13281
 16589  001A64  51D9               	movf	(_tcpHeader+5)& (0+255),w,b
 16590  001A66  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16591  001A68  E106               	bnz	u13281
 16592  001A6A  51DA               	movf	(_tcpHeader+6)& (0+255),w,b
 16593  001A6C  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16594  001A6E  E103               	bnz	u13281
 16595  001A70  51DB               	movf	(_tcpHeader+7)& (0+255),w,b
 16596  001A72  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16597  001A74  A4D8               	btfss	status,2,c
 16598  001A76                     u13281:
 16599  001A76  EF3D  F011         	goto	l8832
 16600                           
 16601                           ; BSR set to: 1
 16602                           ;tcpv4.c: 856: {
 16603                           ;tcpv4.c: 857: ;
 16604                           ;tcpv4.c: 858: currentTCB->destIP = 0;
 16605  001A7A  0E02               	movlw	2
 16606  001A7C  243F               	addwf	_currentTCB,w,c
 16607  001A7E  EC5A  F011         	call	PL387	;call to abstracted procedure
 16608  001A82  64F7               	cpfsgt	tblptrh,c
 16609  001A84  D007               	bra	u13297
 16610  001A86  6AF5               	clrf	tablat,c
 16611  001A88  000D               	tblwt		*+
 16612  001A8A  6AF5               	clrf	tablat,c
 16613  001A8C  000D               	tblwt		*+
 16614  001A8E  ECD2  F011         	call	PL423	;call to abstracted procedure
 16615  001A92  D004               	bra	u13290
 16616  001A94                     u13297:
 16617  001A94  EC66  F011         	call	PL389	;call to abstracted procedure
 16618  001A98  EC46  F012         	call	PL467	;call to abstracted procedure
 16619  001A9C                     u13290:
 16620                           
 16621                           ;tcpv4.c: 859: currentTCB->destPort = 0;
 16622  001A9C  EC18  F012         	call	PL447	;call to abstracted procedure
 16623  001AA0  EC5A  F011         	call	PL387	;call to abstracted procedure
 16624  001AA4  64F7               	cpfsgt	tblptrh,c
 16625  001AA6  D003               	bra	u13307
 16626  001AA8  ECD2  F011         	call	PL423	;call to abstracted procedure
 16627  001AAC  D004               	bra	u13300
 16628  001AAE                     u13307:
 16629  001AAE  EC66  F011         	call	PL389	;call to abstracted procedure
 16630  001AB2  6AEE               	clrf	postinc0,c
 16631  001AB4  6AEF               	clrf	indf0,c
 16632  001AB6                     u13300:
 16633                           
 16634                           ;tcpv4.c: 860: currentTCB->localSeqno = 0;
 16635  001AB6  ECE5  F011         	call	PL427	;call to abstracted procedure
 16636  001ABA  DBFC               	call	PL387	;call to abstracted procedure
 16637  001ABC  64F7               	cpfsgt	tblptrh,c
 16638  001ABE  D007               	bra	u13317
 16639  001AC0  6AF5               	clrf	tablat,c
 16640  001AC2  000D               	tblwt		*+
 16641  001AC4  6AF5               	clrf	tablat,c
 16642  001AC6  000D               	tblwt		*+
 16643  001AC8  ECD2  F011         	call	PL423	;call to abstracted procedure
 16644  001ACC  D003               	bra	u13310
 16645  001ACE                     u13317:
 16646  001ACE  DBFE               	call	PL389	;call to abstracted procedure
 16647  001AD0  EC46  F012         	call	PL467	;call to abstracted procedure
 16648  001AD4                     u13310:
 16649                           
 16650                           ;tcpv4.c: 861: currentTCB->localLastAck = 0;
 16651  001AD4  EC4F  F012         	call	PL473	;call to abstracted procedure
 16652  001AD8  DBED               	call	PL387	;call to abstracted procedure
 16653  001ADA  64F7               	cpfsgt	tblptrh,c
 16654  001ADC  D007               	bra	u13327
 16655  001ADE  6AF5               	clrf	tablat,c
 16656  001AE0  000D               	tblwt		*+
 16657  001AE2  6AF5               	clrf	tablat,c
 16658  001AE4  000D               	tblwt		*+
 16659  001AE6  ECD2  F011         	call	PL423	;call to abstracted procedure
 16660  001AEA  D003               	bra	u13320
 16661  001AEC                     u13327:
 16662  001AEC  DBEF               	call	PL389	;call to abstracted procedure
 16663  001AEE  EC46  F012         	call	PL467	;call to abstracted procedure
 16664  001AF2                     u13320:
 16665                           
 16666                           ;tcpv4.c: 862: currentTCB->remoteSeqno = 0;
 16667  001AF2  ECCE  F011         	call	PL419	;call to abstracted procedure
 16668  001AF6  DBDE               	call	PL387	;call to abstracted procedure
 16669  001AF8  64F7               	cpfsgt	tblptrh,c
 16670  001AFA  D007               	bra	u13337
 16671  001AFC  6AF5               	clrf	tablat,c
 16672  001AFE  000D               	tblwt		*+
 16673  001B00  6AF5               	clrf	tablat,c
 16674  001B02  000D               	tblwt		*+
 16675  001B04  ECD2  F011         	call	PL423	;call to abstracted procedure
 16676  001B08  D003               	bra	u13330
 16677  001B0A                     u13337:
 16678  001B0A  DBE0               	call	PL389	;call to abstracted procedure
 16679  001B0C  EC46  F012         	call	PL467	;call to abstracted procedure
 16680  001B10                     u13330:
 16681                           
 16682                           ;tcpv4.c: 863: currentTCB->remoteAck = 0;
 16683  001B10  EC4B  F012         	call	PL471	;call to abstracted procedure
 16684  001B14  DBCF               	call	PL387	;call to abstracted procedure
 16685  001B16  64F7               	cpfsgt	tblptrh,c
 16686  001B18  D007               	bra	u13347
 16687  001B1A  6AF5               	clrf	tablat,c
 16688  001B1C  000D               	tblwt		*+
 16689  001B1E  6AF5               	clrf	tablat,c
 16690  001B20  000D               	tblwt		*+
 16691  001B22  ECD2  F011         	call	PL423	;call to abstracted procedure
 16692  001B26  D003               	bra	u13340
 16693  001B28                     u13347:
 16694  001B28  DBD1               	call	PL389	;call to abstracted procedure
 16695  001B2A  EC46  F012         	call	PL467	;call to abstracted procedure
 16696  001B2E                     u13340:
 16697                           
 16698                           ;tcpv4.c: 864: currentTCB->remoteWnd = 0;
 16699  001B2E  EC84  F012         	call	PL515	;call to abstracted procedure
 16700  001B32  DBC0               	call	PL387	;call to abstracted procedure
 16701  001B34  64F7               	cpfsgt	tblptrh,c
 16702  001B36  D003               	bra	u13357
 16703  001B38  ECD2  F011         	call	PL423	;call to abstracted procedure
 16704  001B3C  D003               	bra	u13350
 16705  001B3E                     u13357:
 16706  001B3E  DBC6               	call	PL389	;call to abstracted procedure
 16707  001B40  6AEE               	clrf	postinc0,c
 16708  001B42  6AEF               	clrf	indf0,c
 16709  001B44                     u13350:
 16710                           
 16711                           ;tcpv4.c: 865: currentTCB->mss = 0;
 16712  001B44  ECCA  F011         	call	PL417	;call to abstracted procedure
 16713  001B48  DBB5               	call	PL387	;call to abstracted procedure
 16714  001B4A  64F7               	cpfsgt	tblptrh,c
 16715  001B4C  D003               	bra	u13367
 16716  001B4E  ECD2  F011         	call	PL423	;call to abstracted procedure
 16717  001B52  D003               	bra	u13360
 16718  001B54                     u13367:
 16719  001B54  DBBB               	call	PL389	;call to abstracted procedure
 16720  001B56  6AEE               	clrf	postinc0,c
 16721  001B58  6AEF               	clrf	indf0,c
 16722  001B5A                     u13360:
 16723  001B5A                     l8646:
 16724                           
 16725                           ;tcpv4.c: 867: nextState = LISTEN;
 16726  001B5A  0E01               	movlw	1
 16727  001B5C  D26A               	goto	L14
 16728  001B5E                     l8648:
 16729                           
 16730                           ; BSR set to: 1
 16731                           ;tcpv4.c: 872: ;
 16732                           ;tcpv4.c: 873: if (currentTCB->timeoutsCount)
 16733  001B5E  0E34               	movlw	52
 16734  001B60  243F               	addwf	_currentTCB,w,c
 16735  001B62  DBA8               	call	PL387	;call to abstracted procedure
 16736  001B64  64F7               	cpfsgt	tblptrh,c
 16737  001B66  D003               	bra	u13377
 16738  001B68  0008               	tblrd		*
 16739  001B6A  50F5               	movf	tablat,w,c
 16740  001B6C  D002               	bra	u13370
 16741  001B6E                     u13377:
 16742  001B6E  DBAE               	call	PL389	;call to abstracted procedure
 16743  001B70  50EF               	movf	indf0,w,c
 16744  001B72                     u13370:
 16745  001B72  0900               	iorlw	0
 16746  001B74  E001 D74B          	bnz	l8638
 16747                           
 16748                           ;tcpv4.c: 877: else
 16749                           ;tcpv4.c: 878: {
 16750                           ;tcpv4.c: 880: currentTCB->flags = 0x04U;
 16751  001B78  DBAE               	call	PL393	;call to abstracted procedure
 16752  001B7A  DB9C               	call	PL387	;call to abstracted procedure
 16753  001B7C  64F7               	cpfsgt	tblptrh,c
 16754  001B7E  D004               	bra	u13397
 16755  001B80  0E04               	movlw	4
 16756  001B82  6EF5               	movwf	tablat,c
 16757  001B84  000C               	tblwt		*
 16758  001B86  D003               	bra	u13390
 16759  001B88                     u13397:
 16760  001B88  DBA1               	call	PL389	;call to abstracted procedure
 16761  001B8A  0E04               	movlw	4
 16762  001B8C  6EEF               	movwf	indf0,c
 16763  001B8E                     u13390:
 16764                           
 16765                           ;tcpv4.c: 881: if(TCP_Snd(currentTCB))
 16766  001B8E  EC41  F012         	call	PL465	;call to abstracted procedure
 16767  001B92  ECAC  F012         	call	_TCP_Snd	;wreg free
 16768  001B96  0900               	iorlw	0
 16769  001B98  E101 D36F          	bz	l8832
 16770                           
 16771                           ; BSR set to: 0
 16772                           ;tcpv4.c: 882: {
 16773                           ;tcpv4.c: 883: currentTCB->destIP = 0;
 16774  001B9C  EC7C  F012         	call	PL509	;call to abstracted procedure
 16775  001BA0  DB89               	call	PL387	;call to abstracted procedure
 16776  001BA2  64F7               	cpfsgt	tblptrh,c
 16777  001BA4  D006               	bra	u13417
 16778  001BA6  6AF5               	clrf	tablat,c
 16779  001BA8  000D               	tblwt		*+
 16780  001BAA  6AF5               	clrf	tablat,c
 16781  001BAC  000D               	tblwt		*+
 16782  001BAE  DBFA               	call	PL423	;call to abstracted procedure
 16783  001BB0  D003               	bra	u13410
 16784  001BB2                     u13417:
 16785  001BB2  DB8C               	call	PL389	;call to abstracted procedure
 16786  001BB4  EC46  F012         	call	PL467	;call to abstracted procedure
 16787  001BB8                     u13410:
 16788                           
 16789                           ;tcpv4.c: 884: currentTCB->destPort = 0;
 16790  001BB8  EC18  F012         	call	PL447	;call to abstracted procedure
 16791  001BBC  DB7B               	call	PL387	;call to abstracted procedure
 16792  001BBE  64F7               	cpfsgt	tblptrh,c
 16793  001BC0  D002               	bra	u13427
 16794  001BC2  DBF0               	call	PL423	;call to abstracted procedure
 16795  001BC4  D003               	bra	u13420
 16796  001BC6                     u13427:
 16797  001BC6  DB82               	call	PL389	;call to abstracted procedure
 16798  001BC8  6AEE               	clrf	postinc0,c
 16799  001BCA  6AEF               	clrf	indf0,c
 16800  001BCC                     u13420:
 16801                           
 16802                           ;tcpv4.c: 885: currentTCB->localSeqno = 0;
 16803  001BCC  DBFE               	call	PL427	;call to abstracted procedure
 16804  001BCE  DB72               	call	PL387	;call to abstracted procedure
 16805  001BD0  64F7               	cpfsgt	tblptrh,c
 16806  001BD2  D006               	bra	u13437
 16807  001BD4  6AF5               	clrf	tablat,c
 16808  001BD6  000D               	tblwt		*+
 16809  001BD8  6AF5               	clrf	tablat,c
 16810  001BDA  000D               	tblwt		*+
 16811  001BDC  DBE3               	call	PL423	;call to abstracted procedure
 16812  001BDE  D003               	bra	u13430
 16813  001BE0                     u13437:
 16814  001BE0  DB75               	call	PL389	;call to abstracted procedure
 16815  001BE2  EC46  F012         	call	PL467	;call to abstracted procedure
 16816  001BE6                     u13430:
 16817                           
 16818                           ;tcpv4.c: 886: currentTCB->localLastAck = 0;
 16819  001BE6  EC4F  F012         	call	PL473	;call to abstracted procedure
 16820  001BEA  DB64               	call	PL387	;call to abstracted procedure
 16821  001BEC  64F7               	cpfsgt	tblptrh,c
 16822  001BEE  D006               	bra	u13447
 16823  001BF0  6AF5               	clrf	tablat,c
 16824  001BF2  000D               	tblwt		*+
 16825  001BF4  6AF5               	clrf	tablat,c
 16826  001BF6  000D               	tblwt		*+
 16827  001BF8  DBD5               	call	PL423	;call to abstracted procedure
 16828  001BFA  D003               	bra	u13440
 16829  001BFC                     u13447:
 16830  001BFC  DB67               	call	PL389	;call to abstracted procedure
 16831  001BFE  EC46  F012         	call	PL467	;call to abstracted procedure
 16832  001C02                     u13440:
 16833                           
 16834                           ;tcpv4.c: 887: currentTCB->remoteSeqno = 0;
 16835  001C02  DBCC               	call	PL419	;call to abstracted procedure
 16836  001C04  DB57               	call	PL387	;call to abstracted procedure
 16837  001C06  64F7               	cpfsgt	tblptrh,c
 16838  001C08  D006               	bra	u13457
 16839  001C0A  6AF5               	clrf	tablat,c
 16840  001C0C  000D               	tblwt		*+
 16841  001C0E  6AF5               	clrf	tablat,c
 16842  001C10  000D               	tblwt		*+
 16843  001C12  DBC8               	call	PL423	;call to abstracted procedure
 16844  001C14  D003               	bra	u13450
 16845  001C16                     u13457:
 16846  001C16  DB5A               	call	PL389	;call to abstracted procedure
 16847  001C18  EC46  F012         	call	PL467	;call to abstracted procedure
 16848  001C1C                     u13450:
 16849                           
 16850                           ;tcpv4.c: 888: currentTCB->remoteAck = 0;
 16851  001C1C  EC4B  F012         	call	PL471	;call to abstracted procedure
 16852  001C20  DB49               	call	PL387	;call to abstracted procedure
 16853  001C22  64F7               	cpfsgt	tblptrh,c
 16854  001C24  D006               	bra	u13467
 16855  001C26  6AF5               	clrf	tablat,c
 16856  001C28  000D               	tblwt		*+
 16857  001C2A  6AF5               	clrf	tablat,c
 16858  001C2C  000D               	tblwt		*+
 16859  001C2E  DBBA               	call	PL423	;call to abstracted procedure
 16860  001C30  D003               	bra	u13460
 16861  001C32                     u13467:
 16862  001C32  DB4C               	call	PL389	;call to abstracted procedure
 16863  001C34  EC46  F012         	call	PL467	;call to abstracted procedure
 16864  001C38                     u13460:
 16865                           
 16866                           ;tcpv4.c: 889: currentTCB->remoteWnd = 0;
 16867  001C38  EC84  F012         	call	PL515	;call to abstracted procedure
 16868  001C3C  DB3B               	call	PL387	;call to abstracted procedure
 16869  001C3E  64F7               	cpfsgt	tblptrh,c
 16870  001C40  D002               	bra	u13477
 16871  001C42  DBB0               	call	PL423	;call to abstracted procedure
 16872  001C44  D003               	bra	u13470
 16873  001C46                     u13477:
 16874  001C46  DB42               	call	PL389	;call to abstracted procedure
 16875  001C48  6AEE               	clrf	postinc0,c
 16876  001C4A  6AEF               	clrf	indf0,c
 16877  001C4C                     u13470:
 16878                           
 16879                           ;tcpv4.c: 890: currentTCB->mss = 0;
 16880  001C4C  DBA3               	call	PL417	;call to abstracted procedure
 16881  001C4E  DB32               	call	PL387	;call to abstracted procedure
 16882  001C50  64F7               	cpfsgt	tblptrh,c
 16883  001C52  D002               	bra	u13487
 16884  001C54  DBA7               	call	PL423	;call to abstracted procedure
 16885  001C56  D003               	bra	u13480
 16886  001C58                     u13487:
 16887  001C58  DB39               	call	PL389	;call to abstracted procedure
 16888  001C5A  6AEE               	clrf	postinc0,c
 16889  001C5C  6AEF               	clrf	indf0,c
 16890  001C5E                     u13480:
 16891  001C5E  D77D               	goto	l8646
 16892  001C60                     l8662:
 16893  001C60  0101               	movlb	1	; () banked
 16894  001C62  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 16895                           
 16896                           ; Switch size 1, requested type "space"
 16897                           ; Number of cases is 6, Range of values is 0 to 12
 16898                           ; switch strategies available:
 16899                           ; Name         Instructions Cycles
 16900                           ; simple_byte           19    10 (average)
 16901                           ;	Chosen strategy is simple_byte
 16902  001C64  E101 D68D          	bz	l8634
 16903  001C68  0A04               	xorlw	4	; case 4
 16904  001C6A  E101 D5E2          	bz	l8620
 16905  001C6E  0A01               	xorlw	1	; case 5
 16906  001C70  E101 D563          	bz	l8608
 16907  001C74  0A0C               	xorlw	12	; case 9
 16908  001C76  E101 D6D0          	bz	l8640
 16909  001C7A  0A03               	xorlw	3	; case 10
 16910  001C7C  E101 D6CD          	bz	l8640
 16911  001C80  0A06               	xorlw	6	; case 12
 16912  001C82  E101 D76C          	bz	l8648
 16913  001C86  D2F9               	goto	l8832
 16914  001C88                     l8664:
 16915                           
 16916                           ; BSR set to: 1
 16917                           ;tcpv4.c: 904: ;
 16918                           ;tcpv4.c: 905: if (currentTCB->destIP == receivedRemoteAddress)
 16919  001C88  0E02               	movlw	2
 16920  001C8A  243F               	addwf	_currentTCB,w,c
 16921  001C8C  DB13               	call	PL387	;call to abstracted procedure
 16922  001C8E  64F7               	cpfsgt	tblptrh,c
 16923  001C90  D002               	bra	u13497
 16924  001C92  DB25               	call	PL395	;call to abstracted procedure
 16925  001C94  D002               	bra	u13490
 16926  001C96                     u13497:
 16927  001C96  DB1A               	call	PL389	;call to abstracted procedure
 16928  001C98  DB43               	call	PL403	;call to abstracted procedure
 16929  001C9A                     u13490:
 16930  001C9A  503B               	movf	_receivedRemoteAddress,w,c
 16931  001C9C  0101               	movlb	1	; () banked
 16932  001C9E  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16933  001CA0  E109               	bnz	u13501
 16934  001CA2  503C               	movf	_receivedRemoteAddress+1,w,c
 16935  001CA4  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16936  001CA6  E106               	bnz	u13501
 16937  001CA8  503D               	movf	_receivedRemoteAddress+2,w,c
 16938  001CAA  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16939  001CAC  E103               	bnz	u13501
 16940  001CAE  503E               	movf	_receivedRemoteAddress+3,w,c
 16941  001CB0  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16942  001CB2  A4D8               	btfss	status,2,c
 16943  001CB4                     u13501:
 16944  001CB4  D2E2               	goto	l8832
 16945                           
 16946                           ; BSR set to: 1
 16947                           ;tcpv4.c: 906: {
 16948                           ;tcpv4.c: 910: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 16949  001CB6  0E0C               	movlw	12
 16950  001CB8  243F               	addwf	_currentTCB,w,c
 16951  001CBA  DAFC               	call	PL387	;call to abstracted procedure
 16952  001CBC  64F7               	cpfsgt	tblptrh,c
 16953  001CBE  D002               	bra	u13517
 16954  001CC0  DB0E               	call	PL395	;call to abstracted procedure
 16955  001CC2  D002               	bra	u13510
 16956  001CC4                     u13517:
 16957  001CC4  DB03               	call	PL389	;call to abstracted procedure
 16958  001CC6  DB2C               	call	PL403	;call to abstracted procedure
 16959  001CC8                     u13510:
 16960  001CC8  0101               	movlb	1	; () banked
 16961  001CCA  51D8               	movf	(_tcpHeader+4)& (0+255),w,b
 16962  001CCC  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16963  001CCE  E109               	bnz	u13521
 16964  001CD0  51D9               	movf	(_tcpHeader+5)& (0+255),w,b
 16965  001CD2  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16966  001CD4  E106               	bnz	u13521
 16967  001CD6  51DA               	movf	(_tcpHeader+6)& (0+255),w,b
 16968  001CD8  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16969  001CDA  E103               	bnz	u13521
 16970  001CDC  51DB               	movf	(_tcpHeader+7)& (0+255),w,b
 16971  001CDE  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16972  001CE0  A4D8               	btfss	status,2,c
 16973  001CE2                     u13521:
 16974  001CE2  D2CB               	goto	l8832
 16975                           
 16976                           ; BSR set to: 1
 16977                           ;tcpv4.c: 911: {
 16978                           ;tcpv4.c: 915: if (currentTCB->localLastAck < tcpHeader.ackNumber)
 16979  001CE4  0E14               	movlw	20
 16980  001CE6  243F               	addwf	_currentTCB,w,c
 16981  001CE8  DAE5               	call	PL387	;call to abstracted procedure
 16982  001CEA  64F7               	cpfsgt	tblptrh,c
 16983  001CEC  D002               	bra	u13537
 16984  001CEE  DAF7               	call	PL395	;call to abstracted procedure
 16985  001CF0  D002               	bra	u13530
 16986  001CF2                     u13537:
 16987  001CF2  DAEC               	call	PL389	;call to abstracted procedure
 16988  001CF4  DB15               	call	PL403	;call to abstracted procedure
 16989  001CF6                     u13530:
 16990  001CF6  0101               	movlb	1	; () banked
 16991  001CF8  51DC               	movf	(_tcpHeader+8)& (0+255),w,b
 16992  001CFA  5D02               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16993  001CFC  51DD               	movf	(_tcpHeader+9)& (0+255),w,b
 16994  001CFE  5903               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16995  001D00  51DE               	movf	(_tcpHeader+10)& (0+255),w,b
 16996  001D02  5904               	subwfb	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16997  001D04  51DF               	movf	(_tcpHeader+11)& (0+255),w,b
 16998  001D06  5905               	subwfb	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16999  001D08  E301 D2B7          	bc	l8832
 17000                           
 17001                           ; BSR set to: 1
 17002                           ;tcpv4.c: 916: {
 17003                           ;tcpv4.c: 918: if ((currentTCB->localSeqno + 1) >= tcpHeader.ackNumber)
 17004  001D0C  0E10               	movlw	16
 17005  001D0E  243F               	addwf	_currentTCB,w,c
 17006  001D10  DAD1               	call	PL387	;call to abstracted procedure
 17007  001D12  64F7               	cpfsgt	tblptrh,c
 17008  001D14  D002               	bra	u13557
 17009  001D16  DAE3               	call	PL395	;call to abstracted procedure
 17010  001D18  D002               	bra	u13550
 17011  001D1A                     u13557:
 17012  001D1A  DAD8               	call	PL389	;call to abstracted procedure
 17013  001D1C  DB01               	call	PL403	;call to abstracted procedure
 17014  001D1E                     u13550:
 17015  001D1E  DAF2               	call	PL401	;call to abstracted procedure
 17016  001D20  51DC               	movf	(_tcpHeader+8)& (0+255),w,b
 17017  001D22  5D06               	subwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 17018  001D24  51DD               	movf	(_tcpHeader+9)& (0+255),w,b
 17019  001D26  5907               	subwfb	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 17020  001D28  51DE               	movf	(_tcpHeader+10)& (0+255),w,b
 17021  001D2A  5908               	subwfb	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 17022  001D2C  51DF               	movf	(_tcpHeader+11)& (0+255),w,b
 17023  001D2E  5909               	subwfb	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 17024  001D30  E201 D0A3          	bnc	l8688
 17025                           
 17026                           ; BSR set to: 1
 17027                           ;tcpv4.c: 919: {
 17028                           ;tcpv4.c: 920: notAckBytes = currentTCB->localSeqno - tcpHeader.ackNumber;
 17029  001D34  0E10               	movlw	16
 17030  001D36  243F               	addwf	_currentTCB,w,c
 17031  001D38  DABD               	call	PL387	;call to abstracted procedure
 17032  001D3A  64F7               	cpfsgt	tblptrh,c
 17033  001D3C  D003               	bra	u13577
 17034  001D3E  0009               	tblrd		*+
 17035  001D40  DADB               	call	PL397	;call to abstracted procedure
 17036  001D42  D005               	bra	u13570
 17037  001D44                     u13577:
 17038  001D44  DAC3               	call	PL389	;call to abstracted procedure
 17039  001D46  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17040  001D4A  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17041  001D4E                     u13570:
 17042  001D4E  0101               	movlb	1	; () banked
 17043  001D50  51DC               	movf	(_tcpHeader+8)& (0+255),w,b
 17044  001D52  5D02               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17045  001D54  6F0D               	movwf	TCP_FiniteStateMachine@notAckBytes& (0+255),b
 17046  001D56  51DD               	movf	(_tcpHeader+9)& (0+255),w,b
 17047  001D58  5903               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17048  001D5A  6F0E               	movwf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),b
 17049                           
 17050                           ;tcpv4.c: 923: currentTCB->txBufferPtr = currentTCB->txBufferPtr - notAckBytes;
 17051  001D5C  0E25               	movlw	37
 17052  001D5E  243F               	addwf	_currentTCB,w,c
 17053  001D60  DAA9               	call	PL387	;call to abstracted procedure
 17054  001D62  64F7               	cpfsgt	tblptrh,c
 17055  001D64  D003               	bra	u13587
 17056  001D66  0009               	tblrd		*+
 17057  001D68  DAC7               	call	PL397	;call to abstracted procedure
 17058  001D6A  D005               	bra	u13580
 17059  001D6C                     u13587:
 17060  001D6C  DAAF               	call	PL389	;call to abstracted procedure
 17061  001D6E  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17062  001D72  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17063  001D76                     u13580:
 17064  001D76  0101               	movlb	1	; () banked
 17065  001D78  510D               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 17066  001D7A  5F02               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 17067  001D7C  510E               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 17068  001D7E  5B03               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 17069  001D80  0E25               	movlw	37
 17070  001D82  DAF7               	call	PL407	;call to abstracted procedure
 17071  001D84  64F7               	cpfsgt	tblptrh,c
 17072  001D86  D002               	bra	u13597
 17073  001D88  DB5B               	call	PL453	;call to abstracted procedure
 17074  001D8A  D002               	bra	u13590
 17075  001D8C                     u13597:
 17076  001D8C  DA9F               	call	PL389	;call to abstracted procedure
 17077  001D8E  DBAF               	call	PL501	;call to abstracted procedure
 17078  001D90                     u13590:
 17079                           
 17080                           ;tcpv4.c: 924: currentTCB->bytesToSend = currentTCB->bytesToSend + notAckBytes;
 17081  001D90  DBB7               	call	PL513	;call to abstracted procedure
 17082  001D92  DA90               	call	PL387	;call to abstracted procedure
 17083  001D94  64F7               	cpfsgt	tblptrh,c
 17084  001D96  D003               	bra	u13607
 17085  001D98  0009               	tblrd		*+
 17086  001D9A  DAAE               	call	PL397	;call to abstracted procedure
 17087  001D9C  D005               	bra	u13600
 17088  001D9E                     u13607:
 17089  001D9E  DA96               	call	PL389	;call to abstracted procedure
 17090  001DA0  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17091  001DA4  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17092  001DA8                     u13600:
 17093  001DA8  0101               	movlb	1	; () banked
 17094  001DAA  510D               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 17095  001DAC  2702               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 17096  001DAE  510E               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 17097  001DB0  2303               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 17098  001DB2  0E27               	movlw	39
 17099  001DB4  DADE               	call	PL407	;call to abstracted procedure
 17100  001DB6  64F7               	cpfsgt	tblptrh,c
 17101  001DB8  D002               	bra	u13617
 17102  001DBA  DB42               	call	PL453	;call to abstracted procedure
 17103  001DBC  D002               	bra	u13610
 17104  001DBE                     u13617:
 17105  001DBE  DA86               	call	PL389	;call to abstracted procedure
 17106  001DC0  DB96               	call	PL501	;call to abstracted procedure
 17107  001DC2                     u13610:
 17108                           
 17109                           ;tcpv4.c: 927: if(currentTCB->bytesToSend == 0)
 17110  001DC2  DB9E               	call	PL513	;call to abstracted procedure
 17111  001DC4  DA77               	call	PL387	;call to abstracted procedure
 17112  001DC6  64F7               	cpfsgt	tblptrh,c
 17113  001DC8  D003               	bra	u13627
 17114  001DCA  0009               	tblrd		*+
 17115  001DCC  DA95               	call	PL397	;call to abstracted procedure
 17116  001DCE  D005               	bra	u13620
 17117  001DD0                     u13627:
 17118  001DD0  DA7D               	call	PL389	;call to abstracted procedure
 17119  001DD2  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17120  001DD6  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17121  001DDA                     u13620:
 17122  001DDA  0101               	movlb	1	; () banked
 17123  001DDC  5102               	movf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17124  001DDE  1103               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17125  001DE0  E117               	bnz	l8678
 17126                           
 17127                           ; BSR set to: 1
 17128                           ;tcpv4.c: 928: {
 17129                           ;tcpv4.c: 929: if (currentTCB->txBufState == TX_BUFF_IN_USE)
 17130  001DE2  0E29               	movlw	41
 17131  001DE4  243F               	addwf	_currentTCB,w,c
 17132  001DE6  DA66               	call	PL387	;call to abstracted procedure
 17133  001DE8  64F7               	cpfsgt	tblptrh,c
 17134  001DEA  D003               	bra	u13647
 17135  001DEC  0008               	tblrd		*
 17136  001DEE  50F5               	movf	tablat,w,c
 17137  001DF0  D002               	bra	u13640
 17138  001DF2                     u13647:
 17139  001DF2  DA6C               	call	PL389	;call to abstracted procedure
 17140  001DF4  50EF               	movf	indf0,w,c
 17141  001DF6                     u13640:
 17142  001DF6  0A02               	xorlw	2
 17143  001DF8  E10B               	bnz	l8678
 17144                           
 17145                           ;tcpv4.c: 930: {
 17146                           ;tcpv4.c: 931: currentTCB->txBufState = NO_BUFF;
 17147  001DFA  0E29               	movlw	41
 17148  001DFC  243F               	addwf	_currentTCB,w,c
 17149  001DFE  0101               	movlb	1	; () banked
 17150  001E00  DA59               	call	PL387	;call to abstracted procedure
 17151  001E02  64F7               	cpfsgt	tblptrh,c
 17152  001E04  D003               	bra	u13667
 17153  001E06  6AF5               	clrf	tablat,c
 17154  001E08  000C               	tblwt		*
 17155  001E0A  D002               	bra	u13660
 17156  001E0C                     u13667:
 17157  001E0C  DA5F               	call	PL389	;call to abstracted procedure
 17158  001E0E  6AEF               	clrf	indf0,c
 17159  001E10                     u13660:
 17160  001E10                     l8678:
 17161                           
 17162                           ;tcpv4.c: 932: }
 17163                           ;tcpv4.c: 933: }
 17164                           ;tcpv4.c: 935: currentTCB->localLastAck = tcpHeader.ackNumber - 1;
 17165  001E10  EE21  F0DC         	lfsr	2,_tcpHeader+8
 17166  001E14  0EFF               	movlw	255
 17167  001E16  24DE               	addwf	postinc2,w,c
 17168  001E18  0101               	movlb	1	; () banked
 17169  001E1A  6F00               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17170  001E1C  0EFF               	movlw	255
 17171  001E1E  20DE               	addwfc	postinc2,w,c
 17172  001E20  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17173  001E22  0EFF               	movlw	255
 17174  001E24  20DE               	addwfc	postinc2,w,c
 17175  001E26  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 17176  001E28  0EFF               	movlw	255
 17177  001E2A  20DE               	addwfc	postinc2,w,c
 17178  001E2C  6F03               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 17179  001E2E  0E14               	movlw	20
 17180  001E30  DAA0               	call	PL407	;call to abstracted procedure
 17181  001E32  64F7               	cpfsgt	tblptrh,c
 17182  001E34  D003               	bra	u13677
 17183  001E36  DB0B               	call	PL455	;call to abstracted procedure
 17184  001E38  DB03               	call	PL453	;call to abstracted procedure
 17185  001E3A  D002               	bra	u13670
 17186  001E3C                     u13677:
 17187  001E3C  DA47               	call	PL389	;call to abstracted procedure
 17188  001E3E  DB45               	call	PL487	;call to abstracted procedure
 17189  001E40                     u13670:
 17190                           
 17191                           ;tcpv4.c: 936: currentTCB->localSeqno = tcpHeader.ackNumber;
 17192  001E40  DAC4               	call	PL427	;call to abstracted procedure
 17193  001E42  DA38               	call	PL387	;call to abstracted procedure
 17194  001E44  64F7               	cpfsgt	tblptrh,c
 17195  001E46  D002               	bra	u13687
 17196  001E48  DB09               	call	PL457	;call to abstracted procedure
 17197  001E4A  D002               	bra	u13680
 17198  001E4C                     u13687:
 17199  001E4C  DA3F               	call	PL389	;call to abstracted procedure
 17200  001E4E  DB46               	call	PL493	;call to abstracted procedure
 17201  001E50                     u13680:
 17202                           
 17203                           ;tcpv4.c: 939: if(rcvPayloadLen > 0)
 17204  001E50  0101               	movlb	1	; () banked
 17205  001E52  51D2               	movf	_rcvPayloadLen& (0+255),w,b
 17206  001E54  11D3               	iorwf	(_rcvPayloadLen+1)& (0+255),w,b
 17207  001E56  E101 D210          	bz	l8832
 17208                           
 17209                           ; BSR set to: 1
 17210                           ;tcpv4.c: 940: {
 17211                           ;tcpv4.c: 941: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 17212  001E5A  0E08               	movlw	8
 17213  001E5C  243F               	addwf	_currentTCB,w,c
 17214  001E5E  DA2A               	call	PL387	;call to abstracted procedure
 17215  001E60  64F7               	cpfsgt	tblptrh,c
 17216  001E62  D002               	bra	u13707
 17217  001E64  DABE               	call	PL439	;call to abstracted procedure
 17218  001E66  D002               	bra	u13700
 17219  001E68                     u13707:
 17220  001E68  DA31               	call	PL389	;call to abstracted procedure
 17221  001E6A  DB26               	call	PL477	;call to abstracted procedure
 17222  001E6C                     u13700:
 17223                           
 17224                           ;tcpv4.c: 944: TCP_PayloadSave(rcvPayloadLen);
 17225  001E6C  C1D2  F0EE         	movff	_rcvPayloadLen,TCP_PayloadSave@len
 17226  001E70  C1D3  F0EF         	movff	_rcvPayloadLen+1,TCP_PayloadSave@len+1
 17227  001E74  EC1D  F01F         	call	_TCP_PayloadSave	;wreg free
 17228  001E78  D200               	goto	l8832
 17229  001E7A                     l8688:
 17230                           
 17231                           ; BSR set to: 1
 17232                           ;tcpv4.c: 947: {
 17233                           ;tcpv4.c: 951: currentTCB->flags = 0x04U | 0x10U;
 17234  001E7A  0E35               	movlw	53
 17235  001E7C  243F               	addwf	_currentTCB,w,c
 17236  001E7E  DA1A               	call	PL387	;call to abstracted procedure
 17237  001E80  64F7               	cpfsgt	tblptrh,c
 17238  001E82  D004               	bra	u13717
 17239  001E84  0E14               	movlw	20
 17240  001E86  6EF5               	movwf	tablat,c
 17241  001E88  000C               	tblwt		*
 17242  001E8A  D003               	bra	u13710
 17243  001E8C                     u13717:
 17244  001E8C  DA1F               	call	PL389	;call to abstracted procedure
 17245  001E8E  0E14               	movlw	20
 17246  001E90  6EEF               	movwf	indf0,c
 17247  001E92                     u13710:
 17248                           
 17249                           ;tcpv4.c: 952: if (TCP_Snd(currentTCB))
 17250  001E92  DAF7               	call	PL465	;call to abstracted procedure
 17251  001E94  ECAC  F012         	call	_TCP_Snd	;wreg free
 17252  001E98  EF74  F00A         	goto	L10
 17253  001E9C                     l8696:
 17254                           
 17255                           ; BSR set to: 1
 17256                           ;tcpv4.c: 963: ;
 17257                           ;tcpv4.c: 964: currentTCB->flags = 0x01U;
 17258  001E9C  0E35               	movlw	53
 17259  001E9E  243F               	addwf	_currentTCB,w,c
 17260  001EA0  DA09               	call	PL387	;call to abstracted procedure
 17261  001EA2  64F7               	cpfsgt	tblptrh,c
 17262  001EA4  D004               	bra	u13737
 17263  001EA6  0E01               	movlw	1
 17264  001EA8  6EF5               	movwf	tablat,c
 17265  001EAA  000C               	tblwt		*
 17266  001EAC  D003               	bra	u13730
 17267  001EAE                     u13737:
 17268  001EAE  DA0E               	call	PL389	;call to abstracted procedure
 17269  001EB0  0E01               	movlw	1
 17270  001EB2  6EEF               	movwf	indf0,c
 17271  001EB4                     u13730:
 17272  001EB4  D5A9               	goto	l8636
 17273  001EB6                     l8702:
 17274                           
 17275                           ; BSR set to: 1
 17276                           ;tcpv4.c: 971: ;
 17277                           ;tcpv4.c: 974: currentTCB->localSeqno = tcpHeader.ackNumber;
 17278  001EB6  0E10               	movlw	16
 17279  001EB8  243F               	addwf	_currentTCB,w,c
 17280  001EBA  D9FC               	call	PL387	;call to abstracted procedure
 17281  001EBC  64F7               	cpfsgt	tblptrh,c
 17282  001EBE  D002               	bra	u13747
 17283  001EC0  DACD               	call	PL457	;call to abstracted procedure
 17284  001EC2  D002               	bra	u13740
 17285  001EC4                     u13747:
 17286  001EC4  DA03               	call	PL389	;call to abstracted procedure
 17287  001EC6  DB0A               	call	PL493	;call to abstracted procedure
 17288  001EC8                     u13740:
 17289                           
 17290                           ;tcpv4.c: 975: currentTCB->remoteAck = currentTCB->remoteAck + 1;
 17291  001EC8  DAE6               	call	PL471	;call to abstracted procedure
 17292  001ECA  D9F4               	call	PL387	;call to abstracted procedure
 17293  001ECC  64F7               	cpfsgt	tblptrh,c
 17294  001ECE  D002               	bra	u13757
 17295  001ED0  DA06               	call	PL395	;call to abstracted procedure
 17296  001ED2  D002               	bra	u13750
 17297  001ED4                     u13757:
 17298  001ED4  D9FB               	call	PL389	;call to abstracted procedure
 17299  001ED6  DA24               	call	PL403	;call to abstracted procedure
 17300  001ED8                     u13750:
 17301  001ED8  DA15               	call	PL401	;call to abstracted procedure
 17302  001EDA  0E0C               	movlw	12
 17303  001EDC  DA9C               	call	PL443	;call to abstracted procedure
 17304  001EDE  64F7               	cpfsgt	tblptrh,c
 17305  001EE0  D002               	bra	u13767
 17306  001EE2  DA8C               	call	PL441	;call to abstracted procedure
 17307  001EE4  D002               	bra	u13760
 17308  001EE6                     u13767:
 17309  001EE6  D9F2               	call	PL389	;call to abstracted procedure
 17310  001EE8  DADE               	call	PL475	;call to abstracted procedure
 17311  001EEA                     u13760:
 17312                           
 17313                           ;tcpv4.c: 977: currentTCB->socketState = SOCKET_CLOSING;
 17314  001EEA  0E36               	movlw	54
 17315  001EEC  243F               	addwf	_currentTCB,w,c
 17316  001EEE  0101               	movlb	1	; () banked
 17317  001EF0  D9E1               	call	PL387	;call to abstracted procedure
 17318  001EF2  64F7               	cpfsgt	tblptrh,c
 17319  001EF4  D004               	bra	u13777
 17320  001EF6  0E04               	movlw	4
 17321  001EF8  6EF5               	movwf	tablat,c
 17322  001EFA  000C               	tblwt		*
 17323  001EFC  D003               	bra	u13770
 17324  001EFE                     u13777:
 17325  001EFE  D9E6               	call	PL389	;call to abstracted procedure
 17326  001F00  0E04               	movlw	4
 17327  001F02  6EEF               	movwf	indf0,c
 17328  001F04                     u13770:
 17329                           
 17330                           ;tcpv4.c: 978: currentTCB->timeout = ((unsigned long)1*2);
 17331  001F04  DA6A               	call	PL431	;call to abstracted procedure
 17332  001F06  D9D6               	call	PL387	;call to abstracted procedure
 17333  001F08  64F7               	cpfsgt	tblptrh,c
 17334  001F0A  D002               	bra	u13787
 17335  001F0C  DAB4               	call	PL459	;call to abstracted procedure
 17336  001F0E  D002               	bra	u13780
 17337  001F10                     u13787:
 17338  001F10  D9DD               	call	PL389	;call to abstracted procedure
 17339  001F12  DB05               	call	PL611	;call to abstracted procedure
 17340  001F14                     u13780:
 17341                           
 17342                           ;tcpv4.c: 979: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 17343  001F14  DA5E               	call	PL429	;call to abstracted procedure
 17344  001F16  D9CE               	call	PL387	;call to abstracted procedure
 17345  001F18  64F7               	cpfsgt	tblptrh,c
 17346  001F1A  D002               	bra	u13797
 17347  001F1C  DAAC               	call	PL459	;call to abstracted procedure
 17348  001F1E  D002               	bra	u13790
 17349  001F20                     u13797:
 17350  001F20  D9D5               	call	PL389	;call to abstracted procedure
 17351  001F22  DAFD               	call	PL611	;call to abstracted procedure
 17352  001F24                     u13790:
 17353                           
 17354                           ;tcpv4.c: 980: currentTCB->timeoutsCount = (5u);
 17355  001F24  DA33               	call	PL415	;call to abstracted procedure
 17356  001F26  D9C6               	call	PL387	;call to abstracted procedure
 17357  001F28  64F7               	cpfsgt	tblptrh,c
 17358  001F2A  D004               	bra	u13807
 17359  001F2C  0E05               	movlw	5
 17360  001F2E  6EF5               	movwf	tablat,c
 17361  001F30  000C               	tblwt		*
 17362  001F32  D003               	bra	u13800
 17363  001F34                     u13807:
 17364  001F34  D9CB               	call	PL389	;call to abstracted procedure
 17365  001F36  0E05               	movlw	5
 17366  001F38  6EEF               	movwf	indf0,c
 17367  001F3A                     u13800:
 17368                           
 17369                           ;tcpv4.c: 982: currentTCB->flags = 0x01U | 0x10U;
 17370  001F3A  D9CD               	call	PL393	;call to abstracted procedure
 17371  001F3C  D9BB               	call	PL387	;call to abstracted procedure
 17372  001F3E  64F7               	cpfsgt	tblptrh,c
 17373  001F40  D004               	bra	u13817
 17374  001F42  0E11               	movlw	17
 17375  001F44  6EF5               	movwf	tablat,c
 17376  001F46  000C               	tblwt		*
 17377  001F48  D003               	bra	u13810
 17378  001F4A                     u13817:
 17379  001F4A  D9C0               	call	PL389	;call to abstracted procedure
 17380  001F4C  0E11               	movlw	17
 17381  001F4E  6EEF               	movwf	indf0,c
 17382  001F50                     u13810:
 17383                           
 17384                           ;tcpv4.c: 984: nextState = LAST_ACK;
 17385  001F50  0E09               	movlw	9
 17386  001F52  D55B               	goto	L12
 17387  001F54                     l8710:
 17388                           
 17389                           ; BSR set to: 1
 17390                           ;tcpv4.c: 993: ;
 17391                           ;tcpv4.c: 994: if (currentTCB->timeoutsCount)
 17392  001F54  0E34               	movlw	52
 17393  001F56  243F               	addwf	_currentTCB,w,c
 17394  001F58  D9AD               	call	PL387	;call to abstracted procedure
 17395  001F5A  64F7               	cpfsgt	tblptrh,c
 17396  001F5C  D003               	bra	u13827
 17397  001F5E  0008               	tblrd		*
 17398  001F60  50F5               	movf	tablat,w,c
 17399  001F62  D002               	bra	u13820
 17400  001F64                     u13827:
 17401  001F64  D9B3               	call	PL389	;call to abstracted procedure
 17402  001F66  50EF               	movf	indf0,w,c
 17403  001F68                     u13820:
 17404  001F68  0900               	iorlw	0
 17405  001F6A  E001 D550          	bnz	l8638
 17406                           
 17407                           ;tcpv4.c: 998: {
 17408                           ;tcpv4.c: 1000: currentTCB->flags = 0x04U;
 17409  001F6E  D9B3               	call	PL393	;call to abstracted procedure
 17410  001F70  D9A1               	call	PL387	;call to abstracted procedure
 17411  001F72  64F7               	cpfsgt	tblptrh,c
 17412  001F74  D004               	bra	u13847
 17413  001F76  0E04               	movlw	4
 17414  001F78  6EF5               	movwf	tablat,c
 17415  001F7A  000C               	tblwt		*
 17416  001F7C  D003               	bra	u13840
 17417  001F7E                     u13847:
 17418  001F7E  D9A6               	call	PL389	;call to abstracted procedure
 17419  001F80  0E04               	movlw	4
 17420  001F82  6EEF               	movwf	indf0,c
 17421  001F84                     u13840:
 17422                           
 17423                           ;tcpv4.c: 1001: if(TCP_Snd(currentTCB))
 17424  001F84  DA7E               	call	PL465	;call to abstracted procedure
 17425  001F86  ECAC  F012         	call	_TCP_Snd	;wreg free
 17426  001F8A  EF74  F00A         	goto	L10
 17427  001F8E                     l8724:
 17428  001F8E  0101               	movlb	1	; () banked
 17429  001F90  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 17430                           
 17431                           ; Switch size 1, requested type "space"
 17432                           ; Number of cases is 7, Range of values is 0 to 12
 17433                           ; switch strategies available:
 17434                           ; Name         Instructions Cycles
 17435                           ; simple_byte           22    12 (average)
 17436                           ;	Chosen strategy is simple_byte
 17437  001F92  E084               	bz	l8696
 17438  001F94  0A04               	xorlw	4	; case 4
 17439  001F96  E101 D677          	bz	l8664
 17440  001F9A  0A02               	xorlw	2	; case 6
 17441  001F9C  E08C               	bz	l8702
 17442  001F9E  0A01               	xorlw	1	; case 7
 17443  001FA0  E08A               	bz	l8702
 17444  001FA2  0A0E               	xorlw	14	; case 9
 17445  001FA4  E102 EF3B  F009    	bz	l1194
 17446  001FAA  0A03               	xorlw	3	; case 10
 17447  001FAC  E102 EF3B  F009    	bz	l1194
 17448  001FB2  0A06               	xorlw	6	; case 12
 17449  001FB4  E0CF               	bz	l8710
 17450  001FB6  D161               	goto	l8832
 17451  001FB8                     l8726:
 17452                           
 17453                           ; BSR set to: 1
 17454                           ;tcpv4.c: 1016: ;
 17455                           ;tcpv4.c: 1017: currentTCB->flags = 0x10U;
 17456  001FB8  0E35               	movlw	53
 17457  001FBA  243F               	addwf	_currentTCB,w,c
 17458  001FBC  D97B               	call	PL387	;call to abstracted procedure
 17459  001FBE  64F7               	cpfsgt	tblptrh,c
 17460  001FC0  D004               	bra	u13867
 17461  001FC2  0E10               	movlw	16
 17462  001FC4  6EF5               	movwf	tablat,c
 17463  001FC6  000C               	tblwt		*
 17464  001FC8  D003               	bra	u13860
 17465  001FCA                     u13867:
 17466  001FCA  D980               	call	PL389	;call to abstracted procedure
 17467  001FCC  0E10               	movlw	16
 17468  001FCE  6EEF               	movwf	indf0,c
 17469  001FD0                     u13860:
 17470                           
 17471                           ;tcpv4.c: 1018: if(TCP_Snd(currentTCB))
 17472  001FD0  DA58               	call	PL465	;call to abstracted procedure
 17473  001FD2  ECAC  F012         	call	_TCP_Snd	;wreg free
 17474  001FD6  0900               	iorlw	0
 17475  001FD8  E101 D14F          	bz	l8832
 17476                           
 17477                           ; BSR set to: 0
 17478                           ;tcpv4.c: 1019: {
 17479                           ;tcpv4.c: 1020: nextState = CLOSING;
 17480  001FDC  0E08               	movlw	8
 17481  001FDE  D029               	goto	L14
 17482  001FE0                     l8732:
 17483                           
 17484                           ; BSR set to: 1
 17485                           ;tcpv4.c: 1024: ;
 17486                           ;tcpv4.c: 1026: currentTCB->timeout = ((unsigned long)1*2);
 17487  001FE0  0E30               	movlw	48
 17488  001FE2  243F               	addwf	_currentTCB,w,c
 17489  001FE4  D967               	call	PL387	;call to abstracted procedure
 17490  001FE6  64F7               	cpfsgt	tblptrh,c
 17491  001FE8  D002               	bra	u13887
 17492  001FEA  DA45               	call	PL459	;call to abstracted procedure
 17493  001FEC  D002               	bra	u13880
 17494  001FEE                     u13887:
 17495  001FEE  D96E               	call	PL389	;call to abstracted procedure
 17496  001FF0  DA96               	call	PL611	;call to abstracted procedure
 17497  001FF2                     u13880:
 17498                           
 17499                           ;tcpv4.c: 1027: currentTCB->timeoutsCount = 1;
 17500  001FF2  D9CC               	call	PL415	;call to abstracted procedure
 17501  001FF4  D95F               	call	PL387	;call to abstracted procedure
 17502  001FF6  64F7               	cpfsgt	tblptrh,c
 17503  001FF8  D004               	bra	u13897
 17504  001FFA  0E01               	movlw	1
 17505  001FFC  6EF5               	movwf	tablat,c
 17506  001FFE  000C               	tblwt		*
 17507  002000  D003               	bra	u13890
 17508  002002                     u13897:
 17509  002002  D964               	call	PL389	;call to abstracted procedure
 17510  002004  0E01               	movlw	1
 17511  002006  6EEF               	movwf	indf0,c
 17512  002008                     u13890:
 17513                           
 17514                           ;tcpv4.c: 1028: nextState = FIN_WAIT_2;
 17515  002008  0E06               	movlw	6
 17516  00200A  D013               	goto	L14
 17517  00200C                     l8736:
 17518                           
 17519                           ; BSR set to: 1
 17520                           ;tcpv4.c: 1031: ;
 17521                           ;tcpv4.c: 1032: currentTCB->flags = 0x10U;
 17522  00200C  0E35               	movlw	53
 17523  00200E  243F               	addwf	_currentTCB,w,c
 17524  002010  D951               	call	PL387	;call to abstracted procedure
 17525  002012  64F7               	cpfsgt	tblptrh,c
 17526  002014  D004               	bra	u13907
 17527  002016  0E10               	movlw	16
 17528  002018  6EF5               	movwf	tablat,c
 17529  00201A  000C               	tblwt		*
 17530  00201C  D003               	bra	u13900
 17531  00201E                     u13907:
 17532  00201E  D956               	call	PL389	;call to abstracted procedure
 17533  002020  0E10               	movlw	16
 17534  002022  6EEF               	movwf	indf0,c
 17535  002024                     u13900:
 17536                           
 17537                           ;tcpv4.c: 1033: if(TCP_Snd(currentTCB))
 17538  002024  DA2E               	call	PL465	;call to abstracted procedure
 17539  002026  ECAC  F012         	call	_TCP_Snd	;wreg free
 17540  00202A  0900               	iorlw	0
 17541  00202C  E101 D125          	bz	l8832
 17542  002030                     l8740:
 17543                           
 17544                           ;tcpv4.c: 1034: {
 17545                           ;tcpv4.c: 1035: nextState = TIME_WAIT;
 17546  002030  0E0A               	movlw	10
 17547  002032                     L14:
 17548  002032  0101               	movlb	1	; () banked
 17549  002034  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 17550  002036  D121               	goto	l8832
 17551  002038                     l8742:
 17552                           
 17553                           ; BSR set to: 1
 17554                           ;tcpv4.c: 1039: ;
 17555                           ;tcpv4.c: 1040: if (currentTCB->timeoutsCount)
 17556  002038  0E34               	movlw	52
 17557  00203A  243F               	addwf	_currentTCB,w,c
 17558  00203C  D93B               	call	PL387	;call to abstracted procedure
 17559  00203E  64F7               	cpfsgt	tblptrh,c
 17560  002040  D003               	bra	u13927
 17561  002042  0008               	tblrd		*
 17562  002044  50F5               	movf	tablat,w,c
 17563  002046  D002               	bra	u13920
 17564  002048                     u13927:
 17565  002048  D941               	call	PL389	;call to abstracted procedure
 17566  00204A  50EF               	movf	indf0,w,c
 17567  00204C                     u13920:
 17568  00204C  0900               	iorlw	0
 17569  00204E  E001 D4DE          	bnz	l8638
 17570                           
 17571                           ;tcpv4.c: 1044: {
 17572                           ;tcpv4.c: 1046: currentTCB->flags = 0x04U;
 17573  002052  D941               	call	PL393	;call to abstracted procedure
 17574  002054  D92F               	call	PL387	;call to abstracted procedure
 17575  002056  64F7               	cpfsgt	tblptrh,c
 17576  002058  D004               	bra	u13947
 17577  00205A  0E04               	movlw	4
 17578  00205C  6EF5               	movwf	tablat,c
 17579  00205E  000C               	tblwt		*
 17580  002060  D003               	bra	u13940
 17581  002062                     u13947:
 17582  002062  D934               	call	PL389	;call to abstracted procedure
 17583  002064  0E04               	movlw	4
 17584  002066  6EEF               	movwf	indf0,c
 17585  002068                     u13940:
 17586                           
 17587                           ;tcpv4.c: 1047: if(TCP_Snd(currentTCB))
 17588  002068  DA0C               	call	PL465	;call to abstracted procedure
 17589  00206A  ECAC  F012         	call	_TCP_Snd	;wreg free
 17590  00206E  EF74  F00A         	goto	L10
 17591  002072                     l8756:
 17592  002072  0101               	movlb	1	; () banked
 17593  002074  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 17594                           
 17595                           ; Switch size 1, requested type "space"
 17596                           ; Number of cases is 4, Range of values is 4 to 12
 17597                           ; switch strategies available:
 17598                           ; Name         Instructions Cycles
 17599                           ; simple_byte           13     7 (average)
 17600                           ;	Chosen strategy is simple_byte
 17601  002076  0A04               	xorlw	4	; case 4
 17602  002078  E0B3               	bz	l8732
 17603  00207A  0A02               	xorlw	2	; case 6
 17604  00207C  E09D               	bz	l8726
 17605  00207E  0A01               	xorlw	1	; case 7
 17606  002080  E0C5               	bz	l8736
 17607  002082  0A0B               	xorlw	11	; case 12
 17608  002084  E0D9               	bz	l8742
 17609  002086  D0F9               	goto	l8832
 17610  002088                     l8758:
 17611                           
 17612                           ; BSR set to: 1
 17613                           ;tcpv4.c: 1062: ;
 17614                           ;tcpv4.c: 1063: if(TCP_Snd(currentTCB))
 17615  002088  D9FC               	call	PL465	;call to abstracted procedure
 17616  00208A  ECAC  F012         	call	_TCP_Snd	;wreg free
 17617  00208E  D7CD               	goto	L15
 17618  002090                     l8762:
 17619                           
 17620                           ; BSR set to: 1
 17621                           ;tcpv4.c: 1069: ;
 17622                           ;tcpv4.c: 1070: if (currentTCB->timeoutsCount)
 17623  002090  0E34               	movlw	52
 17624  002092  243F               	addwf	_currentTCB,w,c
 17625  002094  D90F               	call	PL387	;call to abstracted procedure
 17626  002096  64F7               	cpfsgt	tblptrh,c
 17627  002098  D003               	bra	u13977
 17628  00209A  0008               	tblrd		*
 17629  00209C  50F5               	movf	tablat,w,c
 17630  00209E  D002               	bra	u13970
 17631  0020A0                     u13977:
 17632  0020A0  D915               	call	PL389	;call to abstracted procedure
 17633  0020A2  50EF               	movf	indf0,w,c
 17634  0020A4                     u13970:
 17635  0020A4  0900               	iorlw	0
 17636  0020A6  E001 D4B2          	bnz	l8638
 17637                           
 17638                           ;tcpv4.c: 1074: {
 17639                           ;tcpv4.c: 1076: currentTCB->flags = 0x04U;
 17640  0020AA  D915               	call	PL393	;call to abstracted procedure
 17641  0020AC  D903               	call	PL387	;call to abstracted procedure
 17642  0020AE  64F7               	cpfsgt	tblptrh,c
 17643  0020B0  D004               	bra	u13997
 17644  0020B2  0E04               	movlw	4
 17645  0020B4  6EF5               	movwf	tablat,c
 17646  0020B6  000C               	tblwt		*
 17647  0020B8  D003               	bra	u13990
 17648  0020BA                     u13997:
 17649  0020BA  D908               	call	PL389	;call to abstracted procedure
 17650  0020BC  0E04               	movlw	4
 17651  0020BE  6EEF               	movwf	indf0,c
 17652  0020C0                     u13990:
 17653                           
 17654                           ;tcpv4.c: 1077: if(TCP_Snd(currentTCB))
 17655  0020C0  D9E0               	call	PL465	;call to abstracted procedure
 17656  0020C2  ECAC  F012         	call	_TCP_Snd	;wreg free
 17657  0020C6  EF74  F00A         	goto	L10
 17658  0020CA                     l8776:
 17659  0020CA  0101               	movlb	1	; () banked
 17660  0020CC  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 17661                           
 17662                           ; Switch size 1, requested type "space"
 17663                           ; Number of cases is 2, Range of values is 6 to 12
 17664                           ; switch strategies available:
 17665                           ; Name         Instructions Cycles
 17666                           ; simple_byte            7     4 (average)
 17667                           ;	Chosen strategy is simple_byte
 17668  0020CE  0A06               	xorlw	6	; case 6
 17669  0020D0  E0DB               	bz	l8758
 17670  0020D2  0A0A               	xorlw	10	; case 12
 17671  0020D4  E0DD               	bz	l8762
 17672  0020D6  D0D1               	goto	l8832
 17673  0020D8                     l8782:
 17674  0020D8  0101               	movlb	1	; () banked
 17675  0020DA  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 17676                           
 17677                           ; Switch size 1, requested type "space"
 17678                           ; Number of cases is 1, Range of values is 4 to 4
 17679                           ; switch strategies available:
 17680                           ; Name         Instructions Cycles
 17681                           ; simple_byte            4     3 (average)
 17682                           ;	Chosen strategy is simple_byte
 17683  0020DC  0A04               	xorlw	4	; case 4
 17684  0020DE  E0A8               	bz	l8740
 17685  0020E0  D0CC               	goto	l8832
 17686  0020E2                     l8784:
 17687                           
 17688                           ; BSR set to: 1
 17689                           ;tcpv4.c: 1107: case RCV_ACK:
 17690                           ;tcpv4.c: 1108: if ((currentTCB->destIP == receivedRemoteAddress) &&
 17691                           ;tcpv4.c: 1109: (currentTCB->destPort == tcpHeader.sourcePort))
 17692  0020E2  0E02               	movlw	2
 17693  0020E4  243F               	addwf	_currentTCB,w,c
 17694  0020E6  D8E6               	call	PL387	;call to abstracted procedure
 17695  0020E8  64F7               	cpfsgt	tblptrh,c
 17696  0020EA  D002               	bra	u14017
 17697  0020EC  D8F8               	call	PL395	;call to abstracted procedure
 17698  0020EE  D002               	bra	u14010
 17699  0020F0                     u14017:
 17700  0020F0  D8ED               	call	PL389	;call to abstracted procedure
 17701  0020F2  D916               	call	PL403	;call to abstracted procedure
 17702  0020F4                     u14010:
 17703  0020F4  503B               	movf	_receivedRemoteAddress,w,c
 17704  0020F6  0101               	movlb	1	; () banked
 17705  0020F8  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17706  0020FA  E109               	bnz	u14021
 17707  0020FC  503C               	movf	_receivedRemoteAddress+1,w,c
 17708  0020FE  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17709  002100  E106               	bnz	u14021
 17710  002102  503D               	movf	_receivedRemoteAddress+2,w,c
 17711  002104  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17712  002106  E103               	bnz	u14021
 17713  002108  503E               	movf	_receivedRemoteAddress+3,w,c
 17714  00210A  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17715  00210C  A4D8               	btfss	status,2,c
 17716  00210E                     u14021:
 17717  00210E  D0B5               	goto	l8832
 17718                           
 17719                           ; BSR set to: 1
 17720  002110  0E06               	movlw	6
 17721  002112  243F               	addwf	_currentTCB,w,c
 17722  002114  D8CF               	call	PL387	;call to abstracted procedure
 17723  002116  64F7               	cpfsgt	tblptrh,c
 17724  002118  D003               	bra	u14037
 17725  00211A  0009               	tblrd		*+
 17726  00211C  D8ED               	call	PL397	;call to abstracted procedure
 17727  00211E  D005               	bra	u14030
 17728  002120                     u14037:
 17729  002120  D8D5               	call	PL389	;call to abstracted procedure
 17730  002122  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17731  002126  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17732  00212A                     u14030:
 17733  00212A  0101               	movlb	1	; () banked
 17734  00212C  51D4               	movf	_tcpHeader& (0+255),w,b
 17735  00212E  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17736  002130  E103               	bnz	u14041
 17737  002132  51D5               	movf	(_tcpHeader+1)& (0+255),w,b
 17738  002134  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17739  002136  D09E               	goto	L16
 17740  002138                     u14041:
 17741  002138  D0A0               	goto	l8832
 17742  00213A                     l8792:
 17743                           
 17744                           ; BSR set to: 1
 17745                           ;tcpv4.c: 1117: if (currentTCB->timeoutsCount)
 17746  00213A  0E34               	movlw	52
 17747  00213C  243F               	addwf	_currentTCB,w,c
 17748  00213E  D8BA               	call	PL387	;call to abstracted procedure
 17749  002140  64F7               	cpfsgt	tblptrh,c
 17750  002142  D003               	bra	u14057
 17751  002144  0008               	tblrd		*
 17752  002146  50F5               	movf	tablat,w,c
 17753  002148  D002               	bra	u14050
 17754  00214A                     u14057:
 17755  00214A  D8C0               	call	PL389	;call to abstracted procedure
 17756  00214C  50EF               	movf	indf0,w,c
 17757  00214E                     u14050:
 17758  00214E  0900               	iorlw	0
 17759  002150  E001 D45D          	bnz	l8638
 17760                           
 17761                           ;tcpv4.c: 1121: {
 17762                           ;tcpv4.c: 1123: currentTCB->flags = 0x04U;
 17763  002154  D8C0               	call	PL393	;call to abstracted procedure
 17764  002156  D8AE               	call	PL387	;call to abstracted procedure
 17765  002158  64F7               	cpfsgt	tblptrh,c
 17766  00215A  D004               	bra	u14077
 17767  00215C  0E04               	movlw	4
 17768  00215E  6EF5               	movwf	tablat,c
 17769  002160  000C               	tblwt		*
 17770  002162  D003               	bra	u14070
 17771  002164                     u14077:
 17772  002164  D8B3               	call	PL389	;call to abstracted procedure
 17773  002166  0E04               	movlw	4
 17774  002168  6EEF               	movwf	indf0,c
 17775  00216A                     u14070:
 17776                           
 17777                           ;tcpv4.c: 1124: if(TCP_Snd(currentTCB))
 17778  00216A  D98B               	call	PL465	;call to abstracted procedure
 17779  00216C  ECAC  F012         	call	_TCP_Snd	;wreg free
 17780  002170  EF74  F00A         	goto	L10
 17781  002174                     l8806:
 17782  002174  0101               	movlb	1	; () banked
 17783  002176  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 17784                           
 17785                           ; Switch size 1, requested type "space"
 17786                           ; Number of cases is 3, Range of values is 4 to 12
 17787                           ; switch strategies available:
 17788                           ; Name         Instructions Cycles
 17789                           ; simple_byte           10     6 (average)
 17790                           ;	Chosen strategy is simple_byte
 17791  002178  0A04               	xorlw	4	; case 4
 17792  00217A  E0B3               	bz	l8784
 17793  00217C  0A03               	xorlw	3	; case 7
 17794  00217E  E0B1               	bz	l8784
 17795  002180  0A0B               	xorlw	11	; case 12
 17796  002182  E0DB               	bz	l8792
 17797  002184  D07A               	goto	l8832
 17798  002186                     l8810:
 17799                           
 17800                           ; BSR set to: 1
 17801                           ;tcpv4.c: 1143: ;
 17802                           ;tcpv4.c: 1145: currentTCB->timeout = ((unsigned long)1*2);
 17803  002186  0E30               	movlw	48
 17804  002188  243F               	addwf	_currentTCB,w,c
 17805  00218A  D894               	call	PL387	;call to abstracted procedure
 17806  00218C  64F7               	cpfsgt	tblptrh,c
 17807  00218E  D002               	bra	u14097
 17808  002190  D972               	call	PL459	;call to abstracted procedure
 17809  002192  D002               	bra	u14090
 17810  002194                     u14097:
 17811  002194  D89B               	call	PL389	;call to abstracted procedure
 17812  002196  D9C3               	call	PL611	;call to abstracted procedure
 17813  002198                     u14090:
 17814                           
 17815                           ;tcpv4.c: 1146: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 17816  002198  D91C               	call	PL429	;call to abstracted procedure
 17817  00219A  D88C               	call	PL387	;call to abstracted procedure
 17818  00219C  64F7               	cpfsgt	tblptrh,c
 17819  00219E  D002               	bra	u14107
 17820  0021A0  D96A               	call	PL459	;call to abstracted procedure
 17821  0021A2  D002               	bra	u14100
 17822  0021A4                     u14107:
 17823  0021A4  D893               	call	PL389	;call to abstracted procedure
 17824  0021A6  D9BB               	call	PL611	;call to abstracted procedure
 17825  0021A8                     u14100:
 17826                           
 17827                           ;tcpv4.c: 1147: currentTCB->timeoutsCount = (3u);
 17828  0021A8  D8F1               	call	PL415	;call to abstracted procedure
 17829  0021AA  D884               	call	PL387	;call to abstracted procedure
 17830  0021AC  64F7               	cpfsgt	tblptrh,c
 17831  0021AE  D004               	bra	u14117
 17832  0021B0  0E03               	movlw	3
 17833  0021B2  6EF5               	movwf	tablat,c
 17834  0021B4  000C               	tblwt		*
 17835  0021B6  D003               	bra	u14110
 17836  0021B8                     u14117:
 17837  0021B8  D889               	call	PL389	;call to abstracted procedure
 17838  0021BA  0E03               	movlw	3
 17839  0021BC  6EEF               	movwf	indf0,c
 17840  0021BE                     u14110:
 17841                           
 17842                           ;tcpv4.c: 1148: currentTCB->flags = 0x02U;
 17843  0021BE  D88B               	call	PL393	;call to abstracted procedure
 17844  0021C0  D879               	call	PL387	;call to abstracted procedure
 17845  0021C2  64F7               	cpfsgt	tblptrh,c
 17846  0021C4  D004               	bra	u14127
 17847  0021C6  0E02               	movlw	2
 17848  0021C8  6EF5               	movwf	tablat,c
 17849  0021CA  000C               	tblwt		*
 17850  0021CC  D003               	bra	u14120
 17851  0021CE                     u14127:
 17852  0021CE  D87E               	call	PL389	;call to abstracted procedure
 17853  0021D0  0E02               	movlw	2
 17854  0021D2  6EEF               	movwf	indf0,c
 17855  0021D4                     u14120:
 17856                           
 17857                           ;tcpv4.c: 1149: TCP_Snd(currentTCB);
 17858  0021D4  D956               	call	PL465	;call to abstracted procedure
 17859  0021D6  ECAC  F012         	call	_TCP_Snd	;wreg free
 17860                           
 17861                           ; BSR set to: 0
 17862                           ;tcpv4.c: 1150: nextState = SYN_SENT;
 17863  0021DA  0E02               	movlw	2
 17864  0021DC  0101               	movlb	1	; () banked
 17865  0021DE  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 17866                           
 17867                           ; BSR set to: 1
 17868                           ;tcpv4.c: 1151: ret = 1;
 17869  0021E0  0E01               	movlw	1
 17870  0021E2  6F0C               	movwf	TCP_FiniteStateMachine@ret& (0+255),b
 17871                           
 17872                           ;tcpv4.c: 1152: break;
 17873  0021E4  D04A               	goto	l8832
 17874  0021E6                     l8818:
 17875                           
 17876                           ; BSR set to: 1
 17877                           ;tcpv4.c: 1154: ;
 17878                           ;tcpv4.c: 1155: currentTCB->destIP = 0;
 17879  0021E6  0E02               	movlw	2
 17880  0021E8  243F               	addwf	_currentTCB,w,c
 17881  0021EA  D864               	call	PL387	;call to abstracted procedure
 17882  0021EC  64F7               	cpfsgt	tblptrh,c
 17883  0021EE  D006               	bra	u14137
 17884  0021F0  6AF5               	clrf	tablat,c
 17885  0021F2  000D               	tblwt		*+
 17886  0021F4  6AF5               	clrf	tablat,c
 17887  0021F6  000D               	tblwt		*+
 17888  0021F8  D8D5               	call	PL423	;call to abstracted procedure
 17889  0021FA  D002               	bra	u14130
 17890  0021FC                     u14137:
 17891  0021FC  D867               	call	PL389	;call to abstracted procedure
 17892  0021FE  D946               	call	PL467	;call to abstracted procedure
 17893  002200                     u14130:
 17894                           
 17895                           ;tcpv4.c: 1156: currentTCB->destPort = 0;
 17896  002200  D917               	call	PL447	;call to abstracted procedure
 17897  002202  D858               	call	PL387	;call to abstracted procedure
 17898  002204  64F7               	cpfsgt	tblptrh,c
 17899  002206  D002               	bra	u14147
 17900  002208  D8CD               	call	PL423	;call to abstracted procedure
 17901  00220A  D003               	bra	u14140
 17902  00220C                     u14147:
 17903  00220C  D85F               	call	PL389	;call to abstracted procedure
 17904  00220E  6AEE               	clrf	postinc0,c
 17905  002210  6AEF               	clrf	indf0,c
 17906  002212                     u14140:
 17907                           
 17908                           ;tcpv4.c: 1157: nextState = LISTEN;
 17909  002212  0E01               	movlw	1
 17910  002214  D7E3               	goto	L17
 17911  002216                     l8826:
 17912  002216  0101               	movlb	1	; () banked
 17913  002218  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 17914                           
 17915                           ; Switch size 1, requested type "space"
 17916                           ; Number of cases is 2, Range of values is 1 to 2
 17917                           ; switch strategies available:
 17918                           ; Name         Instructions Cycles
 17919                           ; simple_byte            7     4 (average)
 17920                           ;	Chosen strategy is simple_byte
 17921  00221A  0A01               	xorlw	1	; case 1
 17922  00221C  E0B4               	bz	l8810
 17923  00221E  0A03               	xorlw	3	; case 2
 17924  002220  E0E2               	bz	l8818
 17925  002222  D02B               	goto	l8832
 17926  002224                     l8830:
 17927                           
 17928                           ; BSR set to: 1
 17929  002224  0E2A               	movlw	42
 17930  002226  243F               	addwf	_currentTCB,w,c
 17931  002228  D845               	call	PL387	;call to abstracted procedure
 17932  00222A  64F7               	cpfsgt	tblptrh,c
 17933  00222C  D003               	bra	u14157
 17934  00222E  0008               	tblrd		*
 17935  002230  50F5               	movf	tablat,w,c
 17936  002232  D002               	bra	u14150
 17937  002234                     u14157:
 17938  002234  D84B               	call	PL389	;call to abstracted procedure
 17939  002236  50EF               	movf	indf0,w,c
 17940  002238                     u14150:
 17941                           
 17942                           ; Switch size 1, requested type "space"
 17943                           ; Number of cases is 11, Range of values is 0 to 10
 17944                           ; switch strategies available:
 17945                           ; Name         Instructions Cycles
 17946                           ; simple_byte           34    18 (average)
 17947                           ;	Chosen strategy is simple_byte
 17948  002238  0A00               	xorlw	0	; case 0
 17949  00223A  E0ED               	bz	l8826
 17950  00223C  0A01               	xorlw	1	; case 1
 17951  00223E  E102 EF45  F009    	bz	l8514
 17952  002244  0A03               	xorlw	3	; case 2
 17953  002246  E102 EF86  F00B    	bz	l8606
 17954  00224C  0A01               	xorlw	1	; case 3
 17955  00224E  E101 D507          	bz	l8662
 17956  002252  0A07               	xorlw	7	; case 4
 17957  002254  E101 D69B          	bz	l8724
 17958  002258  0A01               	xorlw	1	; case 5
 17959  00225A  E101 D70A          	bz	l8756
 17960  00225E  0A03               	xorlw	3	; case 6
 17961  002260  E101 D733          	bz	l8776
 17962  002264  0A01               	xorlw	1	; case 7
 17963  002266  E009               	bz	l8832
 17964  002268  0A0F               	xorlw	15	; case 8
 17965  00226A  E101 D735          	bz	l8782
 17966  00226E  0A01               	xorlw	1	; case 9
 17967  002270  E081               	bz	l8806
 17968  002272  0A03               	xorlw	3	; case 10
 17969  002274                     L16:
 17970  002274  E102 EF3B  F009    	bz	l1194
 17971  00227A                     l8832:
 17972                           
 17973                           ;tcpv4.c: 1167: currentTCB->connectionEvent = NOP;
 17974  00227A  0E2B               	movlw	43
 17975  00227C  243F               	addwf	_currentTCB,w,c
 17976  00227E  0101               	movlb	1	; () banked
 17977  002280  D819               	call	PL387	;call to abstracted procedure
 17978  002282  64F7               	cpfsgt	tblptrh,c
 17979  002284  D004               	bra	u14167
 17980  002286  0E0D               	movlw	13
 17981  002288  6EF5               	movwf	tablat,c
 17982  00228A  000C               	tblwt		*
 17983  00228C  D003               	bra	u14160
 17984  00228E                     u14167:
 17985  00228E  D81E               	call	PL389	;call to abstracted procedure
 17986  002290  0E0D               	movlw	13
 17987  002292  6EEF               	movwf	indf0,c
 17988  002294                     u14160:
 17989                           
 17990                           ;tcpv4.c: 1168: currentTCB->fsmState = nextState;
 17991  002294  0E2A               	movlw	42
 17992  002296  243F               	addwf	_currentTCB,w,c
 17993  002298  0101               	movlb	1	; () banked
 17994  00229A  D80C               	call	PL387	;call to abstracted procedure
 17995  00229C  64F7               	cpfsgt	tblptrh,c
 17996  00229E  D004               	bra	u14177
 17997  0022A0  C110  FFF5         	movff	TCP_FiniteStateMachine@nextState,tablat
 17998  0022A4  000C               	tblwt		*
 17999  0022A6  D003               	bra	u14170
 18000  0022A8                     u14177:
 18001  0022A8  D811               	call	PL389	;call to abstracted procedure
 18002  0022AA  C110  FFEF         	movff	TCP_FiniteStateMachine@nextState,indf0
 18003  0022AE                     u14170:
 18004                           
 18005                           ;tcpv4.c: 1169: return ret;
 18006  0022AE  0101               	movlb	1	; () banked
 18007  0022B0  510C               	movf	TCP_FiniteStateMachine@ret& (0+255),w,b
 18008                           
 18009                           ; BSR set to: 1
 18010  0022B2  0012               	return		;funcret
 18011  0022B4                     __end_of_TCP_FiniteStateMachine:
 18012                           	opt stack 0
 18013  0022B4                     PL387:
 18014                           	opt stack 14
 18015  0022B4  6F00               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18016  0022B6  0E00               	movlw	0
 18017  0022B8  2040               	addwfc	_currentTCB+1,w,c
 18018  0022BA  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18019  0022BC  C100  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18020  0022C0  C101  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18021  0022C4  0E00               	movlw	low (__smallconst shr (0+16))
 18022  0022C6  6EF8               	movwf	tblptru,c
 18023  0022C8  0E0F               	movlw	(high __ramtop+-1)
 18024  0022CA  0012               	return	
 18025  0022CC                     __end_ofPL387:
 18026                           	opt stack 0
 18027  0022CC                     PL389:
 18028                           	opt stack 19
 18029  0022CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 18030  0022D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 18031  0022D4  0012               	return	
 18032  0022D6                     __end_ofPL389:
 18033                           	opt stack 0
 18034  0022D6                     PL393:
 18035                           	opt stack 14
 18036  0022D6  0E35               	movlw	53
 18037  0022D8  243F               	addwf	_currentTCB,w,c
 18038  0022DA  0101               	movlb	1	; () banked
 18039  0022DC  0012               	return	
 18040  0022DE                     __end_ofPL393:
 18041                           	opt stack 0
 18042  0022DE                     PL395:
 18043                           	opt stack 14
 18044  0022DE  0009               	tblrd		*+
 18045  0022E0  CFF5 F102          	movff	tablat,??_TCP_FiniteStateMachine+2
 18046  0022E4  0009               	tblrd		*+
 18047  0022E6  CFF5 F103          	movff	tablat,??_TCP_FiniteStateMachine+3
 18048  0022EA  0009               	tblrd		*+
 18049  0022EC  CFF5 F104          	movff	tablat,??_TCP_FiniteStateMachine+4
 18050  0022F0  0009               	tblrd		*+
 18051  0022F2  CFF5 F105          	movff	tablat,??_TCP_FiniteStateMachine+5
 18052  0022F6  0012               	return	
 18053  0022F8                     __end_ofPL395:
 18054                           	opt stack 0
 18055  0022F8                     PL397:
 18056                           	opt stack 14
 18057  0022F8  CFF5 F102          	movff	tablat,??_TCP_FiniteStateMachine+2
 18058  0022FC  0009               	tblrd		*+
 18059  0022FE  CFF5 F103          	movff	tablat,??_TCP_FiniteStateMachine+3
 18060  002302  0012               	return	
 18061  002304                     __end_ofPL397:
 18062                           	opt stack 0
 18063  002304                     PL401:
 18064                           	opt stack 14
 18065  002304  0E01               	movlw	1
 18066  002306  0101               	movlb	1	; () banked
 18067  002308  2502               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18068  00230A  6F06               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 18069  00230C  0E00               	movlw	0
 18070  00230E  2103               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18071  002310  6F07               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 18072  002312  0E00               	movlw	0
 18073  002314  2104               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18074  002316  6F08               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 18075  002318  0E00               	movlw	0
 18076  00231A  2105               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18077  00231C  6F09               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 18078  00231E  0012               	return	
 18079  002320                     __end_ofPL401:
 18080                           	opt stack 0
 18081  002320                     PL403:
 18082                           	opt stack 14
 18083  002320  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18084  002324  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18085  002328  CFEE F104          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18086  00232C  CFEE F105          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18087  002330  0012               	return	
 18088  002332                     __end_ofPL403:
 18089                           	opt stack 0
 18090  002332                     PL405:
 18091                           	opt stack 14
 18092  002332  0101               	movlb	1	; () banked
 18093  002334  51E2               	movf	(_tcpHeader+14)& (0+255),w,b
 18094  002336  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18095  002338  6B00               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 18096  00233A  EE21  F0E2         	lfsr	2,_tcpHeader+14
 18097  00233E  CFDE F102          	movff	postinc2,??_TCP_FiniteStateMachine+2
 18098  002342  CFDD F103          	movff	postdec2,??_TCP_FiniteStateMachine+3
 18099  002346  C103  F102         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 18100  00234A  6B03               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 18101  00234C  6B03               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 18102  00234E  5100               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 18103  002350  1302               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 18104  002352  5101               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 18105  002354  1303               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 18106  002356  0E18               	movlw	24
 18107  002358  243F               	addwf	_currentTCB,w,c
 18108  00235A  6F04               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 18109  00235C  0E00               	movlw	0
 18110  00235E  2040               	addwfc	_currentTCB+1,w,c
 18111  002360  6F05               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 18112  002362  C104  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 18113  002366  C105  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 18114  00236A  0E00               	movlw	low (__smallconst shr (0+16))
 18115  00236C  6EF8               	movwf	tblptru,c
 18116  00236E  0E0F               	movlw	(high __ramtop+-1)
 18117  002370  0012               	return	
 18118  002372                     __end_ofPL405:
 18119                           	opt stack 0
 18120  002372                     PL407:
 18121                           	opt stack 14
 18122  002372  243F               	addwf	_currentTCB,w,c
 18123  002374  6F04               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 18124  002376  0E00               	movlw	0
 18125  002378  2040               	addwfc	_currentTCB+1,w,c
 18126  00237A  6F05               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 18127  00237C  C104  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 18128  002380  C105  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 18129  002384  0E00               	movlw	low (__smallconst shr (0+16))
 18130  002386  6EF8               	movwf	tblptru,c
 18131  002388  0E0F               	movlw	(high __ramtop+-1)
 18132  00238A  0012               	return	
 18133  00238C                     __end_ofPL407:
 18134                           	opt stack 0
 18135  00238C                     PL415:
 18136                           	opt stack 14
 18137  00238C  0E34               	movlw	52
 18138  00238E  243F               	addwf	_currentTCB,w,c
 18139  002390  0101               	movlb	1	; () banked
 18140  002392  0012               	return	
 18141  002394                     __end_ofPL415:
 18142                           	opt stack 0
 18143  002394                     PL417:
 18144                           	opt stack 14
 18145  002394  0E1C               	movlw	28
 18146  002396  243F               	addwf	_currentTCB,w,c
 18147  002398  0101               	movlb	1	; () banked
 18148  00239A  0012               	return	
 18149  00239C                     __end_ofPL417:
 18150                           	opt stack 0
 18151  00239C                     PL419:
 18152                           	opt stack 14
 18153  00239C  0E08               	movlw	8
 18154  00239E  243F               	addwf	_currentTCB,w,c
 18155  0023A0  0101               	movlb	1	; () banked
 18156  0023A2  0012               	return	
 18157  0023A4                     __end_ofPL419:
 18158                           	opt stack 0
 18159  0023A4                     PL423:
 18160                           	opt stack 19
 18161  0023A4  6AF5               	clrf	tablat,c
 18162  0023A6  000D               	tblwt		*+
 18163  0023A8  6AF5               	clrf	tablat,c
 18164  0023AA  000C               	tblwt		*
 18165  0023AC  0012               	return	
 18166  0023AE                     __end_ofPL423:
 18167                           	opt stack 0
 18168  0023AE                     PL425:
 18169                           	opt stack 14
 18170  0023AE  0E01               	movlw	1
 18171  0023B0  0101               	movlb	1	; () banked
 18172  0023B2  25D8               	addwf	(_tcpHeader+4)& (0+255),w,b
 18173  0023B4  6F00               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18174  0023B6  0E00               	movlw	0
 18175  0023B8  21D9               	addwfc	(_tcpHeader+5)& (0+255),w,b
 18176  0023BA  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18177  0023BC  0E00               	movlw	0
 18178  0023BE  21DA               	addwfc	(_tcpHeader+6)& (0+255),w,b
 18179  0023C0  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 18180  0023C2  0E00               	movlw	0
 18181  0023C4  21DB               	addwfc	(_tcpHeader+7)& (0+255),w,b
 18182  0023C6  6F03               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 18183  0023C8  0C0C               	retlw	12
 18184  0023CA                     __end_ofPL425:
 18185                           	opt stack 0
 18186  0023CA                     PL427:
 18187                           	opt stack 14
 18188  0023CA  0E10               	movlw	16
 18189  0023CC  243F               	addwf	_currentTCB,w,c
 18190  0023CE  0101               	movlb	1	; () banked
 18191  0023D0  0012               	return	
 18192  0023D2                     __end_ofPL427:
 18193                           	opt stack 0
 18194  0023D2                     PL429:
 18195                           	opt stack 14
 18196  0023D2  0E32               	movlw	50
 18197  0023D4  243F               	addwf	_currentTCB,w,c
 18198  0023D6  0101               	movlb	1	; () banked
 18199  0023D8  0012               	return	
 18200  0023DA                     __end_ofPL429:
 18201                           	opt stack 0
 18202  0023DA                     PL431:
 18203                           	opt stack 14
 18204  0023DA  0E30               	movlw	48
 18205  0023DC  243F               	addwf	_currentTCB,w,c
 18206  0023DE  0101               	movlb	1	; () banked
 18207  0023E0  0012               	return	
 18208  0023E2                     __end_ofPL431:
 18209                           	opt stack 0
 18210  0023E2                     PL439:
 18211                           	opt stack 14
 18212  0023E2  C1D8  FFF5         	movff	_tcpHeader+4,tablat
 18213  0023E6  000D               	tblwt		*+
 18214  0023E8  C1D9  FFF5         	movff	_tcpHeader+5,tablat
 18215  0023EC  000D               	tblwt		*+
 18216  0023EE  C1DA  FFF5         	movff	_tcpHeader+6,tablat
 18217  0023F2  000D               	tblwt		*+
 18218  0023F4  C1DB  FFF5         	movff	_tcpHeader+7,tablat
 18219  0023F8  000C               	tblwt		*
 18220  0023FA  0012               	return	
 18221  0023FC                     __end_ofPL439:
 18222                           	opt stack 0
 18223  0023FC                     PL441:
 18224                           	opt stack 14
 18225  0023FC  C106  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 18226  002400  000D               	tblwt		*+
 18227  002402  C107  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 18228  002406  000D               	tblwt		*+
 18229  002408  C108  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 18230  00240C  000D               	tblwt		*+
 18231  00240E  C109  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 18232  002412  000C               	tblwt		*
 18233  002414  0012               	return	
 18234  002416                     __end_ofPL441:
 18235                           	opt stack 0
 18236  002416                     PL443:
 18237                           	opt stack 14
 18238  002416  243F               	addwf	_currentTCB,w,c
 18239  002418  6F0A               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 18240  00241A  0E00               	movlw	0
 18241  00241C  2040               	addwfc	_currentTCB+1,w,c
 18242  00241E  6F0B               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 18243  002420  C10A  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 18244  002424  C10B  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 18245  002428  0E00               	movlw	low (__smallconst shr (0+16))
 18246  00242A  6EF8               	movwf	tblptru,c
 18247  00242C  0E0F               	movlw	(high __ramtop+-1)
 18248  00242E  0012               	return	
 18249  002430                     __end_ofPL443:
 18250                           	opt stack 0
 18251  002430                     PL447:
 18252                           	opt stack 14
 18253  002430  0E06               	movlw	6
 18254  002432  243F               	addwf	_currentTCB,w,c
 18255  002434  0101               	movlb	1	; () banked
 18256  002436  0012               	return	
 18257  002438                     __end_ofPL447:
 18258                           	opt stack 0
 18259  002438                     PL449:
 18260                           	opt stack 14
 18261  002438  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 18262  00243A  0E36               	movlw	54
 18263  00243C  243F               	addwf	_currentTCB,w,c
 18264  00243E  0012               	return	
 18265  002440                     __end_ofPL449:
 18266                           	opt stack 0
 18267  002440                     PL453:
 18268                           	opt stack 14
 18269  002440  C102  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 18270  002444  000D               	tblwt		*+
 18271  002446  C103  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 18272  00244A  000C               	tblwt		*
 18273  00244C  0012               	return	
 18274  00244E                     __end_ofPL453:
 18275                           	opt stack 0
 18276  00244E                     PL455:
 18277                           	opt stack 14
 18278  00244E  C100  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 18279  002452  000D               	tblwt		*+
 18280  002454  C101  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 18281  002458  000D               	tblwt		*+
 18282  00245A  0012               	return	
 18283  00245C                     __end_ofPL455:
 18284                           	opt stack 0
 18285  00245C                     PL457:
 18286                           	opt stack 14
 18287  00245C  C1DC  FFF5         	movff	_tcpHeader+8,tablat
 18288  002460  000D               	tblwt		*+
 18289  002462  C1DD  FFF5         	movff	_tcpHeader+9,tablat
 18290  002466  000D               	tblwt		*+
 18291  002468  C1DE  FFF5         	movff	_tcpHeader+10,tablat
 18292  00246C  000D               	tblwt		*+
 18293  00246E  C1DF  FFF5         	movff	_tcpHeader+11,tablat
 18294  002472  000C               	tblwt		*
 18295  002474  0012               	return	
 18296  002476                     __end_ofPL457:
 18297                           	opt stack 0
 18298  002476                     PL459:
 18299                           	opt stack 14
 18300  002476  0E02               	movlw	2
 18301  002478  6EF5               	movwf	tablat,c
 18302  00247A  000D               	tblwt		*+
 18303  00247C  6AF5               	clrf	tablat,c
 18304  00247E  000C               	tblwt		*
 18305  002480  0C02               	retlw	2
 18306  002482                     __end_ofPL459:
 18307                           	opt stack 0
 18308  002482                     PL465:
 18309                           	opt stack 14
 18310  002482  C03F  F09F         	movff	_currentTCB,TCP_Snd@tcbPtr
 18311  002486  C040  F0A0         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 18312  00248A  0012               	return	
 18313  00248C                     __end_ofPL465:
 18314                           	opt stack 0
 18315  00248C                     PL467:
 18316                           	opt stack 19
 18317  00248C  6AEE               	clrf	postinc0,c
 18318  00248E  6AEE               	clrf	postinc0,c
 18319  002490  6AEE               	clrf	postinc0,c
 18320  002492  6AEF               	clrf	indf0,c
 18321  002494  0012               	return	
 18322  002496                     __end_ofPL467:
 18323                           	opt stack 0
 18324  002496                     PL471:
 18325                           	opt stack 14
 18326  002496  0E0C               	movlw	12
 18327  002498  243F               	addwf	_currentTCB,w,c
 18328  00249A  0101               	movlb	1	; () banked
 18329  00249C  0012               	return	
 18330  00249E                     __end_ofPL471:
 18331                           	opt stack 0
 18332  00249E                     PL473:
 18333                           	opt stack 14
 18334  00249E  0E14               	movlw	20
 18335  0024A0  243F               	addwf	_currentTCB,w,c
 18336  0024A2  0101               	movlb	1	; () banked
 18337  0024A4  0012               	return	
 18338  0024A6                     __end_ofPL473:
 18339                           	opt stack 0
 18340  0024A6                     PL475:
 18341                           	opt stack 14
 18342  0024A6  C106  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 18343  0024AA  C107  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 18344  0024AE  C108  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 18345  0024B2  C109  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 18346  0024B6  0012               	return	
 18347  0024B8                     __end_ofPL475:
 18348                           	opt stack 0
 18349  0024B8                     PL477:
 18350                           	opt stack 14
 18351  0024B8  C1D8  FFEE         	movff	_tcpHeader+4,postinc0
 18352  0024BC  C1D9  FFEE         	movff	_tcpHeader+5,postinc0
 18353  0024C0  C1DA  FFEE         	movff	_tcpHeader+6,postinc0
 18354  0024C4  C1DB  FFEF         	movff	_tcpHeader+7,indf0
 18355  0024C8  0012               	return	
 18356  0024CA                     __end_ofPL477:
 18357                           	opt stack 0
 18358  0024CA                     PL487:
 18359                           	opt stack 14
 18360  0024CA  C100  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 18361  0024CE  C101  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 18362  0024D2  C102  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 18363  0024D6  C103  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 18364  0024DA  0012               	return	
 18365  0024DC                     __end_ofPL487:
 18366                           	opt stack 0
 18367  0024DC                     PL493:
 18368                           	opt stack 14
 18369  0024DC  C1DC  FFEE         	movff	_tcpHeader+8,postinc0
 18370  0024E0  C1DD  FFEE         	movff	_tcpHeader+9,postinc0
 18371  0024E4  C1DE  FFEE         	movff	_tcpHeader+10,postinc0
 18372  0024E8  C1DF  FFEF         	movff	_tcpHeader+11,indf0
 18373  0024EC  0012               	return	
 18374  0024EE                     __end_ofPL493:
 18375                           	opt stack 0
 18376  0024EE                     PL501:
 18377                           	opt stack 14
 18378  0024EE  C102  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 18379  0024F2  C103  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 18380  0024F6  0012               	return	
 18381  0024F8                     __end_ofPL501:
 18382                           	opt stack 0
 18383  0024F8                     PL509:
 18384                           	opt stack 14
 18385  0024F8  0E02               	movlw	2
 18386  0024FA  243F               	addwf	_currentTCB,w,c
 18387  0024FC  0101               	movlb	1	; () banked
 18388  0024FE  0012               	return	
 18389  002500                     __end_ofPL509:
 18390                           	opt stack 0
 18391  002500                     PL513:
 18392                           	opt stack 14
 18393  002500  0E27               	movlw	39
 18394  002502  243F               	addwf	_currentTCB,w,c
 18395  002504  0101               	movlb	1	; () banked
 18396  002506  0012               	return	
 18397  002508                     __end_ofPL513:
 18398                           	opt stack 0
 18399  002508                     PL515:
 18400                           	opt stack 14
 18401  002508  0E18               	movlw	24
 18402  00250A  243F               	addwf	_currentTCB,w,c
 18403  00250C  0101               	movlb	1	; () banked
 18404  00250E  0012               	return	
 18405  002510                     __end_ofPL515:
 18406                           	opt stack 0
 18407  002510                     PL537:
 18408                           	opt stack 14
 18409  002510  C045  FFF5         	movff	_tcpMss,tablat
 18410  002514  000D               	tblwt		*+
 18411  002516  C046  FFF5         	movff	_tcpMss+1,tablat
 18412  00251A  000C               	tblwt		*
 18413  00251C  0012               	return	
 18414  00251E                     __end_ofPL537:
 18415                           	opt stack 0
 18416  00251E                     PL611:
 18417                           	opt stack 14
 18418  00251E  0E02               	movlw	2
 18419  002520  6EEE               	movwf	postinc0,c
 18420  002522  6AEF               	clrf	indf0,c
 18421  002524  0C02               	retlw	2
 18422  002526                     __end_ofPL611:
 18423                           	opt stack 0
 18424  002526                     PL627:
 18425                           	opt stack 14
 18426  002526  C045  FFEE         	movff	_tcpMss,postinc0
 18427  00252A  C046  FFEF         	movff	_tcpMss+1,indf0
 18428  00252E  0012               	return	
 18429  002530                     __end_ofPL627:
 18430                           	opt stack 0
 18431  002530                     PL629:
 18432                           	opt stack 14
 18433  002530  C03F  FFF6         	movff	_currentTCB,tblptrl
 18434  002534  C040  FFF7         	movff	_currentTCB+1,tblptrh
 18435  002538  0E00               	movlw	low (__smallconst shr (0+16))
 18436  00253A  6EF8               	movwf	tblptru,c
 18437  00253C  0E0F               	movlw	(high __ramtop+-1)
 18438  00253E  0012               	return	
 18439  002540                     __end_ofPL629:
 18440                           	opt stack 0
 18441  002540                     PL649:
 18442                           	opt stack 14
 18443  002540  0009               	tblrd		*+
 18444  002542  CFF5 F100          	movff	tablat,??_TCP_FiniteStateMachine
 18445  002546  0009               	tblrd		*+
 18446  002548  CFF5 F101          	movff	tablat,??_TCP_FiniteStateMachine+1
 18447  00254C  0012               	return	
 18448  00254E                     __end_ofPL649:
 18449                           	opt stack 0
 18450  00254E                     PL733:
 18451                           	opt stack 14
 18452  00254E  CFEE F100          	movff	postinc0,??_TCP_FiniteStateMachine
 18453  002552  CFEE F101          	movff	postinc0,??_TCP_FiniteStateMachine+1
 18454  002556  0012               	return	
 18455  002558                     __end_ofPL733:
 18456                           	opt stack 0
 18457                           tosu	equ	0xFFF
 18458                           tosh	equ	0xFFE
 18459                           tosl	equ	0xFFD
 18460                           pclath	equ	0xFFA
 18461                           tblptru	equ	0xFF8
 18462                           tblptrh	equ	0xFF7
 18463                           tblptrl	equ	0xFF6
 18464                           tablat	equ	0xFF5
 18465                           prodh	equ	0xFF4
 18466                           prodl	equ	0xFF3
 18467                           intcon	equ	0xFF2
 18468                           indf0	equ	0xFEF
 18469                           postinc0	equ	0xFEE
 18470                           fsr0h	equ	0xFEA
 18471                           fsr0l	equ	0xFE9
 18472                           wreg	equ	0xFE8
 18473                           indf1	equ	0xFE7
 18474                           postinc1	equ	0xFE6
 18475                           postdec1	equ	0xFE5
 18476                           plusw1	equ	0xFE3
 18477                           fsr1h	equ	0xFE2
 18478                           fsr1l	equ	0xFE1
 18479                           bsr	equ	0xFE0
 18480                           indf2	equ	0xFDF
 18481                           postinc2	equ	0xFDE
 18482                           postdec2	equ	0xFDD
 18483                           plusw2	equ	0xFDB
 18484                           fsr2h	equ	0xFDA
 18485                           fsr2l	equ	0xFD9
 18486                           status	equ	0xFD8
 18487                           
 18488 ;; *************** function _TCP_PayloadSave *****************
 18489 ;; Defined at:
 18490 ;;		line 310 in file "../../TCPIP Library/source/tcpv4.c"
 18491 ;; Parameters:    Size  Location     Type
 18492 ;;  len             2  142[BANK0 ] unsigned int 
 18493 ;; Auto vars:     Size  Location     Type
 18494 ;;  buffer_size     2  157[BANK0 ] unsigned int 
 18495 ;;  ret             1    0        unsigned char 
 18496 ;; Return value:  Size  Location     Type
 18497 ;;                  1    wreg      unsigned char 
 18498 ;; Registers used:
 18499 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18500 ;; Tracked objects:
 18501 ;;		On entry : 0/1
 18502 ;;		On exit  : 0/0
 18503 ;;		Unchanged: 0/0
 18504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18506 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18507 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18508 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18509 ;;Total ram usage:       17 bytes
 18510 ;; Hardware stack levels used:    1
 18511 ;; Hardware stack levels required when called:   13
 18512 ;; This function calls:
 18513 ;;		_ETH_ReadBlock
 18514 ;;		_TCP_Snd
 18515 ;; This function is called by:
 18516 ;;		_TCP_FiniteStateMachine
 18517 ;; This function uses a non-reentrant model
 18518 ;;
 18519                           
 18520                           	psect	text77
 18521  003E3A                     __ptext77:
 18522                           	opt stack 0
 18523  003E3A                     _TCP_PayloadSave:
 18524                           	opt stack 14
 18525                           
 18526                           ;tcpv4.c: 313: uint16_t buffer_size;
 18527                           ;tcpv4.c: 316: if (currentTCB->rxBufState == RX_BUFF_IN_USE)
 18528                           
 18529                           ; BSR set to: 1
 18530                           ;incstack = 0
 18531  003E3A  0E22               	movlw	34
 18532  003E3C  D8D6               	call	PL413	;call to abstracted procedure
 18533  003E3E  64F7               	cpfsgt	tblptrh,c
 18534  003E40  D003               	bra	u12017
 18535  003E42  0008               	tblrd		*
 18536  003E44  50F5               	movf	tablat,w,c
 18537  003E46  D003               	bra	u12010
 18538  003E48                     u12017:
 18539  003E48  EC66  F011         	call	PL389	;call to abstracted procedure
 18540  003E4C  50EF               	movf	indf0,w,c
 18541  003E4E                     u12010:
 18542  003E4E  06E8               	decf	wreg,f,c
 18543  003E50  A4D8               	btfss	status,2,c
 18544  003E52  0012               	return	
 18545                           
 18546                           ;tcpv4.c: 317: {
 18547                           ;tcpv4.c: 319: if (currentTCB->localWnd >= len)
 18548  003E54  0E1A               	movlw	26
 18549  003E56  D8C9               	call	PL413	;call to abstracted procedure
 18550  003E58  64F7               	cpfsgt	tblptrh,c
 18551  003E5A  D002               	bra	u12037
 18552  003E5C  D8D4               	call	PL535	;call to abstracted procedure
 18553  003E5E  D003               	bra	u12030
 18554  003E60                     u12037:
 18555  003E60  EC66  F011         	call	PL389	;call to abstracted procedure
 18556  003E64  D8E4               	call	PL625	;call to abstracted procedure
 18557  003E66                     u12030:
 18558  003E66  0100               	movlb	0	; () banked
 18559  003E68  51EE               	movf	TCP_PayloadSave@len& (0+255),w,b
 18560  003E6A  5DF2               	subwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 18561  003E6C  51EF               	movf	(TCP_PayloadSave@len+1)& (0+255),w,b
 18562  003E6E  59F3               	subwfb	(??_TCP_PayloadSave+3)& (0+255),w,b
 18563  003E70  E305               	bnc	l8272
 18564                           
 18565                           ; BSR set to: 0
 18566                           ;tcpv4.c: 320: {
 18567                           ;tcpv4.c: 321: buffer_size = len;
 18568  003E72  C0EE  F0FD         	movff	TCP_PayloadSave@len,TCP_PayloadSave@buffer_size
 18569  003E76  C0EF  F0FE         	movff	TCP_PayloadSave@len+1,TCP_PayloadSave@buffer_size+1
 18570                           
 18571                           ;tcpv4.c: 322: }else
 18572  003E7A  D01C               	goto	l8274
 18573  003E7C                     l8272:
 18574                           
 18575                           ; BSR set to: 0
 18576                           ;tcpv4.c: 323: {
 18577                           ;tcpv4.c: 324: buffer_size = currentTCB->localWnd;
 18578  003E7C  0E1A               	movlw	26
 18579  003E7E  243F               	addwf	_currentTCB,w,c
 18580  003E80  6FF0               	movwf	??_TCP_PayloadSave& (0+255),b
 18581  003E82  0E00               	movlw	0
 18582  003E84  2040               	addwfc	_currentTCB+1,w,c
 18583  003E86  6FF1               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 18584  003E88  C0F0  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 18585  003E8C  C0F1  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 18586  003E90  0E00               	movlw	low (__smallconst shr (0+16))
 18587  003E92  6EF8               	movwf	tblptru,c
 18588  003E94  0E0F               	movlw	(high __ramtop+-1)
 18589  003E96  64F7               	cpfsgt	tblptrh,c
 18590  003E98  D007               	bra	u12057
 18591  003E9A  0009               	tblrd		*+
 18592  003E9C  CFF5 F0FD          	movff	tablat,TCP_PayloadSave@buffer_size
 18593  003EA0  0009               	tblrd		*+
 18594  003EA2  CFF5 F0FE          	movff	tablat,TCP_PayloadSave@buffer_size+1
 18595  003EA6  D006               	bra	u12050
 18596  003EA8                     u12057:
 18597  003EA8  EC66  F011         	call	PL389	;call to abstracted procedure
 18598  003EAC  CFEE F0FD          	movff	postinc0,TCP_PayloadSave@buffer_size
 18599  003EB0  CFEE F0FE          	movff	postinc0,TCP_PayloadSave@buffer_size+1
 18600  003EB4                     u12050:
 18601  003EB4                     l8274:
 18602                           
 18603                           ;tcpv4.c: 325: }
 18604                           ;tcpv4.c: 327: ETH_ReadBlock(currentTCB->rxBufferPtr, buffer_size);
 18605  003EB4  0E20               	movlw	32
 18606  003EB6  D899               	call	PL413	;call to abstracted procedure
 18607  003EB8  64F7               	cpfsgt	tblptrh,c
 18608  003EBA  D007               	bra	u12067
 18609  003EBC  0009               	tblrd		*+
 18610  003EBE  CFF5 F017          	movff	tablat,ETH_ReadBlock@buffer
 18611  003EC2  0009               	tblrd		*+
 18612  003EC4  CFF5 F018          	movff	tablat,ETH_ReadBlock@buffer+1
 18613  003EC8  D006               	bra	u12060
 18614  003ECA                     u12067:
 18615  003ECA  EC66  F011         	call	PL389	;call to abstracted procedure
 18616  003ECE  CFEE F017          	movff	postinc0,ETH_ReadBlock@buffer
 18617  003ED2  CFEE F018          	movff	postinc0,ETH_ReadBlock@buffer+1
 18618  003ED6                     u12060:
 18619  003ED6  C0FD  F019         	movff	TCP_PayloadSave@buffer_size,ETH_ReadBlock@length
 18620  003EDA  C0FE  F01A         	movff	TCP_PayloadSave@buffer_size+1,ETH_ReadBlock@length+1
 18621  003EDE  EC0C  F02C         	call	_ETH_ReadBlock	;wreg free
 18622                           
 18623                           ; BSR set to: 1
 18624                           ;tcpv4.c: 328: currentTCB->rxBufferPtr = currentTCB->rxBufferPtr + buffer_size;
 18625  003EE2  0E20               	movlw	32
 18626  003EE4  D882               	call	PL413	;call to abstracted procedure
 18627  003EE6  64F7               	cpfsgt	tblptrh,c
 18628  003EE8  D002               	bra	u12077
 18629  003EEA  D88D               	call	PL535	;call to abstracted procedure
 18630  003EEC  D003               	bra	u12070
 18631  003EEE                     u12077:
 18632  003EEE  EC66  F011         	call	PL389	;call to abstracted procedure
 18633  003EF2  D89D               	call	PL625	;call to abstracted procedure
 18634  003EF4                     u12070:
 18635  003EF4  0100               	movlb	0	; () banked
 18636  003EF6  51FD               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 18637  003EF8  27F2               	addwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 18638  003EFA  51FE               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 18639  003EFC  23F3               	addwfc	(??_TCP_PayloadSave+3)& (0+255),f,b
 18640  003EFE  0E20               	movlw	32
 18641  003F00  D889               	call	PL545	;call to abstracted procedure
 18642  003F02  64F7               	cpfsgt	tblptrh,c
 18643  003F04  D002               	bra	u12087
 18644  003F06  D898               	call	PL639	;call to abstracted procedure
 18645  003F08  D003               	bra	u12080
 18646  003F0A                     u12087:
 18647  003F0A  EC66  F011         	call	PL389	;call to abstracted procedure
 18648  003F0E  D89B               	call	PL731	;call to abstracted procedure
 18649  003F10                     u12080:
 18650                           
 18651                           ;tcpv4.c: 331: currentTCB->localWnd = currentTCB->localWnd - buffer_size;
 18652  003F10  0E1A               	movlw	26
 18653  003F12  D86B               	call	PL413	;call to abstracted procedure
 18654  003F14  64F7               	cpfsgt	tblptrh,c
 18655  003F16  D002               	bra	u12097
 18656  003F18  D876               	call	PL535	;call to abstracted procedure
 18657  003F1A  D003               	bra	u12090
 18658  003F1C                     u12097:
 18659  003F1C  EC66  F011         	call	PL389	;call to abstracted procedure
 18660  003F20  D886               	call	PL625	;call to abstracted procedure
 18661  003F22                     u12090:
 18662  003F22  0100               	movlb	0	; () banked
 18663  003F24  51FD               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 18664  003F26  5FF2               	subwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 18665  003F28  51FE               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 18666  003F2A  5BF3               	subwfb	(??_TCP_PayloadSave+3)& (0+255),f,b
 18667  003F2C  0E1A               	movlw	26
 18668  003F2E  D872               	call	PL545	;call to abstracted procedure
 18669  003F30  64F7               	cpfsgt	tblptrh,c
 18670  003F32  D002               	bra	u12107
 18671  003F34  D881               	call	PL639	;call to abstracted procedure
 18672  003F36  D003               	bra	u12100
 18673  003F38                     u12107:
 18674  003F38  EC66  F011         	call	PL389	;call to abstracted procedure
 18675  003F3C  D884               	call	PL731	;call to abstracted procedure
 18676  003F3E                     u12100:
 18677                           
 18678                           ;tcpv4.c: 332: currentTCB->remoteAck = currentTCB->remoteSeqno + buffer_size;
 18679  003F3E  0E08               	movlw	8
 18680  003F40  D854               	call	PL413	;call to abstracted procedure
 18681  003F42  64F7               	cpfsgt	tblptrh,c
 18682  003F44  D008               	bra	u12117
 18683  003F46  D85F               	call	PL535	;call to abstracted procedure
 18684  003F48  0009               	tblrd		*+
 18685  003F4A  CFF5 F0F4          	movff	tablat,??_TCP_PayloadSave+4
 18686  003F4E  0009               	tblrd		*+
 18687  003F50  CFF5 F0F5          	movff	tablat,??_TCP_PayloadSave+5
 18688  003F54  D007               	bra	u12110
 18689  003F56                     u12117:
 18690  003F56  EC66  F011         	call	PL389	;call to abstracted procedure
 18691  003F5A  D869               	call	PL625	;call to abstracted procedure
 18692  003F5C  CFEE F0F4          	movff	postinc0,??_TCP_PayloadSave+4
 18693  003F60  CFEE F0F5          	movff	postinc0,??_TCP_PayloadSave+5
 18694  003F64                     u12110:
 18695  003F64  0100               	movlb	0	; () banked
 18696  003F66  51FD               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 18697  003F68  25F2               	addwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 18698  003F6A  6FF6               	movwf	(??_TCP_PayloadSave+6)& (0+255),b
 18699  003F6C  51FE               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 18700  003F6E  21F3               	addwfc	(??_TCP_PayloadSave+3)& (0+255),w,b
 18701  003F70  6FF7               	movwf	(??_TCP_PayloadSave+7)& (0+255),b
 18702  003F72  0E00               	movlw	0
 18703  003F74  21F4               	addwfc	(??_TCP_PayloadSave+4)& (0+255),w,b
 18704  003F76  6FF8               	movwf	(??_TCP_PayloadSave+8)& (0+255),b
 18705  003F78  0E00               	movlw	0
 18706  003F7A  21F5               	addwfc	(??_TCP_PayloadSave+5)& (0+255),w,b
 18707  003F7C  6FF9               	movwf	(??_TCP_PayloadSave+9)& (0+255),b
 18708  003F7E  0E0C               	movlw	12
 18709  003F80  243F               	addwf	_currentTCB,w,c
 18710  003F82  6FFA               	movwf	(??_TCP_PayloadSave+10)& (0+255),b
 18711  003F84  0E00               	movlw	0
 18712  003F86  2040               	addwfc	_currentTCB+1,w,c
 18713  003F88  6FFB               	movwf	(??_TCP_PayloadSave+11)& (0+255),b
 18714  003F8A  C0FA  FFF6         	movff	??_TCP_PayloadSave+10,tblptrl
 18715  003F8E  C0FB  FFF7         	movff	??_TCP_PayloadSave+11,tblptrh
 18716  003F92  0E00               	movlw	low (__smallconst shr (0+16))
 18717  003F94  6EF8               	movwf	tblptru,c
 18718  003F96  0E0F               	movlw	(high __ramtop+-1)
 18719  003F98  64F7               	cpfsgt	tblptrh,c
 18720  003F9A  D00D               	bra	u12127
 18721  003F9C  C0F6  FFF5         	movff	??_TCP_PayloadSave+6,tablat
 18722  003FA0  000D               	tblwt		*+
 18723  003FA2  C0F7  FFF5         	movff	??_TCP_PayloadSave+7,tablat
 18724  003FA6  000D               	tblwt		*+
 18725  003FA8  C0F8  FFF5         	movff	??_TCP_PayloadSave+8,tablat
 18726  003FAC  000D               	tblwt		*+
 18727  003FAE  C0F9  FFF5         	movff	??_TCP_PayloadSave+9,tablat
 18728  003FB2  000C               	tblwt		*
 18729  003FB4  D00A               	bra	u12120
 18730  003FB6                     u12127:
 18731  003FB6  EC66  F011         	call	PL389	;call to abstracted procedure
 18732  003FBA  C0F6  FFEE         	movff	??_TCP_PayloadSave+6,postinc0
 18733  003FBE  C0F7  FFEE         	movff	??_TCP_PayloadSave+7,postinc0
 18734  003FC2  C0F8  FFEE         	movff	??_TCP_PayloadSave+8,postinc0
 18735  003FC6  C0F9  FFEF         	movff	??_TCP_PayloadSave+9,indf0
 18736  003FCA                     u12120:
 18737                           
 18738                           ;tcpv4.c: 335: currentTCB->flags = 0x10U;
 18739  003FCA  0E35               	movlw	53
 18740  003FCC  D80E               	call	PL413	;call to abstracted procedure
 18741  003FCE  64F7               	cpfsgt	tblptrh,c
 18742  003FD0  D004               	bra	u12137
 18743  003FD2  0E10               	movlw	16
 18744  003FD4  6EF5               	movwf	tablat,c
 18745  003FD6  000C               	tblwt		*
 18746  003FD8  D004               	bra	u12130
 18747  003FDA                     u12137:
 18748  003FDA  EC66  F011         	call	PL389	;call to abstracted procedure
 18749  003FDE  0E10               	movlw	16
 18750  003FE0  6EEF               	movwf	indf0,c
 18751  003FE2                     u12130:
 18752                           
 18753                           ;tcpv4.c: 336: TCP_Snd(currentTCB);
 18754  003FE2  EC41  F012         	call	PL465	;call to abstracted procedure
 18755  003FE6  EFAC  F012         	goto	_TCP_Snd	;wreg free
 18756  003FEA                     __end_of_TCP_PayloadSave:
 18757                           	opt stack 0
 18758  003FEA                     PL413:
 18759                           	opt stack 14
 18760  003FEA  243F               	addwf	_currentTCB,w,c
 18761  003FEC  0100               	movlb	0	; () banked
 18762  003FEE  6FF0               	movwf	??_TCP_PayloadSave& (0+255),b
 18763  003FF0  0E00               	movlw	0
 18764  003FF2  2040               	addwfc	_currentTCB+1,w,c
 18765  003FF4  6FF1               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 18766  003FF6  C0F0  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 18767  003FFA  C0F1  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 18768  003FFE  0E00               	movlw	low (__smallconst shr (0+16))
 18769  004000  6EF8               	movwf	tblptru,c
 18770  004002  0E0F               	movlw	(high __ramtop+-1)
 18771  004004  0012               	return	
 18772  004006                     __end_ofPL413:
 18773                           	opt stack 0
 18774  004006                     PL535:
 18775                           	opt stack 14
 18776  004006  0009               	tblrd		*+
 18777  004008  CFF5 F0F2          	movff	tablat,??_TCP_PayloadSave+2
 18778  00400C  0009               	tblrd		*+
 18779  00400E  CFF5 F0F3          	movff	tablat,??_TCP_PayloadSave+3
 18780  004012  0012               	return	
 18781  004014                     __end_ofPL535:
 18782                           	opt stack 0
 18783  004014                     PL545:
 18784                           	opt stack 14
 18785  004014  243F               	addwf	_currentTCB,w,c
 18786  004016  6FF4               	movwf	(??_TCP_PayloadSave+4)& (0+255),b
 18787  004018  0E00               	movlw	0
 18788  00401A  2040               	addwfc	_currentTCB+1,w,c
 18789  00401C  6FF5               	movwf	(??_TCP_PayloadSave+5)& (0+255),b
 18790  00401E  C0F4  FFF6         	movff	??_TCP_PayloadSave+4,tblptrl
 18791  004022  C0F5  FFF7         	movff	??_TCP_PayloadSave+5,tblptrh
 18792  004026  0E00               	movlw	low (__smallconst shr (0+16))
 18793  004028  6EF8               	movwf	tblptru,c
 18794  00402A  0E0F               	movlw	(high __ramtop+-1)
 18795  00402C  0012               	return	
 18796  00402E                     __end_ofPL545:
 18797                           	opt stack 0
 18798  00402E                     PL625:
 18799                           	opt stack 14
 18800  00402E  CFEE F0F2          	movff	postinc0,??_TCP_PayloadSave+2
 18801  004032  CFEE F0F3          	movff	postinc0,??_TCP_PayloadSave+3
 18802  004036  0012               	return	
 18803  004038                     __end_ofPL625:
 18804                           	opt stack 0
 18805  004038                     PL639:
 18806                           	opt stack 14
 18807  004038  C0F2  FFF5         	movff	??_TCP_PayloadSave+2,tablat
 18808  00403C  000D               	tblwt		*+
 18809  00403E  C0F3  FFF5         	movff	??_TCP_PayloadSave+3,tablat
 18810  004042  000C               	tblwt		*
 18811  004044  0012               	return	
 18812  004046                     __end_ofPL639:
 18813                           	opt stack 0
 18814  004046                     PL731:
 18815                           	opt stack 14
 18816  004046  C0F2  FFEE         	movff	??_TCP_PayloadSave+2,postinc0
 18817  00404A  C0F3  FFEF         	movff	??_TCP_PayloadSave+3,indf0
 18818  00404E  0012               	return	
 18819  004050                     __end_ofPL731:
 18820                           	opt stack 0
 18821                           tosu	equ	0xFFF
 18822                           tosh	equ	0xFFE
 18823                           tosl	equ	0xFFD
 18824                           pclath	equ	0xFFA
 18825                           tblptru	equ	0xFF8
 18826                           tblptrh	equ	0xFF7
 18827                           tblptrl	equ	0xFF6
 18828                           tablat	equ	0xFF5
 18829                           prodh	equ	0xFF4
 18830                           prodl	equ	0xFF3
 18831                           intcon	equ	0xFF2
 18832                           indf0	equ	0xFEF
 18833                           postinc0	equ	0xFEE
 18834                           fsr0h	equ	0xFEA
 18835                           fsr0l	equ	0xFE9
 18836                           wreg	equ	0xFE8
 18837                           indf1	equ	0xFE7
 18838                           postinc1	equ	0xFE6
 18839                           postdec1	equ	0xFE5
 18840                           plusw1	equ	0xFE3
 18841                           fsr1h	equ	0xFE2
 18842                           fsr1l	equ	0xFE1
 18843                           bsr	equ	0xFE0
 18844                           indf2	equ	0xFDF
 18845                           postinc2	equ	0xFDE
 18846                           postdec2	equ	0xFDD
 18847                           plusw2	equ	0xFDB
 18848                           fsr2h	equ	0xFDA
 18849                           fsr2l	equ	0xFD9
 18850                           status	equ	0xFD8
 18851                           
 18852 ;; *************** function _TCP_Snd *****************
 18853 ;; Defined at:
 18854 ;;		line 200 in file "../../TCPIP Library/source/tcpv4.c"
 18855 ;; Parameters:    Size  Location     Type
 18856 ;;  tcbPtr          2   63[BANK0 ] PTR struct .
 18857 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
 18858 ;;		 -> STR_5(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), STR_1(15), 
 18859 ;;		 -> NULL(0), 
 18860 ;; Auto vars:     Size  Location     Type
 18861 ;;  txHeader       20  122[BANK0 ] struct .
 18862 ;;  tcpDataLengt    2  120[BANK0 ] unsigned int 
 18863 ;;  payloadLengt    2  117[BANK0 ] unsigned int 
 18864 ;;  cksm            2  115[BANK0 ] unsigned int 
 18865 ;;  data            2  113[BANK0 ] PTR unsigned char 
 18866 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
 18867 ;;		 -> STR_5(17), DEMO_TCP_EchoServer@txdataPort7(20), Network_Read@debug_str(80), STR_1(15), 
 18868 ;;		 -> NULL(0), 
 18869 ;;  ret             1  119[BANK0 ] unsigned char 
 18870 ;; Return value:  Size  Location     Type
 18871 ;;                  1    wreg      unsigned char 
 18872 ;; Registers used:
 18873 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18874 ;; Tracked objects:
 18875 ;;		On entry : 0/0
 18876 ;;		On exit  : F/0
 18877 ;;		Unchanged: 0/0
 18878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18879 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18880 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18881 ;;      Temps:          0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18882 ;;      Totals:         0      79       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18883 ;;Total ram usage:       79 bytes
 18884 ;; Hardware stack levels used:    1
 18885 ;; Hardware stack levels required when called:   12
 18886 ;; This function calls:
 18887 ;;		_ETH_Insert
 18888 ;;		_ETH_TxComputeChecksum
 18889 ;;		_ETH_WriteBlock
 18890 ;;		_IPV4_Send
 18891 ;;		_IPv4_Start
 18892 ;; This function is called by:
 18893 ;;		_TCP_PayloadSave
 18894 ;;		_TCP_FiniteStateMachine
 18895 ;;		_TCP_Send
 18896 ;; This function uses a non-reentrant model
 18897 ;;
 18898                           
 18899                           	psect	text78
 18900  002558                     __ptext78:
 18901                           	opt stack 0
 18902  002558                     _TCP_Snd:
 18903                           	opt stack 0
 18904                           
 18905                           ;tcpv4.c: 203: tcpHeader_t txHeader;
 18906                           ;tcpv4.c: 204: uint16_t payloadLength;
 18907                           ;tcpv4.c: 205: uint16_t cksm;
 18908                           ;tcpv4.c: 206: uint16_t tcpDataLength;
 18909                           ;tcpv4.c: 207: uint8_t *data;
 18910                           ;tcpv4.c: 209: txHeader.sourcePort = ((((uint16_t)tcbPtr->localPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcbPtr->localPort & (uint16_t)0x00FF) << 8));
 18911                           
 18912                           ;incstack = 0
 18913  002558  DB5C               	call	PL631	;call to abstracted procedure
 18914  00255A  64F7               	cpfsgt	tblptrh,c
 18915  00255C  D007               	bra	u11217
 18916  00255E  0009               	tblrd		*+
 18917  002560  CFF5 F0A1          	movff	tablat,??_TCP_Snd
 18918  002564  0009               	tblrd		*+
 18919  002566  CFF5 F0A2          	movff	tablat,??_TCP_Snd+1
 18920  00256A  D006               	bra	u11210
 18921  00256C                     u11217:
 18922  00256C  EC66  F011         	call	PL389	;call to abstracted procedure
 18923  002570  CFEE F0A1          	movff	postinc0,??_TCP_Snd
 18924  002574  CFEE F0A2          	movff	postinc0,??_TCP_Snd+1
 18925  002578                     u11210:
 18926  002578  0100               	movlb	0	; () banked
 18927  00257A  51A1               	movf	??_TCP_Snd& (0+255),w,b
 18928  00257C  6FA4               	movwf	(??_TCP_Snd+3)& (0+255),b
 18929  00257E  6BA3               	clrf	(??_TCP_Snd+2)& (0+255),b
 18930  002580  DB48               	call	PL631	;call to abstracted procedure
 18931  002582  64F7               	cpfsgt	tblptrh,c
 18932  002584  D002               	bra	u11227
 18933  002586  DA9A               	call	PL539	;call to abstracted procedure
 18934  002588  D003               	bra	u11220
 18935  00258A                     u11227:
 18936  00258A  EC66  F011         	call	PL389	;call to abstracted procedure
 18937  00258E  DB34               	call	PL619	;call to abstracted procedure
 18938  002590                     u11220:
 18939  002590  C0A6  F0A5         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 18940  002594  0100               	movlb	0	; () banked
 18941  002596  6BA6               	clrf	(??_TCP_Snd+5)& (0+255),b
 18942  002598  6BA6               	clrf	(??_TCP_Snd+5)& (0+255),b
 18943  00259A  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 18944  00259C  11A5               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 18945  00259E  6FDA               	movwf	TCP_Snd@txHeader& (0+255),b
 18946  0025A0  51A4               	movf	(??_TCP_Snd+3)& (0+255),w,b
 18947  0025A2  11A6               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 18948  0025A4  6FDB               	movwf	(TCP_Snd@txHeader+1)& (0+255),b
 18949                           
 18950                           ;tcpv4.c: 210: txHeader.destPort = ((((uint16_t)tcbPtr->destPort & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)tcbPtr->destPort & (uint16_t)0x00FF) << 8));
 18951  0025A6  0E06               	movlw	6
 18952  0025A8  DA2B               	call	PL391	;call to abstracted procedure
 18953  0025AA  64F7               	cpfsgt	tblptrh,c
 18954  0025AC  D002               	bra	u11237
 18955  0025AE  DA5F               	call	PL445	;call to abstracted procedure
 18956  0025B0  D003               	bra	u11230
 18957  0025B2                     u11237:
 18958  0025B2  EC66  F011         	call	PL389	;call to abstracted procedure
 18959  0025B6  DA6F               	call	PL499	;call to abstracted procedure
 18960  0025B8                     u11230:
 18961  0025B8  DB4D               	call	PL685	;call to abstracted procedure
 18962  0025BA  0E06               	movlw	6
 18963  0025BC  DA94               	call	PL547	;call to abstracted procedure
 18964  0025BE  64F7               	cpfsgt	tblptrh,c
 18965  0025C0  D002               	bra	u11247
 18966  0025C2  DB36               	call	PL641	;call to abstracted procedure
 18967  0025C4  D003               	bra	u11240
 18968  0025C6                     u11247:
 18969  0025C6  EC66  F011         	call	PL389	;call to abstracted procedure
 18970  0025CA  DB49               	call	PL691	;call to abstracted procedure
 18971  0025CC                     u11240:
 18972  0025CC  DB1A               	call	PL621	;call to abstracted procedure
 18973  0025CE  6FDC               	movwf	(TCP_Snd@txHeader+2)& (0+255),b
 18974  0025D0  51A6               	movf	(??_TCP_Snd+5)& (0+255),w,b
 18975  0025D2  11AA               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 18976  0025D4  6FDD               	movwf	(TCP_Snd@txHeader+3)& (0+255),b
 18977                           
 18978                           ;tcpv4.c: 212: txHeader.sequenceNumber = ((((uint32_t)tcbPtr->localSeqno&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)tcbPtr->localSeqno&(uint32_t)0x00ff0000) >> 8) | (((uint32_t
      +                          )tcbPtr->localSeqno&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->localSeqno&(uint32
      +                          _
 18979  0025D6  0E10               	movlw	16
 18980  0025D8  DA13               	call	PL391	;call to abstracted procedure
 18981  0025DA  64F7               	cpfsgt	tblptrh,c
 18982  0025DC  D003               	bra	u11257
 18983  0025DE  DA47               	call	PL445	;call to abstracted procedure
 18984  0025E0  DA6D               	call	PL539	;call to abstracted procedure
 18985  0025E2  D004               	bra	u11250
 18986  0025E4                     u11257:
 18987  0025E4  EC66  F011         	call	PL389	;call to abstracted procedure
 18988  0025E8  DA56               	call	PL499	;call to abstracted procedure
 18989  0025EA  DB06               	call	PL619	;call to abstracted procedure
 18990  0025EC                     u11250:
 18991  0025EC  DAD7               	call	PL569	;call to abstracted procedure
 18992  0025EE  0E10               	movlw	16
 18993  0025F0  DA45               	call	PL483	;call to abstracted procedure
 18994  0025F2  64F7               	cpfsgt	tblptrh,c
 18995  0025F4  D002               	bra	u11267
 18996  0025F6  DA91               	call	PL551	;call to abstracted procedure
 18997  0025F8  D003               	bra	u11260
 18998  0025FA                     u11267:
 18999  0025FA  EC66  F011         	call	PL389	;call to abstracted procedure
 19000  0025FE  DAE1               	call	PL605	;call to abstracted procedure
 19001  002600                     u11260:
 19002  002600  DA64               	call	PL543	;call to abstracted procedure
 19003  002602  0E10               	movlw	16
 19004  002604  DA7D               	call	PL549	;call to abstracted procedure
 19005  002606  64F7               	cpfsgt	tblptrh,c
 19006  002608  D002               	bra	u11277
 19007  00260A  DA94               	call	PL553	;call to abstracted procedure
 19008  00260C  D003               	bra	u11270
 19009  00260E                     u11277:
 19010  00260E  EC66  F011         	call	PL389	;call to abstracted procedure
 19011  002612  DAE0               	call	PL607	;call to abstracted procedure
 19012  002614                     u11270:
 19013  002614  DA45               	call	PL529	;call to abstracted procedure
 19014  002616  0E10               	movlw	16
 19015  002618  DAA7               	call	PL557	;call to abstracted procedure
 19016  00261A  64F7               	cpfsgt	tblptrh,c
 19017  00261C  D002               	bra	u11287
 19018  00261E  DA97               	call	PL555	;call to abstracted procedure
 19019  002620  D003               	bra	u11280
 19020  002622                     u11287:
 19021  002622  EC66  F011         	call	PL389	;call to abstracted procedure
 19022  002626  DADF               	call	PL609	;call to abstracted procedure
 19023  002628                     u11280:
 19024  002628  D9F8               	call	PL437	;call to abstracted procedure
 19025  00262A  6FDE               	movwf	(TCP_Snd@txHeader+4)& (0+255),b
 19026  00262C  51A8               	movf	(??_TCP_Snd+7)& (0+255),w,b
 19027  00262E  11CE               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 19028  002630  6FDF               	movwf	(TCP_Snd@txHeader+5)& (0+255),b
 19029  002632  51A9               	movf	(??_TCP_Snd+8)& (0+255),w,b
 19030  002634  11CF               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 19031  002636  6FE0               	movwf	(TCP_Snd@txHeader+6)& (0+255),b
 19032  002638  51AA               	movf	(??_TCP_Snd+9)& (0+255),w,b
 19033  00263A  11D0               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 19034  00263C  6FE1               	movwf	(TCP_Snd@txHeader+7)& (0+255),b
 19035                           
 19036                           ;tcpv4.c: 214: txHeader.ackNumber = ((((uint32_t)tcbPtr->remoteAck&(uint32_t)0xff000000)
      +                           >> 24) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)tcbPtr
      +                          ->remoteAck&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x0000
      +                          0
 19037  00263E  0E0C               	movlw	12
 19038  002640  D9DF               	call	PL391	;call to abstracted procedure
 19039  002642  64F7               	cpfsgt	tblptrh,c
 19040  002644  D003               	bra	u11307
 19041  002646  DA13               	call	PL445	;call to abstracted procedure
 19042  002648  DA39               	call	PL539	;call to abstracted procedure
 19043  00264A  D004               	bra	u11300
 19044  00264C                     u11307:
 19045  00264C  EC66  F011         	call	PL389	;call to abstracted procedure
 19046  002650  DA22               	call	PL499	;call to abstracted procedure
 19047  002652  DAD2               	call	PL619	;call to abstracted procedure
 19048  002654                     u11300:
 19049  002654  DAA3               	call	PL569	;call to abstracted procedure
 19050  002656  0E0C               	movlw	12
 19051  002658  DA11               	call	PL483	;call to abstracted procedure
 19052  00265A  64F7               	cpfsgt	tblptrh,c
 19053  00265C  D002               	bra	u11317
 19054  00265E  DA5D               	call	PL551	;call to abstracted procedure
 19055  002660  D003               	bra	u11310
 19056  002662                     u11317:
 19057  002662  EC66  F011         	call	PL389	;call to abstracted procedure
 19058  002666  DAAD               	call	PL605	;call to abstracted procedure
 19059  002668                     u11310:
 19060  002668  DA30               	call	PL543	;call to abstracted procedure
 19061  00266A  0E0C               	movlw	12
 19062  00266C  DA49               	call	PL549	;call to abstracted procedure
 19063  00266E  64F7               	cpfsgt	tblptrh,c
 19064  002670  D002               	bra	u11327
 19065  002672  DA60               	call	PL553	;call to abstracted procedure
 19066  002674  D003               	bra	u11320
 19067  002676                     u11327:
 19068  002676  EC66  F011         	call	PL389	;call to abstracted procedure
 19069  00267A  DAAC               	call	PL607	;call to abstracted procedure
 19070  00267C                     u11320:
 19071  00267C  DA11               	call	PL529	;call to abstracted procedure
 19072  00267E  0E0C               	movlw	12
 19073  002680  DA73               	call	PL557	;call to abstracted procedure
 19074  002682  64F7               	cpfsgt	tblptrh,c
 19075  002684  D002               	bra	u11337
 19076  002686  DA63               	call	PL555	;call to abstracted procedure
 19077  002688  D003               	bra	u11330
 19078  00268A                     u11337:
 19079  00268A  EC66  F011         	call	PL389	;call to abstracted procedure
 19080  00268E  DAAB               	call	PL609	;call to abstracted procedure
 19081  002690                     u11330:
 19082  002690  D9C4               	call	PL437	;call to abstracted procedure
 19083  002692  6FE2               	movwf	(TCP_Snd@txHeader+8)& (0+255),b
 19084  002694  51A8               	movf	(??_TCP_Snd+7)& (0+255),w,b
 19085  002696  11CE               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 19086  002698  6FE3               	movwf	(TCP_Snd@txHeader+9)& (0+255),b
 19087  00269A  51A9               	movf	(??_TCP_Snd+8)& (0+255),w,b
 19088  00269C  11CF               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 19089  00269E  6FE4               	movwf	(TCP_Snd@txHeader+10)& (0+255),b
 19090  0026A0  51AA               	movf	(??_TCP_Snd+9)& (0+255),w,b
 19091  0026A2  11D0               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 19092  0026A4  6FE5               	movwf	(TCP_Snd@txHeader+11)& (0+255),b
 19093                           
 19094                           ; BSR set to: 0
 19095                           ;tcpv4.c: 216: txHeader.ns = 0;
 19096  0026A6  91E6               	bcf	(TCP_Snd@txHeader+12)& (0+255),0,b
 19097                           
 19098                           ; BSR set to: 0
 19099                           ;tcpv4.c: 217: txHeader.reserved = 0;
 19100  0026A8  0EF1               	movlw	-15
 19101  0026AA  17E6               	andwf	(TCP_Snd@txHeader+12)& (0+255),f,b
 19102                           
 19103                           ; BSR set to: 0
 19104                           ;tcpv4.c: 218: txHeader.dataOffset = 5;
 19105  0026AC  51E6               	movf	(TCP_Snd@txHeader+12)& (0+255),w,b
 19106  0026AE  0B0F               	andlw	-241
 19107  0026B0  0950               	iorlw	80
 19108  0026B2  6FE6               	movwf	(TCP_Snd@txHeader+12)& (0+255),b
 19109                           
 19110                           ;tcpv4.c: 219: txHeader.windowSize = ((((uint16_t)tcbPtr->localWnd & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)tcbPtr->localWnd & (uint16_t)0x00FF) << 8));
 19111  0026B4  0E1A               	movlw	26
 19112  0026B6  D9A4               	call	PL391	;call to abstracted procedure
 19113  0026B8  64F7               	cpfsgt	tblptrh,c
 19114  0026BA  D002               	bra	u11357
 19115  0026BC  D9D8               	call	PL445	;call to abstracted procedure
 19116  0026BE  D003               	bra	u11350
 19117  0026C0                     u11357:
 19118  0026C0  EC66  F011         	call	PL389	;call to abstracted procedure
 19119  0026C4  D9E8               	call	PL499	;call to abstracted procedure
 19120  0026C6                     u11350:
 19121  0026C6  DAC6               	call	PL685	;call to abstracted procedure
 19122  0026C8  0E1A               	movlw	26
 19123  0026CA  DA0D               	call	PL547	;call to abstracted procedure
 19124  0026CC  64F7               	cpfsgt	tblptrh,c
 19125  0026CE  D002               	bra	u11367
 19126  0026D0  DAAF               	call	PL641	;call to abstracted procedure
 19127  0026D2  D003               	bra	u11360
 19128  0026D4                     u11367:
 19129  0026D4  EC66  F011         	call	PL389	;call to abstracted procedure
 19130  0026D8  DAC2               	call	PL691	;call to abstracted procedure
 19131  0026DA                     u11360:
 19132  0026DA  DA93               	call	PL621	;call to abstracted procedure
 19133  0026DC  6FE8               	movwf	(TCP_Snd@txHeader+14)& (0+255),b
 19134  0026DE  51A6               	movf	(??_TCP_Snd+5)& (0+255),w,b
 19135  0026E0  11AA               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 19136  0026E2  6FE9               	movwf	(TCP_Snd@txHeader+15)& (0+255),b
 19137                           
 19138                           ; BSR set to: 0
 19139                           ;tcpv4.c: 220: txHeader.checksum = 0;
 19140  0026E4  6BEA               	clrf	(TCP_Snd@txHeader+16)& (0+255),b
 19141  0026E6  6BEB               	clrf	(TCP_Snd@txHeader+17)& (0+255),b
 19142                           
 19143                           ; BSR set to: 0
 19144                           ;tcpv4.c: 221: txHeader.urgentPtr = 0;
 19145  0026E8  6BEC               	clrf	(TCP_Snd@txHeader+18)& (0+255),b
 19146  0026EA  6BED               	clrf	(TCP_Snd@txHeader+19)& (0+255),b
 19147                           
 19148                           ;tcpv4.c: 223: if ((tcbPtr->flags) & (0x02U | 0x04U))
 19149  0026EC  0E35               	movlw	53
 19150  0026EE  D988               	call	PL391	;call to abstracted procedure
 19151  0026F0  64F7               	cpfsgt	tblptrh,c
 19152  0026F2  D003               	bra	u11377
 19153  0026F4  0008               	tblrd		*
 19154  0026F6  50F5               	movf	tablat,w,c
 19155  0026F8  D003               	bra	u11370
 19156  0026FA                     u11377:
 19157  0026FA  EC66  F011         	call	PL389	;call to abstracted procedure
 19158  0026FE  50EF               	movf	indf0,w,c
 19159  002700                     u11370:
 19160  002700  0100               	movlb	0	; () banked
 19161  002702  6FA3               	movwf	(??_TCP_Snd+2)& (0+255),b
 19162  002704  0E06               	movlw	6
 19163  002706  17A3               	andwf	(??_TCP_Snd+2)& (0+255),f,b
 19164  002708  E003               	bz	l8050
 19165                           
 19166                           ; BSR set to: 0
 19167                           ;tcpv4.c: 224: {
 19168                           ;tcpv4.c: 225: tcpDataLength = 0;
 19169  00270A  6BD8               	clrf	TCP_Snd@tcpDataLength& (0+255),b
 19170  00270C  6BD9               	clrf	(TCP_Snd@tcpDataLength+1)& (0+255),b
 19171                           
 19172                           ;tcpv4.c: 226: } else
 19173  00270E  D094               	goto	l1113
 19174  002710                     l8050:
 19175                           
 19176                           ; BSR set to: 0
 19177                           ;tcpv4.c: 227: {
 19178                           ;tcpv4.c: 228: tcpDataLength = tcbPtr->bytesToSend;
 19179  002710  0E27               	movlw	39
 19180  002712  D976               	call	PL391	;call to abstracted procedure
 19181  002714  64F7               	cpfsgt	tblptrh,c
 19182  002716  D002               	bra	u11397
 19183  002718  DA4D               	call	PL593	;call to abstracted procedure
 19184  00271A  D003               	bra	u11390
 19185  00271C                     u11397:
 19186  00271C  EC66  F011         	call	PL389	;call to abstracted procedure
 19187  002720  DA8E               	call	PL655	;call to abstracted procedure
 19188  002722                     u11390:
 19189                           
 19190                           ;tcpv4.c: 230: if (tcpDataLength != 0)
 19191  002722  0100               	movlb	0	; () banked
 19192  002724  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 19193  002726  11D9               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 19194  002728  E101 D086          	bz	l1113
 19195                           
 19196                           ; BSR set to: 0
 19197                           ;tcpv4.c: 231: {
 19198                           ;tcpv4.c: 232: if(tcpDataLength > tcbPtr->remoteWnd)
 19199  00272C  0E18               	movlw	24
 19200  00272E  D968               	call	PL391	;call to abstracted procedure
 19201  002730  64F7               	cpfsgt	tblptrh,c
 19202  002732  D002               	bra	u11417
 19203  002734  D99C               	call	PL445	;call to abstracted procedure
 19204  002736  D003               	bra	u11410
 19205  002738                     u11417:
 19206  002738  EC66  F011         	call	PL389	;call to abstracted procedure
 19207  00273C  D9AC               	call	PL499	;call to abstracted procedure
 19208  00273E                     u11410:
 19209  00273E  DA84               	call	PL663	;call to abstracted procedure
 19210  002740  E209               	bc	l1115
 19211                           
 19212                           ; BSR set to: 0
 19213                           ;tcpv4.c: 233: {
 19214                           ;tcpv4.c: 234: tcpDataLength = tcbPtr->remoteWnd;
 19215  002742  0E18               	movlw	24
 19216  002744  D95D               	call	PL391	;call to abstracted procedure
 19217  002746  64F7               	cpfsgt	tblptrh,c
 19218  002748  D002               	bra	u11437
 19219  00274A  DA34               	call	PL593	;call to abstracted procedure
 19220  00274C  D003               	bra	u11430
 19221  00274E                     u11437:
 19222  00274E  EC66  F011         	call	PL389	;call to abstracted procedure
 19223  002752  DA75               	call	PL655	;call to abstracted procedure
 19224  002754                     u11430:
 19225  002754                     l1115:
 19226                           
 19227                           ;tcpv4.c: 235: }
 19228                           ;tcpv4.c: 237: if(tcpDataLength > tcbPtr->mss)
 19229  002754  0E1C               	movlw	28
 19230  002756  0100               	movlb	0	; () banked
 19231  002758  D953               	call	PL391	;call to abstracted procedure
 19232  00275A  64F7               	cpfsgt	tblptrh,c
 19233  00275C  D002               	bra	u11447
 19234  00275E  D987               	call	PL445	;call to abstracted procedure
 19235  002760  D003               	bra	u11440
 19236  002762                     u11447:
 19237  002762  EC66  F011         	call	PL389	;call to abstracted procedure
 19238  002766  D997               	call	PL499	;call to abstracted procedure
 19239  002768                     u11440:
 19240  002768  DA6F               	call	PL663	;call to abstracted procedure
 19241  00276A  E209               	bc	l1116
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;tcpv4.c: 238: {
 19245                           ;tcpv4.c: 239: tcpDataLength = tcbPtr->mss;
 19246  00276C  0E1C               	movlw	28
 19247  00276E  D948               	call	PL391	;call to abstracted procedure
 19248  002770  64F7               	cpfsgt	tblptrh,c
 19249  002772  D002               	bra	u11467
 19250  002774  DA1F               	call	PL593	;call to abstracted procedure
 19251  002776  D003               	bra	u11460
 19252  002778                     u11467:
 19253  002778  EC66  F011         	call	PL389	;call to abstracted procedure
 19254  00277C  DA60               	call	PL655	;call to abstracted procedure
 19255  00277E                     u11460:
 19256  00277E                     l1116:
 19257                           
 19258                           ;tcpv4.c: 240: }
 19259                           ;tcpv4.c: 241: data = tcbPtr->txBufferPtr;
 19260  00277E  0E25               	movlw	37
 19261  002780  0100               	movlb	0	; () banked
 19262  002782  D93E               	call	PL391	;call to abstracted procedure
 19263  002784  64F7               	cpfsgt	tblptrh,c
 19264  002786  D007               	bra	u11477
 19265  002788  0009               	tblrd		*+
 19266  00278A  CFF5 F0D1          	movff	tablat,TCP_Snd@data
 19267  00278E  0009               	tblrd		*+
 19268  002790  CFF5 F0D2          	movff	tablat,TCP_Snd@data+1
 19269  002794  D006               	bra	u11470
 19270  002796                     u11477:
 19271  002796  EC66  F011         	call	PL389	;call to abstracted procedure
 19272  00279A  CFEE F0D1          	movff	postinc0,TCP_Snd@data
 19273  00279E  CFEE F0D2          	movff	postinc0,TCP_Snd@data+1
 19274  0027A2                     u11470:
 19275                           
 19276                           ;tcpv4.c: 244: tcbPtr->txBufferPtr = tcbPtr->txBufferPtr + tcpDataLength;
 19277  0027A2  0E25               	movlw	37
 19278  0027A4  0100               	movlb	0	; () banked
 19279  0027A6  D92C               	call	PL391	;call to abstracted procedure
 19280  0027A8  64F7               	cpfsgt	tblptrh,c
 19281  0027AA  D002               	bra	u11487
 19282  0027AC  D960               	call	PL445	;call to abstracted procedure
 19283  0027AE  D003               	bra	u11480
 19284  0027B0                     u11487:
 19285  0027B0  EC66  F011         	call	PL389	;call to abstracted procedure
 19286  0027B4  D970               	call	PL499	;call to abstracted procedure
 19287  0027B6                     u11480:
 19288  0027B6  0100               	movlb	0	; () banked
 19289  0027B8  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 19290  0027BA  27A3               	addwf	(??_TCP_Snd+2)& (0+255),f,b
 19291  0027BC  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 19292  0027BE  23A4               	addwfc	(??_TCP_Snd+3)& (0+255),f,b
 19293  0027C0  0E25               	movlw	37
 19294  0027C2  D9DF               	call	PL563	;call to abstracted procedure
 19295  0027C4  64F7               	cpfsgt	tblptrh,c
 19296  0027C6  D002               	bra	u11497
 19297  0027C8  DA2C               	call	PL637	;call to abstracted procedure
 19298  0027CA  D003               	bra	u11490
 19299  0027CC                     u11497:
 19300  0027CC  EC66  F011         	call	PL389	;call to abstracted procedure
 19301  0027D0  DA4F               	call	PL715	;call to abstracted procedure
 19302  0027D2                     u11490:
 19303                           
 19304                           ;tcpv4.c: 245: tcbPtr->bytesToSend = tcbPtr->bytesToSend - tcpDataLength;
 19305  0027D2  0E27               	movlw	39
 19306  0027D4  0100               	movlb	0	; () banked
 19307  0027D6  D914               	call	PL391	;call to abstracted procedure
 19308  0027D8  64F7               	cpfsgt	tblptrh,c
 19309  0027DA  D002               	bra	u11507
 19310  0027DC  D948               	call	PL445	;call to abstracted procedure
 19311  0027DE  D003               	bra	u11500
 19312  0027E0                     u11507:
 19313  0027E0  EC66  F011         	call	PL389	;call to abstracted procedure
 19314  0027E4  D958               	call	PL499	;call to abstracted procedure
 19315  0027E6                     u11500:
 19316  0027E6  0100               	movlb	0	; () banked
 19317  0027E8  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 19318  0027EA  5FA3               	subwf	(??_TCP_Snd+2)& (0+255),f,b
 19319  0027EC  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 19320  0027EE  5BA4               	subwfb	(??_TCP_Snd+3)& (0+255),f,b
 19321  0027F0  0E27               	movlw	39
 19322  0027F2  D9C7               	call	PL563	;call to abstracted procedure
 19323  0027F4  64F7               	cpfsgt	tblptrh,c
 19324  0027F6  D002               	bra	u11517
 19325  0027F8  DA14               	call	PL637	;call to abstracted procedure
 19326  0027FA  D003               	bra	u11510
 19327  0027FC                     u11517:
 19328  0027FC  EC66  F011         	call	PL389	;call to abstracted procedure
 19329  002800  DA37               	call	PL715	;call to abstracted procedure
 19330  002802                     u11510:
 19331                           
 19332                           ;tcpv4.c: 247: if (tcbPtr->bytesToSend == 0)
 19333  002802  0E27               	movlw	39
 19334  002804  0100               	movlb	0	; () banked
 19335  002806  D8FC               	call	PL391	;call to abstracted procedure
 19336  002808  64F7               	cpfsgt	tblptrh,c
 19337  00280A  D002               	bra	u11527
 19338  00280C  D930               	call	PL445	;call to abstracted procedure
 19339  00280E  D003               	bra	u11520
 19340  002810                     u11527:
 19341  002810  EC66  F011         	call	PL389	;call to abstracted procedure
 19342  002814  D940               	call	PL499	;call to abstracted procedure
 19343  002816                     u11520:
 19344  002816  0100               	movlb	0	; () banked
 19345  002818  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 19346  00281A  11A4               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 19347  00281C  E10D               	bnz	l1113
 19348                           
 19349                           ; BSR set to: 0
 19350                           ;tcpv4.c: 248: {
 19351                           ;tcpv4.c: 249: tcbPtr->flags |= 0x08U;
 19352  00281E  0E35               	movlw	53
 19353  002820  D8EF               	call	PL391	;call to abstracted procedure
 19354  002822  64F7               	cpfsgt	tblptrh,c
 19355  002824  D005               	bra	u11547
 19356  002826  0E08               	movlw	8
 19357  002828  0008               	tblrd		*
 19358  00282A  12F5               	iorwf	tablat,f,c
 19359  00282C  000C               	tblwt		*
 19360  00282E  D004               	bra	u11540
 19361  002830                     u11547:
 19362  002830  EC66  F011         	call	PL389	;call to abstracted procedure
 19363  002834  0E08               	movlw	8
 19364  002836  12EF               	iorwf	indf0,f,c
 19365  002838                     u11540:
 19366  002838                     l1113:
 19367                           
 19368                           ;tcpv4.c: 250: }
 19369                           ;tcpv4.c: 251: }
 19370                           ;tcpv4.c: 252: }
 19371                           ;tcpv4.c: 254: txHeader.flags = tcbPtr->flags;
 19372  002838  0E35               	movlw	53
 19373  00283A  0100               	movlb	0	; () banked
 19374  00283C  D8E1               	call	PL391	;call to abstracted procedure
 19375  00283E  64F7               	cpfsgt	tblptrh,c
 19376  002840  D003               	bra	u11557
 19377  002842  0008               	tblrd		*
 19378  002844  50F5               	movf	tablat,w,c
 19379  002846  D003               	bra	u11550
 19380  002848                     u11557:
 19381  002848  EC66  F011         	call	PL389	;call to abstracted procedure
 19382  00284C  50EF               	movf	indf0,w,c
 19383  00284E                     u11550:
 19384  00284E  0100               	movlb	0	; () banked
 19385  002850  6FE7               	movwf	(TCP_Snd@txHeader+13)& (0+255),b
 19386                           
 19387                           ; BSR set to: 0
 19388                           ;tcpv4.c: 255: payloadLength = sizeof(tcpHeader_t) + tcpDataLength;
 19389  002852  0E14               	movlw	20
 19390  002854  25D8               	addwf	TCP_Snd@tcpDataLength& (0+255),w,b
 19391  002856  6FD5               	movwf	TCP_Snd@payloadLength& (0+255),b
 19392  002858  0E00               	movlw	0
 19393  00285A  21D9               	addwfc	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 19394  00285C  6FD6               	movwf	(TCP_Snd@payloadLength+1)& (0+255),b
 19395                           
 19396                           ; BSR set to: 0
 19397                           ;tcpv4.c: 257: ret = IPv4_Start(tcbPtr->destIP, TCP);
 19398  00285E  0E02               	movlw	2
 19399  002860  D8CF               	call	PL391	;call to abstracted procedure
 19400  002862  64F7               	cpfsgt	tblptrh,c
 19401  002864  D00D               	bra	u11567
 19402  002866  0009               	tblrd		*+
 19403  002868  CFF5 F022          	movff	tablat,IPv4_Start@destAddress
 19404  00286C  0009               	tblrd		*+
 19405  00286E  CFF5 F023          	movff	tablat,IPv4_Start@destAddress+1
 19406  002872  0009               	tblrd		*+
 19407  002874  CFF5 F024          	movff	tablat,IPv4_Start@destAddress+2
 19408  002878  0009               	tblrd		*+
 19409  00287A  CFF5 F025          	movff	tablat,IPv4_Start@destAddress+3
 19410  00287E  D00A               	bra	u11560
 19411  002880                     u11567:
 19412  002880  EC66  F011         	call	PL389	;call to abstracted procedure
 19413  002884  CFEE F022          	movff	postinc0,IPv4_Start@destAddress
 19414  002888  CFEE F023          	movff	postinc0,IPv4_Start@destAddress+1
 19415  00288C  CFEE F024          	movff	postinc0,IPv4_Start@destAddress+2
 19416  002890  CFEE F025          	movff	postinc0,IPv4_Start@destAddress+3
 19417  002894                     u11560:
 19418  002894  0E06               	movlw	6
 19419  002896  6E26               	movwf	IPv4_Start@protocol,c
 19420  002898  EC01  F021         	call	_IPv4_Start	;wreg free
 19421  00289C  6FD7               	movwf	TCP_Snd@ret& (0+255),b
 19422                           
 19423                           ; BSR set to: 0
 19424                           ;tcpv4.c: 258: if (ret)
 19425  00289E  51D7               	movf	TCP_Snd@ret& (0+255),w,b
 19426  0028A0  E039               	bz	l8082
 19427                           
 19428                           ; BSR set to: 0
 19429                           ;tcpv4.c: 259: {
 19430                           ;tcpv4.c: 260: ETH_WriteBlock((uint8_t *) &txHeader, sizeof(tcpHeader_t));
 19431  0028A2  0EDA               	movlw	low TCP_Snd@txHeader
 19432  0028A4  6E17               	movwf	ETH_WriteBlock@buffer,c
 19433  0028A6  6A18               	clrf	ETH_WriteBlock@buffer+1,c
 19434  0028A8  D9E8               	call	PL747	;call to abstracted procedure
 19435  0028AA  EC22  F02E         	call	_ETH_WriteBlock	;wreg free
 19436                           
 19437                           ;tcpv4.c: 262: if (tcpDataLength > 0)
 19438  0028AE  0100               	movlb	0	; () banked
 19439  0028B0  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 19440  0028B2  11D9               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 19441  0028B4  E00A               	bz	l8074
 19442                           
 19443                           ; BSR set to: 0
 19444                           ;tcpv4.c: 263: {
 19445                           ;tcpv4.c: 264: ETH_WriteBlock( data, tcpDataLength);
 19446  0028B6  C0D1  F017         	movff	TCP_Snd@data,ETH_WriteBlock@buffer
 19447  0028BA  C0D2  F018         	movff	TCP_Snd@data+1,ETH_WriteBlock@buffer+1
 19448  0028BE  C0D8  F019         	movff	TCP_Snd@tcpDataLength,ETH_WriteBlock@length
 19449  0028C2  C0D9  F01A         	movff	TCP_Snd@tcpDataLength+1,ETH_WriteBlock@length+1
 19450  0028C6  EC22  F02E         	call	_ETH_WriteBlock	;wreg free
 19451  0028CA                     l8074:
 19452                           
 19453                           ;tcpv4.c: 265: }
 19454                           ;tcpv4.c: 267: cksm = payloadLength + TCP;
 19455  0028CA  0E06               	movlw	6
 19456  0028CC  0100               	movlb	0	; () banked
 19457  0028CE  25D5               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 19458  0028D0  6FD3               	movwf	TCP_Snd@cksm& (0+255),b
 19459  0028D2  0E00               	movlw	0
 19460  0028D4  21D6               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 19461  0028D6  6FD4               	movwf	(TCP_Snd@cksm+1)& (0+255),b
 19462                           
 19463                           ; BSR set to: 0
 19464                           ;tcpv4.c: 269: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, payloadLength + 8, cksm);
 19465  0028D8  D9C7               	call	PL711	;call to abstracted procedure
 19466  0028DA  25D5               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 19467  0028DC  6E27               	movwf	ETH_TxComputeChecksum@len,c
 19468  0028DE  0E00               	movlw	0
 19469  0028E0  21D6               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 19470  0028E2  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 19471  0028E4  C0D3  F029         	movff	TCP_Snd@cksm,ETH_TxComputeChecksum@seed
 19472  0028E8  C0D4  F02A         	movff	TCP_Snd@cksm+1,ETH_TxComputeChecksum@seed+1
 19473  0028EC  EC1B  F02A         	call	_ETH_TxComputeChecksum	;wreg free
 19474  0028F0  C025  F0D3         	movff	?_ETH_TxComputeChecksum,TCP_Snd@cksm
 19475  0028F4  C026  F0D4         	movff	?_ETH_TxComputeChecksum+1,TCP_Snd@cksm+1
 19476                           
 19477                           ; BSR set to: 0
 19478                           ;tcpv4.c: 270: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (int)(((char*)&((tcpHeader_t *)1)->checksum)-1));
 19479  0028F8  EC9A  F02B         	call	PL579	;call to abstracted procedure
 19480  0028FC  0E32               	movlw	50
 19481  0028FE  6E19               	movwf	ETH_Insert@offset,c
 19482  002900  0ED3               	movlw	TCP_Snd@cksm& (0+255)
 19483  002902  ECD6  F02E         	call	_ETH_Insert
 19484                           
 19485                           ;tcpv4.c: 272: ret = IPV4_Send(payloadLength);
 19486  002906  C0D5  F031         	movff	TCP_Snd@payloadLength,IPV4_Send@payloadLength
 19487  00290A  C0D6  F032         	movff	TCP_Snd@payloadLength+1,IPV4_Send@payloadLength+1
 19488  00290E  EC67  F02B         	call	_IPV4_Send	;wreg free
 19489  002912  6FD7               	movwf	TCP_Snd@ret& (0+255),b
 19490  002914                     l8082:
 19491                           
 19492                           ; BSR set to: 0
 19493                           ;tcpv4.c: 273: }
 19494                           ;tcpv4.c: 277: if (ret == 0)
 19495  002914  51D7               	movf	TCP_Snd@ret& (0+255),w,b
 19496  002916  E13E               	bnz	l8088
 19497                           
 19498                           ; BSR set to: 0
 19499                           ;tcpv4.c: 278: {
 19500                           ;tcpv4.c: 281: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount + 1;
 19501  002918  0E34               	movlw	52
 19502  00291A  D872               	call	PL391	;call to abstracted procedure
 19503  00291C  64F7               	cpfsgt	tblptrh,c
 19504  00291E  D003               	bra	u11607
 19505  002920  0008               	tblrd		*
 19506  002922  50F5               	movf	tablat,w,c
 19507  002924  D003               	bra	u11600
 19508  002926                     u11607:
 19509  002926  EC66  F011         	call	PL389	;call to abstracted procedure
 19510  00292A  50EF               	movf	indf0,w,c
 19511  00292C                     u11600:
 19512  00292C  0100               	movlb	0	; () banked
 19513  00292E  6FA3               	movwf	(??_TCP_Snd+2)& (0+255),b
 19514  002930  2BA3               	incf	(??_TCP_Snd+2)& (0+255),f,b
 19515  002932  0E34               	movlw	52
 19516  002934  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 19517  002936  6FA4               	movwf	(??_TCP_Snd+3)& (0+255),b
 19518  002938  0E00               	movlw	0
 19519  00293A  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 19520  00293C  6FA5               	movwf	(??_TCP_Snd+4)& (0+255),b
 19521  00293E  C0A4  FFF6         	movff	??_TCP_Snd+3,tblptrl
 19522  002942  C0A5  FFF7         	movff	??_TCP_Snd+4,tblptrh
 19523  002946  0E00               	movlw	low (__smallconst shr (0+16))
 19524  002948  6EF8               	movwf	tblptru,c
 19525  00294A  0E0F               	movlw	(high __ramtop+-1)
 19526  00294C  64F7               	cpfsgt	tblptrh,c
 19527  00294E  D004               	bra	u11617
 19528  002950  C0A3  FFF5         	movff	??_TCP_Snd+2,tablat
 19529  002954  000C               	tblwt		*
 19530  002956  D004               	bra	u11610
 19531  002958                     u11617:
 19532  002958  EC66  F011         	call	PL389	;call to abstracted procedure
 19533  00295C  C0A3  FFEF         	movff	??_TCP_Snd+2,indf0
 19534  002960                     u11610:
 19535                           
 19536                           ;tcpv4.c: 283: if (tcbPtr->timeout == 0)
 19537  002960  0E30               	movlw	48
 19538  002962  0100               	movlb	0	; () banked
 19539  002964  D84D               	call	PL391	;call to abstracted procedure
 19540  002966  64F7               	cpfsgt	tblptrh,c
 19541  002968  D002               	bra	u11627
 19542  00296A  D881               	call	PL445	;call to abstracted procedure
 19543  00296C  D003               	bra	u11620
 19544  00296E                     u11627:
 19545  00296E  EC66  F011         	call	PL389	;call to abstracted procedure
 19546  002972  D891               	call	PL499	;call to abstracted procedure
 19547  002974                     u11620:
 19548  002974  0100               	movlb	0	; () banked
 19549  002976  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 19550  002978  11A4               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 19551  00297A  E13F               	bnz	l8090
 19552                           
 19553                           ; BSR set to: 0
 19554                           ;tcpv4.c: 284: {
 19555                           ;tcpv4.c: 285: tcbPtr->timeout = ((unsigned long)1*2);
 19556  00297C  0E30               	movlw	48
 19557  00297E  D840               	call	PL391	;call to abstracted procedure
 19558  002980  64F7               	cpfsgt	tblptrh,c
 19559  002982  D003               	bra	u11647
 19560  002984  EC3B  F012         	call	PL459	;call to abstracted procedure
 19561  002988  D004               	bra	u11640
 19562  00298A                     u11647:
 19563  00298A  EC66  F011         	call	PL389	;call to abstracted procedure
 19564  00298E  EC8F  F012         	call	PL611	;call to abstracted procedure
 19565  002992                     u11640:
 19566  002992  D033               	goto	l8090
 19567  002994                     l8088:
 19568                           
 19569                           ; BSR set to: 0
 19570                           ;tcpv4.c: 288: else
 19571                           ;tcpv4.c: 289: {
 19572                           ;tcpv4.c: 291: tcbPtr->localSeqno = tcbPtr->localSeqno + tcpDataLength;
 19573  002994  0E10               	movlw	16
 19574  002996  D834               	call	PL391	;call to abstracted procedure
 19575  002998  64F7               	cpfsgt	tblptrh,c
 19576  00299A  D003               	bra	u11657
 19577  00299C  D868               	call	PL445	;call to abstracted procedure
 19578  00299E  D88E               	call	PL539	;call to abstracted procedure
 19579  0029A0  D004               	bra	u11650
 19580  0029A2                     u11657:
 19581  0029A2  EC66  F011         	call	PL389	;call to abstracted procedure
 19582  0029A6  D877               	call	PL499	;call to abstracted procedure
 19583  0029A8  D927               	call	PL619	;call to abstracted procedure
 19584  0029AA                     u11650:
 19585  0029AA  0100               	movlb	0	; () banked
 19586  0029AC  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 19587  0029AE  25A3               	addwf	(??_TCP_Snd+2)& (0+255),w,b
 19588  0029B0  6FA7               	movwf	(??_TCP_Snd+6)& (0+255),b
 19589  0029B2  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 19590  0029B4  21A4               	addwfc	(??_TCP_Snd+3)& (0+255),w,b
 19591  0029B6  6FA8               	movwf	(??_TCP_Snd+7)& (0+255),b
 19592  0029B8  0E00               	movlw	0
 19593  0029BA  21A5               	addwfc	(??_TCP_Snd+4)& (0+255),w,b
 19594  0029BC  6FA9               	movwf	(??_TCP_Snd+8)& (0+255),b
 19595  0029BE  0E00               	movlw	0
 19596  0029C0  21A6               	addwfc	(??_TCP_Snd+5)& (0+255),w,b
 19597  0029C2  6FAA               	movwf	(??_TCP_Snd+9)& (0+255),b
 19598  0029C4  0E10               	movlw	16
 19599  0029C6  D85A               	call	PL483	;call to abstracted procedure
 19600  0029C8  64F7               	cpfsgt	tblptrh,c
 19601  0029CA  D00D               	bra	u11667
 19602  0029CC  C0A7  FFF5         	movff	??_TCP_Snd+6,tablat
 19603  0029D0  000D               	tblwt		*+
 19604  0029D2  C0A8  FFF5         	movff	??_TCP_Snd+7,tablat
 19605  0029D6  000D               	tblwt		*+
 19606  0029D8  C0A9  FFF5         	movff	??_TCP_Snd+8,tablat
 19607  0029DC  000D               	tblwt		*+
 19608  0029DE  C0AA  FFF5         	movff	??_TCP_Snd+9,tablat
 19609  0029E2  000C               	tblwt		*
 19610  0029E4  D00A               	bra	u11660
 19611  0029E6                     u11667:
 19612  0029E6  EC66  F011         	call	PL389	;call to abstracted procedure
 19613  0029EA  C0A7  FFEE         	movff	??_TCP_Snd+6,postinc0
 19614  0029EE  C0A8  FFEE         	movff	??_TCP_Snd+7,postinc0
 19615  0029F2  C0A9  FFEE         	movff	??_TCP_Snd+8,postinc0
 19616  0029F6  C0AA  FFEF         	movff	??_TCP_Snd+9,indf0
 19617  0029FA                     u11660:
 19618  0029FA                     l8090:
 19619                           
 19620                           ;tcpv4.c: 293: }
 19621                           ;tcpv4.c: 295: return ret;
 19622  0029FA  0100               	movlb	0	; () banked
 19623  0029FC  51D7               	movf	TCP_Snd@ret& (0+255),w,b
 19624                           
 19625                           ; BSR set to: 0
 19626  0029FE  0012               	return		;funcret
 19627  002A00                     __end_of_TCP_Snd:
 19628                           	opt stack 0
 19629  002A00                     PL391:
 19630                           	opt stack 15
 19631  002A00  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 19632  002A02  6FA1               	movwf	??_TCP_Snd& (0+255),b
 19633  002A04  0E00               	movlw	0
 19634  002A06  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 19635  002A08  6FA2               	movwf	(??_TCP_Snd+1)& (0+255),b
 19636  002A0A  C0A1  FFF6         	movff	??_TCP_Snd,tblptrl
 19637  002A0E  C0A2  FFF7         	movff	??_TCP_Snd+1,tblptrh
 19638  002A12  0E00               	movlw	low (__smallconst shr (0+16))
 19639  002A14  6EF8               	movwf	tblptru,c
 19640  002A16  0E0F               	movlw	(high __ramtop+-1)
 19641  002A18  0012               	return	
 19642  002A1A                     __end_ofPL391:
 19643                           	opt stack 0
 19644  002A1A                     PL437:
 19645                           	opt stack 15
 19646  002A1A  0100               	movlb	0	; () banked
 19647  002A1C  6BC5               	clrf	(??_TCP_Snd+36)& (0+255),b
 19648  002A1E  6BC6               	clrf	(??_TCP_Snd+37)& (0+255),b
 19649  002A20  6BC7               	clrf	(??_TCP_Snd+38)& (0+255),b
 19650  002A22  51C4               	movf	(??_TCP_Snd+35)& (0+255),w,b
 19651  002A24  6FC8               	movwf	(??_TCP_Snd+39)& (0+255),b
 19652  002A26  0E19               	movlw	25
 19653  002A28  D005               	goto	u11290
 19654  002A2A                     u11295:
 19655  002A2A  90D8               	bcf	status,0,c
 19656  002A2C  33C8               	rrcf	(??_TCP_Snd+39)& (0+255),f,b
 19657  002A2E  33C7               	rrcf	(??_TCP_Snd+38)& (0+255),f,b
 19658  002A30  33C6               	rrcf	(??_TCP_Snd+37)& (0+255),f,b
 19659  002A32  33C5               	rrcf	(??_TCP_Snd+36)& (0+255),f,b
 19660  002A34                     u11290:
 19661  002A34  2EE8               	decfsz	wreg,f,c
 19662  002A36  D7F9               	goto	u11295
 19663  002A38  51BB               	movf	(??_TCP_Snd+26)& (0+255),w,b
 19664  002A3A  11C5               	iorwf	(??_TCP_Snd+36)& (0+255),w,b
 19665  002A3C  6FC9               	movwf	(??_TCP_Snd+40)& (0+255),b
 19666  002A3E  51BC               	movf	(??_TCP_Snd+27)& (0+255),w,b
 19667  002A40  11C6               	iorwf	(??_TCP_Snd+37)& (0+255),w,b
 19668  002A42  6FCA               	movwf	(??_TCP_Snd+41)& (0+255),b
 19669  002A44  51BD               	movf	(??_TCP_Snd+28)& (0+255),w,b
 19670  002A46  11C7               	iorwf	(??_TCP_Snd+38)& (0+255),w,b
 19671  002A48  6FCB               	movwf	(??_TCP_Snd+42)& (0+255),b
 19672  002A4A  51BE               	movf	(??_TCP_Snd+29)& (0+255),w,b
 19673  002A4C  11C8               	iorwf	(??_TCP_Snd+39)& (0+255),w,b
 19674  002A4E  6FCC               	movwf	(??_TCP_Snd+43)& (0+255),b
 19675  002A50  51B1               	movf	(??_TCP_Snd+16)& (0+255),w,b
 19676  002A52  11C9               	iorwf	(??_TCP_Snd+40)& (0+255),w,b
 19677  002A54  6FCD               	movwf	(??_TCP_Snd+44)& (0+255),b
 19678  002A56  51B2               	movf	(??_TCP_Snd+17)& (0+255),w,b
 19679  002A58  11CA               	iorwf	(??_TCP_Snd+41)& (0+255),w,b
 19680  002A5A  6FCE               	movwf	(??_TCP_Snd+45)& (0+255),b
 19681  002A5C  51B3               	movf	(??_TCP_Snd+18)& (0+255),w,b
 19682  002A5E  11CB               	iorwf	(??_TCP_Snd+42)& (0+255),w,b
 19683  002A60  6FCF               	movwf	(??_TCP_Snd+46)& (0+255),b
 19684  002A62  51B4               	movf	(??_TCP_Snd+19)& (0+255),w,b
 19685  002A64  11CC               	iorwf	(??_TCP_Snd+43)& (0+255),w,b
 19686  002A66  6FD0               	movwf	(??_TCP_Snd+47)& (0+255),b
 19687  002A68  51A7               	movf	(??_TCP_Snd+6)& (0+255),w,b
 19688  002A6A  11CD               	iorwf	(??_TCP_Snd+44)& (0+255),w,b
 19689  002A6C  0012               	return	
 19690  002A6E                     __end_ofPL437:
 19691                           	opt stack 0
 19692  002A6E                     PL445:
 19693                           	opt stack 15
 19694  002A6E  0009               	tblrd		*+
 19695  002A70  CFF5 F0A3          	movff	tablat,??_TCP_Snd+2
 19696  002A74  0009               	tblrd		*+
 19697  002A76  CFF5 F0A4          	movff	tablat,??_TCP_Snd+3
 19698  002A7A  0012               	return	
 19699  002A7C                     __end_ofPL445:
 19700                           	opt stack 0
 19701  002A7C                     PL483:
 19702                           	opt stack 15
 19703  002A7C  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 19704  002A7E  6FAB               	movwf	(??_TCP_Snd+10)& (0+255),b
 19705  002A80  0E00               	movlw	0
 19706  002A82  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 19707  002A84  6FAC               	movwf	(??_TCP_Snd+11)& (0+255),b
 19708  002A86  C0AB  FFF6         	movff	??_TCP_Snd+10,tblptrl
 19709  002A8A  C0AC  FFF7         	movff	??_TCP_Snd+11,tblptrh
 19710  002A8E  0E00               	movlw	low (__smallconst shr (0+16))
 19711  002A90  6EF8               	movwf	tblptru,c
 19712  002A92  0E0F               	movlw	(high __ramtop+-1)
 19713  002A94  0012               	return	
 19714  002A96                     __end_ofPL483:
 19715                           	opt stack 0
 19716  002A96                     PL499:
 19717                           	opt stack 15
 19718  002A96  CFEE F0A3          	movff	postinc0,??_TCP_Snd+2
 19719  002A9A  CFEE F0A4          	movff	postinc0,??_TCP_Snd+3
 19720  002A9E  0012               	return	
 19721  002AA0                     __end_ofPL499:
 19722                           	opt stack 0
 19723  002AA0                     PL529:
 19724                           	opt stack 15
 19725  002AA0  C0B8  F0B7         	movff	??_TCP_Snd+23,??_TCP_Snd+22
 19726  002AA4  C0B9  F0B8         	movff	??_TCP_Snd+24,??_TCP_Snd+23
 19727  002AA8  C0BA  F0B9         	movff	??_TCP_Snd+25,??_TCP_Snd+24
 19728  002AAC  0100               	movlb	0	; () banked
 19729  002AAE  6BBA               	clrf	(??_TCP_Snd+25)& (0+255),b
 19730  002AB0  6BBB               	clrf	(??_TCP_Snd+26)& (0+255),b
 19731  002AB2  51B8               	movf	(??_TCP_Snd+23)& (0+255),w,b
 19732  002AB4  6FBC               	movwf	(??_TCP_Snd+27)& (0+255),b
 19733  002AB6  6BBD               	clrf	(??_TCP_Snd+28)& (0+255),b
 19734  002AB8  6BBE               	clrf	(??_TCP_Snd+29)& (0+255),b
 19735  002ABA  0012               	return	
 19736  002ABC                     __end_ofPL529:
 19737                           	opt stack 0
 19738  002ABC                     PL539:
 19739                           	opt stack 15
 19740  002ABC  0009               	tblrd		*+
 19741  002ABE  CFF5 F0A5          	movff	tablat,??_TCP_Snd+4
 19742  002AC2  0009               	tblrd		*+
 19743  002AC4  CFF5 F0A6          	movff	tablat,??_TCP_Snd+5
 19744  002AC8  0012               	return	
 19745  002ACA                     __end_ofPL539:
 19746                           	opt stack 0
 19747  002ACA                     PL543:
 19748                           	opt stack 15
 19749  002ACA  0100               	movlb	0	; () banked
 19750  002ACC  6BB1               	clrf	(??_TCP_Snd+16)& (0+255),b
 19751  002ACE  51AE               	movf	(??_TCP_Snd+13)& (0+255),w,b
 19752  002AD0  6FB2               	movwf	(??_TCP_Snd+17)& (0+255),b
 19753  002AD2  6BB3               	clrf	(??_TCP_Snd+18)& (0+255),b
 19754  002AD4  6BB4               	clrf	(??_TCP_Snd+19)& (0+255),b
 19755  002AD6  C0B3  F0B4         	movff	??_TCP_Snd+18,??_TCP_Snd+19
 19756  002ADA  C0B2  F0B3         	movff	??_TCP_Snd+17,??_TCP_Snd+18
 19757  002ADE  C0B1  F0B2         	movff	??_TCP_Snd+16,??_TCP_Snd+17
 19758  002AE2  6BB1               	clrf	(??_TCP_Snd+16)& (0+255),b
 19759  002AE4  0012               	return	
 19760  002AE6                     __end_ofPL543:
 19761                           	opt stack 0
 19762  002AE6                     PL547:
 19763                           	opt stack 15
 19764  002AE6  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 19765  002AE8  6FA7               	movwf	(??_TCP_Snd+6)& (0+255),b
 19766  002AEA  0E00               	movlw	0
 19767  002AEC  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 19768  002AEE  6FA8               	movwf	(??_TCP_Snd+7)& (0+255),b
 19769  002AF0  C0A7  FFF6         	movff	??_TCP_Snd+6,tblptrl
 19770  002AF4  C0A8  FFF7         	movff	??_TCP_Snd+7,tblptrh
 19771  002AF8  0E00               	movlw	low (__smallconst shr (0+16))
 19772  002AFA  6EF8               	movwf	tblptru,c
 19773  002AFC  0E0F               	movlw	(high __ramtop+-1)
 19774  002AFE  0012               	return	
 19775  002B00                     __end_ofPL547:
 19776                           	opt stack 0
 19777  002B00                     PL549:
 19778                           	opt stack 15
 19779  002B00  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 19780  002B02  6FB5               	movwf	(??_TCP_Snd+20)& (0+255),b
 19781  002B04  0E00               	movlw	0
 19782  002B06  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 19783  002B08  6FB6               	movwf	(??_TCP_Snd+21)& (0+255),b
 19784  002B0A  C0B5  FFF6         	movff	??_TCP_Snd+20,tblptrl
 19785  002B0E  C0B6  FFF7         	movff	??_TCP_Snd+21,tblptrh
 19786  002B12  0E00               	movlw	low (__smallconst shr (0+16))
 19787  002B14  6EF8               	movwf	tblptru,c
 19788  002B16  0E0F               	movlw	(high __ramtop+-1)
 19789  002B18  0012               	return	
 19790  002B1A                     __end_ofPL549:
 19791                           	opt stack 0
 19792  002B1A                     PL551:
 19793                           	opt stack 15
 19794  002B1A  0009               	tblrd		*+
 19795  002B1C  CFF5 F0AD          	movff	tablat,??_TCP_Snd+12
 19796  002B20  0009               	tblrd		*+
 19797  002B22  CFF5 F0AE          	movff	tablat,??_TCP_Snd+13
 19798  002B26  0009               	tblrd		*+
 19799  002B28  CFF5 F0AF          	movff	tablat,??_TCP_Snd+14
 19800  002B2C  0009               	tblrd		*+
 19801  002B2E  CFF5 F0B0          	movff	tablat,??_TCP_Snd+15
 19802  002B32  0012               	return	
 19803  002B34                     __end_ofPL551:
 19804                           	opt stack 0
 19805  002B34                     PL553:
 19806                           	opt stack 15
 19807  002B34  0009               	tblrd		*+
 19808  002B36  CFF5 F0B7          	movff	tablat,??_TCP_Snd+22
 19809  002B3A  0009               	tblrd		*+
 19810  002B3C  CFF5 F0B8          	movff	tablat,??_TCP_Snd+23
 19811  002B40  0009               	tblrd		*+
 19812  002B42  CFF5 F0B9          	movff	tablat,??_TCP_Snd+24
 19813  002B46  0009               	tblrd		*+
 19814  002B48  CFF5 F0BA          	movff	tablat,??_TCP_Snd+25
 19815  002B4C  0012               	return	
 19816  002B4E                     __end_ofPL553:
 19817                           	opt stack 0
 19818  002B4E                     PL555:
 19819                           	opt stack 15
 19820  002B4E  0009               	tblrd		*+
 19821  002B50  CFF5 F0C1          	movff	tablat,??_TCP_Snd+32
 19822  002B54  0009               	tblrd		*+
 19823  002B56  CFF5 F0C2          	movff	tablat,??_TCP_Snd+33
 19824  002B5A  0009               	tblrd		*+
 19825  002B5C  CFF5 F0C3          	movff	tablat,??_TCP_Snd+34
 19826  002B60  0009               	tblrd		*+
 19827  002B62  CFF5 F0C4          	movff	tablat,??_TCP_Snd+35
 19828  002B66  0012               	return	
 19829  002B68                     __end_ofPL555:
 19830                           	opt stack 0
 19831  002B68                     PL557:
 19832                           	opt stack 15
 19833  002B68  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 19834  002B6A  6FBF               	movwf	(??_TCP_Snd+30)& (0+255),b
 19835  002B6C  0E00               	movlw	0
 19836  002B6E  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 19837  002B70  6FC0               	movwf	(??_TCP_Snd+31)& (0+255),b
 19838  002B72  C0BF  FFF6         	movff	??_TCP_Snd+30,tblptrl
 19839  002B76  C0C0  FFF7         	movff	??_TCP_Snd+31,tblptrh
 19840  002B7A  0E00               	movlw	low (__smallconst shr (0+16))
 19841  002B7C  6EF8               	movwf	tblptru,c
 19842  002B7E  0E0F               	movlw	(high __ramtop+-1)
 19843  002B80  0012               	return	
 19844  002B82                     __end_ofPL557:
 19845                           	opt stack 0
 19846  002B82                     PL563:
 19847                           	opt stack 15
 19848  002B82  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 19849  002B84  6FA5               	movwf	(??_TCP_Snd+4)& (0+255),b
 19850  002B86  0E00               	movlw	0
 19851  002B88  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 19852  002B8A  6FA6               	movwf	(??_TCP_Snd+5)& (0+255),b
 19853  002B8C  C0A5  FFF6         	movff	??_TCP_Snd+4,tblptrl
 19854  002B90  C0A6  FFF7         	movff	??_TCP_Snd+5,tblptrh
 19855  002B94  0E00               	movlw	low (__smallconst shr (0+16))
 19856  002B96  6EF8               	movwf	tblptru,c
 19857  002B98  0E0F               	movlw	(high __ramtop+-1)
 19858  002B9A  0012               	return	
 19859  002B9C                     __end_ofPL563:
 19860                           	opt stack 0
 19861  002B9C                     PL569:
 19862                           	opt stack 15
 19863  002B9C  0100               	movlb	0	; () banked
 19864  002B9E  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 19865  002BA0  6FA7               	movwf	(??_TCP_Snd+6)& (0+255),b
 19866  002BA2  6BA8               	clrf	(??_TCP_Snd+7)& (0+255),b
 19867  002BA4  6BA9               	clrf	(??_TCP_Snd+8)& (0+255),b
 19868  002BA6  6BAA               	clrf	(??_TCP_Snd+9)& (0+255),b
 19869  002BA8  C0A7  F0AA         	movff	??_TCP_Snd+6,??_TCP_Snd+9
 19870  002BAC  6BA9               	clrf	(??_TCP_Snd+8)& (0+255),b
 19871  002BAE  6BA8               	clrf	(??_TCP_Snd+7)& (0+255),b
 19872  002BB0  6BA7               	clrf	(??_TCP_Snd+6)& (0+255),b
 19873  002BB2  0012               	return	
 19874  002BB4                     __end_ofPL569:
 19875                           	opt stack 0
 19876  002BB4                     PL593:
 19877                           	opt stack 15
 19878  002BB4  0009               	tblrd		*+
 19879  002BB6  CFF5 F0D8          	movff	tablat,TCP_Snd@tcpDataLength
 19880  002BBA  0009               	tblrd		*+
 19881  002BBC  CFF5 F0D9          	movff	tablat,TCP_Snd@tcpDataLength+1
 19882  002BC0  0012               	return	
 19883  002BC2                     __end_ofPL593:
 19884                           	opt stack 0
 19885  002BC2                     PL605:
 19886                           	opt stack 15
 19887  002BC2  CFEE F0AD          	movff	postinc0,??_TCP_Snd+12
 19888  002BC6  CFEE F0AE          	movff	postinc0,??_TCP_Snd+13
 19889  002BCA  CFEE F0AF          	movff	postinc0,??_TCP_Snd+14
 19890  002BCE  CFEE F0B0          	movff	postinc0,??_TCP_Snd+15
 19891  002BD2  0012               	return	
 19892  002BD4                     __end_ofPL605:
 19893                           	opt stack 0
 19894  002BD4                     PL607:
 19895                           	opt stack 15
 19896  002BD4  CFEE F0B7          	movff	postinc0,??_TCP_Snd+22
 19897  002BD8  CFEE F0B8          	movff	postinc0,??_TCP_Snd+23
 19898  002BDC  CFEE F0B9          	movff	postinc0,??_TCP_Snd+24
 19899  002BE0  CFEE F0BA          	movff	postinc0,??_TCP_Snd+25
 19900  002BE4  0012               	return	
 19901  002BE6                     __end_ofPL607:
 19902                           	opt stack 0
 19903  002BE6                     PL609:
 19904                           	opt stack 15
 19905  002BE6  CFEE F0C1          	movff	postinc0,??_TCP_Snd+32
 19906  002BEA  CFEE F0C2          	movff	postinc0,??_TCP_Snd+33
 19907  002BEE  CFEE F0C3          	movff	postinc0,??_TCP_Snd+34
 19908  002BF2  CFEE F0C4          	movff	postinc0,??_TCP_Snd+35
 19909  002BF6  0012               	return	
 19910  002BF8                     __end_ofPL609:
 19911                           	opt stack 0
 19912  002BF8                     PL619:
 19913                           	opt stack 15
 19914  002BF8  CFEE F0A5          	movff	postinc0,??_TCP_Snd+4
 19915  002BFC  CFEE F0A6          	movff	postinc0,??_TCP_Snd+5
 19916  002C00  0012               	return	
 19917  002C02                     __end_ofPL619:
 19918                           	opt stack 0
 19919  002C02                     PL621:
 19920                           	opt stack 15
 19921  002C02  C0AA  F0A9         	movff	??_TCP_Snd+9,??_TCP_Snd+8
 19922  002C06  0100               	movlb	0	; () banked
 19923  002C08  6BAA               	clrf	(??_TCP_Snd+9)& (0+255),b
 19924  002C0A  6BAA               	clrf	(??_TCP_Snd+9)& (0+255),b
 19925  002C0C  51A5               	movf	(??_TCP_Snd+4)& (0+255),w,b
 19926  002C0E  11A9               	iorwf	(??_TCP_Snd+8)& (0+255),w,b
 19927  002C10  0012               	return	
 19928  002C12                     __end_ofPL621:
 19929                           	opt stack 0
 19930  002C12                     PL631:
 19931                           	opt stack 15
 19932  002C12  C09F  FFF6         	movff	TCP_Snd@tcbPtr,tblptrl
 19933  002C16  C0A0  FFF7         	movff	TCP_Snd@tcbPtr+1,tblptrh
 19934  002C1A  0E00               	movlw	low (__smallconst shr (0+16))
 19935  002C1C  6EF8               	movwf	tblptru,c
 19936  002C1E  0E0F               	movlw	(high __ramtop+-1)
 19937  002C20  0012               	return	
 19938  002C22                     __end_ofPL631:
 19939                           	opt stack 0
 19940  002C22                     PL637:
 19941                           	opt stack 15
 19942  002C22  C0A3  FFF5         	movff	??_TCP_Snd+2,tablat
 19943  002C26  000D               	tblwt		*+
 19944  002C28  C0A4  FFF5         	movff	??_TCP_Snd+3,tablat
 19945  002C2C  000C               	tblwt		*
 19946  002C2E  0012               	return	
 19947  002C30                     __end_ofPL637:
 19948                           	opt stack 0
 19949  002C30                     PL641:
 19950                           	opt stack 15
 19951  002C30  0009               	tblrd		*+
 19952  002C32  CFF5 F0A9          	movff	tablat,??_TCP_Snd+8
 19953  002C36  0009               	tblrd		*+
 19954  002C38  CFF5 F0AA          	movff	tablat,??_TCP_Snd+9
 19955  002C3C  0012               	return	
 19956  002C3E                     __end_ofPL641:
 19957                           	opt stack 0
 19958  002C3E                     PL655:
 19959                           	opt stack 15
 19960  002C3E  CFEE F0D8          	movff	postinc0,TCP_Snd@tcpDataLength
 19961  002C42  CFEE F0D9          	movff	postinc0,TCP_Snd@tcpDataLength+1
 19962  002C46  0012               	return	
 19963  002C48                     __end_ofPL655:
 19964                           	opt stack 0
 19965  002C48                     PL663:
 19966                           	opt stack 15
 19967  002C48  0100               	movlb	0	; () banked
 19968  002C4A  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 19969  002C4C  5DA3               	subwf	(??_TCP_Snd+2)& (0+255),w,b
 19970  002C4E  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 19971  002C50  59A4               	subwfb	(??_TCP_Snd+3)& (0+255),w,b
 19972  002C52  0012               	return	
 19973  002C54                     __end_ofPL663:
 19974                           	opt stack 0
 19975  002C54                     PL685:
 19976                           	opt stack 15
 19977  002C54  0100               	movlb	0	; () banked
 19978  002C56  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 19979  002C58  6FA6               	movwf	(??_TCP_Snd+5)& (0+255),b
 19980  002C5A  6BA5               	clrf	(??_TCP_Snd+4)& (0+255),b
 19981  002C5C  0012               	return	
 19982  002C5E                     __end_ofPL685:
 19983                           	opt stack 0
 19984  002C5E                     PL691:
 19985                           	opt stack 15
 19986  002C5E  CFEE F0A9          	movff	postinc0,??_TCP_Snd+8
 19987  002C62  CFEE F0AA          	movff	postinc0,??_TCP_Snd+9
 19988  002C66  0012               	return	
 19989  002C68                     __end_ofPL691:
 19990                           	opt stack 0
 19991  002C68                     PL711:
 19992                           	opt stack 12
 19993  002C68  6A26               	clrf	ETH_TxComputeChecksum@position+1,c
 19994  002C6A  0E1A               	movlw	26
 19995  002C6C  6E25               	movwf	ETH_TxComputeChecksum@position,c
 19996  002C6E  0C08               	retlw	8
 19997  002C70                     __end_ofPL711:
 19998                           	opt stack 0
 19999  002C70                     PL715:
 20000                           	opt stack 15
 20001  002C70  C0A3  FFEE         	movff	??_TCP_Snd+2,postinc0
 20002  002C74  C0A4  FFEF         	movff	??_TCP_Snd+3,indf0
 20003  002C78  0012               	return	
 20004  002C7A                     __end_ofPL715:
 20005                           	opt stack 0
 20006  002C7A                     PL747:
 20007                           	opt stack 12
 20008  002C7A  6A1A               	clrf	ETH_WriteBlock@length+1,c
 20009  002C7C  0E14               	movlw	20
 20010  002C7E  6E19               	movwf	ETH_WriteBlock@length,c
 20011  002C80  0C14               	retlw	20
 20012  002C82                     __end_ofPL747:
 20013                           	opt stack 0
 20014                           tosu	equ	0xFFF
 20015                           tosh	equ	0xFFE
 20016                           tosl	equ	0xFFD
 20017                           pclath	equ	0xFFA
 20018                           tblptru	equ	0xFF8
 20019                           tblptrh	equ	0xFF7
 20020                           tblptrl	equ	0xFF6
 20021                           tablat	equ	0xFF5
 20022                           prodh	equ	0xFF4
 20023                           prodl	equ	0xFF3
 20024                           intcon	equ	0xFF2
 20025                           indf0	equ	0xFEF
 20026                           postinc0	equ	0xFEE
 20027                           fsr0h	equ	0xFEA
 20028                           fsr0l	equ	0xFE9
 20029                           wreg	equ	0xFE8
 20030                           indf1	equ	0xFE7
 20031                           postinc1	equ	0xFE6
 20032                           postdec1	equ	0xFE5
 20033                           plusw1	equ	0xFE3
 20034                           fsr1h	equ	0xFE2
 20035                           fsr1l	equ	0xFE1
 20036                           bsr	equ	0xFE0
 20037                           indf2	equ	0xFDF
 20038                           postinc2	equ	0xFDE
 20039                           postdec2	equ	0xFDD
 20040                           plusw2	equ	0xFDB
 20041                           fsr2h	equ	0xFDA
 20042                           fsr2l	equ	0xFD9
 20043                           status	equ	0xFD8
 20044                           
 20045 ;; *************** function _IPv4_Start *****************
 20046 ;; Defined at:
 20047 ;;		line 213 in file "../../TCPIP Library/source/ipv4.c"
 20048 ;; Parameters:    Size  Location     Type
 20049 ;;  destAddress     4   33[COMRAM] unsigned long 
 20050 ;;  protocol        1   37[COMRAM] enum E6803
 20051 ;; Auto vars:     Size  Location     Type
 20052 ;;  targetAddres    4   56[BANK0 ] unsigned long 
 20053 ;;  macAddress      2   60[BANK0 ] PTR const struct .
 20054 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), arpMap(104), NULL(0), 
 20055 ;;  ret             1   62[BANK0 ] enum E6944
 20056 ;; Return value:  Size  Location     Type
 20057 ;;                  1    wreg      enum E366
 20058 ;; Registers used:
 20059 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20060 ;; Tracked objects:
 20061 ;;		On entry : 0/0
 20062 ;;		On exit  : F/0
 20063 ;;		Unchanged: 0/0
 20064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20065 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20066 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20067 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20068 ;;      Totals:        13       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20069 ;;Total ram usage:       20 bytes
 20070 ;; Hardware stack levels used:    1
 20071 ;; Hardware stack levels required when called:   11
 20072 ;; This function calls:
 20073 ;;		_ARPV4_Lookup
 20074 ;;		_ARPV4_Request
 20075 ;;		_ETH_Write16
 20076 ;;		_ETH_Write32
 20077 ;;		_ETH_Write8
 20078 ;;		_ETH_WriteStart
 20079 ;; This function is called by:
 20080 ;;		_ICMP_EchoReply
 20081 ;;		_TCP_Snd
 20082 ;;		_UDP_Start
 20083 ;; This function uses a non-reentrant model
 20084 ;;
 20085                           
 20086                           	psect	text79
 20087  004202                     __ptext79:
 20088                           	opt stack 0
 20089  004202                     _IPv4_Start:
 20090                           	opt stack 15
 20091                           
 20092                           ;ipv4.c: 215: error_msg ret = ERROR;
 20093                           
 20094                           ; BSR set to: 0
 20095                           ;incstack = 0
 20096  004202  0100               	movlb	0	; () banked
 20097  004204  6B9E               	clrf	IPv4_Start@ret& (0+255),b
 20098                           
 20099                           ; BSR set to: 0
 20100                           ;ipv4.c: 217: const mac48Address_t *macAddress;
 20101                           ;ipv4.c: 218: uint32_t targetAddress;
 20102                           ;ipv4.c: 221: if(((ipv4Address != 0) || (protocol == UDP))
 20103                           ;ipv4.c: 222: && (ipv4Address != 0x7F000001))
 20104  004206  D8B9               	call	PL679	;call to abstracted procedure
 20105  004208  E103               	bnz	l7904
 20106                           
 20107                           ; BSR set to: 0
 20108  00420A  0E11               	movlw	17
 20109  00420C  1826               	xorwf	IPv4_Start@protocol,w,c
 20110  00420E  E162               	bnz	l7918
 20111  004210                     l7904:
 20112                           
 20113                           ; BSR set to: 0
 20114  004210  0437               	decf	_ipv4Address,w,c
 20115  004212  E105               	bnz	u11100
 20116  004214  0E7F               	movlw	127
 20117  004216  183A               	xorwf	_ipv4Address+3,w,c
 20118  004218  1038               	iorwf	_ipv4Address+1,w,c
 20119  00421A  1039               	iorwf	_ipv4Address+2,w,c
 20120  00421C  E05B               	bz	l7918
 20121  00421E                     u11100:
 20122                           
 20123                           ; BSR set to: 0
 20124                           ;ipv4.c: 223: {
 20125                           ;ipv4.c: 224: if(destAddress != 0xFFFFFFFF)
 20126  00421E  2822               	incf	IPv4_Start@destAddress,w,c
 20127  004220  E106               	bnz	u11110
 20128  004222  2823               	incf	IPv4_Start@destAddress+1,w,c
 20129  004224  E104               	bnz	u11110
 20130  004226  2824               	incf	IPv4_Start@destAddress+2,w,c
 20131  004228  E102               	bnz	u11110
 20132  00422A  2825               	incf	IPv4_Start@destAddress+3,w,c
 20133  00422C  E056               	bz	l7922
 20134  00422E                     u11110:
 20135                           
 20136                           ; BSR set to: 0
 20137                           ;ipv4.c: 225: {
 20138                           ;ipv4.c: 226: if((ipv4SubnetMask & destAddress) == (ipv4SubnetMask & ipv4Address))
 20139  00422E  5037               	movf	_ipv4Address,w,c
 20140  004230  0101               	movlb	1	; () banked
 20141  004232  15C8               	andwf	_ipv4SubnetMask& (0+255),w,b
 20142  004234  6E27               	movwf	??_IPv4_Start& (0+255),c
 20143  004236  5038               	movf	_ipv4Address+1,w,c
 20144  004238  15C9               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 20145  00423A  6E28               	movwf	(??_IPv4_Start+1)& (0+255),c
 20146  00423C  5039               	movf	_ipv4Address+2,w,c
 20147  00423E  15CA               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 20148  004240  6E29               	movwf	(??_IPv4_Start+2)& (0+255),c
 20149  004242  503A               	movf	_ipv4Address+3,w,c
 20150  004244  15CB               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 20151  004246  6E2A               	movwf	(??_IPv4_Start+3)& (0+255),c
 20152  004248  5022               	movf	IPv4_Start@destAddress,w,c
 20153  00424A  15C8               	andwf	_ipv4SubnetMask& (0+255),w,b
 20154  00424C  6E2B               	movwf	(??_IPv4_Start+4)& (0+255),c
 20155  00424E  5023               	movf	IPv4_Start@destAddress+1,w,c
 20156  004250  15C9               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 20157  004252  6E2C               	movwf	(??_IPv4_Start+5)& (0+255),c
 20158  004254  5024               	movf	IPv4_Start@destAddress+2,w,c
 20159  004256  15CA               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 20160  004258  6E2D               	movwf	(??_IPv4_Start+6)& (0+255),c
 20161  00425A  5025               	movf	IPv4_Start@destAddress+3,w,c
 20162  00425C  15CB               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 20163  00425E  6E2E               	movwf	(??_IPv4_Start+7)& (0+255),c
 20164  004260  5027               	movf	??_IPv4_Start,w,c
 20165  004262  182B               	xorwf	??_IPv4_Start+4,w,c
 20166  004264  E112               	bnz	l936
 20167  004266  5028               	movf	??_IPv4_Start+1,w,c
 20168  004268  182C               	xorwf	??_IPv4_Start+5,w,c
 20169  00426A  E10F               	bnz	l936
 20170  00426C  5029               	movf	??_IPv4_Start+2,w,c
 20171  00426E  182D               	xorwf	??_IPv4_Start+6,w,c
 20172  004270  E10C               	bnz	l936
 20173  004272  502A               	movf	??_IPv4_Start+3,w,c
 20174  004274  182E               	xorwf	??_IPv4_Start+7,w,c
 20175  004276  E109               	bnz	l936
 20176                           
 20177                           ; BSR set to: 1
 20178                           ;ipv4.c: 227: {
 20179                           ;ipv4.c: 228: targetAddress = destAddress;
 20180  004278  C022  F098         	movff	IPv4_Start@destAddress,IPv4_Start@targetAddress
 20181  00427C  C023  F099         	movff	IPv4_Start@destAddress+1,IPv4_Start@targetAddress+1
 20182  004280  C024  F09A         	movff	IPv4_Start@destAddress+2,IPv4_Start@targetAddress+2
 20183  004284  C025  F09B         	movff	IPv4_Start@destAddress+3,IPv4_Start@targetAddress+3
 20184                           
 20185                           ;ipv4.c: 229: }
 20186  004288  D008               	goto	l7912
 20187  00428A                     l936:
 20188                           
 20189                           ; BSR set to: 1
 20190                           ;ipv4.c: 230: else
 20191                           ;ipv4.c: 231: {
 20192                           ;ipv4.c: 232: targetAddress = ipv4Router;
 20193  00428A  C1C4  F098         	movff	_ipv4Router,IPv4_Start@targetAddress
 20194  00428E  C1C5  F099         	movff	_ipv4Router+1,IPv4_Start@targetAddress+1
 20195  004292  C1C6  F09A         	movff	_ipv4Router+2,IPv4_Start@targetAddress+2
 20196  004296  C1C7  F09B         	movff	_ipv4Router+3,IPv4_Start@targetAddress+3
 20197  00429A                     l7912:
 20198                           
 20199                           ; BSR set to: 1
 20200                           ;ipv4.c: 233: }
 20201                           ;ipv4.c: 235: macAddress= ARPV4_Lookup(targetAddress);
 20202  00429A  C098  F017         	movff	IPv4_Start@targetAddress,ARPV4_Lookup@ip_address
 20203  00429E  C099  F018         	movff	IPv4_Start@targetAddress+1,ARPV4_Lookup@ip_address+1
 20204  0042A2  C09A  F019         	movff	IPv4_Start@targetAddress+2,ARPV4_Lookup@ip_address+2
 20205  0042A6  C09B  F01A         	movff	IPv4_Start@targetAddress+3,ARPV4_Lookup@ip_address+3
 20206  0042AA  EC63  F02D         	call	_ARPV4_Lookup	;wreg free
 20207  0042AE  C017  F09C         	movff	?_ARPV4_Lookup,IPv4_Start@macAddress
 20208  0042B2  C018  F09D         	movff	?_ARPV4_Lookup+1,IPv4_Start@macAddress+1
 20209                           
 20210                           ; BSR set to: 1
 20211                           ;ipv4.c: 236: if(macAddress == 0)
 20212  0042B6  0100               	movlb	0	; () banked
 20213  0042B8  519C               	movf	IPv4_Start@macAddress& (0+255),w,b
 20214  0042BA  119D               	iorwf	(IPv4_Start@macAddress+1)& (0+255),w,b
 20215  0042BC  E114               	bnz	l7924
 20216                           
 20217                           ; BSR set to: 0
 20218                           ;ipv4.c: 237: {
 20219                           ;ipv4.c: 238: ret = ARPV4_Request(targetAddress);
 20220  0042BE  C098  F01D         	movff	IPv4_Start@targetAddress,ARPV4_Request@destAddress
 20221  0042C2  C099  F01E         	movff	IPv4_Start@targetAddress+1,ARPV4_Request@destAddress+1
 20222  0042C6  C09A  F01F         	movff	IPv4_Start@targetAddress+2,ARPV4_Request@destAddress+2
 20223  0042CA  C09B  F020         	movff	IPv4_Start@targetAddress+3,ARPV4_Request@destAddress+3
 20224  0042CE  EC77  F022         	call	_ARPV4_Request	;wreg free
 20225  0042D2  6F9E               	movwf	IPv4_Start@ret& (0+255),b
 20226  0042D4                     l7918:
 20227                           
 20228                           ;ipv4.c: 239: return ret;
 20229  0042D4  0100               	movlb	0	; () banked
 20230  0042D6  519E               	movf	IPv4_Start@ret& (0+255),w,b
 20231  0042D8  0012               	return	
 20232  0042DA                     l7922:
 20233                           
 20234                           ; BSR set to: 0
 20235                           ;ipv4.c: 242: else
 20236                           ;ipv4.c: 243: {
 20237                           ;ipv4.c: 244: macAddress = &broadcastMAC;
 20238  0042DA  0E28               	movlw	low _broadcastMAC
 20239  0042DC  6F9C               	movwf	IPv4_Start@macAddress& (0+255),b
 20240  0042DE  519C               	movf	IPv4_Start@macAddress& (0+255),w,b
 20241  0042E0  A4D8               	btfss	status,2,c
 20242  0042E2  0E10               	movlw	high __smallconst
 20243  0042E4  6F9D               	movwf	(IPv4_Start@macAddress+1)& (0+255),b
 20244  0042E6                     l7924:
 20245                           
 20246                           ; BSR set to: 0
 20247                           ;ipv4.c: 245: }
 20248                           ;ipv4.c: 246: ret = ETH_WriteStart(macAddress, 0x0800);
 20249  0042E6  C09C  F017         	movff	IPv4_Start@macAddress,ETH_WriteStart@dest_mac
 20250  0042EA  C09D  F018         	movff	IPv4_Start@macAddress+1,ETH_WriteStart@dest_mac+1
 20251  0042EE  0E08               	movlw	8
 20252  0042F0  6E1A               	movwf	ETH_WriteStart@type+1,c
 20253  0042F2  6A19               	clrf	ETH_WriteStart@type,c
 20254  0042F4  EC69  F024         	call	_ETH_WriteStart	;wreg free
 20255  0042F8  0100               	movlb	0	; () banked
 20256  0042FA  6F9E               	movwf	IPv4_Start@ret& (0+255),b
 20257                           
 20258                           ; BSR set to: 0
 20259                           ;ipv4.c: 247: if(ret == SUCCESS)
 20260  0042FC  059E               	decf	IPv4_Start@ret& (0+255),w,b
 20261  0042FE  E1EA               	bnz	l7918
 20262                           
 20263                           ; BSR set to: 0
 20264                           ;ipv4.c: 248: {
 20265                           ;ipv4.c: 249: ETH_Write16(0x4500);
 20266  004300  0E45               	movlw	69
 20267  004302  6E18               	movwf	ETH_Write16@data+1,c
 20268  004304  6A17               	clrf	ETH_Write16@data,c
 20269  004306  ECB2  F031         	call	_ETH_Write16	;wreg free
 20270                           
 20271                           ;ipv4.c: 250: ETH_Write16(0);
 20272  00430A  6A18               	clrf	ETH_Write16@data+1,c
 20273  00430C  6A17               	clrf	ETH_Write16@data,c
 20274  00430E  ECB2  F031         	call	_ETH_Write16	;wreg free
 20275                           
 20276                           ;ipv4.c: 251: ETH_Write32(0xAA554000);
 20277  004312  6A17               	clrf	ETH_Write32@data,c
 20278  004314  0E40               	movlw	64
 20279  004316  6E18               	movwf	ETH_Write32@data+1,c
 20280  004318  0E55               	movlw	85
 20281  00431A  6E19               	movwf	ETH_Write32@data+2,c
 20282  00431C  0EAA               	movlw	170
 20283  00431E  6E1A               	movwf	ETH_Write32@data+3,c
 20284  004320  EC6C  F031         	call	_ETH_Write32	;wreg free
 20285                           
 20286                           ;ipv4.c: 252: ETH_Write8(64u);
 20287  004324  0E40               	movlw	64
 20288  004326  ECD3  F031         	call	_ETH_Write8
 20289                           
 20290                           ;ipv4.c: 253: ETH_Write8(protocol);
 20291  00432A  5026               	movf	IPv4_Start@protocol,w,c
 20292  00432C  ECD3  F031         	call	_ETH_Write8
 20293                           
 20294                           ;ipv4.c: 254: ETH_Write16(0);
 20295  004330  6A18               	clrf	ETH_Write16@data+1,c
 20296  004332  6A17               	clrf	ETH_Write16@data,c
 20297  004334  ECB2  F031         	call	_ETH_Write16	;wreg free
 20298                           
 20299                           ;ipv4.c: 255: ETH_Write32(ipv4Address);
 20300  004338  ECEC  F020         	call	PL521	;call to abstracted procedure
 20301  00433C  EC6C  F031         	call	_ETH_Write32	;wreg free
 20302                           
 20303                           ;ipv4.c: 256: ETH_Write32(destAddress);
 20304  004340  C022  F017         	movff	IPv4_Start@destAddress,ETH_Write32@data
 20305  004344  C023  F018         	movff	IPv4_Start@destAddress+1,ETH_Write32@data+1
 20306  004348  C024  F019         	movff	IPv4_Start@destAddress+2,ETH_Write32@data+2
 20307  00434C  C025  F01A         	movff	IPv4_Start@destAddress+3,ETH_Write32@data+3
 20308  004350  EC6C  F031         	call	_ETH_Write32	;wreg free
 20309                           
 20310                           ;ipv4.c: 259: ipv4Header.srcIpAddress = ipv4Address;
 20311  004354  C037  F293         	movff	_ipv4Address,_ipv4Header+12
 20312  004358  C038  F294         	movff	_ipv4Address+1,_ipv4Header+13
 20313  00435C  C039  F295         	movff	_ipv4Address+2,_ipv4Header+14
 20314  004360  C03A  F296         	movff	_ipv4Address+3,_ipv4Header+15
 20315                           
 20316                           ;ipv4.c: 260: ipv4Header.dstIpAddress = destAddress;
 20317  004364  C022  F297         	movff	IPv4_Start@destAddress,_ipv4Header+16
 20318  004368  C023  F298         	movff	IPv4_Start@destAddress+1,_ipv4Header+17
 20319  00436C  C024  F299         	movff	IPv4_Start@destAddress+2,_ipv4Header+18
 20320  004370  C025  F29A         	movff	IPv4_Start@destAddress+3,_ipv4Header+19
 20321                           
 20322                           ;ipv4.c: 261: ipv4Header.protocol = protocol;
 20323  004374  C026  F290         	movff	IPv4_Start@protocol,_ipv4Header+9
 20324  004378  D7AD               	goto	l7918
 20325  00437A                     __end_of_IPv4_Start:
 20326                           	opt stack 0
 20327  00437A                     PL679:
 20328                           	opt stack 18
 20329  00437A  5037               	movf	_ipv4Address,w,c
 20330  00437C  1038               	iorwf	_ipv4Address+1,w,c
 20331  00437E  1039               	iorwf	_ipv4Address+2,w,c
 20332  004380  103A               	iorwf	_ipv4Address+3,w,c
 20333  004382  0012               	return	
 20334  004384                     __end_ofPL679:
 20335                           	opt stack 0
 20336                           tosu	equ	0xFFF
 20337                           tosh	equ	0xFFE
 20338                           tosl	equ	0xFFD
 20339                           pclath	equ	0xFFA
 20340                           tblptru	equ	0xFF8
 20341                           tblptrh	equ	0xFF7
 20342                           tblptrl	equ	0xFF6
 20343                           tablat	equ	0xFF5
 20344                           prodh	equ	0xFF4
 20345                           prodl	equ	0xFF3
 20346                           intcon	equ	0xFF2
 20347                           indf0	equ	0xFEF
 20348                           postinc0	equ	0xFEE
 20349                           fsr0h	equ	0xFEA
 20350                           fsr0l	equ	0xFE9
 20351                           wreg	equ	0xFE8
 20352                           indf1	equ	0xFE7
 20353                           postinc1	equ	0xFE6
 20354                           postdec1	equ	0xFE5
 20355                           plusw1	equ	0xFE3
 20356                           fsr1h	equ	0xFE2
 20357                           fsr1l	equ	0xFE1
 20358                           bsr	equ	0xFE0
 20359                           indf2	equ	0xFDF
 20360                           postinc2	equ	0xFDE
 20361                           postdec2	equ	0xFDD
 20362                           plusw2	equ	0xFDB
 20363                           fsr2h	equ	0xFDA
 20364                           fsr2l	equ	0xFD9
 20365                           status	equ	0xFD8
 20366                           
 20367 ;; *************** function _ETH_Write8 *****************
 20368 ;; Defined at:
 20369 ;;		line 465 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 20370 ;; Parameters:    Size  Location     Type
 20371 ;;  data            1    wreg     unsigned char 
 20372 ;; Auto vars:     Size  Location     Type
 20373 ;;  data            1   22[COMRAM] unsigned char 
 20374 ;; Return value:  Size  Location     Type
 20375 ;;		None               void
 20376 ;; Registers used:
 20377 ;;		wreg, status,2, cstack
 20378 ;; Tracked objects:
 20379 ;;		On entry : 0/0
 20380 ;;		On exit  : 0/0
 20381 ;;		Unchanged: 0/0
 20382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20387 ;;Total ram usage:        1 bytes
 20388 ;; Hardware stack levels used:    1
 20389 ;; Hardware stack levels required when called:    9
 20390 ;; This function calls:
 20391 ;;		_ETH_EdataWrite
 20392 ;; This function is called by:
 20393 ;;		_DHCP_Request
 20394 ;;		_DHCP_WriteZeros
 20395 ;;		_IPv4_Start
 20396 ;; This function uses a non-reentrant model
 20397 ;;
 20398                           
 20399                           	psect	text80
 20400  0063A6                     __ptext80:
 20401                           	opt stack 0
 20402  0063A6                     _ETH_Write8:
 20403                           	opt stack 16
 20404                           
 20405                           ; BSR set to: 0
 20406                           ;incstack = 0
 20407                           ;ETH_Write8@data stored from wreg
 20408  0063A6  6E17               	movwf	ETH_Write8@data,c
 20409                           
 20410                           ;j60_driver.c: 467: ETH_EdataWrite(data);
 20411  0063A8  5017               	movf	ETH_Write8@data,w,c
 20412  0063AA                     i18L__ptext94:
 20413                           	opt stack 0
 20414  0063AA                     i18L_ETH_EdataWrite:
 20415                           	opt stack 0
 20416  0063AA                     i18Ll7492:
 20417                           	opt stack 16
 20418  0063AA  CFE8 FF61          	movff	wreg,3937	;# 
 20419  0063AE                     i18Ll463:
 20420                           	opt stack 0
 20421  0063AE  0012               	return	
 20422  0063B0                     __end_of_ETH_Write8:
 20423                           	opt stack 0
 20424                           tosu	equ	0xFFF
 20425                           tosh	equ	0xFFE
 20426                           tosl	equ	0xFFD
 20427                           pclath	equ	0xFFA
 20428                           tblptru	equ	0xFF8
 20429                           tblptrh	equ	0xFF7
 20430                           tblptrl	equ	0xFF6
 20431                           tablat	equ	0xFF5
 20432                           prodh	equ	0xFF4
 20433                           prodl	equ	0xFF3
 20434                           intcon	equ	0xFF2
 20435                           indf0	equ	0xFEF
 20436                           postinc0	equ	0xFEE
 20437                           fsr0h	equ	0xFEA
 20438                           fsr0l	equ	0xFE9
 20439                           wreg	equ	0xFE8
 20440                           indf1	equ	0xFE7
 20441                           postinc1	equ	0xFE6
 20442                           postdec1	equ	0xFE5
 20443                           plusw1	equ	0xFE3
 20444                           fsr1h	equ	0xFE2
 20445                           fsr1l	equ	0xFE1
 20446                           bsr	equ	0xFE0
 20447                           indf2	equ	0xFDF
 20448                           postinc2	equ	0xFDE
 20449                           postdec2	equ	0xFDD
 20450                           plusw2	equ	0xFDB
 20451                           fsr2h	equ	0xFDA
 20452                           fsr2l	equ	0xFD9
 20453                           status	equ	0xFD8
 20454                           
 20455 ;; *************** function _ETH_Write32 *****************
 20456 ;; Defined at:
 20457 ;;		line 495 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 20458 ;; Parameters:    Size  Location     Type
 20459 ;;  data            4   22[COMRAM] unsigned long 
 20460 ;; Auto vars:     Size  Location     Type
 20461 ;;		None
 20462 ;; Return value:  Size  Location     Type
 20463 ;;		None               void
 20464 ;; Registers used:
 20465 ;;		wreg, status,2, cstack
 20466 ;; Tracked objects:
 20467 ;;		On entry : 0/0
 20468 ;;		On exit  : 0/0
 20469 ;;		Unchanged: 0/0
 20470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20474 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20475 ;;Total ram usage:        4 bytes
 20476 ;; Hardware stack levels used:    1
 20477 ;; Hardware stack levels required when called:    9
 20478 ;; This function calls:
 20479 ;;		_ETH_EdataWrite
 20480 ;; This function is called by:
 20481 ;;		_DHCP_Request
 20482 ;;		_IPv4_Start
 20483 ;; This function uses a non-reentrant model
 20484 ;;
 20485                           
 20486                           	psect	text81
 20487  0062D8                     __ptext81:
 20488                           	opt stack 0
 20489  0062D8                     _ETH_Write32:
 20490                           	opt stack 16
 20491                           
 20492                           ;j60_driver.c: 497: ETH_EdataWrite(data >> 24);
 20493                           
 20494                           ;incstack = 0
 20495  0062D8  501A               	movf	ETH_Write32@data+3,w,c
 20496  0062DA                     i19L__ptext94:
 20497                           	opt stack 0
 20498  0062DA                     i19L_ETH_EdataWrite:
 20499                           	opt stack 0
 20500  0062DA                     i19Ll7492:
 20501                           	opt stack 16
 20502  0062DA  CFE8 FF61          	movff	wreg,3937	;# 
 20503  0062DE                     i19Ll463:
 20504                           	opt stack 16
 20505                           
 20506                           ;j60_driver.c: 498: ETH_EdataWrite(data >> 16);
 20507  0062DE  5019               	movf	ETH_Write32@data+2,w,c
 20508  0062E0                     i20L__ptext94:
 20509                           	opt stack 0
 20510  0062E0                     i20L_ETH_EdataWrite:
 20511                           	opt stack 0
 20512  0062E0                     i20Ll7492:
 20513                           	opt stack 16
 20514  0062E0  CFE8 FF61          	movff	wreg,3937	;# 
 20515  0062E4                     i20Ll463:
 20516                           	opt stack 16
 20517                           
 20518                           ;j60_driver.c: 499: ETH_EdataWrite(data >> 8);
 20519  0062E4  5018               	movf	ETH_Write32@data+1,w,c
 20520  0062E6                     i21L__ptext94:
 20521                           	opt stack 0
 20522  0062E6                     i21L_ETH_EdataWrite:
 20523                           	opt stack 0
 20524  0062E6                     i21Ll7492:
 20525                           	opt stack 16
 20526  0062E6  CFE8 FF61          	movff	wreg,3937	;# 
 20527  0062EA                     i21Ll463:
 20528                           	opt stack 16
 20529                           
 20530                           ;j60_driver.c: 500: ETH_EdataWrite(data);
 20531  0062EA  5017               	movf	ETH_Write32@data,w,c
 20532  0062EC                     i22L__ptext94:
 20533                           	opt stack 0
 20534  0062EC                     i22L_ETH_EdataWrite:
 20535                           	opt stack 0
 20536  0062EC                     i22Ll7492:
 20537                           	opt stack 16
 20538  0062EC  CFE8 FF61          	movff	wreg,3937	;# 
 20539  0062F0                     i22Ll463:
 20540                           	opt stack 0
 20541  0062F0  0012               	return	
 20542  0062F2                     __end_of_ETH_Write32:
 20543                           	opt stack 0
 20544                           tosu	equ	0xFFF
 20545                           tosh	equ	0xFFE
 20546                           tosl	equ	0xFFD
 20547                           pclath	equ	0xFFA
 20548                           tblptru	equ	0xFF8
 20549                           tblptrh	equ	0xFF7
 20550                           tblptrl	equ	0xFF6
 20551                           tablat	equ	0xFF5
 20552                           prodh	equ	0xFF4
 20553                           prodl	equ	0xFF3
 20554                           intcon	equ	0xFF2
 20555                           indf0	equ	0xFEF
 20556                           postinc0	equ	0xFEE
 20557                           fsr0h	equ	0xFEA
 20558                           fsr0l	equ	0xFE9
 20559                           wreg	equ	0xFE8
 20560                           indf1	equ	0xFE7
 20561                           postinc1	equ	0xFE6
 20562                           postdec1	equ	0xFE5
 20563                           plusw1	equ	0xFE3
 20564                           fsr1h	equ	0xFE2
 20565                           fsr1l	equ	0xFE1
 20566                           bsr	equ	0xFE0
 20567                           indf2	equ	0xFDF
 20568                           postinc2	equ	0xFDE
 20569                           postdec2	equ	0xFDD
 20570                           plusw2	equ	0xFDB
 20571                           fsr2h	equ	0xFDA
 20572                           fsr2l	equ	0xFD9
 20573                           status	equ	0xFD8
 20574                           
 20575 ;; *************** function _ETH_Write16 *****************
 20576 ;; Defined at:
 20577 ;;		line 474 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 20578 ;; Parameters:    Size  Location     Type
 20579 ;;  data            2   22[COMRAM] unsigned int 
 20580 ;; Auto vars:     Size  Location     Type
 20581 ;;		None
 20582 ;; Return value:  Size  Location     Type
 20583 ;;		None               void
 20584 ;; Registers used:
 20585 ;;		wreg, status,2, cstack
 20586 ;; Tracked objects:
 20587 ;;		On entry : 0/0
 20588 ;;		On exit  : 0/0
 20589 ;;		Unchanged: 0/0
 20590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20594 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20595 ;;Total ram usage:        2 bytes
 20596 ;; Hardware stack levels used:    1
 20597 ;; Hardware stack levels required when called:    9
 20598 ;; This function calls:
 20599 ;;		_ETH_EdataWrite
 20600 ;; This function is called by:
 20601 ;;		_DHCP_Request
 20602 ;;		_ICMP_EchoReply
 20603 ;;		_IPv4_Start
 20604 ;;		_UDP_Start
 20605 ;; This function uses a non-reentrant model
 20606 ;;
 20607                           
 20608                           	psect	text82
 20609  006364                     __ptext82:
 20610                           	opt stack 0
 20611  006364                     _ETH_Write16:
 20612                           	opt stack 16
 20613                           
 20614                           ;j60_driver.c: 476: ETH_EdataWrite(data >> 8);
 20615                           
 20616                           ;incstack = 0
 20617  006364  5018               	movf	ETH_Write16@data+1,w,c
 20618  006366                     i23L__ptext94:
 20619                           	opt stack 0
 20620  006366                     i23L_ETH_EdataWrite:
 20621                           	opt stack 0
 20622  006366                     i23Ll7492:
 20623                           	opt stack 16
 20624  006366  CFE8 FF61          	movff	wreg,3937	;# 
 20625  00636A                     i23Ll463:
 20626                           	opt stack 16
 20627                           
 20628                           ;j60_driver.c: 477: ETH_EdataWrite(data);
 20629  00636A  5017               	movf	ETH_Write16@data,w,c
 20630  00636C                     i24L__ptext94:
 20631                           	opt stack 0
 20632  00636C                     i24L_ETH_EdataWrite:
 20633                           	opt stack 0
 20634  00636C                     i24Ll7492:
 20635                           	opt stack 16
 20636  00636C  CFE8 FF61          	movff	wreg,3937	;# 
 20637  006370                     i24Ll463:
 20638                           	opt stack 0
 20639  006370  0012               	return	
 20640  006372                     __end_of_ETH_Write16:
 20641                           	opt stack 0
 20642                           tosu	equ	0xFFF
 20643                           tosh	equ	0xFFE
 20644                           tosl	equ	0xFFD
 20645                           pclath	equ	0xFFA
 20646                           tblptru	equ	0xFF8
 20647                           tblptrh	equ	0xFF7
 20648                           tblptrl	equ	0xFF6
 20649                           tablat	equ	0xFF5
 20650                           prodh	equ	0xFF4
 20651                           prodl	equ	0xFF3
 20652                           intcon	equ	0xFF2
 20653                           indf0	equ	0xFEF
 20654                           postinc0	equ	0xFEE
 20655                           fsr0h	equ	0xFEA
 20656                           fsr0l	equ	0xFE9
 20657                           wreg	equ	0xFE8
 20658                           indf1	equ	0xFE7
 20659                           postinc1	equ	0xFE6
 20660                           postdec1	equ	0xFE5
 20661                           plusw1	equ	0xFE3
 20662                           fsr1h	equ	0xFE2
 20663                           fsr1l	equ	0xFE1
 20664                           bsr	equ	0xFE0
 20665                           indf2	equ	0xFDF
 20666                           postinc2	equ	0xFDE
 20667                           postdec2	equ	0xFDD
 20668                           plusw2	equ	0xFDB
 20669                           fsr2h	equ	0xFDA
 20670                           fsr2l	equ	0xFD9
 20671                           status	equ	0xFD8
 20672                           
 20673 ;; *************** function _ARPV4_Request *****************
 20674 ;; Defined at:
 20675 ;;		line 194 in file "../../TCPIP Library/source/arpv4.c"
 20676 ;; Parameters:    Size  Location     Type
 20677 ;;  destAddress     4   28[COMRAM] unsigned long 
 20678 ;; Auto vars:     Size  Location     Type
 20679 ;;  header         28   28[BANK0 ] struct .
 20680 ;;  ret             1   27[BANK0 ] enum E450
 20681 ;; Return value:  Size  Location     Type
 20682 ;;                  1    wreg      enum E450
 20683 ;; Registers used:
 20684 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20685 ;; Tracked objects:
 20686 ;;		On entry : F/0
 20687 ;;		On exit  : F/0
 20688 ;;		Unchanged: 0/0
 20689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20691 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20692 ;;      Temps:          0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20693 ;;      Totals:         4      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20694 ;;Total ram usage:       60 bytes
 20695 ;; Hardware stack levels used:    1
 20696 ;; Hardware stack levels required when called:   10
 20697 ;; This function calls:
 20698 ;;		_ETH_GetMAC
 20699 ;;		_ETH_Send
 20700 ;;		_ETH_WriteBlock
 20701 ;;		_ETH_WriteStart
 20702 ;; This function is called by:
 20703 ;;		_IPv4_Start
 20704 ;; This function uses a non-reentrant model
 20705 ;;
 20706                           
 20707                           	psect	text83
 20708  0044EE                     __ptext83:
 20709                           	opt stack 0
 20710  0044EE                     _ARPV4_Request:
 20711                           	opt stack 15
 20712                           
 20713                           ; BSR set to: 0
 20714                           ;arpv4.c: 200: arpHeader_t header;
 20715                           ;arpv4.c: 201: header.htype = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 &
      +                           (uint16_t)0x00FF) << 8));
 20716                           
 20717                           ; BSR set to: 0
 20718                           
 20719                           ;incstack = 0
 20720  0044EE  0E01               	movlw	1
 20721  0044F0  6F7D               	movwf	(ARPV4_Request@header+1)& (0+255),b
 20722  0044F2  6B7C               	clrf	ARPV4_Request@header& (0+255),b
 20723                           
 20724                           ;arpv4.c: 202: header.ptype = ((((uint16_t)0x0800 & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)0x0800 & (uint16_t)0x00FF) << 8));
 20725  0044F4  6B7F               	clrf	(ARPV4_Request@header+3)& (0+255),b
 20726  0044F6  0E08               	movlw	8
 20727  0044F8  6F7E               	movwf	(ARPV4_Request@header+2)& (0+255),b
 20728                           
 20729                           ;arpv4.c: 203: header.hlen = 6;
 20730  0044FA  0E06               	movlw	6
 20731  0044FC  6F80               	movwf	(ARPV4_Request@header+4)& (0+255),b
 20732                           
 20733                           ;arpv4.c: 204: header.plen = 4;
 20734  0044FE  0E04               	movlw	4
 20735  004500  6F81               	movwf	(ARPV4_Request@header+5)& (0+255),b
 20736                           
 20737                           ;arpv4.c: 205: header.oper = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & 
      +                          (uint16_t)0x00FF) << 8));
 20738  004502  0E01               	movlw	1
 20739  004504  6F83               	movwf	(ARPV4_Request@header+7)& (0+255),b
 20740  004506  6B82               	clrf	(ARPV4_Request@header+6)& (0+255),b
 20741                           
 20742                           ; BSR set to: 0
 20743                           ;arpv4.c: 206: ETH_GetMAC((char*)&header.sha);
 20744  004508  0E7C               	movlw	ARPV4_Request@header& (0+255)
 20745  00450A  0F08               	addlw	8
 20746  00450C  EC4C  F02F         	call	_ETH_GetMAC
 20747                           
 20748                           ;arpv4.c: 207: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
 20749  004510  5037               	movf	_ipv4Address,w,c
 20750  004512  0100               	movlb	0	; () banked
 20751  004514  D882               	call	PL581	;call to abstracted procedure
 20752  004516  5038               	movf	_ipv4Address+1,w,c
 20753  004518  D874               	call	PL573	;call to abstracted procedure
 20754  00451A  5039               	movf	_ipv4Address+2,w,c
 20755  00451C  D865               	call	PL559	;call to abstracted procedure
 20756  00451E  503A               	movf	_ipv4Address+3,w,c
 20757  004520  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 20758  004522  0E19               	movlw	25
 20759  004524  D001               	goto	u10760
 20760  004526                     u10765:
 20761  004526  D88A               	call	PL677	;call to abstracted procedure
 20762  004528                     u10760:
 20763  004528  2EE8               	decfsz	wreg,f,c
 20764  00452A  D7FD               	goto	u10765
 20765  00452C  D842               	call	PL469	;call to abstracted procedure
 20766  00452E  6F8A               	movwf	(ARPV4_Request@header+14)& (0+255),b
 20767  004530  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 20768  004532  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 20769  004534  6F8B               	movwf	(ARPV4_Request@header+15)& (0+255),b
 20770  004536  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 20771  004538  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 20772  00453A  6F8C               	movwf	(ARPV4_Request@header+16)& (0+255),b
 20773  00453C  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 20774  00453E  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 20775  004540  6F8D               	movwf	(ARPV4_Request@header+17)& (0+255),b
 20776                           
 20777                           ; BSR set to: 0
 20778                           ;arpv4.c: 208: header.tpa= ((((uint32_t)destAddress&(uint32_t)0xff000000) >> 24) | (((ui
      +                          nt32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)destAddress&(uint32_t)0x000
      +                          0ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x000000ff) << 24) );
 20779  004542  501D               	movf	ARPV4_Request@destAddress,w,c
 20780  004544  D86A               	call	PL581	;call to abstracted procedure
 20781  004546  501E               	movf	ARPV4_Request@destAddress+1,w,c
 20782  004548  D85C               	call	PL573	;call to abstracted procedure
 20783  00454A  501F               	movf	ARPV4_Request@destAddress+2,w,c
 20784  00454C  D84D               	call	PL559	;call to abstracted procedure
 20785  00454E  5020               	movf	ARPV4_Request@destAddress+3,w,c
 20786  004550  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 20787  004552  0E19               	movlw	25
 20788  004554  D001               	goto	u10770
 20789  004556                     u10775:
 20790  004556  D872               	call	PL677	;call to abstracted procedure
 20791  004558                     u10770:
 20792  004558  2EE8               	decfsz	wreg,f,c
 20793  00455A  D7FD               	goto	u10775
 20794  00455C  D82A               	call	PL469	;call to abstracted procedure
 20795  00455E  6F94               	movwf	(ARPV4_Request@header+24)& (0+255),b
 20796  004560  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 20797  004562  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 20798  004564  6F95               	movwf	(ARPV4_Request@header+25)& (0+255),b
 20799  004566  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 20800  004568  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 20801  00456A  6F96               	movwf	(ARPV4_Request@header+26)& (0+255),b
 20802  00456C  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 20803  00456E  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 20804  004570  6F97               	movwf	(ARPV4_Request@header+27)& (0+255),b
 20805                           
 20806                           ; BSR set to: 0
 20807                           ;arpv4.c: 209: header.tha.s.byte1 = 0;
 20808  004572  6B8E               	clrf	(ARPV4_Request@header+18)& (0+255),b
 20809                           
 20810                           ; BSR set to: 0
 20811                           ;arpv4.c: 210: header.tha.s.byte2 = 0;
 20812  004574  6B8F               	clrf	(ARPV4_Request@header+19)& (0+255),b
 20813                           
 20814                           ; BSR set to: 0
 20815                           ;arpv4.c: 211: header.tha.s.byte3 = 0;
 20816  004576  6B90               	clrf	(ARPV4_Request@header+20)& (0+255),b
 20817                           
 20818                           ; BSR set to: 0
 20819                           ;arpv4.c: 212: header.tha.s.byte4 = 0;
 20820  004578  6B91               	clrf	(ARPV4_Request@header+21)& (0+255),b
 20821                           
 20822                           ; BSR set to: 0
 20823                           ;arpv4.c: 213: header.tha.s.byte5 = 0;
 20824  00457A  6B92               	clrf	(ARPV4_Request@header+22)& (0+255),b
 20825                           
 20826                           ; BSR set to: 0
 20827                           ;arpv4.c: 214: header.tha.s.byte6 = 0;
 20828  00457C  6B93               	clrf	(ARPV4_Request@header+23)& (0+255),b
 20829                           
 20830                           ; BSR set to: 0
 20831                           ;arpv4.c: 216: ret = ETH_WriteStart(&broadcastMAC,0x0806);
 20832  00457E  0E28               	movlw	low _broadcastMAC
 20833  004580  6E17               	movwf	ETH_WriteStart@dest_mac,c
 20834  004582  5017               	movf	ETH_WriteStart@dest_mac,w,c
 20835  004584  A4D8               	btfss	status,2,c
 20836  004586  0E10               	movlw	high __smallconst
 20837  004588  6E18               	movwf	ETH_WriteStart@dest_mac+1,c
 20838  00458A  D85E               	call	PL719	;call to abstracted procedure
 20839  00458C  EC69  F024         	call	_ETH_WriteStart	;wreg free
 20840  004590  0100               	movlb	0	; () banked
 20841  004592  6F7B               	movwf	ARPV4_Request@ret& (0+255),b
 20842                           
 20843                           ; BSR set to: 0
 20844                           ;arpv4.c: 217: if(ret == SUCCESS)
 20845  004594  057B               	decf	ARPV4_Request@ret& (0+255),w,b
 20846  004596  E10B               	bnz	l7736
 20847                           
 20848                           ; BSR set to: 0
 20849                           ;arpv4.c: 218: {
 20850                           ;arpv4.c: 219: ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
 20851  004598  0E7C               	movlw	low ARPV4_Request@header
 20852  00459A  D84A               	call	PL673	;call to abstracted procedure
 20853  00459C  EC22  F02E         	call	_ETH_WriteBlock	;wreg free
 20854                           
 20855                           ;arpv4.c: 220: ret = ETH_Send();
 20856  0045A0  EC67  F02F         	call	_ETH_Send	;wreg free
 20857  0045A4  0100               	movlb	0	; () banked
 20858  0045A6  6F7B               	movwf	ARPV4_Request@ret& (0+255),b
 20859                           
 20860                           ; BSR set to: 0
 20861                           ;arpv4.c: 221: if(ret == SUCCESS)
 20862  0045A8  057B               	decf	ARPV4_Request@ret& (0+255),w,b
 20863  0045AA  E101               	bnz	l7736
 20864                           
 20865                           ; BSR set to: 0
 20866                           ;arpv4.c: 222: {
 20867                           ;arpv4.c: 223: return MAC_NOT_FOUND;
 20868  0045AC  0C05               	retlw	5
 20869  0045AE                     l7736:
 20870                           
 20871                           ; BSR set to: 0
 20872                           ;arpv4.c: 224: }
 20873                           ;arpv4.c: 225: }
 20874                           ;arpv4.c: 226: return ret;
 20875  0045AE  517B               	movf	ARPV4_Request@ret& (0+255),w,b
 20876                           
 20877                           ; BSR set to: 0
 20878  0045B0  0012               	return		;funcret
 20879  0045B2                     __end_of_ARPV4_Request:
 20880                           	opt stack 0
 20881  0045B2                     PL469:
 20882                           	opt stack 15
 20883  0045B2  516B               	movf	(??_ARPV4_Request+11)& (0+255),w,b
 20884  0045B4  116F               	iorwf	(??_ARPV4_Request+15)& (0+255),w,b
 20885  0045B6  6F73               	movwf	(??_ARPV4_Request+19)& (0+255),b
 20886  0045B8  516C               	movf	(??_ARPV4_Request+12)& (0+255),w,b
 20887  0045BA  1170               	iorwf	(??_ARPV4_Request+16)& (0+255),w,b
 20888  0045BC  6F74               	movwf	(??_ARPV4_Request+20)& (0+255),b
 20889  0045BE  516D               	movf	(??_ARPV4_Request+13)& (0+255),w,b
 20890  0045C0  1171               	iorwf	(??_ARPV4_Request+17)& (0+255),w,b
 20891  0045C2  6F75               	movwf	(??_ARPV4_Request+21)& (0+255),b
 20892  0045C4  516E               	movf	(??_ARPV4_Request+14)& (0+255),w,b
 20893  0045C6  1172               	iorwf	(??_ARPV4_Request+18)& (0+255),w,b
 20894  0045C8  6F76               	movwf	(??_ARPV4_Request+22)& (0+255),b
 20895  0045CA  5164               	movf	(??_ARPV4_Request+4)& (0+255),w,b
 20896  0045CC  1173               	iorwf	(??_ARPV4_Request+19)& (0+255),w,b
 20897  0045CE  6F77               	movwf	(??_ARPV4_Request+23)& (0+255),b
 20898  0045D0  5165               	movf	(??_ARPV4_Request+5)& (0+255),w,b
 20899  0045D2  1174               	iorwf	(??_ARPV4_Request+20)& (0+255),w,b
 20900  0045D4  6F78               	movwf	(??_ARPV4_Request+24)& (0+255),b
 20901  0045D6  5166               	movf	(??_ARPV4_Request+6)& (0+255),w,b
 20902  0045D8  1175               	iorwf	(??_ARPV4_Request+21)& (0+255),w,b
 20903  0045DA  6F79               	movwf	(??_ARPV4_Request+25)& (0+255),b
 20904  0045DC  5167               	movf	(??_ARPV4_Request+7)& (0+255),w,b
 20905  0045DE  1176               	iorwf	(??_ARPV4_Request+22)& (0+255),w,b
 20906  0045E0  6F7A               	movwf	(??_ARPV4_Request+26)& (0+255),b
 20907  0045E2  5160               	movf	??_ARPV4_Request& (0+255),w,b
 20908  0045E4  1177               	iorwf	(??_ARPV4_Request+23)& (0+255),w,b
 20909  0045E6  0012               	return	
 20910  0045E8                     __end_ofPL469:
 20911                           	opt stack 0
 20912  0045E8                     PL559:
 20913                           	opt stack 15
 20914  0045E8  6F69               	movwf	(??_ARPV4_Request+9)& (0+255),b
 20915  0045EA  6B6A               	clrf	(??_ARPV4_Request+10)& (0+255),b
 20916  0045EC  5168               	movf	(??_ARPV4_Request+8)& (0+255),w,b
 20917  0045EE  6F6B               	movwf	(??_ARPV4_Request+11)& (0+255),b
 20918  0045F0  5169               	movf	(??_ARPV4_Request+9)& (0+255),w,b
 20919  0045F2  6F6C               	movwf	(??_ARPV4_Request+12)& (0+255),b
 20920  0045F4  516A               	movf	(??_ARPV4_Request+10)& (0+255),w,b
 20921  0045F6  6F6D               	movwf	(??_ARPV4_Request+13)& (0+255),b
 20922  0045F8  6B6E               	clrf	(??_ARPV4_Request+14)& (0+255),b
 20923  0045FA  6B6F               	clrf	(??_ARPV4_Request+15)& (0+255),b
 20924  0045FC  6B70               	clrf	(??_ARPV4_Request+16)& (0+255),b
 20925  0045FE  6B71               	clrf	(??_ARPV4_Request+17)& (0+255),b
 20926  004600  0012               	return	
 20927  004602                     __end_ofPL559:
 20928                           	opt stack 0
 20929  004602                     PL573:
 20930                           	opt stack 15
 20931  004602  6F65               	movwf	(??_ARPV4_Request+5)& (0+255),b
 20932  004604  6B66               	clrf	(??_ARPV4_Request+6)& (0+255),b
 20933  004606  6B67               	clrf	(??_ARPV4_Request+7)& (0+255),b
 20934  004608  C066  F067         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 20935  00460C  C065  F066         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 20936  004610  C064  F065         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 20937  004614  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 20938  004616  6B68               	clrf	(??_ARPV4_Request+8)& (0+255),b
 20939  004618  0012               	return	
 20940  00461A                     __end_ofPL573:
 20941                           	opt stack 0
 20942  00461A                     PL581:
 20943                           	opt stack 15
 20944  00461A  6F60               	movwf	??_ARPV4_Request& (0+255),b
 20945  00461C  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 20946  00461E  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 20947  004620  6B63               	clrf	(??_ARPV4_Request+3)& (0+255),b
 20948  004622  C060  F063         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 20949  004626  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 20950  004628  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 20951  00462A  6B60               	clrf	??_ARPV4_Request& (0+255),b
 20952  00462C  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 20953  00462E  0012               	return	
 20954  004630                     __end_ofPL581:
 20955                           	opt stack 0
 20956  004630                     PL673:
 20957                           	opt stack 18
 20958  004630  6E17               	movwf	ETH_WriteBlock@buffer,c
 20959  004632  6A18               	clrf	ETH_WriteBlock@buffer+1,c
 20960  004634  6A1A               	clrf	ETH_WriteBlock@length+1,c
 20961  004636  0E1C               	movlw	28
 20962  004638  6E19               	movwf	ETH_WriteBlock@length,c
 20963  00463A  0C1C               	retlw	28
 20964  00463C                     __end_ofPL673:
 20965                           	opt stack 0
 20966  00463C                     PL677:
 20967                           	opt stack 15
 20968  00463C  90D8               	bcf	status,0,c
 20969  00463E  3372               	rrcf	(??_ARPV4_Request+18)& (0+255),f,b
 20970  004640  3371               	rrcf	(??_ARPV4_Request+17)& (0+255),f,b
 20971  004642  3370               	rrcf	(??_ARPV4_Request+16)& (0+255),f,b
 20972  004644  336F               	rrcf	(??_ARPV4_Request+15)& (0+255),f,b
 20973  004646  0012               	return	
 20974  004648                     __end_ofPL677:
 20975                           	opt stack 0
 20976  004648                     PL719:
 20977                           	opt stack 18
 20978  004648  0E08               	movlw	8
 20979  00464A  6E1A               	movwf	ETH_WriteStart@type+1,c
 20980  00464C  0E06               	movlw	6
 20981  00464E  6E19               	movwf	ETH_WriteStart@type,c
 20982  004650  0C06               	retlw	6
 20983  004652                     __end_ofPL719:
 20984                           	opt stack 0
 20985                           tosu	equ	0xFFF
 20986                           tosh	equ	0xFFE
 20987                           tosl	equ	0xFFD
 20988                           pclath	equ	0xFFA
 20989                           tblptru	equ	0xFF8
 20990                           tblptrh	equ	0xFF7
 20991                           tblptrl	equ	0xFF6
 20992                           tablat	equ	0xFF5
 20993                           prodh	equ	0xFF4
 20994                           prodl	equ	0xFF3
 20995                           intcon	equ	0xFF2
 20996                           indf0	equ	0xFEF
 20997                           postinc0	equ	0xFEE
 20998                           fsr0h	equ	0xFEA
 20999                           fsr0l	equ	0xFE9
 21000                           wreg	equ	0xFE8
 21001                           indf1	equ	0xFE7
 21002                           postinc1	equ	0xFE6
 21003                           postdec1	equ	0xFE5
 21004                           plusw1	equ	0xFE3
 21005                           fsr1h	equ	0xFE2
 21006                           fsr1l	equ	0xFE1
 21007                           bsr	equ	0xFE0
 21008                           indf2	equ	0xFDF
 21009                           postinc2	equ	0xFDE
 21010                           postdec2	equ	0xFDD
 21011                           plusw2	equ	0xFDB
 21012                           fsr2h	equ	0xFDA
 21013                           fsr2l	equ	0xFD9
 21014                           status	equ	0xFD8
 21015                           
 21016 ;; *************** function _ETH_WriteStart *****************
 21017 ;; Defined at:
 21018 ;;		line 526 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21019 ;; Parameters:    Size  Location     Type
 21020 ;;  dest_mac        2   22[COMRAM] PTR const struct .
 21021 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), header.sha(6), ARPV4_Packet@header(28), 
 21022 ;;		 -> arpMap(104), NULL(0), 
 21023 ;;  type            2   24[COMRAM] unsigned int 
 21024 ;; Auto vars:     Size  Location     Type
 21025 ;;		None
 21026 ;; Return value:  Size  Location     Type
 21027 ;;                  1    wreg      enum E6944
 21028 ;; Registers used:
 21029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21030 ;; Tracked objects:
 21031 ;;		On entry : F/0
 21032 ;;		On exit  : F/1
 21033 ;;		Unchanged: 0/0
 21034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21038 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21039 ;;Total ram usage:        6 bytes
 21040 ;; Hardware stack levels used:    1
 21041 ;; Hardware stack levels required when called:    9
 21042 ;; This function calls:
 21043 ;;		_ETH_EdataWrite
 21044 ;;		_ETH_ResetByteCount
 21045 ;; This function is called by:
 21046 ;;		_ARPV4_Packet
 21047 ;;		_ARPV4_Request
 21048 ;;		_IPv4_Start
 21049 ;; This function uses a non-reentrant model
 21050 ;;
 21051                           
 21052                           	psect	text84
 21053  0048D2                     __ptext84:
 21054                           	opt stack 0
 21055  0048D2                     _ETH_WriteStart:
 21056                           	opt stack 16
 21057                           
 21058                           ; BSR set to: 0
 21059                           ;j60_driver.c: 528: if(ethData.bufferBusy)
 21060                           
 21061                           ; BSR set to: 0
 21062                           ;incstack = 0
 21063  0048D2  0101               	movlb	1	; () banked
 21064  0048D4  BBBD               	btfsc	_ethData& (0+255),5,b	;volatile
 21065                           
 21066                           ; BSR set to: 1
 21067                           ;j60_driver.c: 529: {
 21068                           ;j60_driver.c: 530: return BUFFER_BUSY;
 21069  0048D6  0C03               	retlw	3
 21070                           
 21071                           ; BSR set to: 1
 21072                           ;j60_driver.c: 531: }
 21073                           ;j60_driver.c: 533: if(ECON1bits.TXRTS)
 21074  0048D8  B6D2               	btfsc	4050,3,c	;volatile
 21075                           
 21076                           ; BSR set to: 1
 21077                           ;j60_driver.c: 534: {
 21078                           ;j60_driver.c: 535: return TX_LOGIC_NOT_IDLE;
 21079  0048DA  0C04               	retlw	4
 21080                           
 21081                           ; BSR set to: 1
 21082                           ;j60_driver.c: 536: }
 21083                           ;j60_driver.c: 537: ETXST = ((8192) - (1518));
 21084  0048DC  EC7C  F02F         	call	PL665	;call to abstracted procedure
 21085                           
 21086                           ;j60_driver.c: 538: EWRPT = ((8192) - (1518));
 21087  0048E0  D883               	call	PL701	;call to abstracted procedure
 21088                           
 21089                           ; BSR set to: 14
 21090                           ;j60_driver.c: 540: ETH_ResetByteCount();
 21091  0048E2  ECD8  F031         	call	_ETH_ResetByteCount	;wreg free
 21092                           
 21093                           ;j60_driver.c: 542: ETH_EdataWrite(0x06);
 21094  0048E6  0E06               	movlw	6
 21095  0048E8                     i25L__ptext94:
 21096                           	opt stack 0
 21097  0048E8                     i25L_ETH_EdataWrite:
 21098                           	opt stack 0
 21099  0048E8                     i25Ll7492:
 21100                           	opt stack 16
 21101  0048E8  CFE8 FF61          	movff	wreg,3937	;# 
 21102  0048EC                     i25Ll463:
 21103                           	opt stack 16
 21104                           
 21105                           ;j60_driver.c: 543: ETH_EdataWrite(dest_mac->mac_array[0]);
 21106  0048EC  C017  FFF6         	movff	ETH_WriteStart@dest_mac,tblptrl
 21107  0048F0  C018  FFF7         	movff	ETH_WriteStart@dest_mac+1,tblptrh
 21108  0048F4  0E00               	movlw	low (__smallconst shr (0+16))
 21109  0048F6  6EF8               	movwf	tblptru,c
 21110  0048F8  0E0F               	movlw	(high __ramtop+-1)
 21111  0048FA  64F7               	cpfsgt	tblptrh,c
 21112  0048FC  D003               	bra	u10587
 21113  0048FE  0008               	tblrd		*
 21114  004900  50F5               	movf	tablat,w,c
 21115  004902  D003               	bra	u10580
 21116  004904                     u10587:
 21117  004904  EC66  F011         	call	PL389	;call to abstracted procedure
 21118  004908  50EF               	movf	indf0,w,c
 21119  00490A                     u10580:
 21120  00490A                     i26L__ptext94:
 21121                           	opt stack 0
 21122  00490A                     i26L_ETH_EdataWrite:
 21123                           	opt stack 0
 21124  00490A                     i26Ll7492:
 21125                           	opt stack 16
 21126  00490A  CFE8 FF61          	movff	wreg,3937	;# 
 21127  00490E                     i26Ll463:
 21128                           	opt stack 16
 21129                           
 21130                           ;j60_driver.c: 544: ETH_EdataWrite(dest_mac->mac_array[1]);
 21131  00490E  2817               	incf	ETH_WriteStart@dest_mac,w,c
 21132  004910  D85F               	call	PL451	;call to abstracted procedure
 21133  004912  64F7               	cpfsgt	tblptrh,c
 21134  004914  D003               	bra	u10597
 21135  004916  0008               	tblrd		*
 21136  004918  50F5               	movf	tablat,w,c
 21137  00491A  D003               	bra	u10590
 21138  00491C                     u10597:
 21139  00491C  EC66  F011         	call	PL389	;call to abstracted procedure
 21140  004920  50EF               	movf	indf0,w,c
 21141  004922                     u10590:
 21142  004922                     i27L__ptext94:
 21143                           	opt stack 0
 21144  004922                     i27L_ETH_EdataWrite:
 21145                           	opt stack 0
 21146  004922                     i27Ll7492:
 21147                           	opt stack 16
 21148  004922  CFE8 FF61          	movff	wreg,3937	;# 
 21149  004926                     i27Ll463:
 21150                           	opt stack 16
 21151                           
 21152                           ;j60_driver.c: 545: ETH_EdataWrite(dest_mac->mac_array[2]);
 21153  004926  0E02               	movlw	2
 21154  004928  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 21155  00492A  D852               	call	PL451	;call to abstracted procedure
 21156  00492C  64F7               	cpfsgt	tblptrh,c
 21157  00492E  D003               	bra	u10607
 21158  004930  0008               	tblrd		*
 21159  004932  50F5               	movf	tablat,w,c
 21160  004934  D003               	bra	u10600
 21161  004936                     u10607:
 21162  004936  EC66  F011         	call	PL389	;call to abstracted procedure
 21163  00493A  50EF               	movf	indf0,w,c
 21164  00493C                     u10600:
 21165  00493C                     i28L__ptext94:
 21166                           	opt stack 0
 21167  00493C                     i28L_ETH_EdataWrite:
 21168                           	opt stack 0
 21169  00493C                     i28Ll7492:
 21170                           	opt stack 16
 21171  00493C  CFE8 FF61          	movff	wreg,3937	;# 
 21172  004940                     i28Ll463:
 21173                           	opt stack 16
 21174                           
 21175                           ;j60_driver.c: 546: ETH_EdataWrite(dest_mac->mac_array[3]);
 21176  004940  0E03               	movlw	3
 21177  004942  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 21178  004944  D845               	call	PL451	;call to abstracted procedure
 21179  004946  64F7               	cpfsgt	tblptrh,c
 21180  004948  D003               	bra	u10617
 21181  00494A  0008               	tblrd		*
 21182  00494C  50F5               	movf	tablat,w,c
 21183  00494E  D003               	bra	u10610
 21184  004950                     u10617:
 21185  004950  EC66  F011         	call	PL389	;call to abstracted procedure
 21186  004954  50EF               	movf	indf0,w,c
 21187  004956                     u10610:
 21188  004956                     i29L__ptext94:
 21189                           	opt stack 0
 21190  004956                     i29L_ETH_EdataWrite:
 21191                           	opt stack 0
 21192  004956                     i29Ll7492:
 21193                           	opt stack 16
 21194  004956  CFE8 FF61          	movff	wreg,3937	;# 
 21195  00495A                     i29Ll463:
 21196                           	opt stack 16
 21197                           
 21198                           ;j60_driver.c: 547: ETH_EdataWrite(dest_mac->mac_array[4]);
 21199  00495A  0E04               	movlw	4
 21200  00495C  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 21201  00495E  D838               	call	PL451	;call to abstracted procedure
 21202  004960  64F7               	cpfsgt	tblptrh,c
 21203  004962  D003               	bra	u10627
 21204  004964  0008               	tblrd		*
 21205  004966  50F5               	movf	tablat,w,c
 21206  004968  D003               	bra	u10620
 21207  00496A                     u10627:
 21208  00496A  EC66  F011         	call	PL389	;call to abstracted procedure
 21209  00496E  50EF               	movf	indf0,w,c
 21210  004970                     u10620:
 21211  004970                     i30L__ptext94:
 21212                           	opt stack 0
 21213  004970                     i30L_ETH_EdataWrite:
 21214                           	opt stack 0
 21215  004970                     i30Ll7492:
 21216                           	opt stack 16
 21217  004970  CFE8 FF61          	movff	wreg,3937	;# 
 21218  004974                     i30Ll463:
 21219                           	opt stack 16
 21220                           
 21221                           ;j60_driver.c: 548: ETH_EdataWrite(dest_mac->mac_array[5]);
 21222  004974  0E05               	movlw	5
 21223  004976  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 21224  004978  D82B               	call	PL451	;call to abstracted procedure
 21225  00497A  64F7               	cpfsgt	tblptrh,c
 21226  00497C  D003               	bra	u10637
 21227  00497E  0008               	tblrd		*
 21228  004980  50F5               	movf	tablat,w,c
 21229  004982  D003               	bra	u10630
 21230  004984                     u10637:
 21231  004984  EC66  F011         	call	PL389	;call to abstracted procedure
 21232  004988  50EF               	movf	indf0,w,c
 21233  00498A                     u10630:
 21234  00498A                     i31L__ptext94:
 21235                           	opt stack 0
 21236  00498A                     i31L_ETH_EdataWrite:
 21237                           	opt stack 0
 21238  00498A                     i31Ll7492:
 21239                           	opt stack 16
 21240  00498A  CFE8 FF61          	movff	wreg,3937	;# 
 21241  00498E                     i31Ll463:
 21242                           	opt stack 16
 21243                           
 21244                           ;j60_driver.c: 550: ETH_EdataWrite(MAADR1);
 21245  00498E  010E               	movlb	14	; () banked
 21246  004990  5184               	movf	132,w,b	;volatile
 21247  004992                     i32L__ptext94:
 21248                           	opt stack 0
 21249  004992                     i32L_ETH_EdataWrite:
 21250                           	opt stack 0
 21251  004992                     i32Ll7492:
 21252                           	opt stack 16
 21253  004992  CFE8 FF61          	movff	wreg,3937	;# 
 21254  004996                     i32Ll463:
 21255                           	opt stack 16
 21256                           
 21257                           ;j60_driver.c: 551: ETH_EdataWrite(MAADR2);
 21258  004996  010E               	movlb	14	; () banked
 21259  004998  5185               	movf	133,w,b	;volatile
 21260  00499A                     i33L__ptext94:
 21261                           	opt stack 0
 21262  00499A                     i33L_ETH_EdataWrite:
 21263                           	opt stack 0
 21264  00499A                     i33Ll7492:
 21265                           	opt stack 16
 21266  00499A  CFE8 FF61          	movff	wreg,3937	;# 
 21267  00499E                     i33Ll463:
 21268                           	opt stack 16
 21269                           
 21270                           ;j60_driver.c: 552: ETH_EdataWrite(MAADR3);
 21271  00499E  010E               	movlb	14	; () banked
 21272  0049A0  5182               	movf	130,w,b	;volatile
 21273  0049A2                     i34L__ptext94:
 21274                           	opt stack 0
 21275  0049A2                     i34L_ETH_EdataWrite:
 21276                           	opt stack 0
 21277  0049A2                     i34Ll7492:
 21278                           	opt stack 16
 21279  0049A2  CFE8 FF61          	movff	wreg,3937	;# 
 21280  0049A6                     i34Ll463:
 21281                           	opt stack 16
 21282                           
 21283                           ;j60_driver.c: 553: ETH_EdataWrite(MAADR4);
 21284  0049A6  010E               	movlb	14	; () banked
 21285  0049A8  5183               	movf	131,w,b	;volatile
 21286  0049AA                     i35L__ptext94:
 21287                           	opt stack 0
 21288  0049AA                     i35L_ETH_EdataWrite:
 21289                           	opt stack 0
 21290  0049AA                     i35Ll7492:
 21291                           	opt stack 16
 21292  0049AA  CFE8 FF61          	movff	wreg,3937	;# 
 21293  0049AE                     i35Ll463:
 21294                           	opt stack 16
 21295                           
 21296                           ;j60_driver.c: 554: ETH_EdataWrite(MAADR5);
 21297  0049AE  010E               	movlb	14	; () banked
 21298  0049B0  5180               	movf	128,w,b	;volatile
 21299  0049B2                     i36L__ptext94:
 21300                           	opt stack 0
 21301  0049B2                     i36L_ETH_EdataWrite:
 21302                           	opt stack 0
 21303  0049B2                     i36Ll7492:
 21304                           	opt stack 16
 21305  0049B2  CFE8 FF61          	movff	wreg,3937	;# 
 21306  0049B6                     i36Ll463:
 21307                           	opt stack 16
 21308                           
 21309                           ;j60_driver.c: 555: ETH_EdataWrite(MAADR6);
 21310  0049B6  010E               	movlb	14	; () banked
 21311  0049B8  5181               	movf	129,w,b	;volatile
 21312  0049BA                     i37L__ptext94:
 21313                           	opt stack 0
 21314  0049BA                     i37L_ETH_EdataWrite:
 21315                           	opt stack 0
 21316  0049BA                     i37Ll7492:
 21317                           	opt stack 16
 21318  0049BA  CFE8 FF61          	movff	wreg,3937	;# 
 21319  0049BE                     i37Ll463:
 21320                           	opt stack 16
 21321                           
 21322                           ;j60_driver.c: 556: ETH_EdataWrite(((char *)&type)[1]);
 21323  0049BE  501A               	movf	ETH_WriteStart@type+1,w,c
 21324  0049C0                     i38L__ptext94:
 21325                           	opt stack 0
 21326  0049C0                     i38L_ETH_EdataWrite:
 21327                           	opt stack 0
 21328  0049C0                     i38Ll7492:
 21329                           	opt stack 16
 21330  0049C0  CFE8 FF61          	movff	wreg,3937	;# 
 21331  0049C4                     i38Ll463:
 21332                           	opt stack 16
 21333                           
 21334                           ;j60_driver.c: 557: ETH_EdataWrite(((char *)&type)[0]);
 21335  0049C4  5019               	movf	ETH_WriteStart@type,w,c
 21336  0049C6                     i39L__ptext94:
 21337                           	opt stack 0
 21338  0049C6                     i39L_ETH_EdataWrite:
 21339                           	opt stack 0
 21340  0049C6                     i39Ll7492:
 21341                           	opt stack 16
 21342  0049C6  CFE8 FF61          	movff	wreg,3937	;# 
 21343  0049CA                     i39Ll463:
 21344                           	opt stack 16
 21345                           
 21346                           ;j60_driver.c: 559: ethData.bufferBusy = 1;
 21347  0049CA  0101               	movlb	1	; () banked
 21348  0049CC  8BBD               	bsf	_ethData& (0+255),5,b	;volatile
 21349                           
 21350                           ; BSR set to: 1
 21351                           
 21352                           ; BSR set to: 1
 21353                           ;j60_driver.c: 560: return SUCCESS;
 21354  0049CE  0C01               	retlw	1	;funcret
 21355  0049D0                     __end_of_ETH_WriteStart:
 21356                           	opt stack 0
 21357  0049D0                     PL451:
 21358                           	opt stack 16
 21359  0049D0  6E1B               	movwf	??_ETH_WriteStart& (0+255),c
 21360  0049D2  0E00               	movlw	0
 21361  0049D4  2018               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 21362  0049D6  6E1C               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 21363  0049D8  C01B  FFF6         	movff	??_ETH_WriteStart,tblptrl
 21364  0049DC  C01C  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 21365  0049E0  0E00               	movlw	low (__smallconst shr (0+16))
 21366  0049E2  6EF8               	movwf	tblptru,c
 21367  0049E4  0E0F               	movlw	(high __ramtop+-1)
 21368  0049E6  0012               	return	
 21369  0049E8                     __end_ofPL451:
 21370                           	opt stack 0
 21371  0049E8                     PL701:
 21372                           	opt stack 17
 21373  0049E8  0E1A               	movlw	26
 21374  0049EA  6FE3               	movwf	227,b	;volatile
 21375  0049EC  0E12               	movlw	18
 21376  0049EE  6FE2               	movwf	226,b	;volatile
 21377  0049F0  0C12               	retlw	18
 21378  0049F2                     __end_ofPL701:
 21379                           	opt stack 0
 21380                           tosu	equ	0xFFF
 21381                           tosh	equ	0xFFE
 21382                           tosl	equ	0xFFD
 21383                           pclath	equ	0xFFA
 21384                           tblptru	equ	0xFF8
 21385                           tblptrh	equ	0xFF7
 21386                           tblptrl	equ	0xFF6
 21387                           tablat	equ	0xFF5
 21388                           prodh	equ	0xFF4
 21389                           prodl	equ	0xFF3
 21390                           intcon	equ	0xFF2
 21391                           indf0	equ	0xFEF
 21392                           postinc0	equ	0xFEE
 21393                           fsr0h	equ	0xFEA
 21394                           fsr0l	equ	0xFE9
 21395                           wreg	equ	0xFE8
 21396                           indf1	equ	0xFE7
 21397                           postinc1	equ	0xFE6
 21398                           postdec1	equ	0xFE5
 21399                           plusw1	equ	0xFE3
 21400                           fsr1h	equ	0xFE2
 21401                           fsr1l	equ	0xFE1
 21402                           bsr	equ	0xFE0
 21403                           indf2	equ	0xFDF
 21404                           postinc2	equ	0xFDE
 21405                           postdec2	equ	0xFDD
 21406                           plusw2	equ	0xFDB
 21407                           fsr2h	equ	0xFDA
 21408                           fsr2l	equ	0xFD9
 21409                           status	equ	0xFD8
 21410                           
 21411 ;; *************** function _ETH_ResetByteCount *****************
 21412 ;; Defined at:
 21413 ;;		line 833 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21414 ;; Parameters:    Size  Location     Type
 21415 ;;		None
 21416 ;; Auto vars:     Size  Location     Type
 21417 ;;		None
 21418 ;; Return value:  Size  Location     Type
 21419 ;;		None               void
 21420 ;; Registers used:
 21421 ;;		None
 21422 ;; Tracked objects:
 21423 ;;		On entry : 1/0
 21424 ;;		On exit  : 1/0
 21425 ;;		Unchanged: 1/0
 21426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21431 ;;Total ram usage:        0 bytes
 21432 ;; Hardware stack levels used:    1
 21433 ;; Hardware stack levels required when called:    8
 21434 ;; This function calls:
 21435 ;;		Nothing
 21436 ;; This function is called by:
 21437 ;;		_ETH_WriteStart
 21438 ;;		_UDP_Start
 21439 ;; This function uses a non-reentrant model
 21440 ;;
 21441                           
 21442                           	psect	text85
 21443  0063B0                     __ptext85:
 21444                           	opt stack 0
 21445  0063B0                     _ETH_ResetByteCount:
 21446                           	opt stack 16
 21447                           
 21448                           ;j60_driver.c: 835: ethData.saveWRPT = EWRPT;
 21449                           
 21450                           ; BSR set to: 1
 21451                           ;incstack = 0
 21452  0063B0  CEE2 F1C2          	movff	3810,_ethData+5	;volatile
 21453  0063B4  CEE3 F1C3          	movff	3811,_ethData+6	;volatile
 21454  0063B8  0012               	return		;funcret
 21455  0063BA                     __end_of_ETH_ResetByteCount:
 21456                           	opt stack 0
 21457                           tosu	equ	0xFFF
 21458                           tosh	equ	0xFFE
 21459                           tosl	equ	0xFFD
 21460                           pclath	equ	0xFFA
 21461                           tblptru	equ	0xFF8
 21462                           tblptrh	equ	0xFF7
 21463                           tblptrl	equ	0xFF6
 21464                           tablat	equ	0xFF5
 21465                           prodh	equ	0xFF4
 21466                           prodl	equ	0xFF3
 21467                           intcon	equ	0xFF2
 21468                           indf0	equ	0xFEF
 21469                           postinc0	equ	0xFEE
 21470                           fsr0h	equ	0xFEA
 21471                           fsr0l	equ	0xFE9
 21472                           wreg	equ	0xFE8
 21473                           indf1	equ	0xFE7
 21474                           postinc1	equ	0xFE6
 21475                           postdec1	equ	0xFE5
 21476                           plusw1	equ	0xFE3
 21477                           fsr1h	equ	0xFE2
 21478                           fsr1l	equ	0xFE1
 21479                           bsr	equ	0xFE0
 21480                           indf2	equ	0xFDF
 21481                           postinc2	equ	0xFDE
 21482                           postdec2	equ	0xFDD
 21483                           plusw2	equ	0xFDB
 21484                           fsr2h	equ	0xFDA
 21485                           fsr2l	equ	0xFD9
 21486                           status	equ	0xFD8
 21487                           
 21488 ;; *************** function _ETH_WriteBlock *****************
 21489 ;; Defined at:
 21490 ;;		line 509 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21491 ;; Parameters:    Size  Location     Type
 21492 ;;  buffer          2   22[COMRAM] PTR void 
 21493 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
 21494 ;;		 -> STR_5(17), DEMO_TCP_EchoServer@txdataPort7(20), TCP_Snd@txHeader(20), Network_Read@debug_str(80), 
 21495 ;;		 -> dhcpName(21), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), ARPV4_Packet@header(28), 
 21496 ;;		 -> STR_1(15), NULL(0), 
 21497 ;;  length          2   24[COMRAM] unsigned int 
 21498 ;; Auto vars:     Size  Location     Type
 21499 ;;  p               2   26[COMRAM] PTR unsigned char 
 21500 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
 21501 ;;		 -> STR_5(17), DEMO_TCP_EchoServer@txdataPort7(20), TCP_Snd@txHeader(20), Network_Read@debug_str(80), 
 21502 ;;		 -> dhcpName(21), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), ARPV4_Packet@header(28), 
 21503 ;;		 -> STR_1(15), NULL(0), 
 21504 ;; Return value:  Size  Location     Type
 21505 ;;                  2   22[COMRAM] unsigned int 
 21506 ;; Registers used:
 21507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21508 ;; Tracked objects:
 21509 ;;		On entry : 0/0
 21510 ;;		On exit  : 0/0
 21511 ;;		Unchanged: 0/0
 21512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21513 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21514 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21516 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21517 ;;Total ram usage:        6 bytes
 21518 ;; Hardware stack levels used:    1
 21519 ;; Hardware stack levels required when called:    9
 21520 ;; This function calls:
 21521 ;;		_ETH_EdataWrite
 21522 ;; This function is called by:
 21523 ;;		_ARPV4_Packet
 21524 ;;		_ARPV4_Request
 21525 ;;		_DHCP_Request
 21526 ;;		_TCP_Snd
 21527 ;; This function uses a non-reentrant model
 21528 ;;
 21529                           
 21530                           	psect	text86
 21531  005C44                     __ptext86:
 21532                           	opt stack 0
 21533  005C44                     _ETH_WriteBlock:
 21534                           	opt stack 15
 21535                           
 21536                           ;j60_driver.c: 511: char *p = buffer;
 21537                           
 21538                           ;incstack = 0
 21539  005C44  C017  F01B         	movff	ETH_WriteBlock@buffer,ETH_WriteBlock@p
 21540  005C48  C018  F01C         	movff	ETH_WriteBlock@buffer+1,ETH_WriteBlock@p+1
 21541                           
 21542                           ;j60_driver.c: 512: while(length-- && (EWRPT < ((8192)-1)))
 21543  005C4C  D013               	goto	l7508
 21544  005C4E                     l7504:
 21545                           
 21546                           ; BSR set to: 14
 21547                           ;j60_driver.c: 513: {
 21548                           ;j60_driver.c: 514: ETH_EdataWrite(*p++);
 21549  005C4E  C01B  FFF6         	movff	ETH_WriteBlock@p,tblptrl
 21550  005C52  C01C  FFF7         	movff	ETH_WriteBlock@p+1,tblptrh
 21551  005C56  0E00               	movlw	low (__smallconst shr (0+16))
 21552  005C58  6EF8               	movwf	tblptru,c
 21553  005C5A  0E0F               	movlw	(high __ramtop+-1)
 21554  005C5C  64F7               	cpfsgt	tblptrh,c
 21555  005C5E  D003               	bra	u10537
 21556  005C60  0008               	tblrd		*
 21557  005C62  50F5               	movf	tablat,w,c
 21558  005C64  D003               	bra	u10530
 21559  005C66                     u10537:
 21560  005C66  EC66  F011         	call	PL389	;call to abstracted procedure
 21561  005C6A  50EF               	movf	indf0,w,c
 21562  005C6C                     u10530:
 21563  005C6C                     i40L__ptext94:
 21564                           	opt stack 0
 21565  005C6C                     i40L_ETH_EdataWrite:
 21566                           	opt stack 0
 21567  005C6C                     i40Ll7492:
 21568                           	opt stack 16
 21569  005C6C  CFE8 FF61          	movff	wreg,3937	;# 
 21570  005C70                     i40Ll463:
 21571                           	opt stack 15
 21572  005C70  4A1B               	infsnz	ETH_WriteBlock@p,f,c
 21573  005C72  2A1C               	incf	ETH_WriteBlock@p+1,f,c
 21574  005C74                     l7508:
 21575  005C74  0619               	decf	ETH_WriteBlock@length,f,c
 21576  005C76  A0D8               	btfss	status,0,c
 21577  005C78  061A               	decf	ETH_WriteBlock@length+1,f,c
 21578  005C7A  2819               	incf	ETH_WriteBlock@length,w,c
 21579  005C7C  E103               	bnz	u10540
 21580  005C7E  281A               	incf	ETH_WriteBlock@length+1,w,c
 21581  005C80  B4D8               	btfsc	status,2,c
 21582  005C82  0012               	return	
 21583  005C84                     u10540:
 21584  005C84  010E               	movlb	14	; () banked
 21585  005C86  29E2               	incf	226,w,b	;volatile
 21586  005C88  0E1F               	movlw	31
 21587  005C8A  59E3               	subwfb	227,w,b	;volatile
 21588  005C8C  E3E0               	bnc	l7504
 21589  005C8E  0012               	return		;funcret
 21590  005C90                     __end_of_ETH_WriteBlock:
 21591                           	opt stack 0
 21592                           tosu	equ	0xFFF
 21593                           tosh	equ	0xFFE
 21594                           tosl	equ	0xFFD
 21595                           pclath	equ	0xFFA
 21596                           tblptru	equ	0xFF8
 21597                           tblptrh	equ	0xFF7
 21598                           tblptrl	equ	0xFF6
 21599                           tablat	equ	0xFF5
 21600                           prodh	equ	0xFF4
 21601                           prodl	equ	0xFF3
 21602                           intcon	equ	0xFF2
 21603                           indf0	equ	0xFEF
 21604                           postinc0	equ	0xFEE
 21605                           fsr0h	equ	0xFEA
 21606                           fsr0l	equ	0xFE9
 21607                           wreg	equ	0xFE8
 21608                           indf1	equ	0xFE7
 21609                           postinc1	equ	0xFE6
 21610                           postdec1	equ	0xFE5
 21611                           plusw1	equ	0xFE3
 21612                           fsr1h	equ	0xFE2
 21613                           fsr1l	equ	0xFE1
 21614                           bsr	equ	0xFE0
 21615                           indf2	equ	0xFDF
 21616                           postinc2	equ	0xFDE
 21617                           postdec2	equ	0xFDD
 21618                           plusw2	equ	0xFDB
 21619                           fsr2h	equ	0xFDA
 21620                           fsr2l	equ	0xFD9
 21621                           status	equ	0xFD8
 21622                           
 21623 ;; *************** function _ETH_GetMAC *****************
 21624 ;; Defined at:
 21625 ;;		line 802 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21626 ;; Parameters:    Size  Location     Type
 21627 ;;  mac             1    wreg     PTR unsigned char 
 21628 ;;		 -> DHCP_Handler@ethMAC(6), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), header.sha(6), 
 21629 ;;		 -> ARPV4_Packet@header(28), 
 21630 ;; Auto vars:     Size  Location     Type
 21631 ;;  mac             1   22[COMRAM] PTR unsigned char 
 21632 ;;		 -> DHCP_Handler@ethMAC(6), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), header.sha(6), 
 21633 ;;		 -> ARPV4_Packet@header(28), 
 21634 ;; Return value:  Size  Location     Type
 21635 ;;		None               void
 21636 ;; Registers used:
 21637 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21638 ;; Tracked objects:
 21639 ;;		On entry : 0/0
 21640 ;;		On exit  : 0/0
 21641 ;;		Unchanged: 0/0
 21642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21646 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21647 ;;Total ram usage:        1 bytes
 21648 ;; Hardware stack levels used:    1
 21649 ;; Hardware stack levels required when called:    8
 21650 ;; This function calls:
 21651 ;;		Nothing
 21652 ;; This function is called by:
 21653 ;;		_ARPV4_Packet
 21654 ;;		_ARPV4_Request
 21655 ;;		_DHCP_Request
 21656 ;;		_DHCP_Handler
 21657 ;; This function uses a non-reentrant model
 21658 ;;
 21659                           
 21660                           	psect	text87
 21661  005E98                     __ptext87:
 21662                           	opt stack 0
 21663  005E98                     _ETH_GetMAC:
 21664                           	opt stack 16
 21665                           
 21666                           ;incstack = 0
 21667                           ;ETH_GetMAC@mac stored from wreg
 21668  005E98  6E17               	movwf	ETH_GetMAC@mac,c
 21669                           
 21670                           ;j60_driver.c: 804: *mac++ = MAADR1;
 21671  005E9A  5017               	movf	ETH_GetMAC@mac,w,c
 21672  005E9C  6ED9               	movwf	fsr2l,c
 21673  005E9E  6ADA               	clrf	fsr2h,c
 21674  005EA0  CE84 FFDF          	movff	3716,indf2	;volatile
 21675                           
 21676                           ;j60_driver.c: 805: *mac++ = MAADR2;
 21677  005EA4  D80F               	call	PL603	;call to abstracted procedure
 21678  005EA6  CE85 FFDF          	movff	3717,indf2	;volatile
 21679                           
 21680                           ;j60_driver.c: 806: *mac++ = MAADR3;
 21681  005EAA  D80C               	call	PL603	;call to abstracted procedure
 21682  005EAC  CE82 FFDF          	movff	3714,indf2	;volatile
 21683                           
 21684                           ;j60_driver.c: 807: *mac++ = MAADR4;
 21685  005EB0  D809               	call	PL603	;call to abstracted procedure
 21686  005EB2  CE83 FFDF          	movff	3715,indf2	;volatile
 21687                           
 21688                           ;j60_driver.c: 808: *mac++ = MAADR5;
 21689  005EB6  D806               	call	PL603	;call to abstracted procedure
 21690  005EB8  CE80 FFDF          	movff	3712,indf2	;volatile
 21691                           
 21692                           ;j60_driver.c: 809: *mac = MAADR6;
 21693  005EBC  D803               	call	PL603	;call to abstracted procedure
 21694  005EBE  CE81 FFDF          	movff	3713,indf2	;volatile
 21695  005EC2  0012               	return		;funcret
 21696  005EC4                     __end_of_ETH_GetMAC:
 21697                           	opt stack 0
 21698  005EC4                     PL603:
 21699                           	opt stack 16
 21700  005EC4  2A17               	incf	ETH_GetMAC@mac,f,c
 21701  005EC6  5017               	movf	ETH_GetMAC@mac,w,c
 21702  005EC8  6ED9               	movwf	fsr2l,c
 21703  005ECA  6ADA               	clrf	fsr2h,c
 21704  005ECC  0012               	return	
 21705  005ECE                     __end_ofPL603:
 21706                           	opt stack 0
 21707                           tosu	equ	0xFFF
 21708                           tosh	equ	0xFFE
 21709                           tosl	equ	0xFFD
 21710                           pclath	equ	0xFFA
 21711                           tblptru	equ	0xFF8
 21712                           tblptrh	equ	0xFF7
 21713                           tblptrl	equ	0xFF6
 21714                           tablat	equ	0xFF5
 21715                           prodh	equ	0xFF4
 21716                           prodl	equ	0xFF3
 21717                           intcon	equ	0xFF2
 21718                           indf0	equ	0xFEF
 21719                           postinc0	equ	0xFEE
 21720                           fsr0h	equ	0xFEA
 21721                           fsr0l	equ	0xFE9
 21722                           wreg	equ	0xFE8
 21723                           indf1	equ	0xFE7
 21724                           postinc1	equ	0xFE6
 21725                           postdec1	equ	0xFE5
 21726                           plusw1	equ	0xFE3
 21727                           fsr1h	equ	0xFE2
 21728                           fsr1l	equ	0xFE1
 21729                           bsr	equ	0xFE0
 21730                           indf2	equ	0xFDF
 21731                           postinc2	equ	0xFDE
 21732                           postdec2	equ	0xFDD
 21733                           plusw2	equ	0xFDB
 21734                           fsr2h	equ	0xFDA
 21735                           fsr2l	equ	0xFD9
 21736                           status	equ	0xFD8
 21737                           
 21738 ;; *************** function _ARPV4_Lookup *****************
 21739 ;; Defined at:
 21740 ;;		line 234 in file "../../TCPIP Library/source/arpv4.c"
 21741 ;; Parameters:    Size  Location     Type
 21742 ;;  ip_address      4   22[COMRAM] unsigned long 
 21743 ;; Auto vars:     Size  Location     Type
 21744 ;;  entry_pointe    2   30[COMRAM] PTR struct .
 21745 ;;		 -> arpMap(104), 
 21746 ;;  x               1   32[COMRAM] unsigned char 
 21747 ;; Return value:  Size  Location     Type
 21748 ;;                  2   22[COMRAM] PTR struct .
 21749 ;; Registers used:
 21750 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21751 ;; Tracked objects:
 21752 ;;		On entry : F/1
 21753 ;;		On exit  : F/1
 21754 ;;		Unchanged: F/0
 21755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21756 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21757 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21758 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21759 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21760 ;;Total ram usage:       11 bytes
 21761 ;; Hardware stack levels used:    1
 21762 ;; Hardware stack levels required when called:    8
 21763 ;; This function calls:
 21764 ;;		Nothing
 21765 ;; This function is called by:
 21766 ;;		_IPv4_Start
 21767 ;; This function uses a non-reentrant model
 21768 ;;
 21769                           
 21770                           	psect	text88
 21771  005AC6                     __ptext88:
 21772                           	opt stack 0
 21773  005AC6                     _ARPV4_Lookup:
 21774                           	opt stack 17
 21775                           
 21776                           ; BSR set to: 1
 21777                           ;arpv4.c: 236: arpMap_t *entry_pointer = arpMap;
 21778                           
 21779                           ;incstack = 0
 21780  005AC6  0E00               	movlw	low _arpMap
 21781  005AC8  6E1F               	movwf	ARPV4_Lookup@entry_pointer,c
 21782  005ACA  0E03               	movlw	high _arpMap
 21783  005ACC  6E20               	movwf	ARPV4_Lookup@entry_pointer+1,c
 21784                           
 21785                           ; BSR set to: 1
 21786                           ;arpv4.c: 237: uint8_t x;
 21787                           ;arpv4.c: 239: for(x = 0; x < 8; x++)
 21788  005ACE  6A21               	clrf	ARPV4_Lookup@x,c
 21789  005AD0                     l7746:
 21790                           
 21791                           ; BSR set to: 1
 21792                           ;arpv4.c: 240: {
 21793                           ;arpv4.c: 241: if(entry_pointer->ipAddress == ip_address)
 21794  005AD0  EE20 F006          	lfsr	2,6
 21795  005AD4  501F               	movf	ARPV4_Lookup@entry_pointer,w,c
 21796  005AD6  26D9               	addwf	fsr2l,f,c
 21797  005AD8  5020               	movf	ARPV4_Lookup@entry_pointer+1,w,c
 21798  005ADA  22DA               	addwfc	fsr2h,f,c
 21799  005ADC  5017               	movf	ARPV4_Lookup@ip_address,w,c
 21800  005ADE  18DE               	xorwf	postinc2,w,c
 21801  005AE0  E10E               	bnz	l7752
 21802  005AE2  5018               	movf	ARPV4_Lookup@ip_address+1,w,c
 21803  005AE4  18DE               	xorwf	postinc2,w,c
 21804  005AE6  E10B               	bnz	l7752
 21805  005AE8  5019               	movf	ARPV4_Lookup@ip_address+2,w,c
 21806  005AEA  18DE               	xorwf	postinc2,w,c
 21807  005AEC  E108               	bnz	l7752
 21808  005AEE  501A               	movf	ARPV4_Lookup@ip_address+3,w,c
 21809  005AF0  18DE               	xorwf	postinc2,w,c
 21810  005AF2  E105               	bnz	l7752
 21811                           
 21812                           ; BSR set to: 1
 21813                           ;arpv4.c: 242: return &entry_pointer->macAddress;
 21814  005AF4  C01F  F017         	movff	ARPV4_Lookup@entry_pointer,?_ARPV4_Lookup
 21815  005AF8  C020  F018         	movff	ARPV4_Lookup@entry_pointer+1,?_ARPV4_Lookup+1
 21816  005AFC  0012               	return	
 21817  005AFE                     l7752:
 21818                           
 21819                           ; BSR set to: 1
 21820                           ;arpv4.c: 243: entry_pointer ++;
 21821  005AFE  0E0D               	movlw	13
 21822  005B00  261F               	addwf	ARPV4_Lookup@entry_pointer,f,c
 21823  005B02  0E00               	movlw	0
 21824  005B04  2220               	addwfc	ARPV4_Lookup@entry_pointer+1,f,c
 21825                           
 21826                           ; BSR set to: 1
 21827  005B06  2A21               	incf	ARPV4_Lookup@x,f,c
 21828                           
 21829                           ; BSR set to: 1
 21830  005B08  0E07               	movlw	7
 21831  005B0A  6421               	cpfsgt	ARPV4_Lookup@x,c
 21832  005B0C  D7E1               	goto	l7746
 21833                           
 21834                           ; BSR set to: 1
 21835                           ;arpv4.c: 244: }
 21836                           ;arpv4.c: 245: return 0;
 21837  005B0E  6A17               	clrf	?_ARPV4_Lookup,c
 21838  005B10  6A18               	clrf	?_ARPV4_Lookup+1,c
 21839                           
 21840                           ; BSR set to: 1
 21841  005B12  0012               	return		;funcret
 21842  005B14                     __end_of_ARPV4_Lookup:
 21843                           	opt stack 0
 21844                           tosu	equ	0xFFF
 21845                           tosh	equ	0xFFE
 21846                           tosl	equ	0xFFD
 21847                           pclath	equ	0xFFA
 21848                           tblptru	equ	0xFF8
 21849                           tblptrh	equ	0xFF7
 21850                           tblptrl	equ	0xFF6
 21851                           tablat	equ	0xFF5
 21852                           prodh	equ	0xFF4
 21853                           prodl	equ	0xFF3
 21854                           intcon	equ	0xFF2
 21855                           indf0	equ	0xFEF
 21856                           postinc0	equ	0xFEE
 21857                           fsr0h	equ	0xFEA
 21858                           fsr0l	equ	0xFE9
 21859                           wreg	equ	0xFE8
 21860                           indf1	equ	0xFE7
 21861                           postinc1	equ	0xFE6
 21862                           postdec1	equ	0xFE5
 21863                           plusw1	equ	0xFE3
 21864                           fsr1h	equ	0xFE2
 21865                           fsr1l	equ	0xFE1
 21866                           bsr	equ	0xFE0
 21867                           indf2	equ	0xFDF
 21868                           postinc2	equ	0xFDE
 21869                           postdec2	equ	0xFDD
 21870                           plusw2	equ	0xFDB
 21871                           fsr2h	equ	0xFDA
 21872                           fsr2l	equ	0xFD9
 21873                           status	equ	0xFD8
 21874                           
 21875 ;; *************** function _IPV4_Send *****************
 21876 ;; Defined at:
 21877 ;;		line 267 in file "../../TCPIP Library/source/ipv4.c"
 21878 ;; Parameters:    Size  Location     Type
 21879 ;;  payloadLengt    2   48[COMRAM] unsigned int 
 21880 ;; Auto vars:     Size  Location     Type
 21881 ;;  totalLength     2   18[BANK0 ] unsigned int 
 21882 ;;  cksm            2   16[BANK0 ] unsigned int 
 21883 ;;  ret             1   15[BANK0 ] enum E6944
 21884 ;; Return value:  Size  Location     Type
 21885 ;;                  1    wreg      enum E366
 21886 ;; Registers used:
 21887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21888 ;; Tracked objects:
 21889 ;;		On entry : 0/0
 21890 ;;		On exit  : F/0
 21891 ;;		Unchanged: 0/0
 21892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21894 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21896 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21897 ;;Total ram usage:       11 bytes
 21898 ;; Hardware stack levels used:    1
 21899 ;; Hardware stack levels required when called:   11
 21900 ;; This function calls:
 21901 ;;		_ETH_Insert
 21902 ;;		_ETH_Send
 21903 ;;		_ETH_TxComputeChecksum
 21904 ;; This function is called by:
 21905 ;;		_ICMP_EchoReply
 21906 ;;		_TCP_Snd
 21907 ;;		_UDP_Send
 21908 ;; This function uses a non-reentrant model
 21909 ;;
 21910                           
 21911                           	psect	text89
 21912  0056CE                     __ptext89:
 21913                           	opt stack 0
 21914  0056CE                     _IPV4_Send:
 21915                           	opt stack 15
 21916                           
 21917                           ;ipv4.c: 269: uint16_t totalLength;
 21918                           ;ipv4.c: 270: uint16_t cksm;
 21919                           ;ipv4.c: 271: error_msg ret;
 21920                           ;ipv4.c: 273: totalLength = 20 + payloadLength;
 21921                           
 21922                           ; BSR set to: 1
 21923                           ;incstack = 0
 21924  0056CE  0E14               	movlw	20
 21925  0056D0  2431               	addwf	IPV4_Send@payloadLength,w,c
 21926  0056D2  0100               	movlb	0	; () banked
 21927  0056D4  6F72               	movwf	IPV4_Send@totalLength& (0+255),b
 21928  0056D6  0E00               	movlw	0
 21929  0056D8  2032               	addwfc	IPV4_Send@payloadLength+1,w,c
 21930  0056DA  6F73               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 21931                           
 21932                           ;ipv4.c: 274: totalLength = ((((uint16_t)totalLength & (uint16_t)0xFF00) >> 8) | (((uint
      +                          16_t)totalLength & (uint16_t)0x00FF) << 8));
 21933  0056DC  5172               	movf	IPV4_Send@totalLength& (0+255),w,b
 21934  0056DE  6F6C               	movwf	(??_IPV4_Send+1)& (0+255),b
 21935  0056E0  6B6B               	clrf	??_IPV4_Send& (0+255),b
 21936  0056E2  5173               	movf	(IPV4_Send@totalLength+1)& (0+255),w,b
 21937  0056E4  6F6D               	movwf	(??_IPV4_Send+2)& (0+255),b
 21938  0056E6  6B6E               	clrf	(??_IPV4_Send+3)& (0+255),b
 21939  0056E8  516B               	movf	??_IPV4_Send& (0+255),w,b
 21940  0056EA  116D               	iorwf	(??_IPV4_Send+2)& (0+255),w,b
 21941  0056EC  6F72               	movwf	IPV4_Send@totalLength& (0+255),b
 21942  0056EE  516C               	movf	(??_IPV4_Send+1)& (0+255),w,b
 21943  0056F0  116E               	iorwf	(??_IPV4_Send+3)& (0+255),w,b
 21944  0056F2  6F73               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 21945                           
 21946                           ; BSR set to: 0
 21947                           ;ipv4.c: 277: ETH_Insert((char *)&totalLength, 2, sizeof(ethernetFrame_t) + (int)(((char
      +                          *)&((ipv4Header_t *)1)->length)-1));
 21948  0056F4  D81F               	call	PL579	;call to abstracted procedure
 21949  0056F6  0E10               	movlw	16
 21950  0056F8  6E19               	movwf	ETH_Insert@offset,c
 21951  0056FA  0E72               	movlw	IPV4_Send@totalLength& (0+255)
 21952  0056FC  ECD6  F02E         	call	_ETH_Insert
 21953                           
 21954                           ;ipv4.c: 279: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t),sizeof(ipv4Header_t),
      +                          0);
 21955  005700  6A26               	clrf	ETH_TxComputeChecksum@position+1,c
 21956  005702  0E0E               	movlw	14
 21957  005704  6E25               	movwf	ETH_TxComputeChecksum@position,c
 21958  005706  6A28               	clrf	ETH_TxComputeChecksum@len+1,c
 21959  005708  0E14               	movlw	20
 21960  00570A  6E27               	movwf	ETH_TxComputeChecksum@len,c
 21961  00570C  6A2A               	clrf	ETH_TxComputeChecksum@seed+1,c
 21962  00570E  6A29               	clrf	ETH_TxComputeChecksum@seed,c
 21963  005710  EC1B  F02A         	call	_ETH_TxComputeChecksum	;wreg free
 21964  005714  C025  F070         	movff	?_ETH_TxComputeChecksum,IPV4_Send@cksm
 21965  005718  C026  F071         	movff	?_ETH_TxComputeChecksum+1,IPV4_Send@cksm+1
 21966                           
 21967                           ; BSR set to: 0
 21968                           ;ipv4.c: 281: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + (int)(((char*)&((ip
      +                          v4Header_t *)1)->headerCksm)-1));
 21969  00571C  D80B               	call	PL579	;call to abstracted procedure
 21970  00571E  0E18               	movlw	24
 21971  005720  6E19               	movwf	ETH_Insert@offset,c
 21972  005722  0E70               	movlw	IPV4_Send@cksm& (0+255)
 21973  005724  ECD6  F02E         	call	_ETH_Insert
 21974                           
 21975                           ;ipv4.c: 282: ret = ETH_Send();
 21976  005728  EC67  F02F         	call	_ETH_Send	;wreg free
 21977  00572C  0100               	movlb	0	; () banked
 21978  00572E  6F6F               	movwf	IPV4_Send@ret& (0+255),b
 21979                           
 21980                           ; BSR set to: 0
 21981                           ;ipv4.c: 284: return ret;
 21982  005730  516F               	movf	IPV4_Send@ret& (0+255),w,b
 21983                           
 21984                           ; BSR set to: 0
 21985  005732  0012               	return		;funcret
 21986  005734                     __end_of_IPV4_Send:
 21987                           	opt stack 0
 21988  005734                     PL579:
 21989                           	opt stack 12
 21990  005734  6A18               	clrf	ETH_Insert@len+1,c
 21991  005736  0E02               	movlw	2
 21992  005738  6E17               	movwf	ETH_Insert@len,c
 21993  00573A  6A1A               	clrf	ETH_Insert@offset+1,c
 21994  00573C  0C02               	retlw	2
 21995  00573E                     __end_ofPL579:
 21996                           	opt stack 0
 21997                           tosu	equ	0xFFF
 21998                           tosh	equ	0xFFE
 21999                           tosl	equ	0xFFD
 22000                           pclath	equ	0xFFA
 22001                           tblptru	equ	0xFF8
 22002                           tblptrh	equ	0xFF7
 22003                           tblptrl	equ	0xFF6
 22004                           tablat	equ	0xFF5
 22005                           prodh	equ	0xFF4
 22006                           prodl	equ	0xFF3
 22007                           intcon	equ	0xFF2
 22008                           indf0	equ	0xFEF
 22009                           postinc0	equ	0xFEE
 22010                           fsr0h	equ	0xFEA
 22011                           fsr0l	equ	0xFE9
 22012                           wreg	equ	0xFE8
 22013                           indf1	equ	0xFE7
 22014                           postinc1	equ	0xFE6
 22015                           postdec1	equ	0xFE5
 22016                           plusw1	equ	0xFE3
 22017                           fsr1h	equ	0xFE2
 22018                           fsr1l	equ	0xFE1
 22019                           bsr	equ	0xFE0
 22020                           indf2	equ	0xFDF
 22021                           postinc2	equ	0xFDE
 22022                           postdec2	equ	0xFDD
 22023                           plusw2	equ	0xFDB
 22024                           fsr2h	equ	0xFDA
 22025                           fsr2l	equ	0xFD9
 22026                           status	equ	0xFD8
 22027                           
 22028 ;; *************** function _ETH_TxComputeChecksum *****************
 22029 ;; Defined at:
 22030 ;;		line 754 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22031 ;; Parameters:    Size  Location     Type
 22032 ;;  position        2   36[COMRAM] unsigned int 
 22033 ;;  len             2   38[COMRAM] unsigned int 
 22034 ;;  seed            2   40[COMRAM] unsigned int 
 22035 ;; Auto vars:     Size  Location     Type
 22036 ;;  cksm            4   44[COMRAM] unsigned long 
 22037 ;;  rxptr           2   42[COMRAM] unsigned int 
 22038 ;; Return value:  Size  Location     Type
 22039 ;;                  2   36[COMRAM] unsigned int 
 22040 ;; Registers used:
 22041 ;;		wreg, status,2, status,0, cstack
 22042 ;; Tracked objects:
 22043 ;;		On entry : 0/0
 22044 ;;		On exit  : F/0
 22045 ;;		Unchanged: 0/0
 22046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22047 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22048 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22049 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22050 ;;      Totals:        12      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22051 ;;Total ram usage:       23 bytes
 22052 ;; Hardware stack levels used:    1
 22053 ;; Hardware stack levels required when called:   10
 22054 ;; This function calls:
 22055 ;;		_ETH_ComputeChecksum
 22056 ;; This function is called by:
 22057 ;;		_ICMP_EchoReply
 22058 ;;		_IPV4_Send
 22059 ;;		_TCP_Snd
 22060 ;;		_UDP_Send
 22061 ;; This function uses a non-reentrant model
 22062 ;;
 22063                           
 22064                           	psect	text90
 22065  005436                     __ptext90:
 22066                           	opt stack 0
 22067  005436                     _ETH_TxComputeChecksum:
 22068                           	opt stack 15
 22069                           
 22070                           ;j60_driver.c: 756: uint16_t rxptr;
 22071                           ;j60_driver.c: 757: uint32_t cksm;
 22072                           ;j60_driver.c: 760: rxptr = ERDPT;
 22073                           
 22074                           ; BSR set to: 0
 22075                           ;incstack = 0
 22076  005436  CF7A F02B          	movff	3962,ETH_TxComputeChecksum@rxptr	;volatile
 22077  00543A  CF7B F02C          	movff	3963,ETH_TxComputeChecksum@rxptr+1	;volatile
 22078                           
 22079                           ;j60_driver.c: 763: ERDPT = ((8192) - (1518)) + position + 1;
 22080  00543E  0E13               	movlw	19
 22081  005440  2425               	addwf	ETH_TxComputeChecksum@position,w,c
 22082  005442  6E7A               	movwf	3962,c	;volatile
 22083  005444  0E1A               	movlw	26
 22084  005446  2026               	addwfc	ETH_TxComputeChecksum@position+1,w,c
 22085  005448  6E7B               	movwf	3963,c	;volatile
 22086                           
 22087                           ;j60_driver.c: 765: cksm = ETH_ComputeChecksum( len, seed);
 22088  00544A  C027  F017         	movff	ETH_TxComputeChecksum@len,ETH_ComputeChecksum@len
 22089  00544E  C028  F018         	movff	ETH_TxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 22090  005452  C029  F019         	movff	ETH_TxComputeChecksum@seed,ETH_ComputeChecksum@seed
 22091  005456  C02A  F01A         	movff	ETH_TxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 22092  00545A  EC9B  F028         	call	_ETH_ComputeChecksum	;wreg free
 22093  00545E  C017  F02D         	movff	?_ETH_ComputeChecksum,ETH_TxComputeChecksum@cksm
 22094  005462  C018  F02E         	movff	?_ETH_ComputeChecksum+1,ETH_TxComputeChecksum@cksm+1
 22095  005466  6A2F               	clrf	ETH_TxComputeChecksum@cksm+2,c
 22096  005468  6A30               	clrf	ETH_TxComputeChecksum@cksm+3,c
 22097                           
 22098                           ;j60_driver.c: 768: ERDPT = rxptr;
 22099  00546A  C02B  FF7A         	movff	ETH_TxComputeChecksum@rxptr,3962	;volatile
 22100  00546E  C02C  FF7B         	movff	ETH_TxComputeChecksum@rxptr+1,3963	;volatile
 22101                           
 22102                           ;j60_driver.c: 770: cksm = ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 22103  005472  502D               	movf	ETH_TxComputeChecksum@cksm,w,c
 22104  005474  0100               	movlb	0	; () banked
 22105  005476  6F60               	movwf	??_ETH_TxComputeChecksum& (0+255),b
 22106  005478  6B61               	clrf	(??_ETH_TxComputeChecksum+1)& (0+255),b
 22107  00547A  6B62               	clrf	(??_ETH_TxComputeChecksum+2)& (0+255),b
 22108  00547C  6B63               	clrf	(??_ETH_TxComputeChecksum+3)& (0+255),b
 22109  00547E  C062  F063         	movff	??_ETH_TxComputeChecksum+2,??_ETH_TxComputeChecksum+3
 22110  005482  C061  F062         	movff	??_ETH_TxComputeChecksum+1,??_ETH_TxComputeChecksum+2
 22111  005486  C060  F061         	movff	??_ETH_TxComputeChecksum,??_ETH_TxComputeChecksum+1
 22112  00548A  6B60               	clrf	??_ETH_TxComputeChecksum& (0+255),b
 22113  00548C  502E               	movf	ETH_TxComputeChecksum@cksm+1,w,c
 22114  00548E  6F64               	movwf	(??_ETH_TxComputeChecksum+4)& (0+255),b
 22115  005490  6B65               	clrf	(??_ETH_TxComputeChecksum+5)& (0+255),b
 22116  005492  6B66               	clrf	(??_ETH_TxComputeChecksum+6)& (0+255),b
 22117  005494  5164               	movf	(??_ETH_TxComputeChecksum+4)& (0+255),w,b
 22118  005496  6F67               	movwf	(??_ETH_TxComputeChecksum+7)& (0+255),b
 22119  005498  5165               	movf	(??_ETH_TxComputeChecksum+5)& (0+255),w,b
 22120  00549A  6F68               	movwf	(??_ETH_TxComputeChecksum+8)& (0+255),b
 22121  00549C  5166               	movf	(??_ETH_TxComputeChecksum+6)& (0+255),w,b
 22122  00549E  6F69               	movwf	(??_ETH_TxComputeChecksum+9)& (0+255),b
 22123  0054A0  6B6A               	clrf	(??_ETH_TxComputeChecksum+10)& (0+255),b
 22124  0054A2  5160               	movf	??_ETH_TxComputeChecksum& (0+255),w,b
 22125  0054A4  1167               	iorwf	(??_ETH_TxComputeChecksum+7)& (0+255),w,b
 22126  0054A6  6E2D               	movwf	ETH_TxComputeChecksum@cksm,c
 22127  0054A8  5161               	movf	(??_ETH_TxComputeChecksum+1)& (0+255),w,b
 22128  0054AA  1168               	iorwf	(??_ETH_TxComputeChecksum+8)& (0+255),w,b
 22129  0054AC  6E2E               	movwf	ETH_TxComputeChecksum@cksm+1,c
 22130  0054AE  5162               	movf	(??_ETH_TxComputeChecksum+2)& (0+255),w,b
 22131  0054B0  1169               	iorwf	(??_ETH_TxComputeChecksum+9)& (0+255),w,b
 22132  0054B2  6E2F               	movwf	ETH_TxComputeChecksum@cksm+2,c
 22133  0054B4  5163               	movf	(??_ETH_TxComputeChecksum+3)& (0+255),w,b
 22134  0054B6  116A               	iorwf	(??_ETH_TxComputeChecksum+10)& (0+255),w,b
 22135  0054B8  6E30               	movwf	ETH_TxComputeChecksum@cksm+3,c
 22136                           
 22137                           ; BSR set to: 0
 22138                           ;j60_driver.c: 772: return cksm;
 22139  0054BA  C02D  F025         	movff	ETH_TxComputeChecksum@cksm,?_ETH_TxComputeChecksum
 22140  0054BE  C02E  F026         	movff	ETH_TxComputeChecksum@cksm+1,?_ETH_TxComputeChecksum+1
 22141                           
 22142                           ; BSR set to: 0
 22143  0054C2  0012               	return		;funcret
 22144  0054C4                     __end_of_ETH_TxComputeChecksum:
 22145                           	opt stack 0
 22146                           tosu	equ	0xFFF
 22147                           tosh	equ	0xFFE
 22148                           tosl	equ	0xFFD
 22149                           pclath	equ	0xFFA
 22150                           tblptru	equ	0xFF8
 22151                           tblptrh	equ	0xFF7
 22152                           tblptrl	equ	0xFF6
 22153                           tablat	equ	0xFF5
 22154                           prodh	equ	0xFF4
 22155                           prodl	equ	0xFF3
 22156                           intcon	equ	0xFF2
 22157                           indf0	equ	0xFEF
 22158                           postinc0	equ	0xFEE
 22159                           fsr0h	equ	0xFEA
 22160                           fsr0l	equ	0xFE9
 22161                           wreg	equ	0xFE8
 22162                           indf1	equ	0xFE7
 22163                           postinc1	equ	0xFE6
 22164                           postdec1	equ	0xFE5
 22165                           plusw1	equ	0xFE3
 22166                           fsr1h	equ	0xFE2
 22167                           fsr1l	equ	0xFE1
 22168                           bsr	equ	0xFE0
 22169                           indf2	equ	0xFDF
 22170                           postinc2	equ	0xFDE
 22171                           postdec2	equ	0xFDD
 22172                           plusw2	equ	0xFDB
 22173                           fsr2h	equ	0xFDA
 22174                           fsr2l	equ	0xFD9
 22175                           status	equ	0xFD8
 22176                           
 22177 ;; *************** function _ETH_ComputeChecksum *****************
 22178 ;; Defined at:
 22179 ;;		line 710 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22180 ;; Parameters:    Size  Location     Type
 22181 ;;  len             2   22[COMRAM] unsigned int 
 22182 ;;  seed            2   24[COMRAM] unsigned int 
 22183 ;; Auto vars:     Size  Location     Type
 22184 ;;  cksm            4   30[COMRAM] unsigned long 
 22185 ;;  v               2   34[COMRAM] unsigned int 
 22186 ;; Return value:  Size  Location     Type
 22187 ;;                  2   22[COMRAM] unsigned int 
 22188 ;; Registers used:
 22189 ;;		wreg, status,2, status,0, cstack
 22190 ;; Tracked objects:
 22191 ;;		On entry : 0/1
 22192 ;;		On exit  : 0/0
 22193 ;;		Unchanged: 0/0
 22194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22195 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22196 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22197 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22198 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22199 ;;Total ram usage:       14 bytes
 22200 ;; Hardware stack levels used:    1
 22201 ;; Hardware stack levels required when called:    9
 22202 ;; This function calls:
 22203 ;;		_ETH_EdataRead
 22204 ;; This function is called by:
 22205 ;;		_ETH_TxComputeChecksum
 22206 ;;		_ETH_RxComputeChecksum
 22207 ;; This function uses a non-reentrant model
 22208 ;;
 22209                           
 22210                           	psect	text91
 22211  005136                     __ptext91:
 22212                           	opt stack 0
 22213  005136                     _ETH_ComputeChecksum:
 22214                           	opt stack 15
 22215                           
 22216                           ;j60_driver.c: 712: uint32_t cksm;
 22217                           ;j60_driver.c: 713: uint16_t v;
 22218                           ;j60_driver.c: 715: cksm = seed;
 22219                           
 22220                           ; BSR set to: 0
 22221                           ;incstack = 0
 22222  005136  C019  F01F         	movff	ETH_ComputeChecksum@seed,ETH_ComputeChecksum@cksm
 22223  00513A  C01A  F020         	movff	ETH_ComputeChecksum@seed+1,ETH_ComputeChecksum@cksm+1
 22224  00513E  6A21               	clrf	ETH_ComputeChecksum@cksm+2,c
 22225  005140  6A22               	clrf	ETH_ComputeChecksum@cksm+3,c
 22226                           
 22227                           ;j60_driver.c: 717: while(len > 1)
 22228  005142  D011               	goto	l7596
 22229  005144                     l617:
 22230                           
 22231                           ;j60_driver.c: 718: {
 22232                           ;j60_driver.c: 719: v = 0;
 22233  005144  6A23               	clrf	ETH_ComputeChecksum@v,c
 22234  005146  6A24               	clrf	ETH_ComputeChecksum@v+1,c
 22235  005148                     i41L__ptext96:
 22236                           	opt stack 0
 22237  005148                     i41L_ETH_EdataRead:
 22238                           	opt stack 0
 22239  005148                     i41Ll7486:
 22240                           	opt stack 15
 22241  005148  CF61 FE7E          	movff	3937,_errataTemp	;# 
 22242  00514C                     i41Ll7488:
 22243                           	opt stack 15
 22244                           
 22245                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 22246  00514C  010E               	movlb	14	; () banked
 22247  00514E  517E               	movf	126,w,b
 22248  005150                     i41Ll460:
 22249                           	opt stack 15
 22250  005150  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 22251  005152                     i42L__ptext96:
 22252                           	opt stack 0
 22253  005152                     i42L_ETH_EdataRead:
 22254                           	opt stack 0
 22255  005152                     i42Ll7486:
 22256                           	opt stack 15
 22257  005152  CF61 FE7E          	movff	3937,_errataTemp	;# 
 22258  005156                     i42Ll7488:
 22259                           	opt stack 15
 22260                           
 22261                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 22262  005156  010E               	movlb	14	; () banked
 22263  005158  517E               	movf	126,w,b
 22264  00515A                     i42Ll460:
 22265                           	opt stack 15
 22266  00515A  6E23               	movwf	ETH_ComputeChecksum@v,c
 22267                           
 22268                           ; BSR set to: 14
 22269                           ;j60_driver.c: 722: cksm += v;
 22270  00515C  D834               	call	PL635	;call to abstracted procedure
 22271                           
 22272                           ; BSR set to: 14
 22273                           ;j60_driver.c: 723: len -= 2;
 22274  00515E  0E02               	movlw	2
 22275  005160  5E17               	subwf	ETH_ComputeChecksum@len,f,c
 22276  005162  0E00               	movlw	0
 22277  005164  5A18               	subwfb	ETH_ComputeChecksum@len+1,f,c
 22278  005166                     l7596:
 22279  005166  5018               	movf	ETH_ComputeChecksum@len+1,w,c
 22280  005168  E1ED               	bnz	l617
 22281  00516A  0E02               	movlw	2
 22282  00516C  5C17               	subwf	ETH_ComputeChecksum@len,w,c
 22283  00516E  E2EA               	bc	l617
 22284                           
 22285                           ;j60_driver.c: 724: }
 22286                           ;j60_driver.c: 726: if(len)
 22287  005170  5017               	movf	ETH_ComputeChecksum@len,w,c
 22288  005172  1018               	iorwf	ETH_ComputeChecksum@len+1,w,c
 22289  005174  E01C               	bz	l620
 22290                           
 22291                           ;j60_driver.c: 727: {
 22292                           ;j60_driver.c: 728: v = 0;
 22293  005176  6A23               	clrf	ETH_ComputeChecksum@v,c
 22294  005178  6A24               	clrf	ETH_ComputeChecksum@v+1,c
 22295  00517A                     i43L__ptext96:
 22296                           	opt stack 0
 22297  00517A                     i43L_ETH_EdataRead:
 22298                           	opt stack 0
 22299  00517A                     i43Ll7486:
 22300                           	opt stack 15
 22301  00517A  CF61 FE7E          	movff	3937,_errataTemp	;# 
 22302  00517E                     i43Ll7488:
 22303                           	opt stack 15
 22304                           
 22305                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 22306  00517E  010E               	movlb	14	; () banked
 22307  005180  517E               	movf	126,w,b
 22308  005182                     i43Ll460:
 22309                           	opt stack 15
 22310  005182  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 22311                           
 22312                           ; BSR set to: 14
 22313                           ;j60_driver.c: 730: ((char *)&v)[0] = 0;
 22314  005184  6A23               	clrf	ETH_ComputeChecksum@v,c
 22315                           
 22316                           ; BSR set to: 14
 22317                           ;j60_driver.c: 731: cksm += v;
 22318  005186  D81F               	call	PL635	;call to abstracted procedure
 22319  005188  D012               	goto	l620
 22320  00518A                     l7608:
 22321                           
 22322                           ;j60_driver.c: 736: {
 22323                           ;j60_driver.c: 737: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 22324  00518A  501F               	movf	ETH_ComputeChecksum@cksm,w,c
 22325  00518C  6E1B               	movwf	??_ETH_ComputeChecksum& (0+255),c
 22326  00518E  5020               	movf	ETH_ComputeChecksum@cksm+1,w,c
 22327  005190  6E1C               	movwf	(??_ETH_ComputeChecksum+1)& (0+255),c
 22328  005192  6A1D               	clrf	(??_ETH_ComputeChecksum+2)& (0+255),c
 22329  005194  6A1E               	clrf	(??_ETH_ComputeChecksum+3)& (0+255),c
 22330  005196  5021               	movf	ETH_ComputeChecksum@cksm+2,w,c
 22331  005198  241B               	addwf	??_ETH_ComputeChecksum,w,c
 22332  00519A  6E1F               	movwf	ETH_ComputeChecksum@cksm,c
 22333  00519C  5022               	movf	ETH_ComputeChecksum@cksm+3,w,c
 22334  00519E  201C               	addwfc	??_ETH_ComputeChecksum+1,w,c
 22335  0051A0  6E20               	movwf	ETH_ComputeChecksum@cksm+1,c
 22336  0051A2  0E00               	movlw	0
 22337  0051A4  201D               	addwfc	??_ETH_ComputeChecksum+2,w,c
 22338  0051A6  6E21               	movwf	ETH_ComputeChecksum@cksm+2,c
 22339  0051A8  0E00               	movlw	0
 22340  0051AA  201E               	addwfc	??_ETH_ComputeChecksum+3,w,c
 22341  0051AC  6E22               	movwf	ETH_ComputeChecksum@cksm+3,c
 22342  0051AE                     l620:
 22343  0051AE  5021               	movf	ETH_ComputeChecksum@cksm+2,w,c
 22344  0051B0  1022               	iorwf	ETH_ComputeChecksum@cksm+3,w,c
 22345  0051B2  E1EB               	bnz	l7608
 22346                           
 22347                           ;j60_driver.c: 738: }
 22348                           ;j60_driver.c: 741: cksm = ~cksm;
 22349  0051B4  1E1F               	comf	ETH_ComputeChecksum@cksm,f,c
 22350  0051B6  1E20               	comf	ETH_ComputeChecksum@cksm+1,f,c
 22351  0051B8  1E21               	comf	ETH_ComputeChecksum@cksm+2,f,c
 22352  0051BA  1E22               	comf	ETH_ComputeChecksum@cksm+3,f,c
 22353                           
 22354                           ;j60_driver.c: 744: return cksm;
 22355  0051BC  C01F  F017         	movff	ETH_ComputeChecksum@cksm,?_ETH_ComputeChecksum
 22356  0051C0  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,?_ETH_ComputeChecksum+1
 22357  0051C4  0CFF               	retlw	255	;funcret
 22358  0051C6                     __end_of_ETH_ComputeChecksum:
 22359                           	opt stack 0
 22360  0051C6                     PL635:
 22361                           	opt stack 15
 22362  0051C6  5023               	movf	ETH_ComputeChecksum@v,w,c
 22363  0051C8  261F               	addwf	ETH_ComputeChecksum@cksm,f,c
 22364  0051CA  5024               	movf	ETH_ComputeChecksum@v+1,w,c
 22365  0051CC  2220               	addwfc	ETH_ComputeChecksum@cksm+1,f,c
 22366  0051CE  0E00               	movlw	0
 22367  0051D0  2221               	addwfc	ETH_ComputeChecksum@cksm+2,f,c
 22368  0051D2  2222               	addwfc	ETH_ComputeChecksum@cksm+3,f,c
 22369  0051D4  0C00               	retlw	0
 22370  0051D6                     __end_ofPL635:
 22371                           	opt stack 0
 22372                           tosu	equ	0xFFF
 22373                           tosh	equ	0xFFE
 22374                           tosl	equ	0xFFD
 22375                           pclath	equ	0xFFA
 22376                           tblptru	equ	0xFF8
 22377                           tblptrh	equ	0xFF7
 22378                           tblptrl	equ	0xFF6
 22379                           tablat	equ	0xFF5
 22380                           prodh	equ	0xFF4
 22381                           prodl	equ	0xFF3
 22382                           intcon	equ	0xFF2
 22383                           indf0	equ	0xFEF
 22384                           postinc0	equ	0xFEE
 22385                           fsr0h	equ	0xFEA
 22386                           fsr0l	equ	0xFE9
 22387                           wreg	equ	0xFE8
 22388                           indf1	equ	0xFE7
 22389                           postinc1	equ	0xFE6
 22390                           postdec1	equ	0xFE5
 22391                           plusw1	equ	0xFE3
 22392                           fsr1h	equ	0xFE2
 22393                           fsr1l	equ	0xFE1
 22394                           bsr	equ	0xFE0
 22395                           indf2	equ	0xFDF
 22396                           postinc2	equ	0xFDE
 22397                           postdec2	equ	0xFDD
 22398                           plusw2	equ	0xFDB
 22399                           fsr2h	equ	0xFDA
 22400                           fsr2l	equ	0xFD9
 22401                           status	equ	0xFD8
 22402                           
 22403 ;; *************** function _ETH_Send *****************
 22404 ;; Defined at:
 22405 ;;		line 567 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22406 ;; Parameters:    Size  Location     Type
 22407 ;;		None
 22408 ;; Auto vars:     Size  Location     Type
 22409 ;;  packetEnd       2   22[COMRAM] unsigned int 
 22410 ;; Return value:  Size  Location     Type
 22411 ;;                  1    wreg      enum E6944
 22412 ;; Registers used:
 22413 ;;		wreg, status,2, status,0
 22414 ;; Tracked objects:
 22415 ;;		On entry : 0/0
 22416 ;;		On exit  : 0/0
 22417 ;;		Unchanged: 0/0
 22418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22423 ;;Total ram usage:        2 bytes
 22424 ;; Hardware stack levels used:    1
 22425 ;; Hardware stack levels required when called:    8
 22426 ;; This function calls:
 22427 ;;		Nothing
 22428 ;; This function is called by:
 22429 ;;		_ARPV4_Packet
 22430 ;;		_ARPV4_Request
 22431 ;;		_IPV4_Send
 22432 ;; This function uses a non-reentrant model
 22433 ;;
 22434                           
 22435                           	psect	text92
 22436  005ECE                     __ptext92:
 22437                           	opt stack 0
 22438  005ECE                     _ETH_Send:
 22439                           	opt stack 16
 22440                           
 22441                           ;j60_driver.c: 569: uint16_t packetEnd;
 22442                           ;j60_driver.c: 571: packetEnd = EWRPT - 1;
 22443                           
 22444                           ;incstack = 0
 22445  005ECE  0EFF               	movlw	255
 22446  005ED0  010E               	movlb	14	; () banked
 22447  005ED2  25E2               	addwf	226,w,b	;volatile
 22448  005ED4  6E17               	movwf	ETH_Send@packetEnd,c
 22449  005ED6  0EFF               	movlw	255
 22450  005ED8  21E3               	addwfc	227,w,b	;volatile
 22451  005EDA  6E18               	movwf	ETH_Send@packetEnd+1,c
 22452                           
 22453                           ; BSR set to: 14
 22454                           ;j60_driver.c: 573: if(!ethData.up)
 22455  005EDC  0101               	movlb	1	; () banked
 22456  005EDE  A5BD               	btfss	_ethData& (0+255),2,b	;volatile
 22457                           
 22458                           ; BSR set to: 1
 22459                           ;j60_driver.c: 574: {
 22460                           ;j60_driver.c: 575: return LINK_NOT_FOUND;
 22461  005EE0  0C02               	retlw	2
 22462                           
 22463                           ; BSR set to: 1
 22464                           ;j60_driver.c: 576: }
 22465                           ;j60_driver.c: 577: if(!ethData.bufferBusy)
 22466  005EE2  ABBD               	btfss	_ethData& (0+255),5,b	;volatile
 22467                           
 22468                           ; BSR set to: 1
 22469                           ;j60_driver.c: 578: {
 22470                           ;j60_driver.c: 579: return BUFFER_BUSY;
 22471  005EE4  0C03               	retlw	3
 22472                           
 22473                           ; BSR set to: 1
 22474                           ;j60_driver.c: 580: }
 22475                           ;j60_driver.c: 581: ETXST = ((8192) - (1518));
 22476  005EE6  D808               	call	PL665	;call to abstracted procedure
 22477                           
 22478                           ; BSR set to: 14
 22479                           ;j60_driver.c: 582: ETXND = packetEnd;
 22480  005EE8  C017  FEE6         	movff	ETH_Send@packetEnd,3814	;volatile
 22481  005EEC  C018  FEE7         	movff	ETH_Send@packetEnd+1,3815	;volatile
 22482                           
 22483                           ; BSR set to: 14
 22484                           ;j60_driver.c: 583: __nop(); __nop();
 22485  005EF0  F000               	nop	
 22486  005EF2  F000               	nop	
 22487                           
 22488                           ;j60_driver.c: 584: ECON1bits.TXRTS = 1;
 22489  005EF4  86D2               	bsf	4050,3,c	;volatile
 22490                           
 22491                           ;j60_driver.c: 586: return SUCCESS;
 22492  005EF6  0C01               	retlw	1	;funcret
 22493  005EF8                     __end_of_ETH_Send:
 22494                           	opt stack 0
 22495  005EF8                     PL665:
 22496                           	opt stack 16
 22497  005EF8  0E1A               	movlw	26
 22498  005EFA  010E               	movlb	14	; () banked
 22499  005EFC  6FE5               	movwf	229,b	;volatile
 22500  005EFE  0E12               	movlw	18
 22501  005F00  6FE4               	movwf	228,b	;volatile
 22502  005F02  0C12               	retlw	18
 22503  005F04                     __end_ofPL665:
 22504                           	opt stack 0
 22505                           tosu	equ	0xFFF
 22506                           tosh	equ	0xFFE
 22507                           tosl	equ	0xFFD
 22508                           pclath	equ	0xFFA
 22509                           tblptru	equ	0xFF8
 22510                           tblptrh	equ	0xFF7
 22511                           tblptrl	equ	0xFF6
 22512                           tablat	equ	0xFF5
 22513                           prodh	equ	0xFF4
 22514                           prodl	equ	0xFF3
 22515                           intcon	equ	0xFF2
 22516                           indf0	equ	0xFEF
 22517                           postinc0	equ	0xFEE
 22518                           fsr0h	equ	0xFEA
 22519                           fsr0l	equ	0xFE9
 22520                           wreg	equ	0xFE8
 22521                           indf1	equ	0xFE7
 22522                           postinc1	equ	0xFE6
 22523                           postdec1	equ	0xFE5
 22524                           plusw1	equ	0xFE3
 22525                           fsr1h	equ	0xFE2
 22526                           fsr1l	equ	0xFE1
 22527                           bsr	equ	0xFE0
 22528                           indf2	equ	0xFDF
 22529                           postinc2	equ	0xFDE
 22530                           postdec2	equ	0xFDD
 22531                           plusw2	equ	0xFDB
 22532                           fsr2h	equ	0xFDA
 22533                           fsr2l	equ	0xFD9
 22534                           status	equ	0xFD8
 22535                           
 22536 ;; *************** function _ETH_Insert *****************
 22537 ;; Defined at:
 22538 ;;		line 596 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22539 ;; Parameters:    Size  Location     Type
 22540 ;;  data            1    wreg     PTR unsigned char 
 22541 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), TCP_Snd@cksm(2), IPV4_Send@cksm(2), 
 22542 ;;		 -> IPV4_Send@totalLength(2), ICMP_EchoReply@cksm(2), 
 22543 ;;  len             2   22[COMRAM] unsigned int 
 22544 ;;  offset          2   24[COMRAM] unsigned int 
 22545 ;; Auto vars:     Size  Location     Type
 22546 ;;  data            1   28[COMRAM] PTR unsigned char 
 22547 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), TCP_Snd@cksm(2), IPV4_Send@cksm(2), 
 22548 ;;		 -> IPV4_Send@totalLength(2), ICMP_EchoReply@cksm(2), 
 22549 ;;  current_tx_p    2   26[COMRAM] unsigned int 
 22550 ;; Return value:  Size  Location     Type
 22551 ;;		None               void
 22552 ;; Registers used:
 22553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22554 ;; Tracked objects:
 22555 ;;		On entry : F/0
 22556 ;;		On exit  : 0/0
 22557 ;;		Unchanged: 0/0
 22558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22559 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22560 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22562 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22563 ;;Total ram usage:        7 bytes
 22564 ;; Hardware stack levels used:    1
 22565 ;; Hardware stack levels required when called:    9
 22566 ;; This function calls:
 22567 ;;		_ETH_EdataWrite
 22568 ;; This function is called by:
 22569 ;;		_ICMP_EchoReply
 22570 ;;		_IPV4_Send
 22571 ;;		_TCP_Snd
 22572 ;;		_UDP_Send
 22573 ;; This function uses a non-reentrant model
 22574 ;;
 22575                           
 22576                           	psect	text93
 22577  005DAC                     __ptext93:
 22578                           	opt stack 0
 22579  005DAC                     _ETH_Insert:
 22580                           	opt stack 16
 22581                           
 22582                           ;incstack = 0
 22583                           ;ETH_Insert@data stored from wreg
 22584  005DAC  6E1D               	movwf	ETH_Insert@data,c
 22585                           
 22586                           ;j60_driver.c: 598: uint16_t current_tx_ptr = EWRPT;
 22587  005DAE  CEE2 F01B          	movff	3810,ETH_Insert@current_tx_ptr	;volatile
 22588  005DB2  CEE3 F01C          	movff	3811,ETH_Insert@current_tx_ptr+1	;volatile
 22589                           
 22590                           ;j60_driver.c: 599: EWRPT = ((8192) - (1518)) + offset + 1;
 22591  005DB6  0E13               	movlw	19
 22592  005DB8  2419               	addwf	ETH_Insert@offset,w,c
 22593  005DBA  010E               	movlb	14	; () banked
 22594  005DBC  6FE2               	movwf	226,b	;volatile
 22595  005DBE  0E1A               	movlw	26
 22596  005DC0  201A               	addwfc	ETH_Insert@offset+1,w,c
 22597  005DC2  6FE3               	movwf	227,b	;volatile
 22598                           
 22599                           ;j60_driver.c: 600: while(len--)
 22600  005DC4  D007               	goto	l7684
 22601  005DC6                     l7680:
 22602                           
 22603                           ;j60_driver.c: 601: {
 22604                           ;j60_driver.c: 602: ETH_EdataWrite(*data++);
 22605  005DC6  501D               	movf	ETH_Insert@data,w,c
 22606  005DC8  6ED9               	movwf	fsr2l,c
 22607  005DCA  6ADA               	clrf	fsr2h,c
 22608  005DCC  50DF               	movf	indf2,w,c
 22609  005DCE                     i44L__ptext94:
 22610                           	opt stack 0
 22611  005DCE                     i44L_ETH_EdataWrite:
 22612                           	opt stack 0
 22613  005DCE                     i44Ll7492:
 22614                           	opt stack 16
 22615  005DCE  CFE8 FF61          	movff	wreg,3937	;# 
 22616  005DD2                     i44Ll463:
 22617                           	opt stack 16
 22618  005DD2  2A1D               	incf	ETH_Insert@data,f,c
 22619  005DD4                     l7684:
 22620  005DD4  0617               	decf	ETH_Insert@len,f,c
 22621  005DD6  A0D8               	btfss	status,0,c
 22622  005DD8  0618               	decf	ETH_Insert@len+1,f,c
 22623  005DDA  2817               	incf	ETH_Insert@len,w,c
 22624  005DDC  E1F4               	bnz	l7680
 22625  005DDE  2818               	incf	ETH_Insert@len+1,w,c
 22626  005DE0  E1F2               	bnz	l7680
 22627                           
 22628                           ;j60_driver.c: 603: }
 22629                           ;j60_driver.c: 604: EWRPT = current_tx_ptr;
 22630  005DE2  C01B  FEE2         	movff	ETH_Insert@current_tx_ptr,3810	;volatile
 22631  005DE6  C01C  FEE3         	movff	ETH_Insert@current_tx_ptr+1,3811	;volatile
 22632  005DEA  0012               	return		;funcret
 22633  005DEC                     __end_of_ETH_Insert:
 22634                           	opt stack 0
 22635                           tosu	equ	0xFFF
 22636                           tosh	equ	0xFFE
 22637                           tosl	equ	0xFFD
 22638                           pclath	equ	0xFFA
 22639                           tblptru	equ	0xFF8
 22640                           tblptrh	equ	0xFF7
 22641                           tblptrl	equ	0xFF6
 22642                           tablat	equ	0xFF5
 22643                           prodh	equ	0xFF4
 22644                           prodl	equ	0xFF3
 22645                           intcon	equ	0xFF2
 22646                           indf0	equ	0xFEF
 22647                           postinc0	equ	0xFEE
 22648                           fsr0h	equ	0xFEA
 22649                           fsr0l	equ	0xFE9
 22650                           wreg	equ	0xFE8
 22651                           indf1	equ	0xFE7
 22652                           postinc1	equ	0xFE6
 22653                           postdec1	equ	0xFE5
 22654                           plusw1	equ	0xFE3
 22655                           fsr1h	equ	0xFE2
 22656                           fsr1l	equ	0xFE1
 22657                           bsr	equ	0xFE0
 22658                           indf2	equ	0xFDF
 22659                           postinc2	equ	0xFDE
 22660                           postdec2	equ	0xFDD
 22661                           plusw2	equ	0xFDB
 22662                           fsr2h	equ	0xFDA
 22663                           fsr2l	equ	0xFD9
 22664                           status	equ	0xFD8
 22665                           
 22666 ;; *************** function _ETH_EdataWrite *****************
 22667 ;; Defined at:
 22668 ;;		line 82 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22669 ;; Parameters:    Size  Location     Type
 22670 ;;  d               1    wreg     unsigned char 
 22671 ;; Auto vars:     Size  Location     Type
 22672 ;;  d               1    0[COMRAM] unsigned char 
 22673 ;; Return value:  Size  Location     Type
 22674 ;;		None               void
 22675 ;; Registers used:
 22676 ;;		wreg
 22677 ;; Tracked objects:
 22678 ;;		On entry : 0/0
 22679 ;;		On exit  : 0/0
 22680 ;;		Unchanged: 0/0
 22681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22686 ;;Total ram usage:        0 bytes
 22687 ;; Hardware stack levels used:    1
 22688 ;; Hardware stack levels required when called:    8
 22689 ;; This function calls:
 22690 ;;		Nothing
 22691 ;; This function is called by:
 22692 ;;		_ETH_Write8
 22693 ;;		_ETH_Write16
 22694 ;;		_ETH_Write32
 22695 ;;		_ETH_WriteBlock
 22696 ;;		_ETH_WriteStart
 22697 ;;		_ETH_Insert
 22698 ;; This function uses a non-reentrant model
 22699 ;;
 22700                           
 22701                           	psect	text94
 22702  000000                     __ptext94:
 22703                           	opt stack 0
 22704  000000                     _ETH_EdataWrite:
 22705                           	opt stack 0
 22706  000000                     __end_of_ETH_EdataWrite:
 22707                           	opt stack 0
 22708                           tosu	equ	0xFFF
 22709                           tosh	equ	0xFFE
 22710                           tosl	equ	0xFFD
 22711                           pclath	equ	0xFFA
 22712                           tblptru	equ	0xFF8
 22713                           tblptrh	equ	0xFF7
 22714                           tblptrl	equ	0xFF6
 22715                           tablat	equ	0xFF5
 22716                           prodh	equ	0xFF4
 22717                           prodl	equ	0xFF3
 22718                           intcon	equ	0xFF2
 22719                           indf0	equ	0xFEF
 22720                           postinc0	equ	0xFEE
 22721                           fsr0h	equ	0xFEA
 22722                           fsr0l	equ	0xFE9
 22723                           wreg	equ	0xFE8
 22724                           indf1	equ	0xFE7
 22725                           postinc1	equ	0xFE6
 22726                           postdec1	equ	0xFE5
 22727                           plusw1	equ	0xFE3
 22728                           fsr1h	equ	0xFE2
 22729                           fsr1l	equ	0xFE1
 22730                           bsr	equ	0xFE0
 22731                           indf2	equ	0xFDF
 22732                           postinc2	equ	0xFDE
 22733                           postdec2	equ	0xFDD
 22734                           plusw2	equ	0xFDB
 22735                           fsr2h	equ	0xFDA
 22736                           fsr2l	equ	0xFD9
 22737                           status	equ	0xFD8
 22738                           
 22739 ;; *************** function _ETH_ReadBlock *****************
 22740 ;; Defined at:
 22741 ;;		line 445 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22742 ;; Parameters:    Size  Location     Type
 22743 ;;  buffer          2   22[COMRAM] PTR void 
 22744 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
 22745 ;;		 -> STR_5(17), DEMO_TCP_EchoServer@rxdataPort7(20), udpHeader(8), tcpHeader(20), 
 22746 ;;		 -> Network_Read@debug_str(80), Network_Read@header(14), ipv4Header(20), ICMP_Receive@icmpHdr(8), 
 22747 ;;		 -> DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), STR_1(15), NULL(0), 
 22748 ;;  length          2   24[COMRAM] unsigned int 
 22749 ;; Auto vars:     Size  Location     Type
 22750 ;;  p               2   29[COMRAM] PTR unsigned char 
 22751 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
 22752 ;;		 -> STR_5(17), DEMO_TCP_EchoServer@rxdataPort7(20), udpHeader(8), tcpHeader(20), 
 22753 ;;		 -> Network_Read@debug_str(80), Network_Read@header(14), ipv4Header(20), ICMP_Receive@icmpHdr(8), 
 22754 ;;		 -> DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), STR_1(15), NULL(0), 
 22755 ;;  len             2   27[COMRAM] unsigned int 
 22756 ;; Return value:  Size  Location     Type
 22757 ;;                  2   22[COMRAM] unsigned int 
 22758 ;; Registers used:
 22759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22760 ;; Tracked objects:
 22761 ;;		On entry : 0/1
 22762 ;;		On exit  : F/1
 22763 ;;		Unchanged: 0/0
 22764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22765 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22766 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22768 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22769 ;;Total ram usage:        9 bytes
 22770 ;; Hardware stack levels used:    1
 22771 ;; Hardware stack levels required when called:    9
 22772 ;; This function calls:
 22773 ;;		_ETH_EdataRead
 22774 ;; This function is called by:
 22775 ;;		_ARPV4_Packet
 22776 ;;		_DHCP_Handler
 22777 ;;		_ICMP_Receive
 22778 ;;		_IPV4_Packet
 22779 ;;		_Network_Read
 22780 ;;		_TCP_PayloadSave
 22781 ;;		_TCP_Recv
 22782 ;;		_UDP_Receive
 22783 ;; This function uses a non-reentrant model
 22784 ;;
 22785                           
 22786                           	psect	text95
 22787  005818                     __ptext95:
 22788                           	opt stack 0
 22789  005818                     _ETH_ReadBlock:
 22790                           	opt stack 17
 22791                           
 22792                           ;j60_driver.c: 447: uint16_t len = 0;
 22793                           
 22794                           ;incstack = 0
 22795  005818  6A1C               	clrf	ETH_ReadBlock@len,c
 22796  00581A  6A1D               	clrf	ETH_ReadBlock@len+1,c
 22797                           
 22798                           ;j60_driver.c: 448: char *p = buffer;
 22799  00581C  C017  F01E         	movff	ETH_ReadBlock@buffer,ETH_ReadBlock@p
 22800  005820  C018  F01F         	movff	ETH_ReadBlock@buffer+1,ETH_ReadBlock@p+1
 22801                           
 22802                           ;j60_driver.c: 449: while(rxPacketStatusVector.byteCount && length)
 22803  005824  D01F               	goto	l7978
 22804  005826                     l7966:
 22805                           
 22806                           ; BSR set to: 1
 22807                           ;j60_driver.c: 450: {
 22808                           ;j60_driver.c: 451: *p++ = ETH_EdataRead();
 22809  005826  C01E  FFF6         	movff	ETH_ReadBlock@p,tblptrl
 22810  00582A  C01F  FFF7         	movff	ETH_ReadBlock@p+1,tblptrh
 22811  00582E  0E00               	movlw	low (__smallconst shr (0+16))
 22812  005830  6EF8               	movwf	tblptru,c
 22813  005832                     i45L__ptext96:
 22814                           	opt stack 0
 22815  005832                     i45L_ETH_EdataRead:
 22816                           	opt stack 0
 22817  005832                     i45Ll7486:
 22818                           	opt stack 15
 22819  005832  CF61 FE7E          	movff	3937,_errataTemp	;# 
 22820  005836                     i45Ll7488:
 22821                           	opt stack 15
 22822                           
 22823                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 22824  005836  010E               	movlb	14	; () banked
 22825  005838  517E               	movf	126,w,b
 22826  00583A                     i45Ll460:
 22827                           	opt stack 17
 22828  00583A  6E1B               	movwf	??_ETH_ReadBlock& (0+255),c
 22829  00583C  0E0F               	movlw	(high __ramtop+-1)
 22830  00583E  64F7               	cpfsgt	tblptrh,c
 22831  005840  D004               	bra	u11157
 22832  005842  C01B  FFF5         	movff	??_ETH_ReadBlock,tablat
 22833  005846  000C               	tblwt		*
 22834  005848  D004               	bra	u11150
 22835  00584A                     u11157:
 22836  00584A  EC66  F011         	call	PL389	;call to abstracted procedure
 22837  00584E  C01B  FFEF         	movff	??_ETH_ReadBlock,indf0
 22838  005852                     u11150:
 22839  005852  4A1E               	infsnz	ETH_ReadBlock@p,f,c
 22840  005854  2A1F               	incf	ETH_ReadBlock@p+1,f,c
 22841                           
 22842                           ;j60_driver.c: 452: len ++;
 22843  005856  4A1C               	infsnz	ETH_ReadBlock@len,f,c
 22844  005858  2A1D               	incf	ETH_ReadBlock@len+1,f,c
 22845                           
 22846                           ;j60_driver.c: 453: length --;
 22847  00585A  0619               	decf	ETH_ReadBlock@length,f,c
 22848  00585C  A0D8               	btfss	status,0,c
 22849  00585E  061A               	decf	ETH_ReadBlock@length+1,f,c
 22850                           
 22851                           ;j60_driver.c: 454: rxPacketStatusVector.byteCount --;
 22852                           
 22853                           ; BSR set to: 1
 22854                           ;j60_driver.c: 455: ethData.error = 0;
 22855  005860  EC35  F030         	call	PL671	;call to abstracted procedure
 22856  005864                     l7978:
 22857  005864  0101               	movlb	1	; () banked
 22858  005866  51CC               	movf	_rxPacketStatusVector& (0+255),w,b
 22859  005868  11CD               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 22860  00586A  E003               	bz	l544
 22861                           
 22862                           ; BSR set to: 1
 22863  00586C  5019               	movf	ETH_ReadBlock@length,w,c
 22864  00586E  101A               	iorwf	ETH_ReadBlock@length+1,w,c
 22865  005870  E1DA               	bnz	l7966
 22866  005872                     l544:
 22867                           
 22868                           ; BSR set to: 1
 22869                           ;j60_driver.c: 456: }
 22870                           ;j60_driver.c: 457: return len;
 22871  005872  C01C  F017         	movff	ETH_ReadBlock@len,?_ETH_ReadBlock
 22872  005876  C01D  F018         	movff	ETH_ReadBlock@len+1,?_ETH_ReadBlock+1
 22873                           
 22874                           ; BSR set to: 1
 22875  00587A  0012               	return		;funcret
 22876  00587C                     __end_of_ETH_ReadBlock:
 22877                           	opt stack 0
 22878                           tosu	equ	0xFFF
 22879                           tosh	equ	0xFFE
 22880                           tosl	equ	0xFFD
 22881                           pclath	equ	0xFFA
 22882                           tblptru	equ	0xFF8
 22883                           tblptrh	equ	0xFF7
 22884                           tblptrl	equ	0xFF6
 22885                           tablat	equ	0xFF5
 22886                           prodh	equ	0xFF4
 22887                           prodl	equ	0xFF3
 22888                           intcon	equ	0xFF2
 22889                           indf0	equ	0xFEF
 22890                           postinc0	equ	0xFEE
 22891                           fsr0h	equ	0xFEA
 22892                           fsr0l	equ	0xFE9
 22893                           wreg	equ	0xFE8
 22894                           indf1	equ	0xFE7
 22895                           postinc1	equ	0xFE6
 22896                           postdec1	equ	0xFE5
 22897                           plusw1	equ	0xFE3
 22898                           fsr1h	equ	0xFE2
 22899                           fsr1l	equ	0xFE1
 22900                           bsr	equ	0xFE0
 22901                           indf2	equ	0xFDF
 22902                           postinc2	equ	0xFDE
 22903                           postdec2	equ	0xFDD
 22904                           plusw2	equ	0xFDB
 22905                           fsr2h	equ	0xFDA
 22906                           fsr2l	equ	0xFD9
 22907                           status	equ	0xFD8
 22908                           
 22909 ;; *************** function _ETH_EdataRead *****************
 22910 ;; Defined at:
 22911 ;;		line 76 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22912 ;; Parameters:    Size  Location     Type
 22913 ;;		None
 22914 ;; Auto vars:     Size  Location     Type
 22915 ;;		None
 22916 ;; Return value:  Size  Location     Type
 22917 ;;                  1    wreg      unsigned char 
 22918 ;; Registers used:
 22919 ;;		wreg, status,2
 22920 ;; Tracked objects:
 22921 ;;		On entry : 0/1
 22922 ;;		On exit  : F/E
 22923 ;;		Unchanged: 0/0
 22924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22929 ;;Total ram usage:        0 bytes
 22930 ;; Hardware stack levels used:    1
 22931 ;; Hardware stack levels required when called:    8
 22932 ;; This function calls:
 22933 ;;		Nothing
 22934 ;; This function is called by:
 22935 ;;		_ETH_NextPacketUpdate
 22936 ;;		_ETH_Read8
 22937 ;;		_ETH_Read16
 22938 ;;		_ETH_Read32
 22939 ;;		_ETH_ReadBlock
 22940 ;;		_ETH_ComputeChecksum
 22941 ;; This function uses a non-reentrant model
 22942 ;;
 22943                           
 22944                           	psect	text96
 22945  000000                     __ptext96:
 22946                           	opt stack 0
 22947  000000                     _ETH_EdataRead:
 22948                           	opt stack 0
 22949  000000                     __end_of_ETH_EdataRead:
 22950                           	opt stack 0
 22951                           tosu	equ	0xFFF
 22952                           tosh	equ	0xFFE
 22953                           tosl	equ	0xFFD
 22954                           pclath	equ	0xFFA
 22955                           tblptru	equ	0xFF8
 22956                           tblptrh	equ	0xFF7
 22957                           tblptrl	equ	0xFF6
 22958                           tablat	equ	0xFF5
 22959                           prodh	equ	0xFF4
 22960                           prodl	equ	0xFF3
 22961                           intcon	equ	0xFF2
 22962                           indf0	equ	0xFEF
 22963                           postinc0	equ	0xFEE
 22964                           fsr0h	equ	0xFEA
 22965                           fsr0l	equ	0xFE9
 22966                           wreg	equ	0xFE8
 22967                           indf1	equ	0xFE7
 22968                           postinc1	equ	0xFE6
 22969                           postdec1	equ	0xFE5
 22970                           plusw1	equ	0xFE3
 22971                           fsr1h	equ	0xFE2
 22972                           fsr1l	equ	0xFE1
 22973                           bsr	equ	0xFE0
 22974                           indf2	equ	0xFDF
 22975                           postinc2	equ	0xFDE
 22976                           postdec2	equ	0xFDD
 22977                           plusw2	equ	0xFDB
 22978                           fsr2h	equ	0xFDA
 22979                           fsr2l	equ	0xFD9
 22980                           status	equ	0xFD8
 22981                           
 22982 ;; *************** function _TCB_Reset *****************
 22983 ;; Defined at:
 22984 ;;		line 134 in file "../../TCPIP Library/source/tcpv4.c"
 22985 ;; Parameters:    Size  Location     Type
 22986 ;;  tcbPtr          2   22[COMRAM] PTR struct .
 22987 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
 22988 ;;		 -> STR_5(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), STR_1(15), 
 22989 ;;		 -> NULL(0), 
 22990 ;; Auto vars:     Size  Location     Type
 22991 ;;		None
 22992 ;; Return value:  Size  Location     Type
 22993 ;;		None               void
 22994 ;; Registers used:
 22995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22996 ;; Tracked objects:
 22997 ;;		On entry : 0/1
 22998 ;;		On exit  : 0/0
 22999 ;;		Unchanged: 0/0
 23000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23004 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23005 ;;Total ram usage:        4 bytes
 23006 ;; Hardware stack levels used:    1
 23007 ;; Hardware stack levels required when called:    8
 23008 ;; This function calls:
 23009 ;;		Nothing
 23010 ;; This function is called by:
 23011 ;;		_TCP_FiniteStateMachine
 23012 ;;		_TCP_SocketInit
 23013 ;; This function uses a non-reentrant model
 23014 ;;
 23015                           
 23016                           	psect	text97
 23017  004384                     __ptext97:
 23018                           	opt stack 0
 23019  004384                     _TCB_Reset:
 23020                           	opt stack 19
 23021                           
 23022                           ;tcpv4.c: 136: tcbPtr->destIP = 0;
 23023                           
 23024                           ; BSR set to: 14
 23025                           ;incstack = 0
 23026  004384  0E02               	movlw	2
 23027  004386  D8A6               	call	PL399	;call to abstracted procedure
 23028  004388  64F7               	cpfsgt	tblptrh,c
 23029  00438A  D007               	bra	u11887
 23030  00438C  6AF5               	clrf	tablat,c
 23031  00438E  000D               	tblwt		*+
 23032  004390  6AF5               	clrf	tablat,c
 23033  004392  000D               	tblwt		*+
 23034  004394  ECD2  F011         	call	PL423	;call to abstracted procedure
 23035  004398  D004               	bra	u11880
 23036  00439A                     u11887:
 23037  00439A  EC66  F011         	call	PL389	;call to abstracted procedure
 23038  00439E  EC46  F012         	call	PL467	;call to abstracted procedure
 23039  0043A2                     u11880:
 23040                           
 23041                           ;tcpv4.c: 137: tcbPtr->destPort = 0;
 23042  0043A2  0E06               	movlw	6
 23043  0043A4  D897               	call	PL399	;call to abstracted procedure
 23044  0043A6  64F7               	cpfsgt	tblptrh,c
 23045  0043A8  D003               	bra	u11897
 23046  0043AA  ECD2  F011         	call	PL423	;call to abstracted procedure
 23047  0043AE  D004               	bra	u11890
 23048  0043B0                     u11897:
 23049  0043B0  EC66  F011         	call	PL389	;call to abstracted procedure
 23050  0043B4  6AEE               	clrf	postinc0,c
 23051  0043B6  6AEF               	clrf	indf0,c
 23052  0043B8                     u11890:
 23053                           
 23054                           ;tcpv4.c: 138: tcbPtr->localSeqno = 0;
 23055  0043B8  0E10               	movlw	16
 23056  0043BA  D88C               	call	PL399	;call to abstracted procedure
 23057  0043BC  64F7               	cpfsgt	tblptrh,c
 23058  0043BE  D007               	bra	u11907
 23059  0043C0  6AF5               	clrf	tablat,c
 23060  0043C2  000D               	tblwt		*+
 23061  0043C4  6AF5               	clrf	tablat,c
 23062  0043C6  000D               	tblwt		*+
 23063  0043C8  ECD2  F011         	call	PL423	;call to abstracted procedure
 23064  0043CC  D004               	bra	u11900
 23065  0043CE                     u11907:
 23066  0043CE  EC66  F011         	call	PL389	;call to abstracted procedure
 23067  0043D2  EC46  F012         	call	PL467	;call to abstracted procedure
 23068  0043D6                     u11900:
 23069                           
 23070                           ;tcpv4.c: 139: tcbPtr->localLastAck = 0;
 23071  0043D6  0E14               	movlw	20
 23072  0043D8  D87D               	call	PL399	;call to abstracted procedure
 23073  0043DA  64F7               	cpfsgt	tblptrh,c
 23074  0043DC  D007               	bra	u11917
 23075  0043DE  6AF5               	clrf	tablat,c
 23076  0043E0  000D               	tblwt		*+
 23077  0043E2  6AF5               	clrf	tablat,c
 23078  0043E4  000D               	tblwt		*+
 23079  0043E6  ECD2  F011         	call	PL423	;call to abstracted procedure
 23080  0043EA  D004               	bra	u11910
 23081  0043EC                     u11917:
 23082  0043EC  EC66  F011         	call	PL389	;call to abstracted procedure
 23083  0043F0  EC46  F012         	call	PL467	;call to abstracted procedure
 23084  0043F4                     u11910:
 23085                           
 23086                           ;tcpv4.c: 140: tcbPtr->remoteSeqno = 0;
 23087  0043F4  0E08               	movlw	8
 23088  0043F6  D86E               	call	PL399	;call to abstracted procedure
 23089  0043F8  64F7               	cpfsgt	tblptrh,c
 23090  0043FA  D007               	bra	u11927
 23091  0043FC  6AF5               	clrf	tablat,c
 23092  0043FE  000D               	tblwt		*+
 23093  004400  6AF5               	clrf	tablat,c
 23094  004402  000D               	tblwt		*+
 23095  004404  ECD2  F011         	call	PL423	;call to abstracted procedure
 23096  004408  D004               	bra	u11920
 23097  00440A                     u11927:
 23098  00440A  EC66  F011         	call	PL389	;call to abstracted procedure
 23099  00440E  EC46  F012         	call	PL467	;call to abstracted procedure
 23100  004412                     u11920:
 23101                           
 23102                           ;tcpv4.c: 141: tcbPtr->remoteAck = 0;
 23103  004412  0E0C               	movlw	12
 23104  004414  D85F               	call	PL399	;call to abstracted procedure
 23105  004416  64F7               	cpfsgt	tblptrh,c
 23106  004418  D007               	bra	u11937
 23107  00441A  6AF5               	clrf	tablat,c
 23108  00441C  000D               	tblwt		*+
 23109  00441E  6AF5               	clrf	tablat,c
 23110  004420  000D               	tblwt		*+
 23111  004422  ECD2  F011         	call	PL423	;call to abstracted procedure
 23112  004426  D004               	bra	u11930
 23113  004428                     u11937:
 23114  004428  EC66  F011         	call	PL389	;call to abstracted procedure
 23115  00442C  EC46  F012         	call	PL467	;call to abstracted procedure
 23116  004430                     u11930:
 23117                           
 23118                           ;tcpv4.c: 142: tcbPtr->remoteWnd = 0;
 23119  004430  0E18               	movlw	24
 23120  004432  D850               	call	PL399	;call to abstracted procedure
 23121  004434  64F7               	cpfsgt	tblptrh,c
 23122  004436  D003               	bra	u11947
 23123  004438  ECD2  F011         	call	PL423	;call to abstracted procedure
 23124  00443C  D004               	bra	u11940
 23125  00443E                     u11947:
 23126  00443E  EC66  F011         	call	PL389	;call to abstracted procedure
 23127  004442  6AEE               	clrf	postinc0,c
 23128  004444  6AEF               	clrf	indf0,c
 23129  004446                     u11940:
 23130                           
 23131                           ;tcpv4.c: 144: tcbPtr->timeout = 0;
 23132  004446  0E30               	movlw	48
 23133  004448  D845               	call	PL399	;call to abstracted procedure
 23134  00444A  64F7               	cpfsgt	tblptrh,c
 23135  00444C  D003               	bra	u11957
 23136  00444E  ECD2  F011         	call	PL423	;call to abstracted procedure
 23137  004452  D004               	bra	u11950
 23138  004454                     u11957:
 23139  004454  EC66  F011         	call	PL389	;call to abstracted procedure
 23140  004458  6AEE               	clrf	postinc0,c
 23141  00445A  6AEF               	clrf	indf0,c
 23142  00445C                     u11950:
 23143                           
 23144                           ;tcpv4.c: 145: tcbPtr->timeoutReloadValue = 0;
 23145  00445C  0E32               	movlw	50
 23146  00445E  D83A               	call	PL399	;call to abstracted procedure
 23147  004460  64F7               	cpfsgt	tblptrh,c
 23148  004462  D003               	bra	u11967
 23149  004464  ECD2  F011         	call	PL423	;call to abstracted procedure
 23150  004468  D004               	bra	u11960
 23151  00446A                     u11967:
 23152  00446A  EC66  F011         	call	PL389	;call to abstracted procedure
 23153  00446E  6AEE               	clrf	postinc0,c
 23154  004470  6AEF               	clrf	indf0,c
 23155  004472                     u11960:
 23156                           
 23157                           ;tcpv4.c: 146: tcbPtr->timeoutsCount = 0;
 23158  004472  0E34               	movlw	52
 23159  004474  D82F               	call	PL399	;call to abstracted procedure
 23160  004476  64F7               	cpfsgt	tblptrh,c
 23161  004478  D003               	bra	u11977
 23162  00447A  6AF5               	clrf	tablat,c
 23163  00447C  000C               	tblwt		*
 23164  00447E  D003               	bra	u11970
 23165  004480                     u11977:
 23166  004480  EC66  F011         	call	PL389	;call to abstracted procedure
 23167  004484  6AEF               	clrf	indf0,c
 23168  004486                     u11970:
 23169                           
 23170                           ;tcpv4.c: 147: tcbPtr->flags = 0;
 23171  004486  0E35               	movlw	53
 23172  004488  D825               	call	PL399	;call to abstracted procedure
 23173  00448A  64F7               	cpfsgt	tblptrh,c
 23174  00448C  D003               	bra	u11987
 23175  00448E  6AF5               	clrf	tablat,c
 23176  004490  000C               	tblwt		*
 23177  004492  D003               	bra	u11980
 23178  004494                     u11987:
 23179  004494  EC66  F011         	call	PL389	;call to abstracted procedure
 23180  004498  6AEF               	clrf	indf0,c
 23181  00449A                     u11980:
 23182                           
 23183                           ;tcpv4.c: 149: tcbPtr->localPort = 0;
 23184  00449A  C017  FFF6         	movff	TCB_Reset@tcbPtr,tblptrl
 23185  00449E  C018  FFF7         	movff	TCB_Reset@tcbPtr+1,tblptrh
 23186  0044A2  0E00               	movlw	low (__smallconst shr (0+16))
 23187  0044A4  6EF8               	movwf	tblptru,c
 23188  0044A6  0E0F               	movlw	(high __ramtop+-1)
 23189  0044A8  64F7               	cpfsgt	tblptrh,c
 23190  0044AA  D003               	bra	u11997
 23191  0044AC  ECD2  F011         	call	PL423	;call to abstracted procedure
 23192  0044B0  D004               	bra	u11990
 23193  0044B2                     u11997:
 23194  0044B2  EC66  F011         	call	PL389	;call to abstracted procedure
 23195  0044B6  6AEE               	clrf	postinc0,c
 23196  0044B8  6AEF               	clrf	indf0,c
 23197  0044BA                     u11990:
 23198                           
 23199                           ;tcpv4.c: 150: tcbPtr->socketState = SOCKET_CLOSED;
 23200  0044BA  0E36               	movlw	54
 23201  0044BC  D80B               	call	PL399	;call to abstracted procedure
 23202  0044BE  64F7               	cpfsgt	tblptrh,c
 23203  0044C0  D004               	bra	u12007
 23204  0044C2  0E01               	movlw	1
 23205  0044C4  6EF5               	movwf	tablat,c
 23206  0044C6  000C               	tblwt		*
 23207  0044C8  D004               	bra	u12000
 23208  0044CA                     u12007:
 23209  0044CA  EC66  F011         	call	PL389	;call to abstracted procedure
 23210  0044CE  0E01               	movlw	1
 23211  0044D0  6EEF               	movwf	indf0,c
 23212  0044D2                     u12000:
 23213  0044D2  0012               	return		;funcret
 23214  0044D4                     __end_of_TCB_Reset:
 23215                           	opt stack 0
 23216  0044D4                     PL399:
 23217                           	opt stack 19
 23218  0044D4  2417               	addwf	TCB_Reset@tcbPtr,w,c
 23219  0044D6  6E19               	movwf	??_TCB_Reset& (0+255),c
 23220  0044D8  0E00               	movlw	0
 23221  0044DA  2018               	addwfc	TCB_Reset@tcbPtr+1,w,c
 23222  0044DC  6E1A               	movwf	(??_TCB_Reset+1)& (0+255),c
 23223  0044DE  C019  FFF6         	movff	??_TCB_Reset,tblptrl
 23224  0044E2  C01A  FFF7         	movff	??_TCB_Reset+1,tblptrh
 23225  0044E6  0E00               	movlw	low (__smallconst shr (0+16))
 23226  0044E8  6EF8               	movwf	tblptru,c
 23227  0044EA  0E0F               	movlw	(high __ramtop+-1)
 23228  0044EC  0012               	return	
 23229  0044EE                     __end_ofPL399:
 23230                           	opt stack 0
 23231                           tosu	equ	0xFFF
 23232                           tosh	equ	0xFFE
 23233                           tosl	equ	0xFFD
 23234                           pclath	equ	0xFFA
 23235                           tblptru	equ	0xFF8
 23236                           tblptrh	equ	0xFF7
 23237                           tblptrl	equ	0xFF6
 23238                           tablat	equ	0xFF5
 23239                           prodh	equ	0xFF4
 23240                           prodl	equ	0xFF3
 23241                           intcon	equ	0xFF2
 23242                           indf0	equ	0xFEF
 23243                           postinc0	equ	0xFEE
 23244                           fsr0h	equ	0xFEA
 23245                           fsr0l	equ	0xFE9
 23246                           wreg	equ	0xFE8
 23247                           indf1	equ	0xFE7
 23248                           postinc1	equ	0xFE6
 23249                           postdec1	equ	0xFE5
 23250                           plusw1	equ	0xFE3
 23251                           fsr1h	equ	0xFE2
 23252                           fsr1l	equ	0xFE1
 23253                           bsr	equ	0xFE0
 23254                           indf2	equ	0xFDF
 23255                           postinc2	equ	0xFDE
 23256                           postdec2	equ	0xFDD
 23257                           plusw2	equ	0xFDB
 23258                           fsr2h	equ	0xFDA
 23259                           fsr2l	equ	0xFD9
 23260                           status	equ	0xFD8
 23261                           
 23262 ;; *************** function _TCP_InsertRxBuffer *****************
 23263 ;; Defined at:
 23264 ;;		line 1361 in file "../../TCPIP Library/source/tcpv4.c"
 23265 ;; Parameters:    Size  Location     Type
 23266 ;;  tcbPtr          2   30[COMRAM] PTR struct .
 23267 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 23268 ;;  data            2   32[COMRAM] PTR unsigned char 
 23269 ;;		 -> DEMO_TCP_EchoServer@rxdataPort7(20), 
 23270 ;;  data_len        2   34[COMRAM] unsigned int 
 23271 ;; Auto vars:     Size  Location     Type
 23272 ;;  ret             1    0        unsigned char 
 23273 ;; Return value:  Size  Location     Type
 23274 ;;                  1    wreg      unsigned char 
 23275 ;; Registers used:
 23276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23277 ;; Tracked objects:
 23278 ;;		On entry : 0/1
 23279 ;;		On exit  : 0/0
 23280 ;;		Unchanged: 0/0
 23281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23282 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23285 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23286 ;;Total ram usage:        7 bytes
 23287 ;; Hardware stack levels used:    1
 23288 ;; Hardware stack levels required when called:    9
 23289 ;; This function calls:
 23290 ;;		_TCB_Check
 23291 ;; This function is called by:
 23292 ;;		_DEMO_TCP_EchoServer
 23293 ;; This function uses a non-reentrant model
 23294 ;;
 23295                           
 23296                           	psect	text98
 23297  0057AC                     __ptext98:
 23298                           	opt stack 0
 23299  0057AC                     _TCP_InsertRxBuffer:
 23300                           	opt stack 20
 23301                           
 23302                           ;tcpv4.c: 1365: if (TCB_Check(tcbPtr))
 23303                           
 23304                           ;incstack = 0
 23305  0057AC  C01F  F017         	movff	TCP_InsertRxBuffer@tcbPtr,TCB_Check@ptr
 23306  0057B0  C020  F018         	movff	TCP_InsertRxBuffer@tcbPtr+1,TCB_Check@ptr+1
 23307  0057B4  ECEC  F02A         	call	_TCB_Check	;wreg free
 23308  0057B8  0900               	iorlw	0
 23309  0057BA  B4D8               	btfsc	status,2,c
 23310  0057BC  0012               	return	
 23311                           
 23312                           ;tcpv4.c: 1366: {
 23313                           ;tcpv4.c: 1367: if (tcbPtr->rxBufState == NO_BUFF)
 23314  0057BE  EE20 F022          	lfsr	2,34
 23315  0057C2  D825               	call	PL601	;call to abstracted procedure
 23316  0057C4  50DF               	movf	indf2,w,c
 23317  0057C6  A4D8               	btfss	status,2,c
 23318  0057C8  0012               	return	
 23319                           
 23320                           ;tcpv4.c: 1368: {
 23321                           ;tcpv4.c: 1369: if (data != (0))
 23322  0057CA  5021               	movf	TCP_InsertRxBuffer@data,w,c
 23323  0057CC  1022               	iorwf	TCP_InsertRxBuffer@data+1,w,c
 23324  0057CE  B4D8               	btfsc	status,2,c
 23325  0057D0  0012               	return	
 23326                           
 23327                           ;tcpv4.c: 1370: {
 23328                           ;tcpv4.c: 1371: tcbPtr->rxBufferStart = data;
 23329  0057D2  EE20 F01E          	lfsr	2,30
 23330  0057D6  D81B               	call	PL601	;call to abstracted procedure
 23331  0057D8  C021  FFDE         	movff	TCP_InsertRxBuffer@data,postinc2
 23332  0057DC  C022  FFDD         	movff	TCP_InsertRxBuffer@data+1,postdec2
 23333                           
 23334                           ;tcpv4.c: 1372: tcbPtr->rxBufferPtr = tcbPtr->rxBufferStart;
 23335  0057E0  EE20 F01E          	lfsr	2,30
 23336  0057E4  D814               	call	PL601	;call to abstracted procedure
 23337  0057E6  EE10 F020          	lfsr	1,32
 23338  0057EA  501F               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 23339  0057EC  26E1               	addwf	fsr1l,f,c
 23340  0057EE  5020               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 23341  0057F0  EC95  F028         	call	PL675	;call to abstracted procedure
 23342                           
 23343                           ;tcpv4.c: 1373: tcbPtr->localWnd = data_len;
 23344  0057F4  EE20 F01A          	lfsr	2,26
 23345  0057F8  D80A               	call	PL601	;call to abstracted procedure
 23346  0057FA  C023  FFDE         	movff	TCP_InsertRxBuffer@data_len,postinc2
 23347  0057FE  C024  FFDD         	movff	TCP_InsertRxBuffer@data_len+1,postdec2
 23348                           
 23349                           ;tcpv4.c: 1374: tcbPtr->rxBufState = RX_BUFF_IN_USE;
 23350  005802  EE20 F022          	lfsr	2,34
 23351  005806  D803               	call	PL601	;call to abstracted procedure
 23352  005808  0E01               	movlw	1
 23353  00580A  6EDF               	movwf	indf2,c
 23354  00580C  0C01               	retlw	1
 23355  00580E                     __end_of_TCP_InsertRxBuffer:
 23356                           	opt stack 0
 23357  00580E                     PL601:
 23358                           	opt stack 20
 23359  00580E  501F               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 23360  005810  26D9               	addwf	fsr2l,f,c
 23361  005812  5020               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 23362  005814  22DA               	addwfc	fsr2h,f,c
 23363  005816  0012               	return	
 23364  005818                     __end_ofPL601:
 23365                           	opt stack 0
 23366                           tosu	equ	0xFFF
 23367                           tosh	equ	0xFFE
 23368                           tosl	equ	0xFFD
 23369                           pclath	equ	0xFFA
 23370                           tblptru	equ	0xFF8
 23371                           tblptrh	equ	0xFF7
 23372                           tblptrl	equ	0xFF6
 23373                           tablat	equ	0xFF5
 23374                           prodh	equ	0xFF4
 23375                           prodl	equ	0xFF3
 23376                           intcon	equ	0xFF2
 23377                           indf0	equ	0xFEF
 23378                           postinc0	equ	0xFEE
 23379                           fsr0h	equ	0xFEA
 23380                           fsr0l	equ	0xFE9
 23381                           wreg	equ	0xFE8
 23382                           indf1	equ	0xFE7
 23383                           postinc1	equ	0xFE6
 23384                           postdec1	equ	0xFE5
 23385                           plusw1	equ	0xFE3
 23386                           fsr1h	equ	0xFE2
 23387                           fsr1l	equ	0xFE1
 23388                           bsr	equ	0xFE0
 23389                           indf2	equ	0xFDF
 23390                           postinc2	equ	0xFDE
 23391                           postdec2	equ	0xFDD
 23392                           plusw2	equ	0xFDB
 23393                           fsr2h	equ	0xFDA
 23394                           fsr2l	equ	0xFD9
 23395                           status	equ	0xFD8
 23396                           
 23397 ;; *************** function _TCP_GetRxLength *****************
 23398 ;; Defined at:
 23399 ;;		line 1403 in file "../../TCPIP Library/source/tcpv4.c"
 23400 ;; Parameters:    Size  Location     Type
 23401 ;;  tcbPtr          2   30[COMRAM] PTR struct .
 23402 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 23403 ;; Auto vars:     Size  Location     Type
 23404 ;;  ret             2   36[COMRAM] int 
 23405 ;; Return value:  Size  Location     Type
 23406 ;;                  2   30[COMRAM] int 
 23407 ;; Registers used:
 23408 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23409 ;; Tracked objects:
 23410 ;;		On entry : 0/1
 23411 ;;		On exit  : 0/0
 23412 ;;		Unchanged: 0/0
 23413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23416 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23417 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23418 ;;Total ram usage:        8 bytes
 23419 ;; Hardware stack levels used:    1
 23420 ;; Hardware stack levels required when called:    9
 23421 ;; This function calls:
 23422 ;;		_TCB_Check
 23423 ;; This function is called by:
 23424 ;;		_DEMO_TCP_EchoServer
 23425 ;; This function uses a non-reentrant model
 23426 ;;
 23427                           
 23428                           	psect	text99
 23429  00587C                     __ptext99:
 23430                           	opt stack 0
 23431  00587C                     _TCP_GetRxLength:
 23432                           	opt stack 20
 23433                           
 23434                           ;tcpv4.c: 1405: int16_t ret = 0;
 23435                           
 23436                           ;incstack = 0
 23437  00587C  6A25               	clrf	TCP_GetRxLength@ret,c
 23438  00587E  6A26               	clrf	TCP_GetRxLength@ret+1,c
 23439                           
 23440                           ;tcpv4.c: 1407: if (TCB_Check(tcbPtr))
 23441  005880  C01F  F017         	movff	TCP_GetRxLength@tcbPtr,TCB_Check@ptr
 23442  005884  C020  F018         	movff	TCP_GetRxLength@tcbPtr+1,TCB_Check@ptr+1
 23443  005888  ECEC  F02A         	call	_TCB_Check	;wreg free
 23444  00588C  0900               	iorlw	0
 23445  00588E  E019               	bz	l9716
 23446                           
 23447                           ;tcpv4.c: 1408: {
 23448                           ;tcpv4.c: 1409: if (tcbPtr->rxBufState == RX_BUFF_IN_USE)
 23449  005890  EE20 F022          	lfsr	2,34
 23450  005894  D81B               	call	PL653	;call to abstracted procedure
 23451  005896  04DE               	decf	postinc2,w,c
 23452  005898  E114               	bnz	l9716
 23453                           
 23454                           ;tcpv4.c: 1410: {
 23455                           ;tcpv4.c: 1411: ret = tcbPtr->rxBufferPtr - tcbPtr->rxBufferStart;
 23456  00589A  EE20 F01E          	lfsr	2,30
 23457  00589E  D816               	call	PL653	;call to abstracted procedure
 23458  0058A0  CFDE F021          	movff	postinc2,??_TCP_GetRxLength
 23459  0058A4  CFDD F022          	movff	postdec2,??_TCP_GetRxLength+1
 23460  0058A8  EE20 F020          	lfsr	2,32
 23461  0058AC  D80F               	call	PL653	;call to abstracted procedure
 23462  0058AE  CFDE F023          	movff	postinc2,??_TCP_GetRxLength+2
 23463  0058B2  CFDD F024          	movff	postdec2,??_TCP_GetRxLength+3
 23464  0058B6  5021               	movf	??_TCP_GetRxLength,w,c
 23465  0058B8  5C23               	subwf	??_TCP_GetRxLength+2,w,c
 23466  0058BA  6E25               	movwf	TCP_GetRxLength@ret,c
 23467  0058BC  5022               	movf	??_TCP_GetRxLength+1,w,c
 23468  0058BE  5824               	subwfb	??_TCP_GetRxLength+3,w,c
 23469  0058C0  6E26               	movwf	TCP_GetRxLength@ret+1,c
 23470  0058C2                     l9716:
 23471                           
 23472                           ;tcpv4.c: 1412: }
 23473                           ;tcpv4.c: 1413: }
 23474                           ;tcpv4.c: 1414: return ret;
 23475  0058C2  C025  F01F         	movff	TCP_GetRxLength@ret,?_TCP_GetRxLength
 23476  0058C6  C026  F020         	movff	TCP_GetRxLength@ret+1,?_TCP_GetRxLength+1
 23477  0058CA  0012               	return		;funcret
 23478  0058CC                     __end_of_TCP_GetRxLength:
 23479                           	opt stack 0
 23480  0058CC                     PL653:
 23481                           	opt stack 20
 23482  0058CC  501F               	movf	TCP_GetRxLength@tcbPtr,w,c
 23483  0058CE  26D9               	addwf	fsr2l,f,c
 23484  0058D0  5020               	movf	TCP_GetRxLength@tcbPtr+1,w,c
 23485  0058D2  22DA               	addwfc	fsr2h,f,c
 23486  0058D4  0012               	return	
 23487  0058D6                     __end_ofPL653:
 23488                           	opt stack 0
 23489                           tosu	equ	0xFFF
 23490                           tosh	equ	0xFFE
 23491                           tosl	equ	0xFFD
 23492                           pclath	equ	0xFFA
 23493                           tblptru	equ	0xFF8
 23494                           tblptrh	equ	0xFF7
 23495                           tblptrl	equ	0xFF6
 23496                           tablat	equ	0xFF5
 23497                           prodh	equ	0xFF4
 23498                           prodl	equ	0xFF3
 23499                           intcon	equ	0xFF2
 23500                           indf0	equ	0xFEF
 23501                           postinc0	equ	0xFEE
 23502                           fsr0h	equ	0xFEA
 23503                           fsr0l	equ	0xFE9
 23504                           wreg	equ	0xFE8
 23505                           indf1	equ	0xFE7
 23506                           postinc1	equ	0xFE6
 23507                           postdec1	equ	0xFE5
 23508                           plusw1	equ	0xFE3
 23509                           fsr1h	equ	0xFE2
 23510                           fsr1l	equ	0xFE1
 23511                           bsr	equ	0xFE0
 23512                           indf2	equ	0xFDF
 23513                           postinc2	equ	0xFDE
 23514                           postdec2	equ	0xFDD
 23515                           plusw2	equ	0xFDB
 23516                           fsr2h	equ	0xFDA
 23517                           fsr2l	equ	0xFD9
 23518                           status	equ	0xFD8
 23519                           
 23520 ;; *************** function _TCP_GetReceivedData *****************
 23521 ;; Defined at:
 23522 ;;		line 1383 in file "../../TCPIP Library/source/tcpv4.c"
 23523 ;; Parameters:    Size  Location     Type
 23524 ;;  tcbPtr          2   30[COMRAM] PTR struct .
 23525 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 23526 ;; Auto vars:     Size  Location     Type
 23527 ;;  ret             2   36[COMRAM] int 
 23528 ;; Return value:  Size  Location     Type
 23529 ;;                  2   30[COMRAM] int 
 23530 ;; Registers used:
 23531 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23532 ;; Tracked objects:
 23533 ;;		On entry : F/1
 23534 ;;		On exit  : 0/0
 23535 ;;		Unchanged: 0/0
 23536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23539 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23540 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23541 ;;Total ram usage:        8 bytes
 23542 ;; Hardware stack levels used:    1
 23543 ;; Hardware stack levels required when called:    9
 23544 ;; This function calls:
 23545 ;;		_TCB_Check
 23546 ;; This function is called by:
 23547 ;;		_DEMO_TCP_EchoServer
 23548 ;; This function uses a non-reentrant model
 23549 ;;
 23550                           
 23551                           	psect	text100
 23552  00573E                     __ptext100:
 23553                           	opt stack 0
 23554  00573E                     _TCP_GetReceivedData:
 23555                           	opt stack 20
 23556                           
 23557                           ; BSR set to: 1
 23558                           ;tcpv4.c: 1385: int16_t ret = 0;
 23559                           
 23560                           ;incstack = 0
 23561  00573E  6A25               	clrf	TCP_GetReceivedData@ret,c
 23562  005740  6A26               	clrf	TCP_GetReceivedData@ret+1,c
 23563                           
 23564                           ; BSR set to: 1
 23565                           ;tcpv4.c: 1387: if (TCB_Check(tcbPtr))
 23566  005742  C01F  F017         	movff	TCP_GetReceivedData@tcbPtr,TCB_Check@ptr
 23567  005746  C020  F018         	movff	TCP_GetReceivedData@tcbPtr+1,TCB_Check@ptr+1
 23568  00574A  ECEC  F02A         	call	_TCB_Check	;wreg free
 23569  00574E  0900               	iorlw	0
 23570  005750  E023               	bz	l9704
 23571                           
 23572                           ;tcpv4.c: 1388: {
 23573                           ;tcpv4.c: 1389: if (tcbPtr->rxBufState == RX_BUFF_IN_USE)
 23574  005752  EE20 F022          	lfsr	2,34
 23575  005756  D825               	call	PL599	;call to abstracted procedure
 23576  005758  04DE               	decf	postinc2,w,c
 23577  00575A  E11E               	bnz	l9704
 23578                           
 23579                           ;tcpv4.c: 1390: {
 23580                           ;tcpv4.c: 1391: ret = tcbPtr->rxBufferPtr - tcbPtr->rxBufferStart;
 23581  00575C  EE20 F01E          	lfsr	2,30
 23582  005760  D820               	call	PL599	;call to abstracted procedure
 23583  005762  CFDE F021          	movff	postinc2,??_TCP_GetReceivedData
 23584  005766  CFDD F022          	movff	postdec2,??_TCP_GetReceivedData+1
 23585  00576A  EE20 F020          	lfsr	2,32
 23586  00576E  D819               	call	PL599	;call to abstracted procedure
 23587  005770  CFDE F023          	movff	postinc2,??_TCP_GetReceivedData+2
 23588  005774  CFDD F024          	movff	postdec2,??_TCP_GetReceivedData+3
 23589  005778  5021               	movf	??_TCP_GetReceivedData,w,c
 23590  00577A  5C23               	subwf	??_TCP_GetReceivedData+2,w,c
 23591  00577C  6E25               	movwf	TCP_GetReceivedData@ret,c
 23592  00577E  5022               	movf	??_TCP_GetReceivedData+1,w,c
 23593  005780  5824               	subwfb	??_TCP_GetReceivedData+3,w,c
 23594  005782  6E26               	movwf	TCP_GetReceivedData@ret+1,c
 23595                           
 23596                           ;tcpv4.c: 1393: if (ret != 0)
 23597  005784  1025               	iorwf	TCP_GetReceivedData@ret,w,c
 23598  005786  E008               	bz	l9704
 23599                           
 23600                           ;tcpv4.c: 1394: {
 23601                           ;tcpv4.c: 1395: tcbPtr->localWnd = 0;
 23602  005788  EE20 F01A          	lfsr	2,26
 23603  00578C  D80A               	call	PL599	;call to abstracted procedure
 23604                           
 23605                           ;tcpv4.c: 1396: tcbPtr->rxBufState = NO_BUFF;
 23606  00578E  EC82  F029         	call	PL705	;call to abstracted procedure
 23607  005792  D807               	call	PL599	;call to abstracted procedure
 23608  005794  0E00               	movlw	0
 23609  005796  6ADF               	clrf	indf2,c
 23610  005798                     l9704:
 23611                           
 23612                           ;tcpv4.c: 1397: }
 23613                           ;tcpv4.c: 1398: }
 23614                           ;tcpv4.c: 1399: }
 23615                           ;tcpv4.c: 1400: return ret;
 23616  005798  C025  F01F         	movff	TCP_GetReceivedData@ret,?_TCP_GetReceivedData
 23617  00579C  C026  F020         	movff	TCP_GetReceivedData@ret+1,?_TCP_GetReceivedData+1
 23618  0057A0  0012               	return		;funcret
 23619  0057A2                     __end_of_TCP_GetReceivedData:
 23620                           	opt stack 0
 23621  0057A2                     PL599:
 23622                           	opt stack 20
 23623  0057A2  501F               	movf	TCP_GetReceivedData@tcbPtr,w,c
 23624  0057A4  26D9               	addwf	fsr2l,f,c
 23625  0057A6  5020               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 23626  0057A8  22DA               	addwfc	fsr2h,f,c
 23627  0057AA  0012               	return	
 23628  0057AC                     __end_ofPL599:
 23629                           	opt stack 0
 23630                           tosu	equ	0xFFF
 23631                           tosh	equ	0xFFE
 23632                           tosl	equ	0xFFD
 23633                           pclath	equ	0xFFA
 23634                           tblptru	equ	0xFF8
 23635                           tblptrh	equ	0xFF7
 23636                           tblptrl	equ	0xFF6
 23637                           tablat	equ	0xFF5
 23638                           prodh	equ	0xFF4
 23639                           prodl	equ	0xFF3
 23640                           intcon	equ	0xFF2
 23641                           indf0	equ	0xFEF
 23642                           postinc0	equ	0xFEE
 23643                           fsr0h	equ	0xFEA
 23644                           fsr0l	equ	0xFE9
 23645                           wreg	equ	0xFE8
 23646                           indf1	equ	0xFE7
 23647                           postinc1	equ	0xFE6
 23648                           postdec1	equ	0xFE5
 23649                           plusw1	equ	0xFE3
 23650                           fsr1h	equ	0xFE2
 23651                           fsr1l	equ	0xFE1
 23652                           bsr	equ	0xFE0
 23653                           indf2	equ	0xFDF
 23654                           postinc2	equ	0xFDE
 23655                           postdec2	equ	0xFDD
 23656                           plusw2	equ	0xFDB
 23657                           fsr2h	equ	0xFDA
 23658                           fsr2l	equ	0xFD9
 23659                           status	equ	0xFD8
 23660                           
 23661 ;; *************** function _TCP_Bind *****************
 23662 ;; Defined at:
 23663 ;;		line 1235 in file "../../TCPIP Library/source/tcpv4.c"
 23664 ;; Parameters:    Size  Location     Type
 23665 ;;  tcbPtr          2   30[COMRAM] PTR struct .
 23666 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 23667 ;;  port            2   32[COMRAM] unsigned int 
 23668 ;; Auto vars:     Size  Location     Type
 23669 ;;  ret             1    0        unsigned char 
 23670 ;; Return value:  Size  Location     Type
 23671 ;;                  1    wreg      unsigned char 
 23672 ;; Registers used:
 23673 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23674 ;; Tracked objects:
 23675 ;;		On entry : C/1
 23676 ;;		On exit  : 0/0
 23677 ;;		Unchanged: 0/0
 23678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23682 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23683 ;;Total ram usage:        5 bytes
 23684 ;; Hardware stack levels used:    1
 23685 ;; Hardware stack levels required when called:    9
 23686 ;; This function calls:
 23687 ;;		_TCB_Check
 23688 ;; This function is called by:
 23689 ;;		_DEMO_TCP_EchoServer
 23690 ;; This function uses a non-reentrant model
 23691 ;;
 23692                           
 23693                           	psect	text101
 23694  00618A                     __ptext101:
 23695                           	opt stack 0
 23696  00618A                     _TCP_Bind:
 23697                           	opt stack 20
 23698                           
 23699                           ;tcpv4.c: 1239: ;
 23700                           ;tcpv4.c: 1241: if (TCB_Check(tcbPtr))
 23701                           
 23702                           ;incstack = 0
 23703  00618A  C01F  F017         	movff	TCP_Bind@tcbPtr,TCB_Check@ptr
 23704  00618E  C020  F018         	movff	TCP_Bind@tcbPtr+1,TCB_Check@ptr+1
 23705  006192  ECEC  F02A         	call	_TCB_Check	;wreg free
 23706  006196  0900               	iorlw	0
 23707  006198  B4D8               	btfsc	status,2,c
 23708  00619A  0012               	return	
 23709                           
 23710                           ;tcpv4.c: 1242: {
 23711                           ;tcpv4.c: 1243: tcbPtr->localPort = port;
 23712  00619C  C01F  FFD9         	movff	TCP_Bind@tcbPtr,fsr2l
 23713  0061A0  C020  FFDA         	movff	TCP_Bind@tcbPtr+1,fsr2h
 23714  0061A4  C021  FFDE         	movff	TCP_Bind@port,postinc2
 23715  0061A8  C022  FFDD         	movff	TCP_Bind@port+1,postdec2
 23716  0061AC  0012               	return		;funcret
 23717  0061AE                     __end_of_TCP_Bind:
 23718                           	opt stack 0
 23719                           tosu	equ	0xFFF
 23720                           tosh	equ	0xFFE
 23721                           tosl	equ	0xFFD
 23722                           pclath	equ	0xFFA
 23723                           tblptru	equ	0xFF8
 23724                           tblptrh	equ	0xFF7
 23725                           tblptrl	equ	0xFF6
 23726                           tablat	equ	0xFF5
 23727                           prodh	equ	0xFF4
 23728                           prodl	equ	0xFF3
 23729                           intcon	equ	0xFF2
 23730                           indf0	equ	0xFEF
 23731                           postinc0	equ	0xFEE
 23732                           fsr0h	equ	0xFEA
 23733                           fsr0l	equ	0xFE9
 23734                           wreg	equ	0xFE8
 23735                           indf1	equ	0xFE7
 23736                           postinc1	equ	0xFE6
 23737                           postdec1	equ	0xFE5
 23738                           plusw1	equ	0xFE3
 23739                           fsr1h	equ	0xFE2
 23740                           fsr1l	equ	0xFE1
 23741                           bsr	equ	0xFE0
 23742                           indf2	equ	0xFDF
 23743                           postinc2	equ	0xFDE
 23744                           postdec2	equ	0xFDD
 23745                           plusw2	equ	0xFDB
 23746                           fsr2h	equ	0xFDA
 23747                           fsr2l	equ	0xFD9
 23748                           status	equ	0xFD8
 23749                           
 23750 ;; *************** function _TCB_Check *****************
 23751 ;; Defined at:
 23752 ;;		line 162 in file "../../TCPIP Library/source/tcpv4.c"
 23753 ;; Parameters:    Size  Location     Type
 23754 ;;  ptr             2   22[COMRAM] PTR struct .
 23755 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 23756 ;; Auto vars:     Size  Location     Type
 23757 ;;  tcbPtr          2   28[COMRAM] PTR struct .
 23758 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
 23759 ;;		 -> STR_5(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), STR_1(15), 
 23760 ;;		 -> NULL(0), 
 23761 ;;  count           1   27[COMRAM] char 
 23762 ;;  ret             1   26[COMRAM] unsigned char 
 23763 ;; Return value:  Size  Location     Type
 23764 ;;                  1    wreg      unsigned char 
 23765 ;; Registers used:
 23766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 23767 ;; Tracked objects:
 23768 ;;		On entry : 0/1
 23769 ;;		On exit  : 0/0
 23770 ;;		Unchanged: 0/0
 23771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23773 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23775 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23776 ;;Total ram usage:        8 bytes
 23777 ;; Hardware stack levels used:    1
 23778 ;; Hardware stack levels required when called:    8
 23779 ;; This function calls:
 23780 ;;		Nothing
 23781 ;; This function is called by:
 23782 ;;		_TCP_SocketInit
 23783 ;;		_TCP_SocketPoll
 23784 ;;		_TCP_Bind
 23785 ;;		_TCP_Listen
 23786 ;;		_TCP_SendDone
 23787 ;;		_TCP_InsertRxBuffer
 23788 ;;		_TCP_GetReceivedData
 23789 ;;		_TCP_GetRxLength
 23790 ;; This function uses a non-reentrant model
 23791 ;;
 23792                           
 23793                           	psect	text102
 23794  0055D8                     __ptext102:
 23795                           	opt stack 0
 23796  0055D8                     _TCB_Check:
 23797                           	opt stack 20
 23798                           
 23799                           ;tcpv4.c: 164: tcpTCB_t *tcbPtr;
 23800                           ;tcpv4.c: 165: bool ret = 0;
 23801                           
 23802                           ;incstack = 0
 23803  0055D8  6A1B               	clrf	TCB_Check@ret,c
 23804                           
 23805                           ;tcpv4.c: 166: socklistsize_t count = 0;
 23806  0055DA  6A1C               	clrf	TCB_Check@count,c
 23807                           
 23808                           ;tcpv4.c: 168: if((tcbList != (0)) && (ptr != (0)))
 23809  0055DC  5043               	movf	_tcbList,w,c
 23810  0055DE  1044               	iorwf	_tcbList+1,w,c
 23811  0055E0  E038               	bz	l9014
 23812  0055E2  5017               	movf	TCB_Check@ptr,w,c
 23813  0055E4  1018               	iorwf	TCB_Check@ptr+1,w,c
 23814  0055E6  E035               	bz	l9014
 23815                           
 23816                           ;tcpv4.c: 169: {
 23817                           ;tcpv4.c: 171: tcbPtr = tcbList;
 23818  0055E8  C043  F01D         	movff	_tcbList,TCB_Check@tcbPtr
 23819  0055EC  C044  F01E         	movff	_tcbList+1,TCB_Check@tcbPtr+1
 23820                           
 23821                           ;tcpv4.c: 172: while((tcbPtr != (0)) && (count < tcbListSize))
 23822  0055F0  D026               	goto	l9010
 23823  0055F2                     l9000:
 23824                           
 23825                           ;tcpv4.c: 173: {
 23826                           ;tcpv4.c: 174: if (tcbPtr == ptr)
 23827  0055F2  5017               	movf	TCB_Check@ptr,w,c
 23828  0055F4  181D               	xorwf	TCB_Check@tcbPtr,w,c
 23829  0055F6  E106               	bnz	l9006
 23830  0055F8  5018               	movf	TCB_Check@ptr+1,w,c
 23831  0055FA  181E               	xorwf	TCB_Check@tcbPtr+1,w,c
 23832  0055FC  E103               	bnz	l9006
 23833                           
 23834                           ;tcpv4.c: 175: {
 23835                           ;tcpv4.c: 176: ret = 1;
 23836  0055FE  0E01               	movlw	1
 23837  005600  6E1B               	movwf	TCB_Check@ret,c
 23838                           
 23839                           ;tcpv4.c: 177: break;
 23840  005602  D027               	goto	l9014
 23841  005604                     l9006:
 23842                           
 23843                           ;tcpv4.c: 179: else
 23844                           ;tcpv4.c: 180: {
 23845                           ;tcpv4.c: 181: tcbPtr = tcbPtr->nextTCB;
 23846  005604  0E2C               	movlw	44
 23847  005606  241D               	addwf	TCB_Check@tcbPtr,w,c
 23848  005608  6E19               	movwf	??_TCB_Check& (0+255),c
 23849  00560A  0E00               	movlw	0
 23850  00560C  201E               	addwfc	TCB_Check@tcbPtr+1,w,c
 23851  00560E  6E1A               	movwf	(??_TCB_Check+1)& (0+255),c
 23852  005610  C019  FFF6         	movff	??_TCB_Check,tblptrl
 23853  005614  C01A  FFF7         	movff	??_TCB_Check+1,tblptrh
 23854  005618  0E00               	movlw	low (__smallconst shr (0+16))
 23855  00561A  6EF8               	movwf	tblptru,c
 23856  00561C  0E0F               	movlw	(high __ramtop+-1)
 23857  00561E  64F7               	cpfsgt	tblptrh,c
 23858  005620  D007               	bra	u14567
 23859  005622  0009               	tblrd		*+
 23860  005624  CFF5 F01D          	movff	tablat,TCB_Check@tcbPtr
 23861  005628  0009               	tblrd		*+
 23862  00562A  CFF5 F01E          	movff	tablat,TCB_Check@tcbPtr+1
 23863  00562E  D006               	bra	u14560
 23864  005630                     u14567:
 23865  005630  EC66  F011         	call	PL389	;call to abstracted procedure
 23866  005634  CFEE F01D          	movff	postinc0,TCB_Check@tcbPtr
 23867  005638  CFEE F01E          	movff	postinc0,TCB_Check@tcbPtr+1
 23868  00563C                     u14560:
 23869                           
 23870                           ;tcpv4.c: 182: count ++;
 23871  00563C  2A1C               	incf	TCB_Check@count,f,c
 23872  00563E                     l9010:
 23873  00563E  501D               	movf	TCB_Check@tcbPtr,w,c
 23874  005640  101E               	iorwf	TCB_Check@tcbPtr+1,w,c
 23875  005642  E007               	bz	l9014
 23876  005644  501C               	movf	TCB_Check@count,w,c
 23877  005646  0A80               	xorlw	128
 23878  005648  6E19               	movwf	??_TCB_Check& (0+255),c
 23879  00564A  5047               	movf	_tcbListSize,w,c
 23880  00564C  0A80               	xorlw	128
 23881  00564E  5C19               	subwf	??_TCB_Check& (0+255),w,c
 23882  005650  E3D0               	bnc	l9000
 23883  005652                     l9014:
 23884                           
 23885                           ;tcpv4.c: 183: }
 23886                           ;tcpv4.c: 184: }
 23887                           ;tcpv4.c: 185: }
 23888                           ;tcpv4.c: 186: return ret;
 23889  005652  501B               	movf	TCB_Check@ret,w,c
 23890  005654  0012               	return		;funcret
 23891  005656                     __end_of_TCB_Check:
 23892                           	opt stack 0
 23893                           tosu	equ	0xFFF
 23894                           tosh	equ	0xFFE
 23895                           tosl	equ	0xFFD
 23896                           pclath	equ	0xFFA
 23897                           tblptru	equ	0xFF8
 23898                           tblptrh	equ	0xFF7
 23899                           tblptrl	equ	0xFF6
 23900                           tablat	equ	0xFF5
 23901                           prodh	equ	0xFF4
 23902                           prodl	equ	0xFF3
 23903                           intcon	equ	0xFF2
 23904                           indf0	equ	0xFEF
 23905                           postinc0	equ	0xFEE
 23906                           fsr0h	equ	0xFEA
 23907                           fsr0l	equ	0xFE9
 23908                           wreg	equ	0xFE8
 23909                           indf1	equ	0xFE7
 23910                           postinc1	equ	0xFE6
 23911                           postdec1	equ	0xFE5
 23912                           plusw1	equ	0xFE3
 23913                           fsr1h	equ	0xFE2
 23914                           fsr1l	equ	0xFE1
 23915                           bsr	equ	0xFE0
 23916                           indf2	equ	0xFDF
 23917                           postinc2	equ	0xFDE
 23918                           postdec2	equ	0xFDD
 23919                           plusw2	equ	0xFDB
 23920                           fsr2h	equ	0xFDA
 23921                           fsr2l	equ	0xFD9
 23922                           status	equ	0xFD8
 23923                           
 23924 ;; *************** function _low_isr *****************
 23925 ;; Defined at:
 23926 ;;		line 62 in file "main.c"
 23927 ;; Parameters:    Size  Location     Type
 23928 ;;		None
 23929 ;; Auto vars:     Size  Location     Type
 23930 ;;		None
 23931 ;; Return value:  Size  Location     Type
 23932 ;;		None               void
 23933 ;; Registers used:
 23934 ;;		wreg, status,2, status,0, cstack
 23935 ;; Tracked objects:
 23936 ;;		On entry : 0/0
 23937 ;;		On exit  : 0/0
 23938 ;;		Unchanged: 0/0
 23939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23942 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23943 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23944 ;;Total ram usage:        3 bytes
 23945 ;; Hardware stack levels used:    1
 23946 ;; Hardware stack levels required when called:    7
 23947 ;; This function calls:
 23948 ;;		i1_ETH_EventHandler
 23949 ;; This function is called by:
 23950 ;;		Interrupt level 1
 23951 ;; This function uses a non-reentrant model
 23952 ;;
 23953                           
 23954                           	psect	intcodelo
 23955  000018                     __pintcodelo:
 23956                           	opt stack 0
 23957  000018                     _low_isr:
 23958                           	opt stack 12
 23959                           
 23960                           ;incstack = 0
 23961  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 23962  00001A  CFD8 F014          	movff	status,??_low_isr
 23963  00001E  CFE8 F015          	movff	wreg,??_low_isr+1
 23964  000022  CFE0 F016          	movff	bsr,??_low_isr+2
 23965                           
 23966                           ;main.c: 65: ETH_EventHandler();
 23967  000026  EC82  F02F         	call	i1_ETH_EventHandler	;wreg free
 23968  00002A  C016  FFE0         	movff	??_low_isr+2,bsr
 23969  00002E  C015  FFE8         	movff	??_low_isr+1,wreg
 23970  000032  C014  FFD8         	movff	??_low_isr,status
 23971  000036  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 23972  000038  0010               	retfie	
 23973  00003A                     __end_of_low_isr:
 23974                           	opt stack 0
 23975                           tosu	equ	0xFFF
 23976                           tosh	equ	0xFFE
 23977                           tosl	equ	0xFFD
 23978                           pclath	equ	0xFFA
 23979                           tblptru	equ	0xFF8
 23980                           tblptrh	equ	0xFF7
 23981                           tblptrl	equ	0xFF6
 23982                           tablat	equ	0xFF5
 23983                           prodh	equ	0xFF4
 23984                           prodl	equ	0xFF3
 23985                           intcon	equ	0xFF2
 23986                           indf0	equ	0xFEF
 23987                           postinc0	equ	0xFEE
 23988                           fsr0h	equ	0xFEA
 23989                           fsr0l	equ	0xFE9
 23990                           wreg	equ	0xFE8
 23991                           indf1	equ	0xFE7
 23992                           postinc1	equ	0xFE6
 23993                           postdec1	equ	0xFE5
 23994                           plusw1	equ	0xFE3
 23995                           fsr1h	equ	0xFE2
 23996                           fsr1l	equ	0xFE1
 23997                           bsr	equ	0xFE0
 23998                           indf2	equ	0xFDF
 23999                           postinc2	equ	0xFDE
 24000                           postdec2	equ	0xFDD
 24001                           plusw2	equ	0xFDB
 24002                           fsr2h	equ	0xFDA
 24003                           fsr2l	equ	0xFD9
 24004                           status	equ	0xFD8
 24005                           
 24006 ;; *************** function i1_ETH_EventHandler *****************
 24007 ;; Defined at:
 24008 ;;		line 215 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24009 ;; Parameters:    Size  Location     Type
 24010 ;;		None
 24011 ;; Auto vars:     Size  Location     Type
 24012 ;;		None
 24013 ;; Return value:  Size  Location     Type
 24014 ;;		None               void
 24015 ;; Registers used:
 24016 ;;		wreg, status,2, status,0, cstack
 24017 ;; Tracked objects:
 24018 ;;		On entry : 0/0
 24019 ;;		On exit  : 0/0
 24020 ;;		Unchanged: 0/0
 24021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24026 ;;Total ram usage:        0 bytes
 24027 ;; Hardware stack levels used:    1
 24028 ;; Hardware stack levels required when called:    6
 24029 ;; This function calls:
 24030 ;;		i1_ETH_CheckLinkUp
 24031 ;;		i1_PHY_Read
 24032 ;; This function is called by:
 24033 ;;		_low_isr
 24034 ;; This function uses a non-reentrant model
 24035 ;;
 24036                           
 24037                           	psect	text104
 24038  005F04                     __ptext104:
 24039                           	opt stack 0
 24040  005F04                     i1_ETH_EventHandler:
 24041                           	opt stack 0
 24042                           
 24043                           ;j60_driver.c: 218: PIR2bits.ETHIF = 0;
 24044                           
 24045                           ;incstack = 0
 24046                           
 24047                           ;j60_driver.c: 219: if(EPKTCNT >= 3)
 24048  005F04  EC1B  F02E         	call	PL741	;call to abstracted procedure
 24049  005F08  65D9               	cpfsgt	217,b	;volatile
 24050  005F0A  D009               	goto	i1l484
 24051                           
 24052                           ; BSR set to: 14
 24053                           ;j60_driver.c: 222: if (EIRbits.LINKIF)
 24054  005F0C  A860               	btfss	3936,4,c	;volatile
 24055  005F0E  D007               	goto	i1l484
 24056                           
 24057                           ; BSR set to: 14
 24058                           ;j60_driver.c: 223: {
 24059                           ;j60_driver.c: 224: PHY_Read(PHIR);
 24060  005F10  0E13               	movlw	19
 24061  005F12  ECF5  F027         	call	i1_PHY_Read
 24062                           
 24063                           ; BSR set to: 14
 24064                           ;j60_driver.c: 226: ethData.linkChange = 1;
 24065                           
 24066                           ; BSR set to: 1
 24067                           ;j60_driver.c: 227: ethData.up = 0;
 24068  005F16  EC1E  F02E         	call	PL751	;call to abstracted procedure
 24069                           
 24070                           ;j60_driver.c: 230: if(ETH_CheckLinkUp())
 24071  005F1A  ECE4  F02F         	call	i1_ETH_CheckLinkUp	;wreg free
 24072  005F1E                     i1l484:
 24073                           
 24074                           ;j60_driver.c: 233: }
 24075                           ;j60_driver.c: 234: }
 24076                           ;j60_driver.c: 236: if(EIRbits.RXERIF)
 24077  005F1E  B060               	btfsc	3936,0,c	;volatile
 24078                           
 24079                           ;j60_driver.c: 237: {
 24080                           ;j60_driver.c: 239: EIRbits.RXERIF = 0;
 24081  005F20  9060               	bcf	3936,0,c	;volatile
 24082                           
 24083                           ;j60_driver.c: 240: }
 24084                           ;j60_driver.c: 242: if (EIRbits.TXERIF)
 24085  005F22  B260               	btfsc	3936,1,c	;volatile
 24086                           
 24087                           ;j60_driver.c: 243: {
 24088                           ;j60_driver.c: 245: EIRbits.TXERIF = 0;
 24089  005F24  9260               	bcf	3936,1,c	;volatile
 24090                           
 24091                           ;j60_driver.c: 246: }
 24092                           ;j60_driver.c: 248: if(EIRbits.TXIF)
 24093  005F26  B660               	btfsc	3936,3,c	;volatile
 24094                           
 24095                           ;j60_driver.c: 249: {
 24096                           ;j60_driver.c: 251: EIRbits.TXIF = 0;
 24097                           
 24098                           ;j60_driver.c: 252: ethData.bufferBusy = 0;
 24099  005F28  EC17  F02E         	call	PL739	;call to abstracted procedure
 24100  005F2C                     i1l489:
 24101                           
 24102                           ;j60_driver.c: 253: }
 24103                           ;j60_driver.c: 255: if (EIRbits.PKTIF)
 24104  005F2C  AC60               	btfss	3936,6,c	;volatile
 24105  005F2E  0012               	return	
 24106                           
 24107                           ;j60_driver.c: 256: {
 24108                           ;j60_driver.c: 257: if(ethData.pktReady == 0)
 24109  005F30  0101               	movlb	1	; () banked
 24110  005F32  B3BD               	btfsc	_ethData& (0+255),1,b	;volatile
 24111  005F34  0012               	return	
 24112                           
 24113                           ; BSR set to: 1
 24114                           ;j60_driver.c: 258: {
 24115                           ;j60_driver.c: 260: ethData.pktReady = 1;
 24116                           
 24117                           ;j60_driver.c: 261: EIEbits.PKTIE = 0;
 24118  005F36  EF13  F02E         	goto	PL699	;call to abstracted procedure
 24119  005F3A                     __end_ofi1_ETH_EventHandler:
 24120                           	opt stack 0
 24121                           tosu	equ	0xFFF
 24122                           tosh	equ	0xFFE
 24123                           tosl	equ	0xFFD
 24124                           pclath	equ	0xFFA
 24125                           tblptru	equ	0xFF8
 24126                           tblptrh	equ	0xFF7
 24127                           tblptrl	equ	0xFF6
 24128                           tablat	equ	0xFF5
 24129                           prodh	equ	0xFF4
 24130                           prodl	equ	0xFF3
 24131                           intcon	equ	0xFF2
 24132                           indf0	equ	0xFEF
 24133                           postinc0	equ	0xFEE
 24134                           fsr0h	equ	0xFEA
 24135                           fsr0l	equ	0xFE9
 24136                           wreg	equ	0xFE8
 24137                           indf1	equ	0xFE7
 24138                           postinc1	equ	0xFE6
 24139                           postdec1	equ	0xFE5
 24140                           plusw1	equ	0xFE3
 24141                           fsr1h	equ	0xFE2
 24142                           fsr1l	equ	0xFE1
 24143                           bsr	equ	0xFE0
 24144                           indf2	equ	0xFDF
 24145                           postinc2	equ	0xFDE
 24146                           postdec2	equ	0xFDD
 24147                           plusw2	equ	0xFDB
 24148                           fsr2h	equ	0xFDA
 24149                           fsr2l	equ	0xFD9
 24150                           status	equ	0xFD8
 24151                           
 24152 ;; *************** function i1_ETH_CheckLinkUp *****************
 24153 ;; Defined at:
 24154 ;;		line 198 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24155 ;; Parameters:    Size  Location     Type
 24156 ;;		None
 24157 ;; Auto vars:     Size  Location     Type
 24158 ;;  ETH_CheckLin    4   15[COMRAM] unsigned long 
 24159 ;; Return value:  Size  Location     Type
 24160 ;;                  1    wreg      unsigned char 
 24161 ;; Registers used:
 24162 ;;		wreg, status,2, status,0, cstack
 24163 ;; Tracked objects:
 24164 ;;		On entry : F/1
 24165 ;;		On exit  : 0/0
 24166 ;;		Unchanged: 0/0
 24167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24169 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24171 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24172 ;;Total ram usage:        4 bytes
 24173 ;; Hardware stack levels used:    1
 24174 ;; Hardware stack levels required when called:    5
 24175 ;; This function calls:
 24176 ;;		i1_ETH_readLinkStatus
 24177 ;; This function is called by:
 24178 ;;		i1_ETH_EventHandler
 24179 ;; This function uses a non-reentrant model
 24180 ;;
 24181                           
 24182                           	psect	text105
 24183  005FC8                     __ptext105:
 24184                           	opt stack 0
 24185  005FC8                     i1_ETH_CheckLinkUp:
 24186                           	opt stack 0
 24187  005FC8                     i46L__ptext106:
 24188                           	opt stack 0
 24189  005FC8                     i46Li1_ETH_readLinkStatus:
 24190                           	opt stack 0
 24191  005FC8                     i46Li1l6728:
 24192                           	opt stack 12
 24193                           
 24194                           ; BSR set to: 1
 24195                           ;j60_driver.c: 195: return (PHY_Read(PHSTAT2));
 24196  005FC8  0E11               	movlw	17
 24197  005FCA  ECF5  F027         	call	i1_PHY_Read
 24198  005FCE  C003  F00C         	movff	?i1_PHY_Read,?i1_ETH_readLinkStatus
 24199  005FD2  C004  F00D         	movff	?i1_PHY_Read+1,?i1_ETH_readLinkStatus+1
 24200  005FD6  C005  F00E         	movff	?i1_PHY_Read+2,?i1_ETH_readLinkStatus+2
 24201  005FDA  C006  F00F         	movff	?i1_PHY_Read+3,?i1_ETH_readLinkStatus+3
 24202  005FDE                     i46Li1l476:
 24203                           	opt stack 12
 24204  005FDE  C00C  F010         	movff	?i1_ETH_readLinkStatus,i1ETH_CheckLinkUp@value
 24205  005FE2  C00D  F011         	movff	?i1_ETH_readLinkStatus+1,i1ETH_CheckLinkUp@value+1
 24206  005FE6  C00E  F012         	movff	?i1_ETH_readLinkStatus+2,i1ETH_CheckLinkUp@value+2
 24207  005FEA  C00F  F013         	movff	?i1_ETH_readLinkStatus+3,i1ETH_CheckLinkUp@value+3
 24208                           
 24209                           ; BSR set to: 14
 24210                           ;j60_driver.c: 203: if(value & 0x0400)
 24211  005FEE  A411               	btfss	i1ETH_CheckLinkUp@value+1,2,c
 24212  005FF0  0C00               	retlw	0
 24213                           
 24214                           ; BSR set to: 14
 24215                           ;j60_driver.c: 204: {
 24216                           ;j60_driver.c: 205: ethData.up = 1;
 24217                           
 24218                           ; BSR set to: 1
 24219                           ;j60_driver.c: 206: return 1;
 24220  005FF2  EFB3  F02F         	goto	PL737	;call to abstracted procedure
 24221  005FF6                     __end_ofi1_ETH_CheckLinkUp:
 24222                           	opt stack 0
 24223                           tosu	equ	0xFFF
 24224                           tosh	equ	0xFFE
 24225                           tosl	equ	0xFFD
 24226                           pclath	equ	0xFFA
 24227                           tblptru	equ	0xFF8
 24228                           tblptrh	equ	0xFF7
 24229                           tblptrl	equ	0xFF6
 24230                           tablat	equ	0xFF5
 24231                           prodh	equ	0xFF4
 24232                           prodl	equ	0xFF3
 24233                           intcon	equ	0xFF2
 24234                           indf0	equ	0xFEF
 24235                           postinc0	equ	0xFEE
 24236                           fsr0h	equ	0xFEA
 24237                           fsr0l	equ	0xFE9
 24238                           wreg	equ	0xFE8
 24239                           indf1	equ	0xFE7
 24240                           postinc1	equ	0xFE6
 24241                           postdec1	equ	0xFE5
 24242                           plusw1	equ	0xFE3
 24243                           fsr1h	equ	0xFE2
 24244                           fsr1l	equ	0xFE1
 24245                           bsr	equ	0xFE0
 24246                           indf2	equ	0xFDF
 24247                           postinc2	equ	0xFDE
 24248                           postdec2	equ	0xFDD
 24249                           plusw2	equ	0xFDB
 24250                           fsr2h	equ	0xFDA
 24251                           fsr2l	equ	0xFD9
 24252                           status	equ	0xFD8
 24253                           
 24254 ;; *************** function i1_ETH_readLinkStatus *****************
 24255 ;; Defined at:
 24256 ;;		line 193 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24257 ;; Parameters:    Size  Location     Type
 24258 ;;		None
 24259 ;; Auto vars:     Size  Location     Type
 24260 ;;		None
 24261 ;; Return value:  Size  Location     Type
 24262 ;;                  4   11[COMRAM] unsigned long 
 24263 ;; Registers used:
 24264 ;;		wreg, status,2, status,0, cstack
 24265 ;; Tracked objects:
 24266 ;;		On entry : F/1
 24267 ;;		On exit  : F/E
 24268 ;;		Unchanged: 0/0
 24269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24273 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24274 ;;Total ram usage:        4 bytes
 24275 ;; Hardware stack levels used:    1
 24276 ;; Hardware stack levels required when called:    4
 24277 ;; This function calls:
 24278 ;;		i1_PHY_Read
 24279 ;; This function is called by:
 24280 ;;		i1_ETH_CheckLinkUp
 24281 ;; This function uses a non-reentrant model
 24282 ;;
 24283                           
 24284                           	psect	text106
 24285  000000                     __ptext106:
 24286                           	opt stack 0
 24287  000000                     __end_ofi1_ETH_readLinkStatus:
 24288                           	opt stack 0
 24289                           tosu	equ	0xFFF
 24290                           tosh	equ	0xFFE
 24291                           tosl	equ	0xFFD
 24292                           pclath	equ	0xFFA
 24293                           tblptru	equ	0xFF8
 24294                           tblptrh	equ	0xFF7
 24295                           tblptrl	equ	0xFF6
 24296                           tablat	equ	0xFF5
 24297                           prodh	equ	0xFF4
 24298                           prodl	equ	0xFF3
 24299                           intcon	equ	0xFF2
 24300                           indf0	equ	0xFEF
 24301                           postinc0	equ	0xFEE
 24302                           fsr0h	equ	0xFEA
 24303                           fsr0l	equ	0xFE9
 24304                           wreg	equ	0xFE8
 24305                           indf1	equ	0xFE7
 24306                           postinc1	equ	0xFE6
 24307                           postdec1	equ	0xFE5
 24308                           plusw1	equ	0xFE3
 24309                           fsr1h	equ	0xFE2
 24310                           fsr1l	equ	0xFE1
 24311                           bsr	equ	0xFE0
 24312                           indf2	equ	0xFDF
 24313                           postinc2	equ	0xFDE
 24314                           postdec2	equ	0xFDD
 24315                           plusw2	equ	0xFDB
 24316                           fsr2h	equ	0xFDA
 24317                           fsr2l	equ	0xFD9
 24318                           status	equ	0xFD8
 24319                           
 24320 ;; *************** function i1_PHY_Read *****************
 24321 ;; Defined at:
 24322 ;;		line 350 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24323 ;; Parameters:    Size  Location     Type
 24324 ;;  reg             1    wreg     enum E7098
 24325 ;; Auto vars:     Size  Location     Type
 24326 ;;  reg             1    6[COMRAM] enum E7098
 24327 ;;  PHY_Read        4    7[COMRAM] long 
 24328 ;; Return value:  Size  Location     Type
 24329 ;;                  4    2[COMRAM] long 
 24330 ;; Registers used:
 24331 ;;		wreg, status,2, status,0, cstack
 24332 ;; Tracked objects:
 24333 ;;		On entry : 0/E
 24334 ;;		On exit  : F/E
 24335 ;;		Unchanged: 0/0
 24336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24338 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24340 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24341 ;;Total ram usage:        9 bytes
 24342 ;; Hardware stack levels used:    1
 24343 ;; Hardware stack levels required when called:    3
 24344 ;; This function calls:
 24345 ;;		i1_PHY_WaitForBusy
 24346 ;; This function is called by:
 24347 ;;		i1_ETH_readLinkStatus
 24348 ;;		i1_ETH_EventHandler
 24349 ;; This function uses a non-reentrant model
 24350 ;;
 24351                           
 24352                           	psect	text107
 24353  004FEA                     __ptext107:
 24354                           	opt stack 0
 24355  004FEA                     i1_PHY_Read:
 24356                           	opt stack 14
 24357                           
 24358                           ; BSR set to: 14
 24359                           ;incstack = 0
 24360                           ;i1PHY_Read@reg stored from wreg
 24361  004FEA  6E07               	movwf	i1PHY_Read@reg,c
 24362  004FEC                     i47L__ptext108:
 24363                           	opt stack 0
 24364  004FEC                     i47Li1_PHY_WaitForBusy:
 24365                           	opt stack 0
 24366  004FEC                     i47Li1l6252:
 24367                           	opt stack 14
 24368                           
 24369                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 24370  004FEC  6A01               	clrf	i1PHY_WaitForBusy@ret,c
 24371                           
 24372                           ;j60_driver.c: 301: uint8_t timeout;
 24373                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 24374  004FEE  6A02               	clrf	i1PHY_WaitForBusy@timeout,c
 24375  004FF0                     i47Li1l504:
 24376                           	opt stack 14
 24377  004FF0  F000               	nop	
 24378  004FF2                     i47Li1l6258:
 24379                           	opt stack 14
 24380  004FF2  2A02               	incf	i1PHY_WaitForBusy@timeout,f,c
 24381  004FF4                     i47Li1l6260:
 24382                           	opt stack 14
 24383  004FF4  0E09               	movlw	9
 24384  004FF6  6402               	cpfsgt	i1PHY_WaitForBusy@timeout,c
 24385  004FF8  D7FB               	goto	i47Li1l504
 24386  004FFA  D001               	goto	i47Li1u893_20
 24387  004FFC                     i47Li1u893_21:
 24388                           	opt stack 0
 24389  004FFC  D7F9               	goto	i47Li1l504
 24390  004FFE                     i47Li1u893_20:
 24391                           	opt stack 0
 24392  004FFE                     i47Li1l6262:
 24393                           	opt stack 14
 24394                           
 24395                           ;j60_driver.c: 304: timeout = 90;
 24396  004FFE  0E5A               	movlw	90
 24397  005000  6E02               	movwf	i1PHY_WaitForBusy@timeout,c
 24398  005002  D001               	goto	i47Li1l506
 24399  005004                     i47Li1l507:
 24400                           	opt stack 14
 24401                           
 24402                           ; BSR set to: 14
 24403  005004  F000               	nop	
 24404  005006                     i47Li1l506:
 24405                           	opt stack 14
 24406  005006  010E               	movlb	14	; () banked
 24407  005008  A18A               	btfss	138,0,b	;volatile
 24408  00500A                     i47Li1u894_21:
 24409                           	opt stack 0
 24410  00500A  D002               	goto	i47Li1l6266
 24411  00500C                     i47Li1u894_20:
 24412                           	opt stack 0
 24413  00500C                     i47Li1l6264:
 24414                           	opt stack 14
 24415                           
 24416                           ; BSR set to: 14
 24417  00500C  2E02               	decfsz	i1PHY_WaitForBusy@timeout,f,c
 24418  00500E  D7FA               	goto	i47Li1l507
 24419  005010                     i47Li1l6266:
 24420                           	opt stack 14
 24421                           
 24422                           ; BSR set to: 14
 24423                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 24424  005010  5002               	movf	i1PHY_WaitForBusy@timeout,w,c
 24425  005012  A4D8               	btfss	status,2,c
 24426  005014                     i47Li1u895_21:
 24427                           	opt stack 0
 24428  005014  D001               	goto	i47Li1l6270
 24429  005016                     i47Li1u895_20:
 24430                           	opt stack 0
 24431  005016                     i47Li1l6268:
 24432                           	opt stack 14
 24433                           
 24434                           ; BSR set to: 14
 24435  005016  6801               	setf	i1PHY_WaitForBusy@ret,c
 24436  005018                     i47Li1l6270:
 24437                           	opt stack 14
 24438                           
 24439                           ; BSR set to: 14
 24440                           ;j60_driver.c: 308: return ret;
 24441  005018  5001               	movf	i1PHY_WaitForBusy@ret,w,c
 24442  00501A                     i47Li1l512:
 24443                           	opt stack 14
 24444  00501A  0900               	iorlw	0
 24445  00501C  E12C               	bnz	i1l518
 24446                           
 24447                           ; BSR set to: 14
 24448                           ;j60_driver.c: 354: {
 24449                           ;j60_driver.c: 355: MIREGADR = reg;
 24450  00501E  C007  FEB4         	movff	i1PHY_Read@reg,3764	;volatile
 24451                           
 24452                           ;j60_driver.c: 356: MICMD = 0;
 24453  005022  6BB2               	clrf	178,b	;volatile
 24454                           
 24455                           ;j60_driver.c: 357: MICMDbits.MIIRD = 1;
 24456  005024  81B2               	bsf	178,0,b	;volatile
 24457                           
 24458                           ;j60_driver.c: 358: __nop(); __nop();
 24459  005026  F000               	nop	
 24460  005028  F000               	nop	
 24461  00502A                     i48L__ptext108:
 24462                           	opt stack 0
 24463  00502A                     i48Li1_PHY_WaitForBusy:
 24464                           	opt stack 0
 24465  00502A                     i48Li1l6252:
 24466                           	opt stack 14
 24467                           
 24468                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 24469  00502A  6A01               	clrf	i1PHY_WaitForBusy@ret,c
 24470                           
 24471                           ;j60_driver.c: 301: uint8_t timeout;
 24472                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 24473  00502C  6A02               	clrf	i1PHY_WaitForBusy@timeout,c
 24474  00502E                     i48Li1l504:
 24475                           	opt stack 14
 24476  00502E  F000               	nop	
 24477  005030                     i48Li1l6258:
 24478                           	opt stack 14
 24479  005030  2A02               	incf	i1PHY_WaitForBusy@timeout,f,c
 24480  005032                     i48Li1l6260:
 24481                           	opt stack 14
 24482  005032  0E09               	movlw	9
 24483  005034  6402               	cpfsgt	i1PHY_WaitForBusy@timeout,c
 24484  005036  D7FB               	goto	i48Li1l504
 24485  005038  D001               	goto	i48Li1u893_20
 24486  00503A                     i48Li1u893_21:
 24487                           	opt stack 0
 24488  00503A  D7F9               	goto	i48Li1l504
 24489  00503C                     i48Li1u893_20:
 24490                           	opt stack 0
 24491  00503C                     i48Li1l6262:
 24492                           	opt stack 14
 24493                           
 24494                           ;j60_driver.c: 304: timeout = 90;
 24495  00503C  0E5A               	movlw	90
 24496  00503E  6E02               	movwf	i1PHY_WaitForBusy@timeout,c
 24497  005040  D001               	goto	i48Li1l506
 24498  005042                     i48Li1l507:
 24499                           	opt stack 14
 24500                           
 24501                           ; BSR set to: 14
 24502  005042  F000               	nop	
 24503  005044                     i48Li1l506:
 24504                           	opt stack 14
 24505  005044  010E               	movlb	14	; () banked
 24506  005046  A18A               	btfss	138,0,b	;volatile
 24507  005048                     i48Li1u894_21:
 24508                           	opt stack 0
 24509  005048  D002               	goto	i48Li1l6266
 24510  00504A                     i48Li1u894_20:
 24511                           	opt stack 0
 24512  00504A                     i48Li1l6264:
 24513                           	opt stack 14
 24514                           
 24515                           ; BSR set to: 14
 24516  00504A  2E02               	decfsz	i1PHY_WaitForBusy@timeout,f,c
 24517  00504C  D7FA               	goto	i48Li1l507
 24518  00504E                     i48Li1l6266:
 24519                           	opt stack 14
 24520                           
 24521                           ; BSR set to: 14
 24522                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 24523  00504E  5002               	movf	i1PHY_WaitForBusy@timeout,w,c
 24524  005050  A4D8               	btfss	status,2,c
 24525  005052                     i48Li1u895_21:
 24526                           	opt stack 0
 24527  005052  D001               	goto	i48Li1l6270
 24528  005054                     i48Li1u895_20:
 24529                           	opt stack 0
 24530  005054                     i48Li1l6268:
 24531                           	opt stack 14
 24532                           
 24533                           ; BSR set to: 14
 24534  005054  6801               	setf	i1PHY_WaitForBusy@ret,c
 24535  005056                     i48Li1l6270:
 24536                           	opt stack 14
 24537                           
 24538                           ; BSR set to: 14
 24539                           ;j60_driver.c: 308: return ret;
 24540  005056  5001               	movf	i1PHY_WaitForBusy@ret,w,c
 24541  005058                     i48Li1l512:
 24542                           	opt stack 14
 24543  005058  0AFF               	xorlw	-1
 24544  00505A  E105               	bnz	i1l519
 24545                           
 24546                           ; BSR set to: 14
 24547                           ;j60_driver.c: 360: {
 24548                           ;j60_driver.c: 361: ret = READ_FAIL;
 24549  00505C  0EFD               	movlw	253
 24550  00505E  6E08               	movwf	i1PHY_Read@ret,c
 24551  005060  0EFF               	movlw	255
 24552  005062  D814               	call	PL745	;call to abstracted procedure
 24553                           
 24554                           ;j60_driver.c: 362: }
 24555  005064  D00A               	goto	i1l521
 24556  005066                     i1l519:
 24557                           
 24558                           ; BSR set to: 14
 24559                           ;j60_driver.c: 363: else
 24560                           ;j60_driver.c: 364: {
 24561                           ;j60_driver.c: 365: MICMDbits.MIIRD = 0;
 24562  005066  91B2               	bcf	178,0,b	;volatile
 24563                           
 24564                           ; BSR set to: 14
 24565                           ;j60_driver.c: 366: ret = MIRD;
 24566  005068  CEB8 F008          	movff	3768,i1PHY_Read@ret	;volatile
 24567  00506C  CEB9 F009          	movff	3769,i1PHY_Read@ret+1	;volatile
 24568  005070  6A0A               	clrf	i1PHY_Read@ret+2,c
 24569  005072  6A0B               	clrf	i1PHY_Read@ret+3,c
 24570  005074  D002               	goto	i1l521
 24571  005076                     i1l518:
 24572                           
 24573                           ; BSR set to: 14
 24574                           ;j60_driver.c: 369: else
 24575                           ;j60_driver.c: 370: {
 24576                           ;j60_driver.c: 371: ret = BUSY_TIMEOUT;
 24577  005076  6808               	setf	i1PHY_Read@ret,c
 24578  005078  D809               	call	PL745	;call to abstracted procedure
 24579  00507A                     i1l521:
 24580                           
 24581                           ; BSR set to: 14
 24582                           ;j60_driver.c: 372: }
 24583                           ;j60_driver.c: 373: return ret;
 24584  00507A  C008  F003         	movff	i1PHY_Read@ret,?i1_PHY_Read
 24585  00507E  C009  F004         	movff	i1PHY_Read@ret+1,?i1_PHY_Read+1
 24586  005082  C00A  F005         	movff	i1PHY_Read@ret+2,?i1_PHY_Read+2
 24587  005086  C00B  F006         	movff	i1PHY_Read@ret+3,?i1_PHY_Read+3
 24588                           
 24589                           ; BSR set to: 14
 24590  00508A  0012               	return		;funcret
 24591  00508C                     __end_ofi1_PHY_Read:
 24592                           	opt stack 0
 24593  00508C                     PL745:
 24594                           	opt stack 14
 24595  00508C  6809               	setf	i1PHY_Read@ret+1,c
 24596  00508E  680A               	setf	i1PHY_Read@ret+2,c
 24597  005090  680B               	setf	i1PHY_Read@ret+3,c
 24598  005092  0012               	return	
 24599  005094                     __end_ofPL745:
 24600                           	opt stack 0
 24601                           tosu	equ	0xFFF
 24602                           tosh	equ	0xFFE
 24603                           tosl	equ	0xFFD
 24604                           pclath	equ	0xFFA
 24605                           tblptru	equ	0xFF8
 24606                           tblptrh	equ	0xFF7
 24607                           tblptrl	equ	0xFF6
 24608                           tablat	equ	0xFF5
 24609                           prodh	equ	0xFF4
 24610                           prodl	equ	0xFF3
 24611                           intcon	equ	0xFF2
 24612                           indf0	equ	0xFEF
 24613                           postinc0	equ	0xFEE
 24614                           fsr0h	equ	0xFEA
 24615                           fsr0l	equ	0xFE9
 24616                           wreg	equ	0xFE8
 24617                           indf1	equ	0xFE7
 24618                           postinc1	equ	0xFE6
 24619                           postdec1	equ	0xFE5
 24620                           plusw1	equ	0xFE3
 24621                           fsr1h	equ	0xFE2
 24622                           fsr1l	equ	0xFE1
 24623                           bsr	equ	0xFE0
 24624                           indf2	equ	0xFDF
 24625                           postinc2	equ	0xFDE
 24626                           postdec2	equ	0xFDD
 24627                           plusw2	equ	0xFDB
 24628                           fsr2h	equ	0xFDA
 24629                           fsr2l	equ	0xFD9
 24630                           status	equ	0xFD8
 24631                           
 24632 ;; *************** function i1_PHY_WaitForBusy *****************
 24633 ;; Defined at:
 24634 ;;		line 298 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24635 ;; Parameters:    Size  Location     Type
 24636 ;;		None
 24637 ;; Auto vars:     Size  Location     Type
 24638 ;;  PHY_WaitForB    1    1[COMRAM] unsigned char 
 24639 ;;  PHY_WaitForB    1    0[COMRAM] enum E7107
 24640 ;; Return value:  Size  Location     Type
 24641 ;;                  1    wreg      enum E7107
 24642 ;; Registers used:
 24643 ;;		wreg, status,2, status,0
 24644 ;; Tracked objects:
 24645 ;;		On entry : 0/E
 24646 ;;		On exit  : F/E
 24647 ;;		Unchanged: 0/0
 24648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24652 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24653 ;;Total ram usage:        2 bytes
 24654 ;; Hardware stack levels used:    1
 24655 ;; Hardware stack levels required when called:    2
 24656 ;; This function calls:
 24657 ;;		Nothing
 24658 ;; This function is called by:
 24659 ;;		i1_PHY_Read
 24660 ;; This function uses a non-reentrant model
 24661 ;;
 24662                           
 24663                           	psect	text108
 24664  000000                     __ptext108:
 24665                           	opt stack 0
 24666  000000                     __end_ofi1_PHY_WaitForBusy:
 24667                           	opt stack 0
 24668                           tosu	equ	0xFFF
 24669                           tosh	equ	0xFFE
 24670                           tosl	equ	0xFFD
 24671                           pclath	equ	0xFFA
 24672                           tblptru	equ	0xFF8
 24673                           tblptrh	equ	0xFF7
 24674                           tblptrl	equ	0xFF6
 24675                           tablat	equ	0xFF5
 24676                           prodh	equ	0xFF4
 24677                           prodl	equ	0xFF3
 24678                           intcon	equ	0xFF2
 24679                           indf0	equ	0xFEF
 24680                           postinc0	equ	0xFEE
 24681                           fsr0h	equ	0xFEA
 24682                           fsr0l	equ	0xFE9
 24683                           wreg	equ	0xFE8
 24684                           indf1	equ	0xFE7
 24685                           postinc1	equ	0xFE6
 24686                           postdec1	equ	0xFE5
 24687                           plusw1	equ	0xFE3
 24688                           fsr1h	equ	0xFE2
 24689                           fsr1l	equ	0xFE1
 24690                           bsr	equ	0xFE0
 24691                           indf2	equ	0xFDF
 24692                           postinc2	equ	0xFDE
 24693                           postdec2	equ	0xFDD
 24694                           plusw2	equ	0xFDB
 24695                           fsr2h	equ	0xFDA
 24696                           fsr2l	equ	0xFD9
 24697                           status	equ	0xFD8
 24698                           
 24699 ;; *************** function _high_isr *****************
 24700 ;; Defined at:
 24701 ;;		line 57 in file "main.c"
 24702 ;; Parameters:    Size  Location     Type
 24703 ;;		None
 24704 ;; Auto vars:     Size  Location     Type
 24705 ;;		None
 24706 ;; Return value:  Size  Location     Type
 24707 ;;		None               void
 24708 ;; Registers used:
 24709 ;;		wreg, status,2, status,0, cstack
 24710 ;; Tracked objects:
 24711 ;;		On entry : 0/0
 24712 ;;		On exit  : 0/0
 24713 ;;		Unchanged: 0/0
 24714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24719 ;;Total ram usage:        0 bytes
 24720 ;; Hardware stack levels used:    1
 24721 ;; Hardware stack levels required when called:    1
 24722 ;; This function calls:
 24723 ;;		_rtcc_handler
 24724 ;; This function is called by:
 24725 ;;		Interrupt level 2
 24726 ;; This function uses a non-reentrant model
 24727 ;;
 24728                           
 24729                           	psect	intcode
 24730  000008                     __pintcode:
 24731                           	opt stack 0
 24732  000008                     _high_isr:
 24733                           	opt stack 12
 24734                           
 24735                           ; BSR set to: 14
 24736                           ;incstack = 0
 24737  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24738  00000A  EFDD  F031         	goto	int_func
 24739                           tosu	equ	0xFFF
 24740                           tosh	equ	0xFFE
 24741                           tosl	equ	0xFFD
 24742                           pclath	equ	0xFFA
 24743                           tblptru	equ	0xFF8
 24744                           tblptrh	equ	0xFF7
 24745                           tblptrl	equ	0xFF6
 24746                           tablat	equ	0xFF5
 24747                           prodh	equ	0xFF4
 24748                           prodl	equ	0xFF3
 24749                           intcon	equ	0xFF2
 24750                           indf0	equ	0xFEF
 24751                           postinc0	equ	0xFEE
 24752                           fsr0h	equ	0xFEA
 24753                           fsr0l	equ	0xFE9
 24754                           wreg	equ	0xFE8
 24755                           indf1	equ	0xFE7
 24756                           postinc1	equ	0xFE6
 24757                           postdec1	equ	0xFE5
 24758                           plusw1	equ	0xFE3
 24759                           fsr1h	equ	0xFE2
 24760                           fsr1l	equ	0xFE1
 24761                           bsr	equ	0xFE0
 24762                           indf2	equ	0xFDF
 24763                           postinc2	equ	0xFDE
 24764                           postdec2	equ	0xFDD
 24765                           plusw2	equ	0xFDB
 24766                           fsr2h	equ	0xFDA
 24767                           fsr2l	equ	0xFD9
 24768                           status	equ	0xFD8
 24769                           
 24770                           	psect	intcode_body
 24771  0063BA                     __pintcode_body:
 24772                           	opt stack 12
 24773  0063BA                     int_func:
 24774                           	opt stack 12
 24775                           
 24776                           ;main.c: 59: rtcc_handler();
 24777  0063BA  EC65  F030         	call	_rtcc_handler	;wreg free
 24778  0063BE  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24779  0063C0  0011               	retfie		f
 24780  0063C2                     __end_of_high_isr:
 24781                           	opt stack 0
 24782                           tosu	equ	0xFFF
 24783                           tosh	equ	0xFFE
 24784                           tosl	equ	0xFFD
 24785                           pclath	equ	0xFFA
 24786                           tblptru	equ	0xFF8
 24787                           tblptrh	equ	0xFF7
 24788                           tblptrl	equ	0xFF6
 24789                           tablat	equ	0xFF5
 24790                           prodh	equ	0xFF4
 24791                           prodl	equ	0xFF3
 24792                           intcon	equ	0xFF2
 24793                           indf0	equ	0xFEF
 24794                           postinc0	equ	0xFEE
 24795                           fsr0h	equ	0xFEA
 24796                           fsr0l	equ	0xFE9
 24797                           wreg	equ	0xFE8
 24798                           indf1	equ	0xFE7
 24799                           postinc1	equ	0xFE6
 24800                           postdec1	equ	0xFE5
 24801                           plusw1	equ	0xFE3
 24802                           fsr1h	equ	0xFE2
 24803                           fsr1l	equ	0xFE1
 24804                           bsr	equ	0xFE0
 24805                           indf2	equ	0xFDF
 24806                           postinc2	equ	0xFDE
 24807                           postdec2	equ	0xFDD
 24808                           plusw2	equ	0xFDB
 24809                           fsr2h	equ	0xFDA
 24810                           fsr2l	equ	0xFD9
 24811                           status	equ	0xFD8
 24812                           
 24813 ;; *************** function _rtcc_handler *****************
 24814 ;; Defined at:
 24815 ;;		line 122 in file "../board_support_package/picdem2_net/rtcc.c"
 24816 ;; Parameters:    Size  Location     Type
 24817 ;;		None
 24818 ;; Auto vars:     Size  Location     Type
 24819 ;;		None
 24820 ;; Return value:  Size  Location     Type
 24821 ;;		None               void
 24822 ;; Registers used:
 24823 ;;		wreg, status,2, status,0
 24824 ;; Tracked objects:
 24825 ;;		On entry : 0/0
 24826 ;;		On exit  : 0/0
 24827 ;;		Unchanged: 0/0
 24828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24833 ;;Total ram usage:        0 bytes
 24834 ;; Hardware stack levels used:    1
 24835 ;; This function calls:
 24836 ;;		Nothing
 24837 ;; This function is called by:
 24838 ;;		_high_isr
 24839 ;; This function uses a non-reentrant model
 24840 ;;
 24841                           
 24842                           	psect	text110
 24843  0060CA                     __ptext110:
 24844                           	opt stack 0
 24845  0060CA                     _rtcc_handler:
 24846                           	opt stack 12
 24847                           
 24848                           ;rtcc.c: 124: if(TMR1IE && TMR1IF)
 24849                           
 24850                           ;incstack = 0
 24851  0060CA  B09D               	btfsc	3997,0,c	;volatile
 24852  0060CC  A09E               	btfss	3998,0,c	;volatile
 24853  0060CE  0012               	return	
 24854                           
 24855                           ;rtcc.c: 125: {
 24856                           ;rtcc.c: 126: TMR1IF = 0;
 24857  0060D0  909E               	bcf	3998,0,c	;volatile
 24858                           
 24859                           ;rtcc.c: 127: TMR1ON = 0;
 24860  0060D2  90CD               	bcf	4045,0,c	;volatile
 24861                           
 24862                           ;rtcc.c: 128: TMR1 = 32768UL;
 24863  0060D4  0E80               	movlw	128
 24864  0060D6  6ECF               	movwf	4047,c	;volatile
 24865  0060D8  6ACE               	clrf	4046,c	;volatile
 24866                           
 24867                           ;rtcc.c: 129: TMR1ON = 1;
 24868  0060DA  80CD               	bsf	4045,0,c	;volatile
 24869                           
 24870                           ;rtcc.c: 130: deviceTime++;
 24871  0060DC  0102               	movlb	2	; () banked
 24872  0060DE  2BD0               	incf	_deviceTime& (0+255),f,b	;volatile
 24873  0060E0  0E00               	movlw	0
 24874  0060E2  23D1               	addwfc	(_deviceTime+1)& (0+255),f,b	;volatile
 24875  0060E4  23D2               	addwfc	(_deviceTime+2)& (0+255),f,b	;volatile
 24876  0060E6  23D3               	addwfc	(_deviceTime+3)& (0+255),f,b	;volatile
 24877                           
 24878                           ; BSR set to: 2
 24879                           ;rtcc.c: 131: localTime++;
 24880  0060E8  2BD4               	incf	_localTime& (0+255),f,b	;volatile
 24881  0060EA  23D5               	addwfc	(_localTime+1)& (0+255),f,b	;volatile
 24882  0060EC  23D6               	addwfc	(_localTime+2)& (0+255),f,b	;volatile
 24883  0060EE  23D7               	addwfc	(_localTime+3)& (0+255),f,b	;volatile
 24884  0060F0  0C00               	retlw	0	;funcret
 24885  0060F2                     __end_of_rtcc_handler:
 24886                           	opt stack 0
 24887                           tosu	equ	0xFFF
 24888                           tosh	equ	0xFFE
 24889                           tosl	equ	0xFFD
 24890                           pclath	equ	0xFFA
 24891                           tblptru	equ	0xFF8
 24892                           tblptrh	equ	0xFF7
 24893                           tblptrl	equ	0xFF6
 24894                           tablat	equ	0xFF5
 24895                           prodh	equ	0xFF4
 24896                           prodl	equ	0xFF3
 24897                           intcon	equ	0xFF2
 24898                           indf0	equ	0xFEF
 24899                           postinc0	equ	0xFEE
 24900                           fsr0h	equ	0xFEA
 24901                           fsr0l	equ	0xFE9
 24902                           wreg	equ	0xFE8
 24903                           indf1	equ	0xFE7
 24904                           postinc1	equ	0xFE6
 24905                           postdec1	equ	0xFE5
 24906                           plusw1	equ	0xFE3
 24907                           fsr1h	equ	0xFE2
 24908                           fsr1l	equ	0xFE1
 24909                           bsr	equ	0xFE0
 24910                           indf2	equ	0xFDF
 24911                           postinc2	equ	0xFDE
 24912                           postdec2	equ	0xFDD
 24913                           plusw2	equ	0xFDB
 24914                           fsr2h	equ	0xFDA
 24915                           fsr2l	equ	0xFD9
 24916                           status	equ	0xFD8
 24917                           tosu	equ	0xFFF
 24918                           tosh	equ	0xFFE
 24919                           tosl	equ	0xFFD
 24920                           pclath	equ	0xFFA
 24921                           tblptru	equ	0xFF8
 24922                           tblptrh	equ	0xFF7
 24923                           tblptrl	equ	0xFF6
 24924                           tablat	equ	0xFF5
 24925                           prodh	equ	0xFF4
 24926                           prodl	equ	0xFF3
 24927                           intcon	equ	0xFF2
 24928                           indf0	equ	0xFEF
 24929                           postinc0	equ	0xFEE
 24930                           fsr0h	equ	0xFEA
 24931                           fsr0l	equ	0xFE9
 24932                           wreg	equ	0xFE8
 24933                           indf1	equ	0xFE7
 24934                           postinc1	equ	0xFE6
 24935                           postdec1	equ	0xFE5
 24936                           plusw1	equ	0xFE3
 24937                           fsr1h	equ	0xFE2
 24938                           fsr1l	equ	0xFE1
 24939                           bsr	equ	0xFE0
 24940                           indf2	equ	0xFDF
 24941                           postinc2	equ	0xFDE
 24942                           postdec2	equ	0xFDD
 24943                           plusw2	equ	0xFDB
 24944                           fsr2h	equ	0xFDA
 24945                           fsr2l	equ	0xFD9
 24946                           status	equ	0xFD8
 24947                           
 24948                           	psect	text111
 24949  000000                     __ptext111:
 24950                           	opt stack 0
 24951                           tosu	equ	0xFFF
 24952                           tosh	equ	0xFFE
 24953                           tosl	equ	0xFFD
 24954                           pclath	equ	0xFFA
 24955                           tblptru	equ	0xFF8
 24956                           tblptrh	equ	0xFF7
 24957                           tblptrl	equ	0xFF6
 24958                           tablat	equ	0xFF5
 24959                           prodh	equ	0xFF4
 24960                           prodl	equ	0xFF3
 24961                           intcon	equ	0xFF2
 24962                           indf0	equ	0xFEF
 24963                           postinc0	equ	0xFEE
 24964                           fsr0h	equ	0xFEA
 24965                           fsr0l	equ	0xFE9
 24966                           wreg	equ	0xFE8
 24967                           indf1	equ	0xFE7
 24968                           postinc1	equ	0xFE6
 24969                           postdec1	equ	0xFE5
 24970                           plusw1	equ	0xFE3
 24971                           fsr1h	equ	0xFE2
 24972                           fsr1l	equ	0xFE1
 24973                           bsr	equ	0xFE0
 24974                           indf2	equ	0xFDF
 24975                           postinc2	equ	0xFDE
 24976                           postdec2	equ	0xFDD
 24977                           plusw2	equ	0xFDB
 24978                           fsr2h	equ	0xFDA
 24979                           fsr2l	equ	0xFD9
 24980                           status	equ	0xFD8
 24981                           
 24982                           	psect	rparam
 24983  0000                     tosu	equ	0xFFF
 24984                           tosh	equ	0xFFE
 24985                           tosl	equ	0xFFD
 24986                           pclath	equ	0xFFA
 24987                           tblptru	equ	0xFF8
 24988                           tblptrh	equ	0xFF7
 24989                           tblptrl	equ	0xFF6
 24990                           tablat	equ	0xFF5
 24991                           prodh	equ	0xFF4
 24992                           prodl	equ	0xFF3
 24993                           intcon	equ	0xFF2
 24994                           indf0	equ	0xFEF
 24995                           postinc0	equ	0xFEE
 24996                           fsr0h	equ	0xFEA
 24997                           fsr0l	equ	0xFE9
 24998                           wreg	equ	0xFE8
 24999                           indf1	equ	0xFE7
 25000                           postinc1	equ	0xFE6
 25001                           postdec1	equ	0xFE5
 25002                           plusw1	equ	0xFE3
 25003                           fsr1h	equ	0xFE2
 25004                           fsr1l	equ	0xFE1
 25005                           bsr	equ	0xFE0
 25006                           indf2	equ	0xFDF
 25007                           postinc2	equ	0xFDE
 25008                           postdec2	equ	0xFDD
 25009                           plusw2	equ	0xFDB
 25010                           fsr2h	equ	0xFDA
 25011                           fsr2l	equ	0xFD9
 25012                           status	equ	0xFD8
 25013                           
 25014                           	psect	temp
 25015  000049                     btemp:
 25016                           	opt stack 0
 25017  000049                     	ds	1
 25018  0000                     int$flags	set	btemp
 25019                           tosu	equ	0xFFF
 25020                           tosh	equ	0xFFE
 25021                           tosl	equ	0xFFD
 25022                           pclath	equ	0xFFA
 25023                           tblptru	equ	0xFF8
 25024                           tblptrh	equ	0xFF7
 25025                           tblptrl	equ	0xFF6
 25026                           tablat	equ	0xFF5
 25027                           prodh	equ	0xFF4
 25028                           prodl	equ	0xFF3
 25029                           intcon	equ	0xFF2
 25030                           indf0	equ	0xFEF
 25031                           postinc0	equ	0xFEE
 25032                           fsr0h	equ	0xFEA
 25033                           fsr0l	equ	0xFE9
 25034                           wreg	equ	0xFE8
 25035                           indf1	equ	0xFE7
 25036                           postinc1	equ	0xFE6
 25037                           postdec1	equ	0xFE5
 25038                           plusw1	equ	0xFE3
 25039                           fsr1h	equ	0xFE2
 25040                           fsr1l	equ	0xFE1
 25041                           bsr	equ	0xFE0
 25042                           indf2	equ	0xFDF
 25043                           postinc2	equ	0xFDE
 25044                           postdec2	equ	0xFDD
 25045                           plusw2	equ	0xFDB
 25046                           fsr2h	equ	0xFDA
 25047                           fsr2l	equ	0xFD9
 25048                           status	equ	0xFD8
 25049                           tosu	equ	0xFFF
 25050                           tosh	equ	0xFFE
 25051                           tosl	equ	0xFFD
 25052                           pclath	equ	0xFFA
 25053                           tblptru	equ	0xFF8
 25054                           tblptrh	equ	0xFF7
 25055                           tblptrl	equ	0xFF6
 25056                           tablat	equ	0xFF5
 25057                           prodh	equ	0xFF4
 25058                           prodl	equ	0xFF3
 25059                           intcon	equ	0xFF2
 25060                           indf0	equ	0xFEF
 25061                           postinc0	equ	0xFEE
 25062                           fsr0h	equ	0xFEA
 25063                           fsr0l	equ	0xFE9
 25064                           wreg	equ	0xFE8
 25065                           indf1	equ	0xFE7
 25066                           postinc1	equ	0xFE6
 25067                           postdec1	equ	0xFE5
 25068                           plusw1	equ	0xFE3
 25069                           fsr1h	equ	0xFE2
 25070                           fsr1l	equ	0xFE1
 25071                           bsr	equ	0xFE0
 25072                           indf2	equ	0xFDF
 25073                           postinc2	equ	0xFDE
 25074                           postdec2	equ	0xFDD
 25075                           plusw2	equ	0xFDB
 25076                           fsr2h	equ	0xFDA
 25077                           fsr2l	equ	0xFD9
 25078                           status	equ	0xFD8


Data Sizes:
    Strings     127
    Constant    56
    Data        1
    BSS         335
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      72
    BANK0           160    160     160
    BANK1           256    189     236
    BANK2           256     45     216
    BANK3           256      0     104
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0
    BANK15           96      0       0

Pointer List with Targets:

    TCB_Check@ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    arpMap.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    arpMap.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    arpMap.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    arpMap.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    arpMap.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    arpMap.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    Network_Read@debug_str.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    Network_Read@debug_str.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    Network_Read@debug_str.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    Network_Read@debug_str.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    Network_Read@debug_str.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    Network_Read@debug_str.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    main@str.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    main@str.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    main@str.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    main@str.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    main@str.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    main@str.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_printf.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    ?_printf.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    ?_printf.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_printf.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_printf.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_printf.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_sprintf.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    ?_sprintf.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    ?_sprintf.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_sprintf.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_sprintf.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_sprintf.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7445.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7445.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7445.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7445.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_7(CODE[12]), STR_2(CODE[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_4(CODE[10]), STR_3(CODE[28]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 

    memcmp@s2	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethMAC(BANK0[6]), 

    memcmp@s1	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_7(CODE[12]), STR_4(CODE[10]), STR_3(CODE[28]), STR_2(CODE[8]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_8(CODE[7]), main@str(BANK2[32]), 
		 -> STR_6(CODE[13]), STR_5(CODE[17]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), 
		 -> NULL(NULL[0]), 

    S4140__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    S4140__prbuf$ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 6
		 -> sprintf@pb(BANK0[5]), printf@pb(BANK0[5]), 

    sp__memset	PTR void  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 

    F7445.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7445.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7445.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    UDP_Receive@hptr.callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    UDP_Receive@hptr	PTR const struct . size(1) Largest target is 5
		 -> UDP_CallBackTable(CODE[5]), 

    TCP_Update@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), 
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_GetReceivedData@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_InsertRxBuffer@data	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), 

    TCP_InsertRxBuffer@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_SendDone@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_Send@data	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), 

    TCP_Send@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_Close@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_Bind@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_SocketPoll@socket_ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_SocketInit@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_Recv@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), 
		 -> NULL(NULL[0]), 

    currentTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    currentTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    currentTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), 
		 -> NULL(NULL[0]), 

    TCP_Snd@data	PTR unsigned char  size(2) Largest target is 20
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), 
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), 
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), 
		 -> NULL(NULL[0]), 

    TCB_Check@ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCB_Reset@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), 
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    S2666$prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    S2666$nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    S2666$txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    S2666$txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    S2666$rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    S2666$rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    tcbList	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    SYSLOG_Write@message	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), STR_6(CODE[13]), STR_5(CODE[17]), STR_1(CODE[15]), 

    IPv4_Start@macAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), broadcastMAC(CODE[6]), arpMap(BANK3[104]), NULL(NULL[0]), 

    IPV4_PseudoHeaderChecksum@v	PTR unsigned int  size(1) Largest target is 12
		 -> IPV4_PseudoHeaderChecksum@tmp(COMRAM[12]), 

    ICMP_EchoReply@icmpHdr	PTR struct . size(1) Largest target is 8
		 -> ICMP_Receive@icmpHdr(BANK0[8]), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    S1757$callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    UDP_CallBackTable.callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), arpMap(BANK3[104]), NULL(NULL[0]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ETH_GetMAC@mac	PTR unsigned char  size(1) Largest target is 28
		 -> DHCP_Handler@ethMAC(BANK0[6]), DHCP_Request@ethMAC(BANK0[6]), ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(BANK0[28]), 

    ETH_Insert@data	PTR unsigned char  size(1) Largest target is 2
		 -> UDP_Send@cksm(BANK0[2]), UDP_Send@udpLength(BANK0[2]), TCP_Snd@cksm(BANK0[2]), IPV4_Send@cksm(BANK0[2]), 
		 -> IPV4_Send@totalLength(BANK0[2]), ICMP_EchoReply@cksm(BANK0[2]), 

    ETH_WriteStart@dest_mac	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), broadcastMAC(CODE[6]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 
		 -> arpMap(BANK3[104]), NULL(NULL[0]), 

    ETH_WriteBlock@buffer	PTR void  size(2) Largest target is 28
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), TCP_Snd@txHeader(BANK0[20]), Network_Read@debug_str(BANK1[80]), 
		 -> dhcpName(CODE[21]), DHCP_Request@ethMAC(BANK0[6]), ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), 
		 -> STR_1(CODE[15]), NULL(NULL[0]), 

    ETH_WriteBlock@p	PTR unsigned char  size(2) Largest target is 28
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), TCP_Snd@txHeader(BANK0[20]), Network_Read@debug_str(BANK1[80]), 
		 -> dhcpName(CODE[21]), DHCP_Request@ethMAC(BANK0[6]), ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), 
		 -> STR_1(CODE[15]), NULL(NULL[0]), 

    ETH_ReadBlock@buffer	PTR void  size(2) Largest target is 28
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), udpHeader(BANK2[8]), tcpHeader(BANK1[20]), 
		 -> Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), ipv4Header(BANK2[20]), ICMP_Receive@icmpHdr(BANK0[8]), 
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(BANK0[28]), STR_1(CODE[15]), NULL(NULL[0]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 28
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), udpHeader(BANK2[8]), tcpHeader(BANK1[20]), 
		 -> Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), ipv4Header(BANK2[20]), ICMP_Receive@icmpHdr(BANK0[8]), 
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(BANK0[28]), STR_1(CODE[15]), NULL(NULL[0]), 

    sp__MAC_getAddress	PTR const struct . size(1) Largest target is 6
		 -> macAddress(CODE[6]), 

    ETH_Init@mac	PTR const struct . size(1) Largest target is 6
		 -> macAddress(CODE[6]), 

    time@t	PTR long  size(2) Largest target is 4
		 -> main@t(BANK2[4]), Network_Manage@now(BANK1[4]), arpTimer(BANK1[4]), NULL(NULL[0]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 


Critical Paths under _main in COMRAM

    _main->_SYSLOG_Write
    _lcd_puts->_lcd_putch
    _lcd_putch->_lcd_write_data
    _lcd_goto1->_lcd_write_ctrl
    _initHW->_lcd_init
    _lcd_init->_lcd_write_ctrl
    _Network_WaitForLink->_ETH_CheckLinkUp
    _sprintf->__doprnt
    _IPV4_Packet->_ETH_RxComputeChecksum
    _TCP_ParseTCPOptions->_ETH_Read16
    _ICMP_EchoReply->_IPV4_Send
    _ETH_Copy->_SYSLOG_Write
    _printf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _ETH_RxComputeChecksum->_ETH_ComputeChecksum
    _ARPV4_Packet->_ETH_ReadBlock
    _ETH_EventHandler->_ETH_CheckLinkUp
    _UDP_Start->_IPv4_Start
    _UDP_Send->_IPV4_Send
    _DHCP_WriteZeros->_ETH_Write8
    _Network_Init->_ETH_Init
    _ETH_Init->_ETH_CheckLinkUp
    _PHY_Write->_PHY_WaitForBusy
    _ETH_CheckLinkUp->_ETH_readLinkStatus
    _ETH_readLinkStatus->_PHY_Read
    _PHY_Read->_PHY_WaitForBusy
    _TCP_SocketInit->_TCB_Check
    _TCP_SendDone->_TCB_Check
    _TCP_SocketPoll->_TCB_Check
    _TCP_Snd->_IPV4_Send
    _IPv4_Start->_ARPV4_Lookup
    _ARPV4_Request->_ETH_WriteBlock
    _ARPV4_Request->_ETH_WriteStart
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_TxComputeChecksum->_ETH_ComputeChecksum
    _TCP_InsertRxBuffer->_TCB_Check
    _TCP_GetRxLength->_TCB_Check
    _TCP_GetReceivedData->_TCB_Check
    _TCP_Bind->_TCB_Check

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    i1_ETH_EventHandler->i1_ETH_CheckLinkUp
    i1_ETH_CheckLinkUp->i1_ETH_readLinkStatus
    i1_ETH_readLinkStatus->i1_PHY_Read
    i1_PHY_Read->i1_PHY_WaitForBusy

Critical Paths under _main in BANK0

    _main->_Network_Manage
    _SYSLOG_Init->_printf
    _UDP_Receive->_DHCP_Handler
    _DHCP_Handler->_DHCP_Request
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _ETH_Copy->_SYSLOG_Write
    _SYSLOG_Write->_printf
    _DHCP_Manage->_DHCP_Request
    _DHCP_Request->_UDP_Start
    _UDP_Start->_IPv4_Start
    _UDP_Send->_IPV4_Send
    _DEMO_TCP_EchoServer->_TCP_Listen
    _TCP_Send->_TCP_Snd
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd
    _TCP_Snd->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _IPV4_Send->_ETH_TxComputeChecksum

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Network_Manage
    _Network_Manage->_Network_Read
    _TCP_Update->_TCP_FiniteStateMachine
    _Network_Read->_IPV4_Packet
    _IPV4_Packet->_TCP_Recv
    _TCP_Recv->_TCP_FiniteStateMachine
    _DEMO_TCP_EchoServer->_TCP_Listen
    _TCP_Listen->_TCP_FiniteStateMachine

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0  295792
                                              0 BANK2     45    45      0
                _DEMO_TCP_EchoServer
                       _IPV4_GetMyIP
                       _Network_Init
                     _Network_Manage
                _Network_WaitForLink
                        _SYSLOG_Init
                       _SYSLOG_Write
                             _initHW
                          _lcd_goto1
                           _lcd_puts
                             _memset
                            _sprintf
                               _time
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     362
                                             22 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     234
                                             24 COMRAM     2     0      2
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _lcd_putch                                            1     1      0     124
                                             23 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_data                                       1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto1                                            1     1      0      62
                                             23 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (1) _initHW                                               0     0      0     133
                     _ADC_Initialize
                           _LED_Init
                           _lcd_init
                          _rtcc_init
                           _spi_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             5     5      0      31
                                             23 COMRAM     1     1      0
                           _lcd_busy
                      _lcd_init_pins
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (2) _lcd_write_ctrl                                       1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_init_pins                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_Init                                             1     1      0     102
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Init                                          4     4      0    4082
                                             11 BANK0      4     4      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (1) _Network_WaitForLink                                  0     0      0     278
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (1) _Network_Manage                                       5     5      0  197500
                                            159 BANK0      1     1      0
                                            185 BANK1      4     4      0
                       _ARPV4_Update
                        _DHCP_Manage
                   _ETH_EventHandler
                       _Network_Read
                         _TCP_Update
                               _time
 ---------------------------------------------------------------------------------
 (2) _TCP_Update                                          12    12      0   48496
                                             17 BANK1     12    12      0
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (2) _Network_Read                                        98    98      0  124731
                                             87 BANK1     98    98      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17     6     11    3711
                                              0 BANK0     17     6     11
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) _IPV4_Packet                                         73    73      0  112020
                                             54 BANK1     33    33      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
          _IPV4_PseudoHeaderChecksum
                           _TCP_Recv
                        _UDP_Receive
 ---------------------------------------------------------------------------------
 (4) _UDP_Receive                                         11     9      2   29646
                                            115 BANK0     11     9      2
                       _DHCP_Handler *
                      _ETH_ReadBlock
 ---------------------------------------------------------------------------------
 (5) _DHCP_Handler                                        36    34      2   27651
                                             79 BANK0     36    34      2
                       _DHCP_Request
                           _ETH_Dump
                         _ETH_GetMAC
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                      _ETH_ReadBlock
                             _memcmp
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               6     3      3     377
                                             22 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _ETH_Read32                                           8     4      4     148
                                             22 COMRAM     8     4      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (4) _TCP_Recv                                            37    31      6   51875
                                             17 BANK1     37    31      6
                      _ETH_ReadBlock
             _TCP_FiniteStateMachine
                _TCP_ParseTCPOptions
 ---------------------------------------------------------------------------------
 (5) _TCP_ParseTCPOptions                                  6     6      0    1728
                                             26 COMRAM     6     6      0
                           _ETH_Dump
                         _ETH_Read16
                          _ETH_Read8
 ---------------------------------------------------------------------------------
 (6) _ETH_Read8                                            1     1      0      37
                                             22 COMRAM     1     1      0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Read16                                           4     2      2      74
                                             22 COMRAM     4     2      2
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Dump                                             2     0      2    1117
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _IPV4_PseudoHeaderChecksum                           24    22      2     578
                                             22 COMRAM    24    22      2
 ---------------------------------------------------------------------------------
 (4) _ICMP_Receive                                        15    13      2   24920
                                             79 BANK0     15    13      2
                      _ETH_ReadBlock
                       _ETH_SaveRDPT
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (5) _ICMP_EchoReply                                      16    14      2   22972
                                             63 BANK0     16    14      2
                           _ETH_Copy
                         _ETH_Insert
                       _ETH_SaveRDPT
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _ETH_SaveRDPT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ETH_Copy                                             6     4      2    5266
                                             13 BANK0      6     4      2
                       _SYSLOG_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     412
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Write                                         4     2      2    4473
                                             48 COMRAM     2     0      2
                                             11 BANK0      2     2      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     7      4    3437
                                              0 BANK0     11     7      4
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             20    18      2    3151
                                             34 COMRAM    14    12      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      62
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                             29 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ETH_RxComputeChecksum                               14    10      4    1633
                                             36 COMRAM    14    10      4
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (3) _ETH_NextPacketUpdate                                 0     0      0       0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (3) _ETH_Flush                                            4     4      0       0
                                             22 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Packet                                        70    70      0    5890
                                              0 BANK0     70    70      0
                         _ETH_GetMAC
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (2) _ETH_EventHandler                                     0     0      0     522
                    _ETH_CheckLinkUp
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (2) _DHCP_Manage                                          0     0      0   22905
                       _DHCP_Request
 ---------------------------------------------------------------------------------
 (6) _DHCP_Request                                        10    10      0   22905
                                             71 BANK0      8     8      0
                    _DHCP_WriteZeros
                         _ETH_GetMAC
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteBlock
                           _UDP_Send
                          _UDP_Start
 ---------------------------------------------------------------------------------
 (7) _UDP_Start                                            9     1      8    9972
                                             46 COMRAM     1     1      0
                                             63 BANK0      8     0      8
                 _ETH_ResetByteCount
                        _ETH_Write16
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (7) _UDP_Send                                             9     9      0    7897
                                             20 BANK0      9     9      0
                   _ETH_GetByteCount
                         _ETH_Insert
              _ETH_TxComputeChecksum
                          _IPV4_Send
 ---------------------------------------------------------------------------------
 (8) _ETH_GetByteCount                                     4     2      2      34
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _DHCP_WriteZeros                                      2     0      2     152
                                             23 COMRAM     2     0      2
                         _ETH_Write8
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Update                                         3     3      0     105
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Network_Init                                         0     0      0    1837
                         _ARPV4_Init
                           _ETH_Init
                          _IPV4_Init
                           _TCP_Init
                               _time
 ---------------------------------------------------------------------------------
 (1) _time                                                 9     5      4     611
                                             22 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _TCP_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IPV4_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ETH_Init                                             4     4      0    1127
                                             41 COMRAM     4     4      0
                    _ETH_CheckLinkUp
                     _MAC_getAddress
                          _PHY_Write
 ---------------------------------------------------------------------------------
 (3) _PHY_Write                                            4     2      2     626
                                             24 COMRAM     4     2      2
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _MAC_getAddress                                       2     0      2       0
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ETH_CheckLinkUp                                      4     4      0     278
                                             37 COMRAM     4     4      0
                 _ETH_readLinkStatus
 ---------------------------------------------------------------------------------
 (3) _ETH_readLinkStatus                                   4     0      4     244
                                             33 COMRAM     4     0      4
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (4) _PHY_Read                                             9     5      4     244
                                             24 COMRAM     9     5      4
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (5) _PHY_WaitForBusy                                      2     2      0     170
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Init                                           1     1      0      99
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _IPV4_GetMyIP                                         4     0      4       0
                                             22 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _DEMO_TCP_EchoServer                                  7     7      0   80954
                                             21 BANK1      7     7      0
                           _TCP_Bind
                _TCP_GetReceivedData
                    _TCP_GetRxLength
                 _TCP_InsertRxBuffer
                         _TCP_Listen
                           _TCP_Send
                       _TCP_SendDone
                     _TCP_SocketInit
                     _TCP_SocketPoll
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketInit                                       3     1      2    3054
                                             30 COMRAM     3     1      2
                          _TCB_Check
                         _TCB_Insert
                          _TCB_Reset
 ---------------------------------------------------------------------------------
 (3) _TCB_Insert                                           2     0      2     164
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TCP_SendDone                                         3     1      2     730
                                             30 COMRAM     3     1      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Send                                             7     1      6   23327
                                            142 BANK0      7     1      6
                            _TCP_Snd
                     _TCP_SocketPoll
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketPoll                                       3     1      2     842
                                             30 COMRAM     3     1      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Listen                                           5     3      2   48877
                                            159 BANK0      1     1      0
                                             17 BANK1      4     2      2
                          _TCB_Check
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (3) _TCP_FiniteStateMachine                              17    17      0   48016
                                              0 BANK1     17    17      0
                          _TCB_Reset
                    _TCP_PayloadSave
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_PayloadSave                                     17    15      2   23832
                                            142 BANK0     17    15      2
                      _ETH_ReadBlock
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_Snd                                             79    77      2   21818
                                             63 BANK0     79    77      2
                         _ETH_Insert
              _ETH_TxComputeChecksum
                     _ETH_WriteBlock
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (5) _IPv4_Start                                          20    15      5    8326
                                             33 COMRAM    13     8      5
                                             56 BANK0      7     7      0
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_Write8                                           1     1      0      31
                                             22 COMRAM     1     1      0
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ETH_Write32                                          4     0      4    1463
                                             22 COMRAM     4     0      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ETH_Write16                                          2     0      2    1215
                                             22 COMRAM     2     0      2
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Request                                       60    56      4    3543
                                             28 COMRAM     4     0      4
                                              0 BANK0     56    56      0
                         _ETH_GetMAC
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_WriteStart                                       6     2      4     791
                                             22 COMRAM     6     2      4
                     _ETH_EdataWrite
                 _ETH_ResetByteCount
 ---------------------------------------------------------------------------------
 (7) _ETH_ResetByteCount                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ETH_WriteBlock                                       6     2      4    1506
                                             22 COMRAM     6     2      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ETH_GetMAC                                           1     1      0     345
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Lookup                                        11     7      4     257
                                             22 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (5) _IPV4_Send                                           11     9      2    3995
                                             48 COMRAM     2     0      2
                                             11 BANK0      9     9      0
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (6) _ETH_TxComputeChecksum                               23    17      6    2058
                                             36 COMRAM    12     6      6
                                              0 BANK0     11    11      0
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (7) _ETH_ComputeChecksum                                 14    10      4     749
                                             22 COMRAM    14    10      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (7) _ETH_Send                                             2     2      0      34
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _ETH_Insert                                           7     3      4    1426
                                             22 COMRAM     7     3      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ETH_EdataWrite                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _ETH_ReadBlock                                        9     5      4    1719
                                             22 COMRAM     9     5      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (8) _ETH_EdataRead                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TCB_Reset                                            4     2      2    1843
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _TCP_InsertRxBuffer                                   7     1      6    1354
                                             30 COMRAM     7     1      6
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_GetRxLength                                      8     6      2     792
                                             30 COMRAM     8     6      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_GetReceivedData                                  8     6      2     885
                                             30 COMRAM     8     6      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Bind                                             5     1      4     827
                                             30 COMRAM     5     1      4
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (3) _TCB_Check                                            8     6      2     591
                                             22 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _low_isr                                             3     3      0     349
                                             19 COMRAM     3     3      0
                 i1_ETH_EventHandler
 ---------------------------------------------------------------------------------
 (13) i1_ETH_EventHandler                                  0     0      0     349
                  i1_ETH_CheckLinkUp
                         i1_PHY_Read
 ---------------------------------------------------------------------------------
 (14) i1_ETH_CheckLinkUp                                   4     4      0     186
                                             15 COMRAM     4     4      0
               i1_ETH_readLinkStatus
 ---------------------------------------------------------------------------------
 (15) i1_ETH_readLinkStatus                                4     0      4     163
                                             11 COMRAM     4     0      4
                         i1_PHY_Read
 ---------------------------------------------------------------------------------
 (14) i1_PHY_Read                                          9     5      4     163
                                              2 COMRAM     9     5      4
                  i1_PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (15) i1_PHY_WaitForBusy                                   2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _high_isr                                            0     0      0       0
                       _rtcc_handler
 ---------------------------------------------------------------------------------
 (19) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DEMO_TCP_EchoServer
     _TCP_Bind
       _TCB_Check
     _TCP_GetReceivedData
       _TCB_Check
     _TCP_GetRxLength
       _TCB_Check
     _TCP_InsertRxBuffer
       _TCB_Check
     _TCP_Listen
       _TCB_Check
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_Snd
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_WriteBlock
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                 _ETH_Send
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
         _TCP_Snd
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _ETH_WriteBlock
             _ETH_EdataWrite
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
               _ETH_Send
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
     _TCP_Send
       _TCP_Snd
         _ETH_Insert
           _ETH_EdataWrite
         _ETH_TxComputeChecksum
           _ETH_ComputeChecksum
             _ETH_EdataRead
         _ETH_WriteBlock
           _ETH_EdataWrite
         _IPV4_Send
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_Send
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
         _IPv4_Start
           _ARPV4_Lookup
           _ARPV4_Request
             _ETH_GetMAC
             _ETH_Send
             _ETH_WriteBlock
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
           _ETH_Write16
             _ETH_EdataWrite
           _ETH_Write32
             _ETH_EdataWrite
           _ETH_Write8
             _ETH_EdataWrite
           _ETH_WriteStart
             _ETH_EdataWrite
             _ETH_ResetByteCount
       _TCP_SocketPoll
         _TCB_Check
     _TCP_SendDone
       _TCB_Check
     _TCP_SocketInit
       _TCB_Check
       _TCB_Insert
       _TCB_Reset
     _TCP_SocketPoll
       _TCB_Check
   _IPV4_GetMyIP
   _Network_Init
     _ARPV4_Init
     _ETH_Init
       _ETH_CheckLinkUp
         _ETH_readLinkStatus
           _PHY_Read
             _PHY_WaitForBusy
       _MAC_getAddress
       _PHY_Write
         _PHY_WaitForBusy
     _IPV4_Init
     _TCP_Init
     _time
   _Network_Manage
     _ARPV4_Update
     _DHCP_Manage
       _DHCP_Request
         _DHCP_WriteZeros
           _ETH_Write8
             _ETH_EdataWrite
         _ETH_GetMAC
         _ETH_Write16
           _ETH_EdataWrite
         _ETH_Write32
           _ETH_EdataWrite
         _ETH_Write8
           _ETH_EdataWrite
         _ETH_WriteBlock
           _ETH_EdataWrite
         _UDP_Send
           _ETH_GetByteCount
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
         _UDP_Start
           _ETH_ResetByteCount
           _ETH_Write16
             _ETH_EdataWrite
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
               _ETH_Send
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
     _ETH_EventHandler
       _ETH_CheckLinkUp
         _ETH_readLinkStatus
           _PHY_Read
             _PHY_WaitForBusy
       _PHY_Read
         _PHY_WaitForBusy
     _Network_Read
       _ARPV4_Packet
         _ETH_GetMAC
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_Send
         _ETH_WriteBlock
           _ETH_EdataWrite
         _ETH_WriteStart
           _ETH_EdataWrite
           _ETH_ResetByteCount
       _ETH_Flush
       _ETH_NextPacketUpdate
         _ETH_EdataRead
       _ETH_ReadBlock
         _ETH_EdataRead
       _IPV4_Packet
         _ETH_Dump
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_RxComputeChecksum
           _ETH_ComputeChecksum
             _ETH_EdataRead
         _ICMP_Receive
           _ETH_ReadBlock
             _ETH_EdataRead
           _ETH_SaveRDPT
           _ICMP_EchoReply
             _ETH_Copy
               _SYSLOG_Write
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     _putch *
                 _time
               ___wmul
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_SaveRDPT
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_Write16
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                 _ETH_Send
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
         _IPV4_PseudoHeaderChecksum
         _TCP_Recv
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_FiniteStateMachine
             _TCB_Reset
             _TCP_PayloadSave
               _ETH_ReadBlock
                 _ETH_EdataRead
               _TCP_Snd
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _IPV4_Send
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_Send
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                     _ETH_Send
                     _ETH_WriteBlock
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _ETH_Write32
                     _ETH_EdataWrite
                   _ETH_Write8
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
             _TCP_Snd
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _IPV4_Send
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_Send
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
               _IPv4_Start
                 _ARPV4_Lookup
                 _ARPV4_Request
                   _ETH_GetMAC
                   _ETH_Send
                   _ETH_WriteBlock
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
           _TCP_ParseTCPOptions
             _ETH_Dump
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
         _UDP_Receive
           _DHCP_Handler *
             _DHCP_Request
               _DHCP_WriteZeros
                 _ETH_Write8
                   _ETH_EdataWrite
               _ETH_GetMAC
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _UDP_Send
                 _ETH_GetByteCount
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
                 _IPV4_Send
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_Send
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
               _UDP_Start
                 _ETH_ResetByteCount
                 _ETH_Write16
                   _ETH_EdataWrite
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                     _ETH_Send
                     _ETH_WriteBlock
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _ETH_Write32
                     _ETH_EdataWrite
                   _ETH_Write8
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
             _ETH_Dump
             _ETH_GetMAC
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read32
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
             _ETH_ReadBlock
               _ETH_EdataRead
             _memcmp
           _ETH_ReadBlock *
             _ETH_EdataRead
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
     _TCP_Update
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_Snd
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_WriteBlock
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                 _ETH_Send
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
         _TCP_Snd
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _ETH_WriteBlock
             _ETH_EdataWrite
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
               _ETH_Send
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
     _time
   _Network_WaitForLink
     _ETH_CheckLinkUp
       _ETH_readLinkStatus
         _PHY_Read
           _PHY_WaitForBusy
   _SYSLOG_Init
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
     _time
   _SYSLOG_Write
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
     _time
   _initHW
     _ADC_Initialize
     _LED_Init
     _lcd_init
       _lcd_busy
       _lcd_init_pins
       _lcd_write_ctrl
     _rtcc_init
     _spi_init
     _uart_init
   _lcd_goto1
     _lcd_busy
     _lcd_write_ctrl
   _lcd_puts
     _lcd_putch
       _lcd_busy
       _lcd_write_data
   _memset
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _time

 _low_isr (ROOT)
   i1_ETH_EventHandler
     i1_ETH_CheckLinkUp
       i1_ETH_readLinkStatus
         i1_PHY_Read
           i1_PHY_WaitForBusy
     i1_PHY_Read
       i1_PHY_WaitForBusy

 _high_isr (ROOT)
   _rtcc_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      68      11       40.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2D      D8       9       84.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BD      EC       7       92.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      48       1       76.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     314      29        0.0%
DATA                 0      0     314       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Sep 09 15:18:44 2015

                         __CFG_BW$16 000000                 __end_of_DHCP_Handler 3BC8  
                                 bsr 000FE0                  ___wmul@multiplicand 0019  
               i1PHY_WaitForBusy@ret 0001                     ??_ICMP_EchoReply 00A1  
         TCP_InsertRxBuffer@data_len 0023          ??_IPV4_PseudoHeaderChecksum 0019  
                     ??_ICMP_Receive 00B1                         __CFG_CP0$OFF 000000  
                                l350 62B4                                  l512 0036  
                                l504 0004                                  l600 4DE8  
                                l521 4FD0                                  l506 001A  
                                l530 5D94                                  l507 0018  
                                l347 62AC                                  l611 4E60  
                                l603 4DF2                                  l531 5D96  
                                l460 0008                                  l620 51AE  
                                l525 6064                                  l518 4FCC  
                                l470 47BE                                  l463 0004  
                                l519 4FBC                                  l607 4E58  
                                l535 591A                                  l544 5872  
                                l608 4E56                                  l536 591C  
                                l617 5144                                  l801 3B48  
                                WREG 000FE8                                  l803 3B4E  
                                l476 0016                                  l484 5C0E  
                                l760 40C6                                  l680 314A  
                                l761 414A                                  l489 5C1A  
                                l594 59F8               __size_of_ETH_EdataRead 0000  
                                l599 4DEA                                  l936 428A  
                                _EIE 000EFB                                  _GIE 007F97  
                        ?_ETH_GetMAC 0001                 __end_of_DHCP_Request 41D8  
                 ICMP_EchoReply@cksm 00A9              IPv4_Start@targetAddress 0098  
                        ?_ETH_Read32 0017                          ?_ETH_Read16 0017  
                       UDP_Start@ret 002F                                  prod 000FF3  
               TCP_Snd@tcpDataLength 00D8                ??_ETH_ComputeChecksum 001B  
                                tosl 000FFD                                  wreg 000FE8  
                        ?_ETH_Insert 0017                         __CFG_IESO$ON 000000  
                       __CFG_MODE$MM 000000                          ?_ETH_Write8 0001  
                               EDATA 000F61                       _ipv4SubnetMask 01C8  
                               PL401 2304                                 PL411 3E08  
                               PL403 2320                                 PL501 24EE  
                               PL421 329E                                 PL413 3FEA  
                               PL405 2332                                 PL511 334C  
                               PL503 52FA                                 PL431 23DA  
                               PL423 23A4                                 PL415 238C  
                               PL407 2372                                 PL601 580E  
                               PL521 41D8                                 PL513 2500  
                               PL505 3338                                 PL441 23FC  
                               PL433 3568                                 PL425 23AE  
                               PL417 2394                                 PL409 2F64  
                               PL611 251E                                 PL603 5EC4  
                               PL531 3602                                 PL523 5534  
                               PL515 2508                                 PL507 475A  
                               PL451 49D0                                 PL443 2416  
                               PL435 2F7E                                 PL427 23CA  
                               PL419 239C                                 PL701 49E8  
                               PL621 2C02                                 PL613 3BC8  
                               PL605 2BC2                                 PL541 3368  
                               PL533 3926                                 PL525 3004  
                               PL517 3914                                 PL509 24F8  
                               PL461 38E0                                 PL453 2440  
                               PL445 2A6E                                 PL437 2A1A  
                               PL429 23D2                                 PL711 2C68  
                               PL703 3960                                 PL631 2C12  
                               PL623 41EA                                 PL615 4CF2  
                               PL607 2BD4                                 PL551 2B1A  
                               PL543 2ACA                                 PL535 4006  
                               PL527 5120                                 PL519 35F0  
                               PL471 2496                                 PL463 38F0  
                               PL455 244E                                 PL447 2430  
                               PL439 23E2                                 PL391 2A00  
                               PL721 396A                                 PL713 5268  
                               PL705 5304                                 PL641 2C30  
                               PL633 4792                                 PL625 402E  
                               PL617 541C                                 PL609 2BE6  
                               PL561 361C                                 PL553 2B34  
                               PL545 4014                                 PL537 2510  
                               PL529 2AA0                                 PL481 4DBE  
                               PL473 249E                                 PL465 2482  
                               PL457 245C                                 PL449 2438  
                               PL393 22D6                                 PL731 4046  
                               PL723 3974                                 PL715 2C70  
                               PL707 5D60                                 PL651 4E84  
                               PL643 41F4                                 PL635 51C6  
                               PL627 2526                                 PL619 2BF8  
                               PL571 3934                                 PL563 2B82  
                               PL555 2B4E                                 PL547 2AE6  
                               PL539 2ABC                                 PL491 3310  
                               PL483 2A7C                                 PL475 24A6  
                               PL467 248C                                 PL459 2476  
                               PL395 22DE                                 PL387 22B4  
                               PL741 5C36                                 PL733 254E  
                               PL725 3670                                 PL717 479C  
                               PL709 56C4                                 PL661 3E30  
                               PL653 58CC                                 PL645 3032  
                               PL637 2C22                                 PL629 2530  
                               PL581 461A                                 PL573 4602  
                               PL565 3636                                 PL557 2B68  
                               PL549 2B00                                 PL493 24DC  
                               PL485 3908                                 PL477 24B8  
                               PL469 45B2                                 PL397 22F8  
                               PL389 22CC                                 PL751 5C3C  
                               PL743 5BF0                                 PL735 4FE2  
                               PL727 367A                                 PL719 4648  
                               PL671 606A                                 PL663 2C48  
                               PL655 2C3E                                 PL647 3952  
                               PL639 4038                                 PL591 3E22  
                               PL583 3382                                 PL575 393C  
                               PL567 4BF4                                 PL559 45E8  
                               PL495 35C8                                 PL487 24CA  
                               PL479 48BE                                 PL399 44D4  
                               PL753 526E                                 PL745 508C  
                               PL737 5F66                                 PL729 3684  
                               PL681 4AF6                                 PL673 4630  
                               PL665 5EF8                                 PL657 55CE  
                               PL649 2540                                 PL593 2BB4  
                               PL585 3646                                 PL577 477A  
                               PL569 2B9C                                 PL497 48CA  
                               PL489 2FDC                                 PL747 2C7A  
                               PL739 5C2E                                 PL691 2C5E  
                               PL683 365C                                 PL675 512A  
                               PL667 6242                                 PL659 56BA  
                               PL595 301E                                 PL587 5A12  
                               PL579 5734                                 PL499 2A96  
                               PL749 3BDA                                 PL693 3666  
                               PL685 2C54                                 PL677 463C  
                               PL669 5DA0                                 PL597 4DC8  
                               PL589 3944                                 PL695 338C  
                               PL687 3040                                 PL679 437A  
                               PL599 57A2                                 PL697 542C  
                               PL689 304A                                 PL699 5C26  
          TCP_FiniteStateMachine@ret 010C                      ?_Network_Manage 0001  
                       __CFG_WDT$OFF 000000                                 l1113 2838  
                               l1009 6358                                 l1115 2754  
                               l1116 277E                                 l1142 4A88  
                               l1143 4A82                                 l2040 5CD0  
                               l2050 5E20                                 l1154 4AF2  
                               l1171 2E5E                                 l1086 5D3C  
                               l1175 2E9A                                 l1169 2DE8  
                               l1194 1276                                 l1179 2ED6  
                               l1356 60C6                                 l1590 36C8  
                               l1576 4C7A                                 l1595 38DA  
                               l8010 62FA                                 l8002 5AC2  
                               l8100 0000                                 l8110 0012  
                               l8030 551A                                 l9000 55F2  
                               l8112 0024                                 l8008 62F4  
                               l9010 563E                                 l8050 2710  
                               l8114 0028                                 l8106 0006  
                               l8210 40C0                                 l8116 0032  
                               l8108 0008                                 l8132 6066  
                               l9006 5604                                 l9014 5652  
                               l8118 0034                                 l7504 5C4E  
                               l8160 5FAE                                 l9200 33CA  
                               l8090 29FA                                 l8074 28CA  
                               l8082 2914                                 l7508 5C74  
                               l9132 30CE                                 l9116 3080  
                               l8340 3ABE                                 l9126 30C0  
                               l8174 4E2E                                 l8422 4756  
                               l8254 5B94                                 l8342 3AD4  
                               l8334 3A80                                 l9230 3502  
                               l9222 34D8                                 l9214 34AA  
                               l9206 3454                                 l7608 518A  
                               l8088 2994                                 l8272 3E7C  
                               l7640 5CA8                                 l8248 5B64  
                               l8256 5B98                                 l8360 3B32  
                               l8352 3B0E                                 l8274 3EB4  
                               l8514 128A                                 l8506 1268  
                               l9146 3124                                 l9162 31A8  
                               l7650 5CC6                                 l7642 5CAC  
                               l7810 37B4                                 l8186 4E76  
                               l8354 3B16                                 l8338 3AA8  
                               l9242 354A                                 l7492 0000  
                               l8620 1832                                 l8516 129A  
                               l7660 5E00                                 l8460 4A90  
                               l8444 4A3E                                 l8436 4A26  
                               l8372 3B5A                                 l8380 3B7C  
                               l7486 0000                                 l8710 1F54  
                               l8702 1EB6                                 l8606 170C  
                               l8534 1370                                 l7638 5CA0  
                               l7662 5E04                                 l7830 37DA  
                               l8446 4A44                                 l8438 4A2E  
                               l8374 3B6A                                 l8382 3B98  
                               l9246 3556                                 l7488 0004  
                               l7680 5DC6                                 l7752 5AFE  
                               l7736 45AE                                 l7912 429A  
                               l7904 4210                                 l8640 1A1A  
                               l8608 173A                                 l9440 62C0  
                               l9096 5A02                                 l7824 37D6  
                               l7816 37B8                                 l7840 37F8  
                               l7808 37AE                                 l7760 3692  
                               l8480 4AE8                                 l8384 3BA8  
                               l8376 3B70                                 l8368 3B54  
                               l9520 4EE6                                 l9336 6214  
                               l7746 5AD0                                 l7922 42DA  
                               l8810 2186                                 l8634 1982  
                               l8618 1818                                 l9098 5A0E  
                               l7666 5E16                                 l7658 5DF8  
                               l7842 3806                                 l7770 36CC  
                               l8482 4AEE                                 l9194 33B0  
                               l7684 5DD4                                 l7596 5166  
                               l7924 42E6                                 l8740 2030  
                               l8732 1FE0                                 l8724 1F8E  
                               l8636 1A08                                 l8556 14F2  
                               l8548 14AA                                 l8492 10FA  
                               l9276 6186                                 l9452 6080  
                               l7852 383C                                 l7772 36D0  
                               l8476 4ACA                                 l8388 3BB6  
                               l8900 4D26                                 l9516 4ED6  
                               l9524 4F0C                                 l7918 42D4  
                               l8806 2174                                 l8742 2038  
                               l8726 1FB8                                 l8662 1C60  
                               l8646 1B5A                                 l8638 1A0E  
                               l8830 2224                                 l9470 5572  
                               l7862 388C                                 l7854 3842  
                               l7782 3726                                 l7790 374A  
                               l7766 36BE                                 l8478 4AD8  
                               l8910 4D4C                                 l9518 4EDE  
                               l9550 3C06                                 l9704 5798  
                               l8736 200C                                 l8664 1C88  
                               l8648 1B5E                                 l8568 161C  
                               l8832 227A                                 l9480 558A  
                               l7856 386A                                 l7864 389A  
                               l7872 38C8                                 l7848 3834  
                               l7792 3766                                 l7784 372C  
                               l9552 3C10                                 l8826 2216  
                               l8818 21E6                                 l8762 2090  
                               l8594 16E6                                 l8578 165C  
                               l9810 4B44                                 l9802 4B12  
                               l9490 55AC                                 l9474 557A  
                               l7778 36EE                                 l7874 38CE  
                               l9570 3DE0                                 l9716 58C2  
                               l8756 2072                                 l9820 4B90  
                               l9804 4B1E                                 l7884 59A8  
                               l9484 5592                                 l9476 5580  
                               l7868 38C0                                 l7796 376C  
                               l8916 4DAC                                 l7966 5826  
                               l8782 20D8                                 l8758 2088  
                               l8678 1E10                                 l8838 0000  
                               l7798 378E                                 l8862 5BCC  
                               l8942 2CF8                                 l9566 3DB6  
                               l9750 6232                                 l8792 213A  
                               l8784 20E2                                 l8776 20CA  
                               l8696 1E9C                                 l8688 1E7A  
                               l9824 4BB0                                 l9832 4BE6  
                               l7888 59C6                                 l9496 55C2  
                               l8952 2D78                                 l9840 603C  
                               l7978 5864                                 l8858 5BBE  
                               l8882 5374                                 l9754 623C  
                               l8876 5352                                 l8972 2E44  
                               l8956 2D8C                                 l8948 2D3C  
                               l9836 602C                                 l9790 53DC  
                               l9862 4C38                                 STR_1 1077  
                               l8984 2EBC                                 l9776 635A  
                               STR_2 10A9                                 STR_3 1039  
                               l8978 2E80                                 l9970 4F36  
                               l9794 540A                                 STR_4 109F  
                               STR_5 1066                                 l8988 2EF2  
                               l9884 4CEC                                 STR_6 1086  
                               STR_7 1093                                 l9966 4F28  
                               STR_8 10B1                                 STR_9 1055  
                               l9968 4F32                                 _GIEH 007F97  
                               _GIEL 007F96          __end_of_TCP_GetReceivedData 57A2  
                               _LATE 000F8D                                 _LATH 000F90  
                               _LATJ 000F91                                 _IPEN 007E87  
                               _MIRD 000EB8                                 _MIWR 000EB6  
                  ??_PHY_WaitForBusy 0017                                 _TMR1 000FCE  
                    lcd_write_data@d 0017              __size_of_ETH_EdataWrite 0000  
                       lcd_goto1@pos 0018                        __CFG_FCMEN$ON 000000  
                       __CFG_STVR$ON 000000               __end_of_lcd_write_data 61F0  
                    __end_of_TCP_Snd 2A00               __end_of_lcd_write_ctrl 6210  
                    _TCP_PayloadSave 3E3A                      lcd_write_ctrl@c 0017  
                               _main 4C0C                                 _time 5984  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 indf1 000FE7  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 0049  
                        _SYSLOG_Init 5F6C                                 prodh 000FF4  
                               prodl 000FF3                                 start 003A  
                      __CFG_FOSC2$ON 000000                      ETH_EdataWrite@d 0001  
                       ?_IPV4_Packet 0001                   __size_of_ETH_Read8 001E  
                  i1_ETH_CheckLinkUp 5FC8                   __size_of_ETH_Flush 003A  
             __size_of_ETH_ReadBlock 0064                         ___param_bank 000010  
              __size_of_SYSLOG_Write 0026                   __size_of_IPV4_Init 000A  
                        ?i1_PHY_Read 0003                   __size_of_IPV4_Send 0066  
                        ?_TCB_Insert 0017                         ?_ETH_Write32 0017  
                       ?_ETH_Write16 0017           __size_ofi1_PHY_WaitForBusy 0000  
                 ?i1_ETH_CheckLinkUp 0001                     ARPV4_Request@ret 007B  
                __size_of_ARPV4_Init 001A             __size_of_ETH_CheckLinkUp 002C  
            ?_TCP_FiniteStateMachine 0001                     __end_of_LED_Init 6230  
                       _BAUDCON1bits 000F7E                        __CFG_WAIT$OFF 000000  
                   _ETH_GetByteCount 624E                       __CFG_CCP2MX$ON 000000  
                   __end_of_ETH_Copy 4E84                     __end_of_ETH_Dump 5FC8  
                   __end_of_ETH_Init 48BE                    _nextPacketPointer 0041  
                   __end_of_ETH_Send 5EF8                   __size_of_TCB_Check 007E  
                              ?_main 0001                                _ECON1 000FD2  
                              _ECON2 000EFE                                ?_time 0017  
IPV4_PseudoHeaderChecksum@payloadLen 0017                                _CREN1 007D5C  
                              u11100 421E                                u11110 422E  
                              u12000 44D2                                u11008 3820  
                              u11210 2578                                u12010 3E4E  
                              u11050 59A6                                u11300 2654  
                              u11220 2590                                u12100 3F3E  
                              u11028 38AA                                u11150 5852  
                              u11310 2668                                u11230 25B8  
                              u12110 3F64                                u12030 3E66  
                              u12007 44CA                                u10600 493C  
                              u11320 267C                                u11240 25CC  
                              u12120 3FCA                                u13000 177C  
                              u11217 256C                                u12017 3E48  
                              u12201 3A72                                u10530 5C6C  
                              u10610 4956                                u11410 273E  
                              u11330 2690                                u11250 25EC  
                              u12130 3FE2                                u12050 3EB4  
                              u13010 1796                                u11307 264C  
                              u11227 258A                                u12107 3F38  
                              u10540 5C84                                u10620 4970  
                              u11500 27E6                                u11260 2600  
                              u12060 3ED6                                u13100 188A  
                              u11157 584A                                u11317 2662  
                              u11237 25B2                                u12117 3F56  
                              u12037 3E60                                u10630 498A  
                              u11510 2802                                u11430 2754  
                              u11350 26C6                                u11270 2614  
                              u12070 3EF4                                u13030 17D0  
                              u12310 4A4E                                u10607 4936  
                              u11327 2676                                u11247 25C6  
                              u12127 3FB6                                u13111 1898  
                              u13007 1774                                u11600 292C  
                              u11520 2816                                u11440 2768  
                              u11360 26DA                                u11280 2628  
                              u12080 3F10                                u13200 199C  
                              u13120 18B6                                u12400 115A  
                              u12160 3996                                u10537 5C66  
                              u10617 4950                                u11417 2738  
                              u11337 268A                                u11257 25E4  
                              u12137 3FDA                                u12057 3EA8  
                              u13017 178E                                u12241 3BA6  
                              u11610 2960                                u11370 2700  
                              u11290 2A34                                u12090 3F22  
                              u14010 20F4                                u13210 19B8  
                              u13050 17F8                                u12410 117C  
                              u10627 496A                                u11507 27E0  
                              u11267 25FA                                u12067 3ECA  
                              u13131 18D0                                u13107 187E  
                              u12171 39AE                                u10580 490A  
                              u11620 2974                                u11540 2838  
                              u11460 277E                                u14100 21A8  
                              u13300 1AB6                                u13220 19D2  
                              u13140 18EE                                u12500 1268  
                              u12420 1196                                u10900 375E  
                              u10637 4984                                u11517 27FC  
                              u11437 274E                                u11357 26C0  
                              u11277 260E                                u12077 3EEE  
                              u14021 210E                                u13037 17C4  
                              u12181 39E8                                u10590 4922  
                              u11550 284E                                u11470 27A2  
                              u11390 2722                                u14110 21BE  
                              u14030 212A                                u13310 1AD4  
                              u13230 19EC                                u13070 182E  
                              u12510 12B4                                u12430 11B0  
                              u11710 5D7A                                u11607 2926  
                              u11527 2810                                u11447 2762  
                              u11367 26D4                                u11295 2A2A  
                              u11287 2622                                u12087 3F0A  
                              u13207 1994                                u13151 190A  
                              u13127 18AE                                u12407 114E  
                              u10760 4528                                u11640 2992  
                              u11560 2894                                u11480 27B6  
                              u14120 21D4                                u13320 1AF2  
                              u13240 1A08                                u13160 1928  
                              u13080 184C                                u12600 13A4  
                              u12520 12D2                                u12440 11CC  
                              u11720 58EA                                u11617 2958  
                              u11377 26FA                                u12097 3F1C  
                              u14041 2138                                u14017 20F0  
                              u13217 19B0                                u13057 17F0  
                              u12417 1174                                u10770 4558  
                              u11650 29AA                                u11490 27D2  
                              u14130 2200                                u14050 214E  
                              u13410 1BB8                                u13330 1B10  
                              u13250 1A30                                u13170 1944  
                              u12530 12E8                                u12450 11E2  
                              u12370 10D6                                u10587 4904  
                              u11627 296E                                u11547 2830  
                              u11467 2778                                u14107 21A4  
                              u13307 1AAE                                u13227 19CA  
                              u13147 18E6                                u13091 1866  
                              u12611 13C0                                u12507 1260  
                              u12427 118E                                u10907 3758  
                              u11900 43D6                                u11660 29FA  
                              u14140 2212                                u13420 1BCC  
                              u13340 1B2E                                u13180 195E  
                              u12700 14A6                                u12620 13DC  
                              u12540 1302                                u12460 11FC  
                              u12380 10F2                                u10597 491C  
                              u10765 4526                                u11557 2848  
                              u11477 2796                                u11397 271C  
                              u14117 21B8                                u14037 2120  
                              u13501 1CB4                                u13317 1ACE  
                              u13261 1A3E                                u13237 19E4  
                              u13077 182C                                u12517 12AC  
                              u12437 11A8                                u11910 43F4  
                              u14150 2238                                u14070 216A  
                              u13510 1CC8                                u13430 1BE6  
                              u13350 1B44                                u13270 1A5C  
                              u13190 197E                                u12710 14C4  
                              u12630 13F8                                u12550 131C  
                              u12470 1218                                u12390 1134  
                              u11670 0012                                u10775 4556  
                              u11647 298A                                u11567 2880  
                              u11487 27B0                                u14127 21CE  
                              u13327 1AEC                                u13247 1A00  
                              u13167 1920                                u13087 1844  
                              u12607 139C                                u12527 12CA  
                              u12447 11C4                                u11671 0010  
                              u11920 4412                                u14160 2294  
                              u13600 1DA8                                u13440 1C02  
                              u13360 1B5A                                u12800 15B0  
                              u12720 14E0                                u12640 1414  
                              u12560 1336                                u12480 1232  
                              u11680 0024                                u10880 3724  
                              u10848 36A8                                u14400 2E5C  
                              u14320 2DA6                                u11657 29A2  
                              u11497 27CC                                u14137 21FC  
                              u14057 214A                                u13521 1CE2  
                              u13417 1BB2                                u13337 1B0A  
                              u13281 1A76                                u13257 1A28  
                              u13177 193C                                u12537 12E0  
                              u12457 11DA                                u12377 10D0  
                              u11681 0022                                u11930 4430  
                              u14170 22AE                                u14090 2198  
                              u13610 1DC2                                u13530 1CF6  
                              u13450 1C1C                                u13370 1B72  
                              u13290 1A9C                                u12810 15CE  
                              u12650 142E                                u12570 1352  
                              u12490 124C                                u11690 0032  
                              u10890 3742                                u14330 2DB4  
                              u15210 3CDA                                u11907 43CE  
                              u11667 29E6                                u14147 220C  
                              u13427 1BC6                                u13347 1B28  
                              u13187 1956                                u12707 14A4  
                              u12627 13D4                                u12547 12FA  
                              u12467 11F4                                u12387 10EC  
                              u11691 0030                                u11940 4446  
                              u13700 1E6C                                u13620 1DDA  
                              u13460 1C38                                u12820 15E4  
                              u12740 150C                                u12660 144C  
                              u12580 136E                                u14500 2EF2  
                              u14340 2DDA                                u14260 2D24  
                              u15300 3DDA                                u11917 43EC  
                              u14157 2234                                u14077 2164  
                              u13517 1CC4                                u13437 1BE0  
                              u13357 1B3E                                u13277 1A54  
                              u13197 1976                                u12717 14BC  
                              u12637 13F0                                u12557 1314  
                              u12477 1210                                u12397 1120  
                              u11950 445C                                u13710 1E92  
                              u13550 1D1E                                u13470 1C4C  
                              u13390 1B8E                                u12910 16A0  
                              u12830 15FE                                u12750 1526  
                              u12670 1462                                u12590 138A  
                              u10878 36FE                                u14510 2FA2  
                              u14430 2E7E                                u15230 3CF4  
                              u15150 3C22                                u11927 440A  
                              u14167 228E                                u13607 1D9E  
                              u13447 1BFC                                u13367 1B54  
                              u12807 15A8                                u12727 14D8  
                              u12647 140C                                u12567 132E  
                              u12487 122A                                u10887 371E  
                              u14407 2E54                                u14327 2DA0  
                              u11960 4472                                u11880 43A2  
                              u13800 1F3A                                u13640 1DF6  
                              u13480 1C5E                                u12840 1618  
                              u12680 147C                                u14440 2E98  
                              u14280 2D74                                _LATH0 007C80  
                              u11937 4428                                u14177 22A8  
                              u14097 2194                                u13617 1DBE  
                              u13537 1CF2                                u13457 1C16  
                              u13377 1B6E                                u13297 1A94  
                              u12817 15C6                                u12761 1542  
                              u12657 1426                                u12577 134A  
                              u12497 1244                                u10897 373C  
                              u15217 3CD4                                _LATH1 007C81  
                              u11970 4486                                u11890 43B8  
                              u13810 1F50                                u13730 1EB4  
                              u13570 1D4E                                u13490 1C9A  
                              u12930 16C0                                u12850 1636  
                              u12770 155E                                u15250 3D0C  
                              u15170 3C68                                _LATH2 007C82  
                              u11947 443E                                u13707 1E68  
                              u13627 1DD0                                u13467 1C32  
                              u12827 15DC                                u12747 1504  
                              u12667 1444                                u12587 1366  
                              u14515 2F98                                u14507 2EEA  
                              u14347 2DCC                                u14267 2D18  
                              u15307 3DCE                                u11980 449A  
                              u13900 2024                                u13820 1F68  
                              u13740 1EC8                                u13660 1E10  
                              u13580 1D76                                u12860 1652  
                              u12780 157A                                u15260 3D46  
                              u15180 3CAA                                u11957 4454  
                              u13717 1E8C                                u13557 1D1A  
                              u13477 1C46                                u13397 1B88  
                              u12917 169A                                u12837 15F6  
                              u12757 151E                                u12677 145A  
                              u12597 1382                                u14437 2E76  
                              u15237 3CEE                                u15157 3C1C  
                              u11990 44BA                                u13750 1ED8  
                              u13670 1E40                                u13590 1D90  
                              u12950 16E2                                u12790 1596  
                              u14470 2EBA                                u14390 2E42  
                              u15270 3D5C                                u15190 3CBE  
                              u11967 446A                                u11887 439A  
                              u13807 1F34                                u13647 1DF2  
                              u13487 1C58                                u12847 1616  
                              u12687 1474                                u14447 2E90  
                              u14287 2D68                                u14560 563C  
                              u13920 204C                                u13840 1F84  
                              u13760 1EEA                                u13680 1E50  
                              u12960 1702                                u12880 1674  
                              u14480 2ED4                                u15280 3D90  
                              u11977 4480                                u11897 43B0  
                              u13817 1F4A                                u13737 1EAE  
                              u13577 1D44                                u13497 1C96  
                              u12937 16BA                                u12857 162E  
                              u12777 1556                                u15257 3D06  
                              u15177 3C5C                                u13770 1F04  
                              u14810 358C                                u15290 3DAA  
                              u11987 4494                                u13907 201E  
                              u13827 1F64                                u13747 1EC4  
                              u13667 1E0C                                u13587 1D6C  
                              u12867 164A                                u12787 1572  
        __size_of_ETH_readLinkStatus 0000                                u14731 315A  
                              u14651 30B2                                u15267 3D3A  
                              u15187 3C9E                                _MAIPG 000EA6  
                              u13940 2068                                u13860 1FD0  
                              u13780 1F14                                u12980 1750  
                              _ERDPT 000F7A                                u11997 44B2  
                              u13757 1ED4                                u13677 1E3C  
                              u13597 1D8C                                u12957 16E0  
                              u12797 158E                                u14477 2EB2  
                              u14397 2E3A                                u15277 3D56  
                              u15197 3CB8                                u13790 1F24  
                              u14830 3442                                u14567 5630  
                              u13927 2048                                u13847 1F7E  
                              u13767 1EE6                                u13687 1E4C  
                              u12991 175E                                u12967 16FA  
                              u12887 166E                                u14487 2ECC  
                              u14815 3582                                u15287 3D88  
                              u15607 61DC                                u13880 1FF2  
                              u14680 32C2                                u13777 1EFE  
                              u14841 3452                                u15297 3DA2  
                              u15617 61E6                                u13970 20A4  
                              u13890 2008                                u13947 2062  
                              u13867 1FCA                                u13787 1F10  
                              u12987 1748                                u14771 31D2  
                              u14691 3110                                u15707 6206  
                              u15627 51DC                                u14780 323E  
                              u13797 1F20                                u14685 32B8  
                              u15717 638A                                u15637 51E8  
                              u13990 20C0                                u15590 4C7A  
                              u13887 1FEE                                u15647 51F4  
                              u13977 20A0                                u13897 2002  
                              u14785 3234                                u15657 5200  
                 __size_of_TCB_Reset 0150                                u15667 5212  
                              u13997 20BA                                u15677 5224  
                              u15687 525E                                u15697 61F8  
                    __end_of___lwdiv 5CDA                                _MICMD 000EB2  
                              i1l512 0036                                i1l504 0004  
                              i1l521 507A                      __end_of___lwmod 5E2A  
                              i1l506 001A                                i1l507 0018  
                              i1l518 5076                  ??i1_ETH_CheckLinkUp 0010  
                              i1l519 5066                                _ERXND 000EEA  
                              i1l476 0016                                i1l484 5F1E  
                              i1l489 5F2C                                _ETXND 000EE6  
                              _ERXST 000EE8                                _EWRPT 000EE2  
                              _ETXST 000EE4                                _SPEN1 007D5F  
                              _TX1IF 007CF4                      __end_of__doprnt 38E0  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISE 000F96                                _TRISH 000F99  
                              _TRISJ 000F9A                       __CFG_ECCPMX$ON 000000  
     __size_of_ETH_TxComputeChecksum 008E        __end_of_ETH_TxComputeChecksum 54C4  
               __size_of_DHCP_Manage 007E                     __end_of_TCP_Bind 61AE  
                   __end_of_TCP_Init 62A4                     __end_of_TCP_Recv 2F64  
                        ?_TCP_Listen 0111                     __end_of_TCP_Send 5120  
                        ?_IPv4_Start 0022                     __end_of_PHY_Read 4FE2  
                    __end_of_dpowers 100B                     __end_of_UDP_Send 5534  
                        ?_TCP_Update 0001                                _putch 62A4  
                              main@t 02A7                   __size_of_PHY_Write 0050  
                   ?_TCP_GetRxLength 001F                   __size_of_UDP_Start 004E  
                    __end_of_low_isr 003A            __size_of_ETH_EventHandler 002E  
          _IPV4_PseudoHeaderChecksum 530E                                pclath 000FFA  
    TCP_FiniteStateMachine@nextState 0110                                tablat 000FF5  
             TCP_InsertRxBuffer@data 0021                                time@t 0017  
                              plusw1 000FE3                                plusw2 000FDB  
                       _SYSLOG_Write 6118                      ?_lcd_write_data 0001  
                    ??_lcd_init_pins 0017                      ?_lcd_write_ctrl 0001  
                              status 000FD8                   _TCP_InsertRxBuffer 57AC  
                    __end_of_sprintf 6022                        _ETH_EdataRead 0000  
                      ?_IPV4_GetMyIP 0017                        ?_ETH_SaveRDPT 0001  
                       __end_ofPL401 2320                         __end_ofPL411 3E22  
                       __end_ofPL403 2332                         __end_ofPL501 24F8  
                       __end_ofPL421 3310                         __end_ofPL413 4006  
                       __end_ofPL405 2372                         __end_ofPL511 3368  
                       __end_ofPL503 5304                         __end_ofPL431 23E2  
                       __end_ofPL423 23AE                         __end_ofPL415 2394  
                       __end_ofPL407 238C                         __end_ofPL601 5818  
                       __end_ofPL521 41EA                         __end_ofPL513 2508  
                       __end_ofPL505 334C                         __end_ofPL441 2416  
                       __end_ofPL433 35C8                         __end_ofPL425 23CA  
                       __end_ofPL417 239C                         __end_ofPL409 2F7E  
                       __end_ofPL611 2526                         __end_ofPL603 5ECE  
                       __end_ofPL531 361C                         __end_ofPL523 5550  
                       __end_ofPL515 2510                         __end_ofPL507 477A  
                       __end_ofPL451 49E8                         __end_ofPL443 2430  
                       __end_ofPL435 2FDC                         __end_ofPL427 23D2  
                       __end_ofPL419 23A4                         __end_ofPL701 49F2  
                       __end_ofPL621 2C12                         __end_ofPL613 3BDA  
                       __end_ofPL605 2BD4                         __end_ofPL541 3382  
                       __end_ofPL533 3934                         __end_ofPL525 301E  
                       __end_ofPL517 3926                         __end_ofPL509 2500  
                       __end_ofPL461 38F0                         __end_ofPL453 244E  
                       __end_ofPL445 2A7C                         __end_ofPL437 2A6E  
                       __end_ofPL429 23DA                         __end_ofPL711 2C70  
                       __end_ofPL703 396A                         __end_ofPL631 2C22  
                       __end_ofPL623 41F4                         __end_ofPL615 4CFE  
                       __end_ofPL607 2BE6                         __end_ofPL551 2B34  
                       __end_ofPL543 2AE6                         __end_ofPL535 4014  
                       __end_ofPL527 512A                         __end_ofPL519 3602  
                       __end_ofPL471 249E                         __end_ofPL463 3908  
                       __end_ofPL455 245C                         __end_ofPL447 2438  
                       __end_ofPL439 23FC                         __end_ofPL391 2A1A  
                       __end_ofPL721 3974                         __end_ofPL713 526E  
                       __end_ofPL705 530E                         __end_ofPL641 2C3E  
                       __end_ofPL633 479C                         __end_ofPL625 4038  
                       __end_ofPL617 542C                         __end_ofPL609 2BF8  
                       __end_ofPL561 3636                         __end_ofPL553 2B4E  
                       __end_ofPL545 402E                         __end_ofPL537 251E  
                       __end_ofPL529 2ABC                         __end_ofPL481 4DC8  
                       __end_ofPL473 24A6                         __end_ofPL465 248C  
                       __end_ofPL457 2476                         __end_ofPL449 2440  
                       __end_ofPL393 22DE                         __end_ofPL731 4050  
                       __end_ofPL723 397E                         __end_ofPL715 2C7A  
                       __end_ofPL707 5D6A                         __end_ofPL651 4E92  
                       __end_ofPL643 4202                         __end_ofPL635 51D6  
                       __end_ofPL627 2530                         __end_ofPL619 2C02  
                       __end_ofPL571 393C                         __end_ofPL563 2B9C  
                       __end_ofPL555 2B68                         __end_ofPL547 2B00  
                       __end_ofPL539 2ACA                         __end_ofPL491 3338  
                       __end_ofPL483 2A96                         __end_ofPL475 24B8  
                       __end_ofPL467 2496                         __end_ofPL459 2482  
                       __end_ofPL395 22F8                         __end_ofPL387 22CC  
                       __end_ofPL741 5C3C                         __end_ofPL733 2558  
                       __end_ofPL725 367A                         __end_ofPL717 47A6  
                       __end_ofPL709 56CE                         __end_ofPL661 3E3A  
                       __end_ofPL653 58D6                         __end_ofPL645 3040  
                       __end_ofPL637 2C30                         __end_ofPL629 2540  
                       __end_ofPL581 4630                         __end_ofPL573 461A  
                       __end_ofPL565 3646                         __end_ofPL557 2B82  
                       __end_ofPL549 2B1A                         __end_ofPL493 24EE  
                       __end_ofPL485 3914                         __end_ofPL477 24CA  
                       __end_ofPL469 45E8                         __end_ofPL397 2304  
                       __end_ofPL389 22D6                         __end_ofPL751 5C44  
                       __end_ofPL743 5BF8                         __end_ofPL735 4FEA  
                       __end_ofPL727 3684                         __end_ofPL719 4652  
                       __end_ofPL671 6076                         __end_ofPL663 2C54  
                       __end_ofPL655 2C48                         __end_ofPL647 3960  
                       __end_ofPL639 4046                         __end_ofPL591 3E30  
                       __end_ofPL583 338C                         __end_ofPL575 3944  
                       __end_ofPL567 4C0C                         __end_ofPL559 4602  
                       __end_ofPL495 35F0                         __end_ofPL487 24DC  
                       __end_ofPL479 48CA                         __end_ofPL399 44EE  
                       __end_ofPL753 5274                         __end_ofPL745 5094  
                       __end_ofPL737 5F6C                         __end_ofPL729 368E  
                       __end_ofPL681 4B00                         __end_ofPL673 463C  
                       __end_ofPL665 5F04                         __end_ofPL657 55D8  
                       __end_ofPL649 254E                         __end_ofPL593 2BC2  
                       __end_ofPL585 365C                         __end_ofPL577 4792  
                       __end_ofPL569 2BB4                         __end_ofPL497 48D2  
                       __end_ofPL489 3004                         __end_ofPL747 2C82  
                       __end_ofPL739 5C36                         __end_ofPL691 2C68  
                       __end_ofPL683 3666                         __end_ofPL675 5136  
                       __end_ofPL667 624E                         __end_ofPL659 56C4  
                       __end_ofPL595 3032                         __end_ofPL587 5A28  
                       __end_ofPL579 573E                         __end_ofPL499 2AA0  
                       __end_ofPL749 3BE2                         __end_ofPL693 3670  
                       __end_ofPL685 2C5E                         __end_ofPL677 4648  
                       __end_ofPL669 5DAC                         __end_ofPL597 4DDC  
                       __end_ofPL589 3952                         __end_ofPL695 3396  
                       __end_ofPL687 304A                         __end_ofPL679 4384  
                       __end_ofPL599 57AC                         __end_ofPL697 5436  
                       __end_ofPL689 3054                         __end_ofPL699 5C2E  
          __end_ofi1_ETH_CheckLinkUp 5FF6           ETH_RxComputeChecksum@rxptr 002D  
                __size_of_ETH_GetMAC 002C                       __CFG_ETHLED$ON 000000  
      ETH_TxComputeChecksum@position 0025                  __size_of_ETH_Read16 0036  
                __size_of_ETH_Read32 0058                 __end_of_ARPV4_Packet 329E  
                    __initialization 5B14      DEMO_TCP_EchoServer@socket_state 0117  
                __size_of_ETH_Insert 0040                      TCP_Send@dataLen 00F2  
               __end_of_ARPV4_Lookup 5B14                  ?_TCP_InsertRxBuffer 001F  
                       __end_of_main 4CF2                 __end_of_ARPV4_Update 60A0  
                       __end_of_time 59D8       __end_of_TCP_FiniteStateMachine 22B4  
                __size_of_ETH_Write8 000A                          ETH_Copy@len 006D  
                _DEMO_TCP_EchoServer 4B00                          ETH_Init@mac 002D  
                    _DHCP_WriteZeros 62F2             ETH_TxComputeChecksum@len 0027  
                             ??_main 0033                               ??_time 001B  
                      __activetblptr 000003                       _MAC_getAddress 63C2  
                    TCP_SendDone@ret 0021                  _TCP_ParseTCPOptions 49F2  
               DEMO_TCP_EchoServer@i 011A                        _ETH_ReadBlock 5818  
                    TCP_Snd@txHeader 00DA                 ??_TCP_InsertRxBuffer 0025  
                  __end_of_ETH_Read8 606A                    __end_of_ETH_Flush 5A12  
                  ETH_Send@packetEnd 0017              __end_of_TCP_PayloadSave 3FEA  
                  __end_of_IPV4_Init 63A6                    __end_of_IPV4_Send 5734  
                          ??_TCP_Snd 00A1                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                __size_ofi1_PHY_Read 00A2                               _ADRESH 000FC4  
                             _ADRESL 000FC3                       ETH_Dump@length 0017  
                             _EDMAND 000EF2                               _EDMAST 000EF0  
                             ?_putch 0001                               _MAADR1 000E84  
                             _MAADR2 000E85                               _MAADR3 000E82  
                             _MAADR4 000E83                               _MAADR5 000E80  
                             _MAADR6 000E81                  __size_of_TCB_Insert 003E  
                             _MACON1 000EA0                               _MACON3 000EA2  
                             _MACON4 000EA3                               _MAMXFL 000EAA  
                             _T1SYNC 007E6A                 ?_DEMO_TCP_EchoServer 0001  
                             i1l6260 0008                               i1l6252 0000  
                             i1l6270 0034                               i1l6262 0012  
                             i1l6264 0024                               i1l6266 0028  
                             i1l6258 0006                               i1l6268 0032  
                             i1l6728 0000                               _INTCON 000FF2  
        DEMO_TCP_EchoServer@port7TCB 0228                               _OSCCON 000FD3  
                     ?_ETH_EdataRead 0001                       ??_IPV4_GetMyIP 001B  
                             _SPBRG1 000FAF                               _TMR1IE 007CE8  
                             _TMR1IF 007CF0                               _TMR1CS 007E69  
                     ??_ETH_SaveRDPT 0017                               _TMR1IP 007CF8  
                             _TMR1ON 007E68                    __end_of_TCB_Check 5656  
               __end_of_ICMP_Receive 5BF0                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                     __end_of_dhcpName 1028  
               ?_TCP_ParseTCPOptions 0001                    __end_of_TCB_Reset 44D4  
              __size_of_DHCP_Handler 024A                    main@no_ip_display 02AB  
                     __CFG_XINST$OFF 000000                      __CFG_EASHFT$OFF 000000  
                   __end_of_lcd_busy 6392                     __end_of_lcd_init 5268  
                     ETH_ReadBlock@p 001E                     __end_of_high_isr 63C2  
         __end_ofi1_ETH_EventHandler 5F3A                ICMP_EchoReply@icmpHdr 00AE  
                   __end_of_lcd_puts 6242                   _ETH_ResetByteCount 63B0  
               TCP_Snd@payloadLength 00D5                ICMP_EchoReply@ipv4Hdr 009F  
                             ___wmul 60F2                  __size_of_TCP_Listen 0064  
                __size_of_IPv4_Start 0178                               _arpMap 0300  
                          ??___lwdiv 001B                            ??___lwmod 0022  
              __size_of_DHCP_Request 0188                  __size_of_TCP_Update 0226  
                  __end_of_PHY_Write 5A78                               _initHW 5E62  
                             _memcmp 5B60                            ??__doprnt 0025  
                             _memset 6022                    __end_of_UDP_Start 5AC6  
                             clear_0 5B1A                               clear_1 5B26  
                             clear_2 5B32                               clear_3 5B3E  
             __end_of_MAC_getAddress 63C6                               _tcpMss 0045  
                       __doprnt@flag 002C                 __end_of_broadcastMAC 102E  
                             _printf 613E                  ?_ETH_ResetByteCount 0001  
                       __doprnt@prec 0029                               main@ip 02CC  
             ETH_ComputeChecksum@len 0017                      UDP_Start@destIP 009F  
                       __pdataCOMRAM 0048                TCP_GetRxLength@tcbPtr 001F  
                     ?_ETH_ReadBlock 0017                         ?_UDP_Receive 00D3  
                       __mediumconst 0000                    ??_ETH_CheckLinkUp 0026  
                          ??_low_isr 0014                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                   __end_of_spi_init 637E         __size_of_Network_WaitForLink 000E  
                          ??_sprintf 0031                         ??_ARPV4_Init 0017  
           i1PHY_WaitForBusy@timeout 0002                DHCP_WriteZeros@length 0018  
                       _DHCP_Handler 397E                ??_DEMO_TCP_EchoServer 0033  
                      DHCP_Handler@v 00BB                       _ETH_EdataWrite 0000  
                     ETH_Insert@data 001D                      __CFG_FOSC$HSPLL 000000  
                         __accesstop 0060              __end_of__initialization 5B56  
               ??_ETH_ResetByteCount 0017                   TCP_SendDone@tcbPtr 001F  
                          ?_LED_Init 0001                ??_TCP_ParseTCPOptions 001B  
                          ?_ETH_Copy 006D                            ?_ETH_Dump 0017  
                          ?_ETH_Init 0001                            ?_ETH_Send 0001  
         __size_ofi1_ETH_CheckLinkUp 002E                        ___rparam_used 000001  
                       _DHCP_Request 4050                        ?_Network_Init 0001  
                      ?_Network_Read 0001               IPV4_Send@payloadLength 0031  
              IPv4_Start@destAddress 0022              __end_of_DHCP_WriteZeros 630A  
       __end_ofi1_ETH_readLinkStatus 0000                       __pcstackCOMRAM 0001  
              _ETH_RxComputeChecksum 5CDA              __size_of_ETH_WriteBlock 004C  
               __size_of_IPV4_Packet 01D2                            ?_TCP_Bind 001F  
              __end_of_ARPV4_Request 45B2                            LED_Init@x 0017  
                          ?_TCP_Init 0001                            ?_TCP_Recv 0111  
                          ?_TCP_Send 00EE                            ?_PHY_Read 0019  
            __size_of_ETH_WriteStart 00FE                            ?_UDP_Send 0001  
                      __end_of_putch 62BE                   PHY_WaitForBusy@ret 0017  
               __size_of_ETH_Write16 000E                 __size_of_ETH_Write32 001A  
                    ?_MAC_getAddress 0017                   __end_of_ARPV4_Init 62D8  
  TCP_ParseTCPOptions@tcpOptionsSize 001F         __end_of_ETH_NextPacketUpdate 5984  
                       ??_ETH_GetMAC 0017                      ETH_Copy@tmp_len 0071  
                    _PHY_WaitForBusy 0000                         _dhcpServerId 021C  
                       ETH_Read8@ret 0017                         ??_ETH_Read32 001B  
                       ??_ETH_Read16 0019                     ??_Network_Manage 00FF  
                       ??_ETH_Insert 001B                     TCP_Listen@tcbPtr 0111  
                 __size_of_lcd_goto1 000E                        TCB_Insert@ptr 0017  
                       ??_ETH_Write8 0017             DHCP_Handler@optionLength 00CE  
                   ?_TCP_PayloadSave 00EE                           __doprnt@ap 0024  
                         __doprnt@cp 002A               __end_of_ETH_EdataWrite 0000  
                         __doprnt@pb 0030                   __size_of_lcd_putch 001C  
               ETH_ComputeChecksum@v 0023                              ??_putch 0017  
                    ??_ETH_EdataRead 0017                           __pbssBANK1 01BD  
                         __pbssBANK2 0200                           __pbssBANK3 0300  
                   _ETH_EventHandler 5BF8       DEMO_TCP_EchoServer@rxdataPort7 025F  
           __end_of_ETH_GetByteCount 626C                __size_of_ARPV4_Packet 024A  
                         ??_LED_Init 0017                       TCP_Bind@tcbPtr 001F  
              __size_of_ARPV4_Lookup 004E                         ?_SYSLOG_Init 0001  
                         ??_ETH_Copy 0033                           ??_ETH_Dump 0019  
                         ??_ETH_Init 002A                       ??_Network_Init 002E  
                     ??_Network_Read 0157                           ??_ETH_Send 0017  
              __size_of_ARPV4_Update 002A                           _macAddress 102E  
                    TCB_Reset@tcbPtr 0017                   __end_of_ETH_GetMAC 5EC4  
                       ??i1_PHY_Read 0007                   __end_of_ETH_Read16 5DA0  
                 __end_of_ETH_Read32 592E                         ??_TCB_Insert 0019  
                 __end_of_ETH_Insert 5DEC                         IPV4_Send@ret 006F  
                            ?___wmul 0017                           ??_TCP_Bind 0023  
                         ??_TCP_Init 0017                           ??_TCP_Recv 0117  
                         ??_TCP_Send 0033                           ??_PHY_Read 001D  
                 __end_of_ETH_Write8 63B0                              ?_initHW 0001  
                         ??_UDP_Send 0074                              ?_memcmp 0017  
                         _deviceTime 02D0                              ?_memset 0017  
        __end_of_ETH_ComputeChecksum 51C6                              _EDMADST 000EF4  
     DEMO_TCP_EchoServer@txdataPort7 0273             TCP_SocketPoll@socket_ptr 001F  
                            ?_printf 0060                              _MABBIPG 000EA4  
            __size_of_ADC_Initialize 0016                              _T1CKPS0 007E6C  
                            _T1CKPS1 007E6D                 __end_of_IPV4_GetMyIP 6348  
                    ??_ETH_ReadBlock 001B                 __end_of_ETH_SaveRDPT 639C  
                            _T1OSCEN 007E6B                              _EPKTCNT 000ED9  
                            _EIEbits 000EFB                   __size_of_uart_init 0016  
                            _ERXFCON 000ED8               TCP_GetReceivedData@ret 0025  
                 __size_of_rtcc_init 0038                         SYSLOG_Init@t 006B  
                            _EIRbits 000F60                              _ERXRDPT 000EEC  
                     TCB_Check@count 001C              __size_of_TCP_SocketInit 0086  
            __size_of_TCP_SocketPoll 0026                           _ipv4Header 0287  
                       _ARPV4_Packet 3054                              _OSCTUNE 000F9B  
                       ??_TCP_Listen 0113                         ??_IPv4_Start 0027  
                   ??_lcd_write_data 0017                     ??_lcd_write_ctrl 0017  
                       _ARPV4_Lookup 5AC6                              _TCP_Snd 2558  
                    ?_ETH_EdataWrite 0001                         ??_TCP_Update 0111  
              __size_of_ICMP_Receive 0044                         _ARPV4_Update 6076  
                          ?_lcd_busy 0001                            ?_lcd_init 0001  
                          ?_high_isr 0001                            ?_lcd_puts 0019  
                 __end_ofi1_PHY_Read 508C               ARPV4_Lookup@ip_address 0017  
                         _ipv4Router 01C4                           _led_values 0200  
                 __end_of_TCB_Insert 5D60                      TCP_Update@count 0119  
                 UDP_Receive@udpcksm 00D3                  SYSLOG_Write@message 0031  
               TCP_SocketInit@tcbPtr 001F                              __Hparam 0000  
       __size_of_TCP_GetReceivedData 0064                              __Lparam 0000  
             ?_ETH_RxComputeChecksum 0025                           _errataTemp 000E7E  
                   ?_DHCP_WriteZeros 0018                            _ECON1bits 000FD2  
                  __end_of_lcd_goto1 6356                   TCP_GetRxLength@ret 0025  
                          ?_spi_init 0001                    __end_of_lcd_putch 6288  
            __end_of_PHY_WaitForBusy 0000                          time@gie_val 001B  
                    __size_of___wmul 0026                              ___lwdiv 5C90  
                            ___lwmod 5DEC                   __end_of_TCP_Listen 56BA  
                         _currentTCB 003F                         __psmallconst 1000  
                      ?_TCP_SendDone 001F                   __end_of_IPv4_Start 437A  
                            __doprnt 368E           __end_of_ETH_readLinkStatus 0000  
                    __size_of_initHW 0036                   __end_of_TCP_Update 3E08  
                            __pcinit 5B14                      __size_of_memcmp 004C  
                    __size_of_memset 002A                              __ramtop 1000  
                            __ptext0 4C0C                              __ptext1 6022  
                            __ptext2 6230                              __ptext3 626C  
                            __ptext4 61D0                              __ptext5 6348  
                            __ptext6 5E62                              __ptext7 630A  
                            __ptext8 6372                              __ptext9 5E2A  
                            _ethData 01BD                              _ipv4DNS 0210  
                    __size_of_printf 0026    TCP_FiniteStateMachine@notAckBytes 010D  
                      ??_DHCP_Manage 0033                         _ICMP_Receive 5BAC  
                  __end_of_hexpowers 1013                              _dpowers 1001  
                            _tcbList 0043                              _low_isr 0018  
               i1_ETH_readLinkStatus 0000                 __size_of_UDP_Receive 00C0  
              _ETH_TxComputeChecksum 5436              __size_of_ICMP_EchoReply 0108  
                            _sprintf 5FF6                           ??_lcd_busy 0017  
                         ??_lcd_init 0018                            _MICMDbits 000EB2  
                            main@str 02AC                           ??_high_isr 0017  
                     __pintcode_body 63BA                           ??_lcd_puts 001B  
               end_of_initialization 5B56                            _ESTATbits 000EFD  
            ETH_ComputeChecksum@cksm 001F                          TCP_Snd@data 00D1  
            ETH_ComputeChecksum@seed 0019                          TCP_Snd@cksm 00D3  
                          _ETH_Read8 604C                            _ETH_Flush 59D8  
                            memcmp@n 0018                            _IPV4_Init 639C  
                          _IPV4_Send 56CE                   IPv4_Start@protocol 0026  
                            memset@c 0019                              memset@n 001B  
                            memset@p 001D                              int_func 63BA  
                       _broadcastMAC 1028                     UDP_Start@dstPort 00A5  
                ETH_ReadBlock@buffer 0017                 _ETH_NextPacketUpdate 592E  
              __end_of_lcd_init_pins 6388                  ETH_ReadBlock@length 0019  
                  __end_of_uart_init 6320                       ETH_Write8@data 0017  
                      ?_rtcc_handler 0001                    __end_of_rtcc_init 5E62  
                        PHY_Read@reg 001D                          PHY_Read@ret 001E  
                   DHCP_Request@type 00A8             TCP_InsertRxBuffer@tcbPtr 001F  
           __size_of_TCP_GetRxLength 0050                            _TCB_Check 55D8  
                   UDP_Start@srcPort 00A3                              printf@f 0064  
                     _ETH_WriteBlock 5C44            TCP_GetReceivedData@tcbPtr 001F  
                _Network_WaitForLink 6356                            _TCB_Reset 4384  
                            postdec1 000FE5                              postdec2 000FDD  
                         ??_spi_init 0017                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                     ??_TCP_SendDone 0021                      _ETH_CheckLinkUp 5F3A  
                     _ETH_WriteStart 48D2                   TCP_PayloadSave@len 00EE  
              ARPV4_Packet@mergeFlag 0082                   _nextSequenceNumber 0220  
           ETH_RxComputeChecksum@len 0025                       DHCP_Handler@ip 00B3  
                          _PHY_Write 5A28                            _UDP_Start 5A78  
               __end_of_Network_Init 61D0                 __end_of_Network_Read 4F40  
                 i1_ETH_EventHandler 5F04                            _TRISAbits 000F92  
                          _TRISCbits 000F94                            _TRISDbits 000F95  
                      _rcvPayloadLen 01D2                ?i1_ETH_readLinkStatus 000C  
               ?_Network_WaitForLink 0001          __size_of_TCP_InsertRxBuffer 0062  
                  IPV4_Packet@hdrLen 0152                  __end_of_DHCP_Manage 55CE  
                      ETH_GetMAC@mac 0017                    IPV4_Packet@length 0153  
                ?i1_ETH_EventHandler 0001                    ICMP_EchoReply@ret 00AD  
                         ?_ETH_Read8 0001                           ?_ETH_Flush 0001  
                         ?_IPV4_Init 0001                           ?_IPV4_Send 0031  
              ?_ETH_NextPacketUpdate 0001               PHY_WaitForBusy@timeout 0018  
                         main@old_ip 02A3                       ??_rtcc_handler 0017  
                         lcd_putch@c 0018               __end_of_ETH_WriteBlock 5C90  
                  __size_of_LED_Init 0020                        _dhcpLeaseTime 0033  
               __size_of_SYSLOG_Init 002E                           ?_TCB_Check 0017  
                  __size_of_ETH_Copy 00A8                    __size_of_ETH_Dump 002E  
                  __size_of_ETH_Init 0118               __end_of_ETH_WriteStart 49D0  
                  __size_of_ETH_Send 002A                     ??_MAC_getAddress 0019  
                         ?_TCB_Reset 0017                __size_of_IPV4_GetMyIP 0012  
              __size_of_ETH_SaveRDPT 000A                     ?_PHY_WaitForBusy 0001  
               ??i1_ETH_EventHandler 0014                       __end_of___wmul 6118  
           __end_of_ETH_EventHandler 5C26             ARPV4_Request@destAddress 001D  
                     TCP_Recv@length 0115                        __pidataCOMRAM 63C6  
                  _UDP_CallBackTable 1034                       TCP_Recv@tcbPtr 0134  
                  __size_of_TCP_Bind 0024                       _ADC_Initialize 6320  
                  __size_of_TCP_Init 001C                    __size_of_TCP_Recv 02E2  
                  __size_of_TCP_Send 008C                       __end_of_initHW 5E98  
                     __end_of_memcmp 5BAC                    __size_of_PHY_Read 00A2  
                     __end_of_memset 604C                    __size_of_UDP_Send 0070  
                         ?_PHY_Write 0019                       __end_of_printf 6164  
          ETH_RxComputeChecksum@cksm 002F                           ?_UDP_Start 009F  
                ICMP_Receive@icmpHdr 00B6            ETH_RxComputeChecksum@seed 0027  
                     _TCP_SocketInit 5274                       _TCP_SocketPoll 6164  
                ICMP_Receive@ipv4Hdr 00AF          __end_of_DEMO_TCP_EchoServer 4BF4  
                start_initialization 5B14                ??_Network_WaitForLink 002A  
             ?_ETH_TxComputeChecksum 0025                        ETH_Copy@timer 006F  
                      ETH_Read32@ret 001B                        ETH_Read16@ret 0019  
        __end_of_TCP_ParseTCPOptions 4AF6                       TCP_Send@tcbPtr 00EE  
             ETH_WriteStart@dest_mac 0017         TCP_SocketPoll@tmpSocketState 0021  
        __size_of_ETH_ResetByteCount 000A                    ?_ETH_GetByteCount 0017  
                       _IPV4_GetMyIP 6336                         _ETH_SaveRDPT 6392  
                       TCB_Check@ret 001B                         TCB_Check@ptr 0017  
           ??_TCP_FiniteStateMachine 0100              __end_of_ETH_CheckLinkUp 5F66  
                 ??_ETH_GetByteCount 0019                        ??_IPV4_Packet 0136  
                    ?_ETH_WriteBlock 0017                DHCP_Handler@ethPktMAC 00C2  
                    ?_ETH_WriteStart 0017             DEMO_TCP_EchoServer@rxLen 0118  
           DEMO_TCP_EchoServer@txLen 0115                        ??_ETH_Write32 001B  
                      ??_ETH_Write16 0019                             ??___wmul 001B  
          __end_of_UDP_CallBackTable 1039                          __doprnt@idx 0028  
             __end_of_ADC_Initialize 6336                          __doprnt@val 002D  
                ARPV4_Request@header 007C                             ??_initHW 0019  
                           ??_memcmp 001A                  ETH_GetByteCount@val 0019  
                           ??_memset 001D                    ??_TCP_GetRxLength 0021  
                           ??_printf 0031               __end_of_TCP_SocketInit 52FA  
             __end_of_TCP_SocketPoll 618A                     ??_ETH_EdataWrite 0017  
                        _DHCP_Manage 5550                 IPv4_Start@macAddress 009C  
                      ETH_Insert@len 0017                      IPV4_Packet@cksm 0155  
                        __pbssCOMRAM 0033                  _TCP_GetReceivedData 573E  
             ??i1_ETH_readLinkStatus 0010                        __pcstackBANK0 0060  
                      __pcstackBANK1 0100                        __pcstackBANK2 02A3  
              TCP_Recv@remoteAddress 0111                       _ICMP_EchoReply 4652  
                           ?_TCP_Snd 009F                 __end_of_TCP_SendDone 60CA  
             __size_of_ARPV4_Request 00C4                          ??_ETH_Read8 0017  
                        ??_ETH_Flush 0017               ??_ETH_NextPacketUpdate 0017  
                        ??_IPV4_Init 0017                        ?_SYSLOG_Write 0031  
                        ??_IPV4_Send 006B                __end_of_ETH_EdataRead 0000  
                  __size_of_lcd_busy 000A                    __size_of_lcd_init 0092  
                  __size_of_high_isr 63BA                            __doprnt@c 002F  
                          __doprnt@f 0023                    __size_of_lcd_puts 0012  
            ??_ETH_RxComputeChecksum 0029             __size_of_TCP_PayloadSave 01B0  
                          __pnvBANK2 02D0                 ?_TCP_GetReceivedData 001F  
    ICMP_EchoReply@ipv4PayloadLength 00AB                     ___lwdiv@dividend 0017  
                        ??_TCB_Check 0019                            __pintcode 0008  
                        ??_TCB_Reset 0019                            __ptext100 573E  
                          __ptext101 618A                            __ptext110 60CA  
                          __ptext102 55D8                            __ptext111 0000  
                          __ptext104 5F04                            __ptext105 5FC8  
                          __ptext106 0000                            __ptext107 4FEA  
                          __ptext108 0000                   ARPV4_Packet@x_1672 0087  
                           ?___lwdiv 0017                             ?___lwmod 001E  
                      IPV4_Send@cksm 0070                      ?_ADC_Initialize 0001  
                           ?__doprnt 0023                __size_of_Network_Init 0022  
              __size_of_Network_Read 00AE                   ARPV4_Packet@header 008A  
                        __pintcodelo 0018                  __end_of_IPV4_Packet 3568  
                 ARPV4_Packet@arpPtr 0084                    __size_of_spi_init 000C  
                          _lcd_goto1 6348                   ARPV4_Packet@length 0080  
       IPV4_PseudoHeaderChecksum@len 001E                            _lcd_putch 626C  
       IPV4_PseudoHeaderChecksum@tmp 0023                      ?_TCP_SocketInit 001F  
           ARPV4_Update@entryPointer 0017                      ?_TCP_SocketPoll 001F  
                __end_of_ETH_Write16 6372                  __end_of_ETH_Write32 62F2  
                        ??_PHY_Write 001B                          __smallconst 1000  
                           _BAUDCON1 000F7E                          _clientState 0048  
                        ??_UDP_Start 002F                __end_of_ETH_ReadBlock 587C  
               __end_of_rtcc_handler 60F2               __end_of_ICMP_EchoReply 475A  
                           ?_low_isr 0001         __size_of_ETH_ComputeChecksum 0090  
                          _hexpowers 100B                     ___lwdiv@quotient 001C  
                          _localTime 02D4                  DHCP_Request@started 00A7  
                 _ETH_readLinkStatus 0000                             ?_sprintf 0060  
                     __size_of_putch 001A                       ??_SYSLOG_Write 0033  
                          _tcpHeader 01D4              __size_of_Network_Manage 0076  
                     ___wmul@product 001B                 ETH_WriteBlock@buffer 0017  
                          _udpHeader 029B                             _LED_Init 6210  
                           _LATDbits 000F8C                  ?_ETH_readLinkStatus 0022  
               ETH_WriteBlock@length 0019                             _MIREGADR 000EB4  
                           _ETH_Copy 4DDC                           TCP_Snd@ret 00D7  
                           _ETH_Dump 5F9A                             _ETH_Init 47A6  
                           _ETH_Send 5ECE                             _IPR2bits 000FA2  
                           _PIE2bits 000FA0                ??_TCP_GetReceivedData 0021  
                   ?_ETH_CheckLinkUp 0001                      TCB_Check@tcbPtr 001D  
    __size_of_TCP_FiniteStateMachine 11FA                          _ipv4Address 0037  
                       _Network_Init 61AE                         _Network_Read 4E92  
                  _nextAvailablePort 01D0                             _PIR2bits 000FA1  
                           i1u893_20 0012                             i1u893_21 0010  
                           i1u894_20 0024                             i1u894_21 0022  
                           i1u895_20 0032                             i1u895_21 0030  
                   __CFG_WDTPS$32768 000000                            _uart_init 630A  
                           _SSP1CON1 000FC6                        ARPV4_Packet@x 0086  
                      SYSLOG_Write@t 006B                             _TCP_Bind 618A  
                           _TCP_Init 6288                            _rtcc_init 5E2A  
                           _TCP_Recv 2C82                             _TCP_Send 5094  
                           _PHY_Read 4F40   __size_of_IPV4_PseudoHeaderChecksum 0098  
                      _ARPV4_Request 44EE                             _UDP_Send 54C4  
         ?_IPV4_PseudoHeaderChecksum 0017                           ?_lcd_goto1 0001  
                         ?_lcd_putch 0001                    ___wmul@multiplier 0017  
               ??_ETH_readLinkStatus 0026             __size_of_DHCP_WriteZeros 0018  
                      ARPV4_Lookup@x 0021          TCP_FiniteStateMachine@event 010F  
                      ??_UDP_Receive 00D5                      ?_ICMP_EchoReply 009F  
                          lcd_puts@s 0019                        ARPV4_Update@x 0019  
                 __end_of_macAddress 1034           IPV4_PseudoHeaderChecksum@v 001D  
                      TCP_Recv@count 0133                     TCP_Update@tcbPtr 011B  
                      ?_DHCP_Handler 00AF                     __size_of_TCP_Snd 04A8  
                      TCP_Snd@tcbPtr 009F                        ?_DHCP_Request 0001  
            __size_of_lcd_write_data 0020                        IPv4_Start@ret 009E  
            __size_of_lcd_write_ctrl 0020                             __Hrparam 0000  
         ETH_TxComputeChecksum@rxptr 002B                          _IPV4_Packet 3396  
                           __Lrparam 0000                           ?_uart_init 0001  
                        _ETH_Write32 62D8                          _ETH_Write16 6364  
                   ETH_ReadBlock@len 001C                       ?_ARPV4_Request 001D  
                  ??_TCP_PayloadSave 00F0                           ?_rtcc_init 0001  
                   __size_of___lwdiv 004A                     __size_of___lwmod 003E  
                  ?_ETH_EventHandler 0001                     __size_of__doprnt 0252  
  __end_of_IPV4_PseudoHeaderChecksum 53A6               TCP_ParseTCPOptions@ret 001D  
             TCP_ParseTCPOptions@opt 001E                          _tcbListSize 0047  
           ARPV4_Packet@entryPointer 0088              ??_ETH_TxComputeChecksum 0060  
                 DHCP_Handler@ethMAC 00C8                   ??_ETH_EventHandler 002A  
             _TCP_FiniteStateMachine 10BA           __end_of_TCP_InsertRxBuffer 580E  
                 DHCP_Handler@length 00AF                             _dhcpName 1013  
              __size_of_TCP_SendDone 002A               __size_of_lcd_init_pins 000A  
                       TCP_Bind@port 0021                   DHCP_Handler@option 00C1  
                    ___lwdiv@divisor 0019                      ___lwdiv@counter 001B  
                   __size_of_low_isr 0022                             __ptext10 51D6  
                           __ptext11 61F0                             __ptext20 4E92  
                           __ptext12 637E                             __ptext21 5FF6  
                           __ptext13 6388                             __ptext30 5D6A  
                           __ptext22 3396                             __ptext14 6210  
                           __ptext31 5F9A                             __ptext23 4CFE  
                           __ptext15 6320                             __ptext40 368E  
                           __ptext32 530E                             __ptext24 397E  
                           __ptext16 5F6C                             _arpTimer 01E8  
                           __ptext41 62A4                             __ptext33 5BAC  
                           __ptext25 5B60                             __ptext17 6356  
                           __ptext50 4050                             __ptext42 5DEC  
                           __ptext34 4652                             __ptext26 58D6  
                           __ptext18 53A6                             __ptext51 5A78  
                           __ptext43 5C90                             __ptext35 6392  
                           __ptext27 2C82                             __ptext19 3BE2  
                           __ptext60 47A6                             __ptext52 54C4  
                           __ptext44 5CDA                             __ptext36 4DDC  
                           __ptext28 49F2                             __ptext61 5A28  
                           __ptext53 624E                             __ptext45 592E  
                           __ptext37 60F2                             __ptext29 604C  
                           __ptext70 5274                             __ptext62 63C2  
                           __ptext54 62F2                             __ptext46 59D8  
                           __ptext38 6118                             __ptext71 5D22  
                           __ptext63 5F3A                             __ptext55 6076  
                           __ptext47 3054                             __ptext39 613E  
                           __ptext80 63A6                             __ptext72 60A0  
                           __ptext64 0000                             __ptext56 61AE  
                           __ptext48 5BF8                             __ptext81 62D8  
                           __ptext73 5094                             __ptext65 4F40  
                           __ptext57 5984                             __ptext49 5550  
                           __ptext90 5436                             __ptext82 6364  
                           __ptext74 6164                             __ptext66 0000  
                           __ptext58 6288                             __ptext91 5136  
                           __ptext83 44EE                             __ptext75 5656  
                           __ptext67 62BE                             __ptext59 639C  
                           __ptext92 5ECE                             __ptext84 48D2  
                           __ptext76 10BA                             __ptext68 6336  
                           __ptext93 5DAC                             __ptext85 63B0  
                           __ptext77 3E3A                             __ptext69 4B00  
                           __ptext94 0000                             __ptext86 5C44  
                           __ptext78 2558                             __ptext95 5818  
                           __ptext87 5E98                             __ptext79 4202  
                           __ptext96 0000                             __ptext88 5AC6  
                           __ptext97 4384                             __ptext89 56CE  
                           __ptext98 57AC                             __ptext99 587C  
                     ??_DHCP_Handler 00B1                         _SSP1CON1bits 000FC6  
                           _lcd_busy 6388                             _lcd_init 51D6  
                 DHCP_Request@ethMAC 00A9                             _high_isr 0008  
                         _ARPV4_Init 62BE                         time@the_time 001C  
                           _lcd_puts 6230                     __size_of_sprintf 002C  
                __end_of_UDP_Receive 4DBE                     ??_ETH_WriteBlock 001B  
                  _remoteIpv4Address 0224                   ETH_WriteStart@type 0019  
          ARPV4_Lookup@entry_pointer 001F                     ??_ETH_WriteStart 001B  
                      __size_of_main 00E6                        ??_SYSLOG_Init 0031  
                     ??_DHCP_Request 0033                        __size_of_time 0054  
                    _TCP_GetRxLength 587C                Network_Read@debug_str 015B  
                  UDP_Send@udpLength 007B                     PHY_Write@GIESave 001C  
                           _spi_init 6372                             int$flags 0049  
               _rxPacketStatusVector 01CC          __size_ofi1_ETH_EventHandler 0036  
                       _TCP_SendDone 60A0                         _SSP1STATbits 000FC7  
                        ??_lcd_goto1 0018                    i1_PHY_WaitForBusy 0000  
              __size_of_rtcc_handler 0028                 __end_of_SYSLOG_Write 613E  
          __size_of_ETH_GetByteCount 001E          __end_of_Network_WaitForLink 6364  
                        ??_lcd_putch 0018               i1ETH_CheckLinkUp@value 0010  
                 ?i1_PHY_WaitForBusy 0001                         ?_DHCP_Manage 0001  
                         _ETH_GetMAC 5E98                            putch@data 0017  
                       TCP_Send@data 00F0                  Network_Manage@nowPv 0218  
                         _ETH_Read32 58D6                           _ETH_Read16 5D6A  
          ETH_TxComputeChecksum@cksm 002D             __size_of_PHY_WaitForBusy 0000  
          ETH_TxComputeChecksum@seed 0029                             memcmp@s1 001C  
                           memcmp@s2 0017                           _ETH_Insert 5DAC  
                      ?_ARPV4_Packet 0001                      ETH_Write32@data 0017  
                    ETH_Write16@data 0017                        ?_ARPV4_Lookup 0017  
                           memset@p1 0017                           _ETH_Write8 63A6  
                  ??_DHCP_WriteZeros 001A                        ?_ARPV4_Update 0001  
              _receivedRemoteAddress 003B                  ??i1_PHY_WaitForBusy 0001  
         __end_of_ETH_ResetByteCount 63BA                             intlevel1 0000  
                           intlevel2 0000                            sprintf@ap 006B  
                          sprintf@pb 006C                            sprintf@wh 0060  
       __size_of_DEMO_TCP_EchoServer 00F4                       _Network_Manage 53A6  
                         _MISTATbits 000E8A                     ___lwmod@dividend 001E  
                    UDP_Receive@hptr 00DD         __size_of_TCP_ParseTCPOptions 0104  
     __size_of_ETH_RxComputeChecksum 0048                     ??_ADC_Initialize 0017  
                      _lcd_init_pins 637E        __end_of_ETH_RxComputeChecksum 5D22  
                       _rtcc_handler 60CA                      ??_ARPV4_Request 0060  
                _ETH_ComputeChecksum 5136                          ARPV4_Init@x 0017  
                         i1_PHY_Read 4FEA                          ??_uart_init 0017  
                __end_of_SYSLOG_Init 5F9A                     ??_TCP_SocketInit 0021  
                           printf@ap 0065                           _TCB_Insert 5D22  
                           printf@pb 0066            __end_ofi1_PHY_WaitForBusy 0000  
                   ??_TCP_SocketPoll 0021                          ??_rtcc_init 0017  
               IPV4_Send@totalLength 0072                        ?_ICMP_Receive 00AF  
                           sprintf@f 0062                 ETH_CheckLinkUp@value 0026  
                   DHCP_Handler@myip 00CF              __size_of_MAC_getAddress 0004  
                    ETH_WriteBlock@p 001B        IPV4_PseudoHeaderChecksum@cksm 001F  
                    ___lwmod@divisor 0020                      ARPV4_Packet@ret 0083  
                     ??_ARPV4_Packet 0060                      ___lwmod@counter 0022  
                        _UDP_Receive 4CFE                       ??_ARPV4_Lookup 001B  
               ?_ETH_ComputeChecksum 0017           TCP_PayloadSave@buffer_size 00FD  
                     ??_ARPV4_Update 0017                           _TCP_Listen 5656  
                         _IPv4_Start 4202        __size_ofi1_ETH_readLinkStatus 0000  
           ETH_Insert@current_tx_ptr 001B                    Network_Manage@now 01B9  
                         _TCP_Update 3BE2               __end_of_Network_Manage 541C  
                        ?_ARPV4_Init 0001                      DHCP_Handler@v16 00BF  
            __end_of_TCP_GetRxLength 58CC                   Network_Read@header 01AB  
      __size_of_ETH_NextPacketUpdate 0056                         UDP_Receive@x 00DB  
                      PHY_Write@data 0019                       _lcd_write_data 61D0  
                     ?_lcd_init_pins 0001                       _lcd_write_ctrl 61F0  
                       UDP_Send@cksm 0079                         PHY_Write@reg 001B  
                   ETH_Insert@offset 0019                        i1PHY_Read@reg 0007  
                      i1PHY_Read@ret 0008  
