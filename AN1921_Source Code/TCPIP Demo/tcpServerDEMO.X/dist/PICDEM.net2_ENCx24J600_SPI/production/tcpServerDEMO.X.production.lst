

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -356382666 
                                                                                               Wed Sep 09 15:20:34 2015

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   129                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   130                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   135                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   136  0000                     
   137                           	psect	idataCOMRAM
   138  0087F2                     __pidataCOMRAM:
   139                           	opt stack 0
   140                           
   141                           ;initializer for _clientState
   142  0087F2  01                 	db	1
   143                           
   144                           	psect	smallconst
   145  001000                     __psmallconst:
   146                           	opt stack 0
   147  001000  00                 	db	0
   148  001001                     _dpowers:
   149                           	opt stack 0
   150  001001  0001               	dw	1
   151  001003  000A               	dw	10
   152  001005  0064               	dw	100
   153  001007  03E8               	dw	1000
   154  001009  2710               	dw	10000
   155  00100B                     __end_of_dpowers:
   156                           	opt stack 0
   157  00100B                     _hexpowers:
   158                           	opt stack 0
   159  00100B  0001               	dw	1
   160  00100D  0010               	dw	16
   161  00100F  0100               	dw	256
   162  001011  1000               	dw	4096
   163  001013                     __end_of_hexpowers:
   164                           	opt stack 0
   165  001013                     _dhcpName:
   166                           	opt stack 0
   167  001013  50                 	db	80
   168  001014  49                 	db	73
   169  001015  43                 	db	67
   170  001016  31                 	db	49
   171  001017  38                 	db	56
   172  001018  46                 	db	70
   173  001019  39                 	db	57
   174  00101A  37                 	db	55
   175  00101B  4A                 	db	74
   176  00101C  36                 	db	54
   177  00101D  30                 	db	48
   178  00101E  20                 	db	32
   179  00101F  45                 	db	69
   180  001020  54                 	db	84
   181  001021  48                 	db	72
   182  001022  45                 	db	69
   183  001023  52                 	db	82
   184  001024  4E                 	db	78
   185  001025  45                 	db	69
   186  001026  54                 	db	84
   187  001027  00                 	db	0
   188  001028                     __end_of_dhcpName:
   189                           	opt stack 0
   190  001028                     _broadcastMAC:
   191                           	opt stack 0
   192  001028  FF                 	db	255
   193  001029  FF                 	db	255
   194  00102A  FF                 	db	255
   195  00102B  FF                 	db	255
   196  00102C  FF                 	db	255
   197  00102D  FF                 	db	255
   198  00102E                     __end_of_broadcastMAC:
   199                           	opt stack 0
   200  00102E  00                 	db	0
   201  00102F  DE                 	db	222
   202  001030  AD                 	db	173
   203  001031  00                 	db	0
   204  001032  BE                 	db	190
   205  001033  EF                 	db	239
   206  001034                     __end_of_macAddress:
   207                           	opt stack 0
   208  001034                     _UDP_CallBackTable:
   209                           	opt stack 0
   210  001034  0044               	dw	68
   211  001036  8C                 	db	low _DHCP_Handler
   212  001037  60                 	db	high _DHCP_Handler
   213  001038  00                 	db	low (_DHCP_Handler shr (0+16))
   214  001039                     __end_of_UDP_CallBackTable:
   215                           	opt stack 0
   216  001039                     STR_2:
   217  001039  0D                 	db	13
   218  00103A  0A                 	db	10
   219  00103B  0D                 	db	13
   220  00103C  0A                 	db	10
   221  00103D  53                 	db	83	;'S'
   222  00103E  74                 	db	116	;'t'
   223  00103F  61                 	db	97	;'a'
   224  001040  72                 	db	114	;'r'
   225  001041  74                 	db	116	;'t'
   226  001042  69                 	db	105	;'i'
   227  001043  6E                 	db	110	;'n'
   228  001044  67                 	db	103	;'g'
   229  001045  20                 	db	32
   230  001046  53                 	db	83	;'S'
   231  001047  79                 	db	121	;'y'
   232  001048  73                 	db	115	;'s'
   233  001049  6C                 	db	108	;'l'
   234  00104A  6F                 	db	111	;'o'
   235  00104B  67                 	db	103	;'g'
   236  00104C  20                 	db	32
   237  00104D  61                 	db	97	;'a'
   238  00104E  74                 	db	116	;'t'
   239  00104F  20                 	db	32
   240  001050  25                 	db	37
   241  001051  75                 	db	117	;'u'
   242  001052  0D                 	db	13
   243  001053  0A                 	db	10
   244  001054  00                 	db	0
   245  001055                     STR_8:
   246  001055  30                 	db	48	;'0'
   247  001056  31                 	db	49	;'1'
   248  001057  32                 	db	50	;'2'
   249  001058  33                 	db	51	;'3'
   250  001059  34                 	db	52	;'4'
   251  00105A  35                 	db	53	;'5'
   252  00105B  36                 	db	54	;'6'
   253  00105C  37                 	db	55	;'7'
   254  00105D  38                 	db	56	;'8'
   255  00105E  39                 	db	57	;'9'
   256  00105F  61                 	db	97	;'a'
   257  001060  62                 	db	98	;'b'
   258  001061  63                 	db	99	;'c'
   259  001062  64                 	db	100	;'d'
   260  001063  65                 	db	101	;'e'
   261  001064  66                 	db	102	;'f'
   262  001065  00                 	db	0
   263  001066                     STR_4:
   264  001066  57                 	db	87	;'W'
   265  001067  61                 	db	97	;'a'
   266  001068  69                 	db	105	;'i'
   267  001069  74                 	db	116	;'t'
   268  00106A  69                 	db	105	;'i'
   269  00106B  6E                 	db	110	;'n'
   270  00106C  67                 	db	103	;'g'
   271  00106D  20                 	db	32
   272  00106E  66                 	db	102	;'f'
   273  00106F  6F                 	db	111	;'o'
   274  001070  72                 	db	114	;'r'
   275  001071  20                 	db	32
   276  001072  4C                 	db	76	;'L'
   277  001073  69                 	db	105	;'i'
   278  001074  6E                 	db	110	;'n'
   279  001075  6B                 	db	107	;'k'
   280  001076  00                 	db	0
   281  001077                     STR_5:
   282  001077  4C                 	db	76	;'L'
   283  001078  69                 	db	105	;'i'
   284  001079  6E                 	db	110	;'n'
   285  00107A  6B                 	db	107	;'k'
   286  00107B  20                 	db	32
   287  00107C  73                 	db	115	;'s'
   288  00107D  74                 	db	116	;'t'
   289  00107E  61                 	db	97	;'a'
   290  00107F  72                 	db	114	;'r'
   291  001080  74                 	db	116	;'t'
   292  001081  65                 	db	101	;'e'
   293  001082  64                 	db	100	;'d'
   294  001083  00                 	db	0
   295  001084                     STR_6:
   296  001084  25                 	db	37
   297  001085  64                 	db	100	;'d'
   298  001086  2E                 	db	46
   299  001087  25                 	db	37
   300  001088  64                 	db	100	;'d'
   301  001089  2E                 	db	46
   302  00108A  25                 	db	37
   303  00108B  64                 	db	100	;'d'
   304  00108C  2E                 	db	46
   305  00108D  25                 	db	37
   306  00108E  64                 	db	100	;'d'
   307  00108F  00                 	db	0
   308  001090                     STR_3:
   309  001090  25                 	db	37
   310  001091  75                 	db	117	;'u'
   311  001092  20                 	db	32
   312  001093  3A                 	db	58	;':'
   313  001094  20                 	db	32
   314  001095  25                 	db	37
   315  001096  73                 	db	115	;'s'
   316  001097  0D                 	db	13
   317  001098  0A                 	db	10
   318  001099  00                 	db	0
   319  00109A                     STR_1:
   320  00109A  25                 	db	37
   321  00109B  78                 	db	120	;'x'
   322  00109C  20                 	db	32
   323  00109D  3A                 	db	58	;':'
   324  00109E  20                 	db	32
   325  00109F  25                 	db	37
   326  0010A0  64                 	db	100	;'d'
   327  0010A1  00                 	db	0
   328  0010A2                     STR_7:
   329  0010A2  28                 	db	40
   330  0010A3  6E                 	db	110	;'n'
   331  0010A4  75                 	db	117	;'u'
   332  0010A5  6C                 	db	108	;'l'
   333  0010A6  6C                 	db	108	;'l'
   334  0010A7  29                 	db	41
   335  0010A8  00                 	db	0
   336                           
   337                           ; #config settings
   338  0010A9  00                 	db	0	; dummy byte at the end
   339  0000                     
   340                           	psect	nvBANK2
   341  0002CC                     __pnvBANK2:
   342                           	opt stack 0
   343  0002CC                     _deviceTime:
   344                           	opt stack 0
   345  0002CC                     	ds	4
   346  0002D0                     _localTime:
   347                           	opt stack 0
   348  0002D0                     	ds	4
   349  0000                     _TMR1	set	4046
   350  0000                     _ADCON0	set	4034
   351  0000                     _ADCON1	set	4033
   352  0000                     _ADCON2	set	4032
   353  0000                     _ADRESH	set	4036
   354  0000                     _ADRESL	set	4035
   355  0000                     _BAUDCON1	set	3966
   356  0000                     _BAUDCON1bits	set	3966
   357  0000                     _LATBbits	set	3978
   358  0000                     _LATDbits	set	3980
   359  0000                     _LATE	set	3981
   360  0000                     _LATH	set	3984
   361  0000                     _LATJ	set	3985
   362  0000                     _OSCCON	set	4051
   363  0000                     _OSCTUNE	set	3995
   364  0000                     _PORTBbits	set	3969
   365  0000                     _SPBRG1	set	4015
   366  0000                     _SSP1BUF	set	4041
   367  0000                     _SSP1CON1	set	4038
   368  0000                     _SSP1CON1bits	set	4038
   369  0000                     _SSP1STATbits	set	4039
   370  0000                     _SSPBUF	set	4041
   371  0000                     _TRISA	set	3986
   372  0000                     _TRISAbits	set	3986
   373  0000                     _TRISBbits	set	3987
   374  0000                     _TRISCbits	set	3988
   375  0000                     _TRISDbits	set	3989
   376  0000                     _TRISE	set	3990
   377  0000                     _TRISH	set	3993
   378  0000                     _TRISJ	set	3994
   379  0000                     _TXREG1	set	4013
   380  0000                     _TXSTA1	set	4012
   381  0000                     _CREN1	set	32092
   382  0000                     _GIE	set	32663
   383  0000                     _GIEH	set	32663
   384  0000                     _GIEL	set	32662
   385  0000                     _IPEN	set	32391
   386  0000                     _LATB3	set	31827
   387  0000                     _LATH0	set	31872
   388  0000                     _LATH1	set	31873
   389  0000                     _LATH2	set	31874
   390  0000                     _RBPU	set	32655
   391  0000                     _SPEN1	set	32095
   392  0000                     _T1CKPS0	set	32364
   393  0000                     _T1CKPS1	set	32365
   394  0000                     _T1OSCEN	set	32363
   395  0000                     _T1SYNC	set	32362
   396  0000                     _TMR1CS	set	32361
   397  0000                     _TMR1IE	set	31976
   398  0000                     _TMR1IF	set	31984
   399  0000                     _TMR1IP	set	31992
   400  0000                     _TMR1ON	set	32360
   401  0000                     _TX1IF	set	31988
   402                           
   403                           	psect	cinit
   404  008098                     __pcinit:
   405                           	opt stack 0
   406  008098                     start_initialization:
   407                           	opt stack 0
   408  008098                     __initialization:
   409                           	opt stack 0
   410                           
   411                           ; Clear objects allocated to BANK3 (104 bytes)
   412  008098  EE03  F000         	lfsr	0,__pbssBANK3
   413  00809C  0E68               	movlw	104
   414  00809E                     clear_0:
   415  00809E  6AEE               	clrf	postinc0,c
   416  0080A0  06E8               	decf	wreg,f,c
   417  0080A2  E1FD               	bnz	clear_0
   418                           
   419                           ; Clear objects allocated to BANK2 (159 bytes)
   420  0080A4  EE02  F000         	lfsr	0,__pbssBANK2
   421  0080A8  0E9F               	movlw	159
   422  0080AA                     clear_1:
   423  0080AA  6AEE               	clrf	postinc0,c
   424  0080AC  06E8               	decf	wreg,f,c
   425  0080AE  E1FD               	bnz	clear_1
   426                           
   427                           ; Clear objects allocated to BANK1 (81 bytes)
   428  0080B0  EE01  F083         	lfsr	0,__pbssBANK1
   429  0080B4  0E51               	movlw	81
   430  0080B6                     clear_2:
   431  0080B6  6AEE               	clrf	postinc0,c
   432  0080B8  06E8               	decf	wreg,f,c
   433  0080BA  E1FD               	bnz	clear_2
   434                           
   435                           ; Clear objects allocated to BANK0 (2 bytes)
   436  0080BC  0100               	movlb	0
   437  0080BE  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
   438  0080C0  6BFE               	clrf	__pbssBANK0& (0+255),b
   439                           
   440                           ; Initialize objects allocated to COMRAM (1 bytes)
   441                           ; load TBLPTR registers with __pidataCOMRAM
   442  0080C2  0EF2               	movlw	low __pidataCOMRAM
   443  0080C4  6EF6               	movwf	tblptrl,c
   444  0080C6  0E87               	movlw	high __pidataCOMRAM
   445  0080C8  6EF7               	movwf	tblptrh,c
   446  0080CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   447  0080CC  6EF8               	movwf	tblptru,c
   448  0080CE  0009               	tblrd		*+	;fetch initializer
   449  0080D0  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   450  0080D4                     end_of_initialization:
   451                           	opt stack 0
   452  0080D4                     __end_of__initialization:
   453                           	opt stack 0
   454  0080D4  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   455  0080D6  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   456  0080D8  0100               	movlb	0
   457  0080DA  EF78  F036         	goto	_main	;jump to C main() function
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           
   465                           	psect	dataCOMRAM
   466  00005D                     __pdataCOMRAM:
   467                           	opt stack 0
   468  00005D                     _clientState:
   469                           	opt stack 0
   470  00005D                     	ds	1
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           
   478                           	psect	bssBANK0
   479  0000FE                     __pbssBANK0:
   480                           	opt stack 0
   481  0000FE                     _currentTCB:
   482                           	opt stack 0
   483  0000FE                     	ds	2
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           
   491                           	psect	bssBANK1
   492  000183                     __pbssBANK1:
   493                           	opt stack 0
   494  000183                     _ethData:
   495                           	opt stack 0
   496  000183                     	ds	7
   497  00018A                     _dhcpLeaseTime:
   498                           	opt stack 0
   499  00018A                     	ds	4
   500  00018E                     _ipv4Address:
   501                           	opt stack 0
   502  00018E                     	ds	4
   503  000192                     _ipv4SubnetMask:
   504                           	opt stack 0
   505  000192                     	ds	4
   506  000196                     _receivedRemoteAddress:
   507                           	opt stack 0
   508  000196                     	ds	4
   509  00019A                     _TXPacketSize:
   510                           	opt stack 0
   511  00019A                     	ds	2
   512  00019C                     _nextAvailablePort:
   513                           	opt stack 0
   514  00019C                     	ds	2
   515  00019E                     _nextPacketPointer:
   516                           	opt stack 0
   517  00019E                     	ds	2
   518  0001A0                     _rcvPayloadLen:
   519                           	opt stack 0
   520  0001A0                     	ds	2
   521  0001A2                     _tcbList:
   522                           	opt stack 0
   523  0001A2                     	ds	2
   524  0001A4                     _tcpMss:
   525                           	opt stack 0
   526  0001A4                     	ds	2
   527  0001A6                     _last_bank:
   528                           	opt stack 0
   529  0001A6                     	ds	1
   530  0001A7                     _tcbListSize:
   531                           	opt stack 0
   532  0001A7                     	ds	1
   533  0001A8                     _ipv4Header:
   534                           	opt stack 0
   535  0001A8                     	ds	20
   536  0001BC                     _tcpHeader:
   537                           	opt stack 0
   538  0001BC                     	ds	20
   539  0001D0                     _arpTimer:
   540                           	opt stack 0
   541  0001D0                     	ds	4
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           
   549                           	psect	bssBANK2
   550  000200                     __pbssBANK2:
   551                           	opt stack 0
   552  000200                     _led_values:
   553                           	opt stack 0
   554  000200                     	ds	16
   555  000210                     _ipv4DNS:
   556                           	opt stack 0
   557  000210                     	ds	8
   558  000218                     _rxPacketStatusVector:
   559                           	opt stack 0
   560  000218                     	ds	6
   561  00021E                     Network_Manage@nowPv:
   562                           	opt stack 0
   563  00021E                     	ds	4
   564  000222                     _dhcpServerId:
   565                           	opt stack 0
   566  000222                     	ds	4
   567  000226                     _ipv4Router:
   568                           	opt stack 0
   569  000226                     	ds	4
   570  00022A                     _nextSequenceNumber:
   571                           	opt stack 0
   572  00022A                     	ds	4
   573  00022E                     _remoteIpv4Address:
   574                           	opt stack 0
   575  00022E                     	ds	4
   576  000232                     DEMO_TCP_EchoServer@port7TCB:
   577                           	opt stack 0
   578  000232                     	ds	55
   579  000269                     DEMO_TCP_EchoServer@rxdataPort7:
   580                           	opt stack 0
   581  000269                     	ds	20
   582  00027D                     DEMO_TCP_EchoServer@txdataPort7:
   583                           	opt stack 0
   584  00027D                     	ds	20
   585  000291                     _udpHeader:
   586                           	opt stack 0
   587  000291                     	ds	8
   588  000299                     _ethMAC:
   589                           	opt stack 0
   590  000299                     	ds	6
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           
   598                           	psect	bssBANK3
   599  000300                     __pbssBANK3:
   600                           	opt stack 0
   601  000300                     _arpMap:
   602                           	opt stack 0
   603  000300                     	ds	104
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           postinc0	equ	0xFEE
   609                           wreg	equ	0xFE8
   610                           
   611                           	psect	cstackBANK2
   612  00029F                     __pcstackBANK2:
   613                           	opt stack 0
   614  00029F                     main@old_ip:
   615                           	opt stack 0
   616                           
   617                           ; 4 bytes @ 0x0
   618  00029F                     	ds	4
   619  0002A3                     main@t:
   620                           	opt stack 0
   621                           
   622                           ; 4 bytes @ 0x4
   623  0002A3                     	ds	4
   624  0002A7                     main@no_ip_display:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x8
   628  0002A7                     	ds	1
   629  0002A8                     main@str:
   630                           	opt stack 0
   631                           
   632                           ; 32 bytes @ 0x9
   633  0002A8                     	ds	32
   634  0002C8                     main@ip:
   635                           	opt stack 0
   636                           
   637                           ; 4 bytes @ 0x29
   638  0002C8                     	ds	4
   639                           tblptru	equ	0xFF8
   640                           tblptrh	equ	0xFF7
   641                           tblptrl	equ	0xFF6
   642                           tablat	equ	0xFF5
   643                           postinc0	equ	0xFEE
   644                           wreg	equ	0xFE8
   645                           
   646                           	psect	cstackBANK1
   647  000100                     __pcstackBANK1:
   648                           	opt stack 0
   649  000100                     ??_IPV4_Packet:
   650                           
   651                           ; 0 bytes @ 0x0
   652  000100                     	ds	28
   653  00011C                     ??_Network_Read:
   654                           
   655                           ; 0 bytes @ 0x1C
   656  00011C                     	ds	4
   657  000120                     Network_Read@debug_str:
   658                           	opt stack 0
   659                           
   660                           ; 80 bytes @ 0x20
   661  000120                     	ds	80
   662  000170                     Network_Read@header:
   663                           	opt stack 0
   664                           
   665                           ; 14 bytes @ 0x70
   666  000170                     	ds	14
   667  00017E                     ??_Network_Manage:
   668                           
   669                           ; 0 bytes @ 0x7E
   670  00017E                     	ds	1
   671  00017F                     Network_Manage@now:
   672                           	opt stack 0
   673                           
   674                           ; 4 bytes @ 0x7F
   675  00017F                     	ds	4
   676                           tblptru	equ	0xFF8
   677                           tblptrh	equ	0xFF7
   678                           tblptrl	equ	0xFF6
   679                           tablat	equ	0xFF5
   680                           postinc0	equ	0xFEE
   681                           wreg	equ	0xFE8
   682                           
   683                           	psect	cstackBANK0
   684  000060                     __pcstackBANK0:
   685                           	opt stack 0
   686  000060                     IPv4_Start@targetAddress:
   687                           	opt stack 0
   688                           
   689                           ; 4 bytes @ 0x0
   690  000060                     	ds	4
   691  000064                     IPv4_Start@macAddress:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x4
   695  000064                     	ds	2
   696  000066                     IPv4_Start@ret:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x6
   700  000066                     	ds	1
   701  000067                     ??_ICMP_EchoReply:
   702  000067                     ??_TCP_Snd:
   703  000067                     UDP_Start@destIP:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x7
   707  000067                     	ds	4
   708  00006B                     UDP_Start@srcPort:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0xB
   712  00006B                     	ds	2
   713  00006D                     UDP_Start@dstPort:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0xD
   717  00006D                     	ds	2
   718  00006F                     DHCP_Request@started:
   719                           	opt stack 0
   720  00006F                     ICMP_EchoReply@cksm:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0xF
   724  00006F                     	ds	1
   725  000070                     DHCP_Request@type:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x10
   729  000070                     	ds	1
   730  000071                     ICMP_EchoReply@ipv4PayloadLength:
   731                           	opt stack 0
   732  000071                     DHCP_Request@ethMAC:
   733                           	opt stack 0
   734                           
   735                           ; 6 bytes @ 0x11
   736  000071                     	ds	2
   737  000073                     ICMP_EchoReply@ret:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x13
   741  000073                     	ds	1
   742  000074                     ICMP_EchoReply@icmpHdr:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x14
   746  000074                     	ds	1
   747  000075                     ??_ICMP_Receive:
   748                           
   749                           ; 0 bytes @ 0x15
   750  000075                     	ds	2
   751  000077                     DHCP_Handler@ip:
   752                           	opt stack 0
   753                           
   754                           ; 8 bytes @ 0x17
   755  000077                     	ds	3
   756  00007A                     ICMP_Receive@icmpHdr:
   757                           	opt stack 0
   758                           
   759                           ; 8 bytes @ 0x1A
   760  00007A                     	ds	5
   761  00007F                     DHCP_Handler@v:
   762                           	opt stack 0
   763                           
   764                           ; 4 bytes @ 0x1F
   765  00007F                     	ds	4
   766  000083                     DHCP_Handler@v16:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x23
   770  000083                     	ds	2
   771  000085                     DHCP_Handler@option:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0x25
   775  000085                     	ds	1
   776  000086                     DHCP_Handler@ethPktMAC:
   777                           	opt stack 0
   778                           
   779                           ; 6 bytes @ 0x26
   780  000086                     	ds	6
   781  00008C                     DHCP_Handler@ethMAC:
   782                           	opt stack 0
   783                           
   784                           ; 6 bytes @ 0x2C
   785  00008C                     	ds	6
   786  000092                     DHCP_Handler@optionLength:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x32
   790  000092                     	ds	1
   791  000093                     DHCP_Handler@myip:
   792                           	opt stack 0
   793                           
   794                           ; 4 bytes @ 0x33
   795  000093                     	ds	4
   796  000097                     TCP_Snd@data:
   797                           	opt stack 0
   798  000097                     UDP_Receive@udpcksm:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x37
   802  000097                     	ds	2
   803  000099                     ??_UDP_Receive:
   804  000099                     TCP_Snd@cksm:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x39
   808  000099                     	ds	2
   809  00009B                     TCP_Snd@payloadLength:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x3B
   813  00009B                     	ds	2
   814  00009D                     TCP_Snd@ret:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0x3D
   818  00009D                     	ds	1
   819  00009E                     TCP_Snd@tcpDataLength:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x3E
   823  00009E                     	ds	1
   824  00009F                     UDP_Receive@x:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x3F
   828  00009F                     	ds	1
   829  0000A0                     TCP_Snd@txHeader:
   830                           	opt stack 0
   831                           
   832                           ; 20 bytes @ 0x40
   833  0000A0                     	ds	1
   834  0000A1                     UDP_Receive@hptr:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0x41
   838  0000A1                     	ds	19
   839  0000B4                     ??_TCP_PayloadSave:
   840  0000B4                     TCP_Send@tcbPtr:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x54
   844  0000B4                     	ds	2
   845  0000B6                     TCP_Send@data:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x56
   849  0000B6                     	ds	2
   850  0000B8                     TCP_Send@dataLen:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x58
   854  0000B8                     	ds	9
   855  0000C1                     TCP_PayloadSave@buffer_size:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x61
   859  0000C1                     	ds	2
   860  0000C3                     ??_TCP_FiniteStateMachine:
   861                           
   862                           ; 0 bytes @ 0x63
   863  0000C3                     	ds	12
   864  0000CF                     TCP_FiniteStateMachine@ret:
   865                           	opt stack 0
   866                           
   867                           ; 1 bytes @ 0x6F
   868  0000CF                     	ds	1
   869  0000D0                     TCP_FiniteStateMachine@notAckBytes:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x70
   873  0000D0                     	ds	2
   874  0000D2                     TCP_FiniteStateMachine@event:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x72
   878  0000D2                     	ds	1
   879  0000D3                     TCP_FiniteStateMachine@nextState:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x73
   883  0000D3                     	ds	1
   884  0000D4                     ??_TCP_Update:
   885  0000D4                     TCP_Listen@tcbPtr:
   886                           	opt stack 0
   887  0000D4                     TCP_Recv@remoteAddress:
   888                           	opt stack 0
   889                           
   890                           ; 4 bytes @ 0x74
   891  0000D4                     	ds	2
   892  0000D6                     
   893                           ; 0 bytes @ 0x76
   894  0000D6                     	ds	2
   895  0000D8                     TCP_Recv@length:
   896                           	opt stack 0
   897  0000D8                     DEMO_TCP_EchoServer@txLen:
   898                           	opt stack 0
   899                           
   900                           ; 2 bytes @ 0x78
   901  0000D8                     	ds	2
   902  0000DA                     ??_TCP_Recv:
   903  0000DA                     DEMO_TCP_EchoServer@socket_state:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x7A
   907  0000DA                     	ds	1
   908  0000DB                     DEMO_TCP_EchoServer@rxLen:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x7B
   912  0000DB                     	ds	1
   913  0000DC                     TCP_Update@count:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x7C
   917  0000DC                     	ds	1
   918  0000DD                     DEMO_TCP_EchoServer@i:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x7D
   922  0000DD                     	ds	1
   923  0000DE                     TCP_Update@tcbPtr:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x7E
   927  0000DE                     	ds	24
   928  0000F6                     TCP_Recv@count:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x96
   932  0000F6                     	ds	1
   933  0000F7                     TCP_Recv@tcbPtr:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x97
   937  0000F7                     	ds	2
   938  0000F9                     IPV4_Packet@hdrLen:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x99
   942  0000F9                     	ds	1
   943  0000FA                     IPV4_Packet@length:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0x9A
   947  0000FA                     	ds	2
   948  0000FC                     IPV4_Packet@cksm:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0x9C
   952  0000FC                     	ds	2
   953                           tblptru	equ	0xFF8
   954                           tblptrh	equ	0xFF7
   955                           tblptrl	equ	0xFF6
   956                           tablat	equ	0xFF5
   957                           postinc0	equ	0xFEE
   958                           wreg	equ	0xFE8
   959                           
   960                           	psect	cstackCOMRAM
   961  000001                     __pcstackCOMRAM:
   962                           	opt stack 0
   963  000001                     ??_low_isr:
   964  000001                     
   965                           ; 1 bytes @ 0x0
   966  000001                     	ds	1
   967  000002                     ?_memcmp:
   968                           	opt stack 0
   969  000002                     ?_ARPV4_Lookup:
   970                           	opt stack 0
   971  000002                     ?_IPV4_PseudoHeaderChecksum:
   972                           	opt stack 0
   973  000002                     ?___lwdiv:
   974                           	opt stack 0
   975  000002                     ?_time:
   976                           	opt stack 0
   977  000002                     ?_IPV4_GetMyIP:
   978                           	opt stack 0
   979  000002                     lcd_write_ctrl@c:
   980                           	opt stack 0
   981  000002                     lcd_write_data@d:
   982                           	opt stack 0
   983  000002                     LED_Init@x:
   984                           	opt stack 0
   985  000002                     SPI_ExchangeByte@v:
   986                           	opt stack 0
   987  000002                     putch@data:
   988                           	opt stack 0
   989  000002                     ARPV4_Init@x:
   990                           	opt stack 0
   991  000002                     memcmp@s2:
   992                           	opt stack 0
   993  000002                     time@t:
   994                           	opt stack 0
   995  000002                     ARPV4_Update@entryPointer:
   996                           	opt stack 0
   997  000002                     IPV4_PseudoHeaderChecksum@payloadLen:
   998                           	opt stack 0
   999  000002                     TCB_Insert@ptr:
  1000                           	opt stack 0
  1001  000002                     TCB_Reset@tcbPtr:
  1002                           	opt stack 0
  1003  000002                     TCB_Check@ptr:
  1004                           	opt stack 0
  1005  000002                     ___lwdiv@dividend:
  1006                           	opt stack 0
  1007  000002                     memset@p1:
  1008                           	opt stack 0
  1009  000002                     ARPV4_Lookup@ip_address:
  1010                           	opt stack 0
  1011                           
  1012                           ; 4 bytes @ 0x1
  1013  000002                     	ds	1
  1014  000003                     ??_lcd_init:
  1015  000003                     ?_ETH_Read16:
  1016                           	opt stack 0
  1017  000003                     ?_ETH_ReadBlock:
  1018                           	opt stack 0
  1019  000003                     ?_ETH_Read32:
  1020                           	opt stack 0
  1021  000003                     lcd_putch@c:
  1022                           	opt stack 0
  1023  000003                     lcd_goto1@pos:
  1024                           	opt stack 0
  1025  000003                     ENCx24_BankselSPI@a:
  1026                           	opt stack 0
  1027  000003                     ETH_Read8@ret:
  1028                           	opt stack 0
  1029  000003                     ETH_Write8@data:
  1030                           	opt stack 0
  1031  000003                     ETH_ReadBlock@data:
  1032                           	opt stack 0
  1033  000003                     ETH_Write16@data:
  1034                           	opt stack 0
  1035  000003                     ETH_WriteBlock@data:
  1036                           	opt stack 0
  1037  000003                     ETH_SetRXptr@address:
  1038                           	opt stack 0
  1039  000003                     memcmp@n:
  1040                           	opt stack 0
  1041  000003                     ETH_Write32@data:
  1042                           	opt stack 0
  1043                           
  1044                           ; 4 bytes @ 0x2
  1045  000003                     	ds	1
  1046  000004                     ??_IPV4_PseudoHeaderChecksum:
  1047  000004                     ??_TCB_Reset:
  1048  000004                     ??_TCB_Check:
  1049  000004                     ENCx24_BankselSPI@bank:
  1050                           	opt stack 0
  1051  000004                     ARPV4_Update@x:
  1052                           	opt stack 0
  1053  000004                     lcd_puts@s:
  1054                           	opt stack 0
  1055  000004                     DHCP_WriteZeros@length:
  1056                           	opt stack 0
  1057  000004                     ___lwdiv@divisor:
  1058                           	opt stack 0
  1059  000004                     memset@c:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0x3
  1063  000004                     	ds	1
  1064  000005                     ??_memcmp:
  1065  000005                     ?_ENCx24_Read:
  1066                           	opt stack 0
  1067  000005                     ETH_MACRead8@v:
  1068                           	opt stack 0
  1069  000005                     ENCx24_Write@data:
  1070                           	opt stack 0
  1071  000005                     ENCx24_BFS@bitMask:
  1072                           	opt stack 0
  1073  000005                     ENCx24_BFC@bitMask:
  1074                           	opt stack 0
  1075  000005                     ETH_Read16@ret:
  1076                           	opt stack 0
  1077  000005                     ETH_ReadBlock@length:
  1078                           	opt stack 0
  1079  000005                     ETH_WriteBlock@len:
  1080                           	opt stack 0
  1081                           
  1082                           ; 2 bytes @ 0x4
  1083  000005                     	ds	1
  1084  000006                     time@gie_val:
  1085                           	opt stack 0
  1086  000006                     ETH_MACRead8@bank:
  1087                           	opt stack 0
  1088  000006                     TCB_Check@ret:
  1089                           	opt stack 0
  1090  000006                     ___lwdiv@counter:
  1091                           	opt stack 0
  1092  000006                     memset@n:
  1093                           	opt stack 0
  1094                           
  1095                           ; 2 bytes @ 0x5
  1096  000006                     	ds	1
  1097  000007                     ??_ETH_ReadBlock:
  1098  000007                     ENCx24_Read@bank:
  1099                           	opt stack 0
  1100  000007                     ENCx24_Write@bank:
  1101                           	opt stack 0
  1102  000007                     ENCx24_BFS@bank:
  1103                           	opt stack 0
  1104  000007                     ENCx24_BFC@bank:
  1105                           	opt stack 0
  1106  000007                     ETH_MACRead8@a:
  1107                           	opt stack 0
  1108  000007                     TCB_Check@count:
  1109                           	opt stack 0
  1110  000007                     memcmp@s1:
  1111                           	opt stack 0
  1112  000007                     ETH_WriteBlock@p:
  1113                           	opt stack 0
  1114  000007                     ___lwdiv@quotient:
  1115                           	opt stack 0
  1116  000007                     time@the_time:
  1117                           	opt stack 0
  1118  000007                     ETH_Read32@ret:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x6
  1122  000007                     	ds	1
  1123  000008                     ENCx24_Write@a:
  1124                           	opt stack 0
  1125  000008                     ENCx24_BFS@a:
  1126                           	opt stack 0
  1127  000008                     ENCx24_BFC@a:
  1128                           	opt stack 0
  1129  000008                     IPV4_PseudoHeaderChecksum@v:
  1130                           	opt stack 0
  1131  000008                     ETH_GetMAC@macAddr:
  1132                           	opt stack 0
  1133  000008                     ENCx24_Read@v:
  1134                           	opt stack 0
  1135  000008                     ETH_ReadBlock@p:
  1136                           	opt stack 0
  1137  000008                     TCB_Check@tcbPtr:
  1138                           	opt stack 0
  1139  000008                     memset@p:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x7
  1143  000008                     	ds	1
  1144  000009                     ?___lwmod:
  1145                           	opt stack 0
  1146  000009                     IPV4_PseudoHeaderChecksum@len:
  1147                           	opt stack 0
  1148  000009                     ETH_Flush@newRXTail:
  1149                           	opt stack 0
  1150  000009                     ___lwmod@dividend:
  1151                           	opt stack 0
  1152                           
  1153                           ; 2 bytes @ 0x8
  1154  000009                     	ds	1
  1155  00000A                     ?_TCP_GetReceivedData:
  1156                           	opt stack 0
  1157  00000A                     ?_TCP_GetRxLength:
  1158                           	opt stack 0
  1159  00000A                     ENCx24_Read@a:
  1160                           	opt stack 0
  1161  00000A                     ETH_ReadBlock@len:
  1162                           	opt stack 0
  1163  00000A                     ARPV4_Lookup@entry_pointer:
  1164                           	opt stack 0
  1165  00000A                     TCP_SocketInit@tcbPtr:
  1166                           	opt stack 0
  1167  00000A                     TCP_SocketPoll@socket_ptr:
  1168                           	opt stack 0
  1169  00000A                     TCP_Bind@tcbPtr:
  1170                           	opt stack 0
  1171  00000A                     TCP_SendDone@tcbPtr:
  1172                           	opt stack 0
  1173  00000A                     TCP_InsertRxBuffer@tcbPtr:
  1174                           	opt stack 0
  1175  00000A                     TCP_GetReceivedData@tcbPtr:
  1176                           	opt stack 0
  1177  00000A                     TCP_GetRxLength@tcbPtr:
  1178                           	opt stack 0
  1179  00000A                     IPV4_PseudoHeaderChecksum@cksm:
  1180                           	opt stack 0
  1181                           
  1182                           ; 4 bytes @ 0x9
  1183  00000A                     	ds	1
  1184  00000B                     ??_ETH_SendSystemReset:
  1185  00000B                     ?_ENCx24_PhyRead:
  1186                           	opt stack 0
  1187  00000B                     ?_ETH_GetByteCount:
  1188                           	opt stack 0
  1189  00000B                     ?_ETH_readLinkStatus:
  1190                           	opt stack 0
  1191  00000B                     ETH_EventHandler@mabbipgVal:
  1192                           	opt stack 0
  1193  00000B                     ETH_Dump@length:
  1194                           	opt stack 0
  1195  00000B                     ETH_WriteStart@destMAC:
  1196                           	opt stack 0
  1197  00000B                     waitForDMA@econ1_val:
  1198                           	opt stack 0
  1199  00000B                     ENCx24_PHYWrite@data:
  1200                           	opt stack 0
  1201  00000B                     ETH_Insert@len:
  1202                           	opt stack 0
  1203  00000B                     ___lwmod@divisor:
  1204                           	opt stack 0
  1205                           
  1206                           ; 2 bytes @ 0xA
  1207  00000B                     	ds	1
  1208  00000C                     ??_TCP_GetReceivedData:
  1209  00000C                     ??_TCP_GetRxLength:
  1210  00000C                     ARPV4_Lookup@x:
  1211                           	opt stack 0
  1212  00000C                     TCP_SocketPoll@tmpSocketState:
  1213                           	opt stack 0
  1214  00000C                     TCP_SendDone@ret:
  1215                           	opt stack 0
  1216  00000C                     TCP_Bind@port:
  1217                           	opt stack 0
  1218  00000C                     TCP_InsertRxBuffer@data:
  1219                           	opt stack 0
  1220                           
  1221                           ; 2 bytes @ 0xB
  1222  00000C                     	ds	1
  1223  00000D                     ?_ETH_TxComputeChecksum:
  1224                           	opt stack 0
  1225  00000D                     ?_ETH_RxComputeChecksum:
  1226                           	opt stack 0
  1227  00000D                     ENCx24_PhyRead@a:
  1228                           	opt stack 0
  1229  00000D                     ENCx24_PHYWrite@a:
  1230                           	opt stack 0
  1231  00000D                     ___lwmod@counter:
  1232                           	opt stack 0
  1233  00000D                     ETH_EventHandler@macon2Val:
  1234                           	opt stack 0
  1235  00000D                     ETH_Dump@newRXTail:
  1236                           	opt stack 0
  1237  00000D                     ETH_WriteStart@type:
  1238                           	opt stack 0
  1239  00000D                     ETH_Copy@len:
  1240                           	opt stack 0
  1241  00000D                     ETH_TxComputeChecksum@position:
  1242                           	opt stack 0
  1243  00000D                     ETH_RxComputeChecksum@len:
  1244                           	opt stack 0
  1245  00000D                     ETH_GetByteCount@wPtr:
  1246                           	opt stack 0
  1247  00000D                     ETH_Insert@offset:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0xC
  1251  00000D                     	ds	1
  1252  00000E                     ?__doprnt:
  1253                           	opt stack 0
  1254  00000E                     __doprnt@f:
  1255                           	opt stack 0
  1256  00000E                     TCP_InsertRxBuffer@data_len:
  1257                           	opt stack 0
  1258  00000E                     IPV4_PseudoHeaderChecksum@tmp:
  1259                           	opt stack 0
  1260                           
  1261                           ; 12 bytes @ 0xD
  1262  00000E                     	ds	1
  1263  00000F                     ??_ARPV4_Packet:
  1264  00000F                     ??_TCP_ParseTCPOptions:
  1265  00000F                     __doprnt@ap:
  1266                           	opt stack 0
  1267  00000F                     ETH_EventHandler@estatVal:
  1268                           	opt stack 0
  1269  00000F                     ETH_Copy@txBufferAddress:
  1270                           	opt stack 0
  1271  00000F                     ETH_TxComputeChecksum@length:
  1272                           	opt stack 0
  1273  00000F                     ETH_RxComputeChecksum@seed:
  1274                           	opt stack 0
  1275  00000F                     ETH_Insert@current_tx_pointer:
  1276                           	opt stack 0
  1277  00000F                     ETH_CheckLinkUp@value:
  1278                           	opt stack 0
  1279  00000F                     ARPV4_Request@destAddress:
  1280                           	opt stack 0
  1281                           
  1282                           ; 4 bytes @ 0xE
  1283  00000F                     	ds	1
  1284  000010                     ??__doprnt:
  1285  000010                     TCP_GetReceivedData@ret:
  1286                           	opt stack 0
  1287  000010                     TCP_GetRxLength@ret:
  1288                           	opt stack 0
  1289                           
  1290                           ; 2 bytes @ 0xF
  1291  000010                     	ds	1
  1292  000011                     ??_ETH_RxComputeChecksum:
  1293  000011                     ETH_Insert@data:
  1294                           	opt stack 0
  1295  000011                     TCP_ParseTCPOptions@ret:
  1296                           	opt stack 0
  1297  000011                     ETH_EventHandler@eirVal:
  1298                           	opt stack 0
  1299  000011                     ETH_TxComputeChecksum@seed:
  1300                           	opt stack 0
  1301                           
  1302                           ; 2 bytes @ 0x10
  1303  000011                     	ds	1
  1304  000012                     TCP_ParseTCPOptions@opt:
  1305                           	opt stack 0
  1306                           
  1307                           ; 1 bytes @ 0x11
  1308  000012                     	ds	1
  1309  000013                     ??_ETH_TxComputeChecksum:
  1310  000013                     ??_ARPV4_Request:
  1311  000013                     ETH_CheckLinkUp@ret:
  1312                           	opt stack 0
  1313  000013                     __doprnt@idx:
  1314                           	opt stack 0
  1315  000013                     TCP_ParseTCPOptions@tcpOptionsSize:
  1316                           	opt stack 0
  1317                           
  1318                           ; 2 bytes @ 0x12
  1319  000013                     	ds	1
  1320  000014                     ??_ETH_Init:
  1321  000014                     __doprnt@prec:
  1322                           	opt stack 0
  1323                           
  1324                           ; 1 bytes @ 0x13
  1325  000014                     	ds	1
  1326  000015                     ETH_RxComputeChecksum@cksm:
  1327                           	opt stack 0
  1328  000015                     __doprnt@cp:
  1329                           	opt stack 0
  1330                           
  1331                           ; 2 bytes @ 0x14
  1332  000015                     	ds	1
  1333  000016                     ETH_Init@phcon1_val:
  1334                           	opt stack 0
  1335                           
  1336                           ; 2 bytes @ 0x15
  1337  000016                     	ds	1
  1338  000017                     __doprnt@flag:
  1339                           	opt stack 0
  1340  000017                     ETH_RxComputeChecksum@rxPtr:
  1341                           	opt stack 0
  1342  000017                     ETH_TxComputeChecksum@cksm:
  1343                           	opt stack 0
  1344                           
  1345                           ; 4 bytes @ 0x16
  1346  000017                     	ds	1
  1347  000018                     __doprnt@val:
  1348                           	opt stack 0
  1349                           
  1350                           ; 2 bytes @ 0x17
  1351  000018                     	ds	1
  1352  000019                     ETH_RxComputeChecksum@econ1Val:
  1353                           	opt stack 0
  1354                           
  1355                           ; 2 bytes @ 0x18
  1356  000019                     	ds	1
  1357  00001A                     __doprnt@c:
  1358                           	opt stack 0
  1359                           
  1360                           ; 1 bytes @ 0x19
  1361  00001A                     	ds	1
  1362  00001B                     __doprnt@pb:
  1363                           	opt stack 0
  1364  00001B                     ETH_TxComputeChecksum@econ1Val:
  1365                           	opt stack 0
  1366                           
  1367                           ; 2 bytes @ 0x1A
  1368  00001B                     	ds	1
  1369  00001C                     ?_sprintf:
  1370                           	opt stack 0
  1371  00001C                     ?_printf:
  1372                           	opt stack 0
  1373  00001C                     sprintf@wh:
  1374                           	opt stack 0
  1375                           
  1376                           ; 2 bytes @ 0x1B
  1377  00001C                     	ds	1
  1378  00001D                     IPV4_Send@payloadLength:
  1379                           	opt stack 0
  1380                           
  1381                           ; 2 bytes @ 0x1C
  1382  00001D                     	ds	1
  1383  00001E                     sprintf@f:
  1384                           	opt stack 0
  1385                           
  1386                           ; 1 bytes @ 0x1D
  1387  00001E                     	ds	1
  1388  00001F                     ??_IPV4_Send:
  1389                           
  1390                           ; 0 bytes @ 0x1E
  1391  00001F                     	ds	1
  1392  000020                     printf@f:
  1393                           	opt stack 0
  1394                           
  1395                           ; 1 bytes @ 0x1F
  1396  000020                     	ds	1
  1397  000021                     printf@ap:
  1398                           	opt stack 0
  1399                           
  1400                           ; 1 bytes @ 0x20
  1401  000021                     	ds	1
  1402  000022                     printf@pb:
  1403                           	opt stack 0
  1404                           
  1405                           ; 5 bytes @ 0x21
  1406  000022                     	ds	1
  1407  000023                     IPV4_Send@ret:
  1408                           	opt stack 0
  1409                           
  1410                           ; 1 bytes @ 0x22
  1411  000023                     	ds	1
  1412  000024                     IPV4_Send@cksm:
  1413                           	opt stack 0
  1414                           
  1415                           ; 2 bytes @ 0x23
  1416  000024                     	ds	2
  1417  000026                     IPV4_Send@totalLength:
  1418                           	opt stack 0
  1419                           
  1420                           ; 2 bytes @ 0x25
  1421  000026                     	ds	1
  1422  000027                     sprintf@ap:
  1423                           	opt stack 0
  1424  000027                     SYSLOG_Write@message:
  1425                           	opt stack 0
  1426  000027                     SYSLOG_Init@t:
  1427                           	opt stack 0
  1428                           
  1429                           ; 4 bytes @ 0x26
  1430  000027                     	ds	1
  1431  000028                     ??_UDP_Send:
  1432  000028                     sprintf@pb:
  1433                           	opt stack 0
  1434                           
  1435                           ; 5 bytes @ 0x27
  1436  000028                     	ds	1
  1437  000029                     SYSLOG_Write@t:
  1438                           	opt stack 0
  1439                           
  1440                           ; 2 bytes @ 0x28
  1441  000029                     	ds	4
  1442  00002D                     UDP_Send@cksm:
  1443                           	opt stack 0
  1444                           
  1445                           ; 2 bytes @ 0x2C
  1446  00002D                     	ds	1
  1447  00002E                     ARPV4_Request@ret:
  1448                           	opt stack 0
  1449                           
  1450                           ; 1 bytes @ 0x2D
  1451  00002E                     	ds	1
  1452  00002F                     ARPV4_Packet@length:
  1453                           	opt stack 0
  1454  00002F                     UDP_Send@udpLength:
  1455                           	opt stack 0
  1456  00002F                     ARPV4_Request@header:
  1457                           	opt stack 0
  1458                           
  1459                           ; 28 bytes @ 0x2E
  1460  00002F                     	ds	2
  1461  000031                     ARPV4_Packet@mergeFlag:
  1462                           	opt stack 0
  1463                           
  1464                           ; 1 bytes @ 0x30
  1465  000031                     	ds	1
  1466  000032                     ARPV4_Packet@ret:
  1467                           	opt stack 0
  1468                           
  1469                           ; 1 bytes @ 0x31
  1470  000032                     	ds	1
  1471  000033                     ARPV4_Packet@arpPtr:
  1472                           	opt stack 0
  1473                           
  1474                           ; 2 bytes @ 0x32
  1475  000033                     	ds	2
  1476  000035                     ARPV4_Packet@x:
  1477                           	opt stack 0
  1478                           
  1479                           ; 1 bytes @ 0x34
  1480  000035                     	ds	1
  1481  000036                     ARPV4_Packet@x_2060:
  1482                           	opt stack 0
  1483                           
  1484                           ; 1 bytes @ 0x35
  1485  000036                     	ds	1
  1486  000037                     ARPV4_Packet@entryPointer:
  1487                           	opt stack 0
  1488                           
  1489                           ; 2 bytes @ 0x36
  1490  000037                     	ds	2
  1491  000039                     ARPV4_Packet@header:
  1492                           	opt stack 0
  1493                           
  1494                           ; 28 bytes @ 0x38
  1495  000039                     	ds	18
  1496  00004B                     IPv4_Start@destAddress:
  1497                           	opt stack 0
  1498                           
  1499                           ; 4 bytes @ 0x4A
  1500  00004B                     	ds	4
  1501  00004F                     IPv4_Start@protocol:
  1502                           	opt stack 0
  1503                           
  1504                           ; 1 bytes @ 0x4E
  1505  00004F                     	ds	1
  1506  000050                     ??_IPv4_Start:
  1507                           
  1508                           ; 0 bytes @ 0x4F
  1509  000050                     	ds	8
  1510  000058                     UDP_Start@ret:
  1511                           	opt stack 0
  1512  000058                     ICMP_EchoReply@ipv4Hdr:
  1513                           	opt stack 0
  1514  000058                     TCP_Snd@tcbPtr:
  1515                           	opt stack 0
  1516                           
  1517                           ; 2 bytes @ 0x57
  1518  000058                     	ds	1
  1519  000059                     DHCP_Handler@length:
  1520                           	opt stack 0
  1521                           
  1522                           ; 2 bytes @ 0x58
  1523  000059                     	ds	1
  1524  00005A                     ICMP_Receive@ipv4Hdr:
  1525                           	opt stack 0
  1526  00005A                     TCP_PayloadSave@len:
  1527                           	opt stack 0
  1528                           
  1529                           ; 2 bytes @ 0x59
  1530  00005A                     	ds	1
  1531  00005B                     ??_DHCP_Handler:
  1532                           
  1533                           ; 0 bytes @ 0x5A
  1534  00005B                     	ds	2
  1535  00005D                     tblptru	equ	0xFF8
  1536                           tblptrh	equ	0xFF7
  1537                           tblptrl	equ	0xFF6
  1538                           tablat	equ	0xFF5
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           
  1542                           ; 0 bytes @ 0x5C
  1543 ;;
  1544 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1545 ;;
  1546 ;; *************** function _main *****************
  1547 ;; Defined at:
  1548 ;;		line 134 in file "main.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  str            32    9[BANK2 ] unsigned char [32]
  1553 ;;  ip              4   41[BANK2 ] unsigned long 
  1554 ;;  t               4    4[BANK2 ] long 
  1555 ;;  old_ip          4    0[BANK2 ] unsigned long 
  1556 ;;  no_ip_displa    1    8[BANK2 ] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;		None               void
  1559 ;; Registers used:
  1560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Locals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Totals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;Total ram usage:       45 bytes
  1571 ;; Hardware stack levels required when called:   16
  1572 ;; This function calls:
  1573 ;;		_DEMO_TCP_EchoServer
  1574 ;;		_IPV4_GetMyIP
  1575 ;;		_Network_Init
  1576 ;;		_Network_Manage
  1577 ;;		_Network_WaitForLink
  1578 ;;		_SYSLOG_Init
  1579 ;;		_SYSLOG_Write
  1580 ;;		_initHW
  1581 ;;		_lcd_goto1
  1582 ;;		_lcd_puts
  1583 ;;		_memset
  1584 ;;		_sprintf
  1585 ;;		_time
  1586 ;; This function is called by:
  1587 ;;		Startup code after reset
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text0
  1592  006CF0                     __ptext0:
  1593                           	opt stack 0
  1594  006CF0                     _main:
  1595                           	opt stack 15
  1596                           
  1597                           ;main.c: 136: time_t t;
  1598                           ;main.c: 137: unsigned long ip, old_ip;
  1599                           ;main.c: 138: char str[32];
  1600                           ;main.c: 139: bool no_ip_display = 1;
  1601                           
  1602                           ;incstack = 0
  1603  006CF0  0E01               	movlw	1
  1604  006CF2  0102               	movlb	2	; () banked
  1605  006CF4  6FA7               	movwf	main@no_ip_display& (0+255),b
  1606                           
  1607                           ; BSR set to: 2
  1608                           ;main.c: 141: initHW();
  1609  006CF6  ECF2  F040         	call	_initHW	;wreg free
  1610                           
  1611                           ;main.c: 142: Network_Init();
  1612  006CFA  ECFA  F041         	call	_Network_Init	;wreg free
  1613                           
  1614                           ; BSR set to: 1
  1615                           ;main.c: 143: SYSLOG_Init();
  1616  006CFE  ECB6  F041         	call	_SYSLOG_Init	;wreg free
  1617                           
  1618                           ;main.c: 146: IPEN = 1;
  1619  006D02  8ED0               	bsf	4048,7,c	;volatile
  1620                           
  1621                           ;main.c: 147: GIEH = 1;
  1622  006D04  8EF2               	bsf	intcon,7,c	;volatile
  1623                           
  1624                           ;main.c: 148: GIEL = 1;
  1625  006D06  8CF2               	bsf	intcon,6,c	;volatile
  1626                           
  1627                           ;main.c: 150: SYSLOG_Write("Waiting for Link");
  1628  006D08  0E66               	movlw	low STR_4
  1629  006D0A  6E27               	movwf	SYSLOG_Write@message,c
  1630  006D0C  5027               	movf	SYSLOG_Write@message,w,c
  1631  006D0E  A4D8               	btfss	status,2,c
  1632  006D10  0E10               	movlw	high __smallconst
  1633  006D12  6E28               	movwf	SYSLOG_Write@message+1,c
  1634  006D14  EC79  F042         	call	_SYSLOG_Write	;wreg free
  1635                           
  1636                           ;main.c: 151: Network_WaitForLink();
  1637  006D18  ECC5  F043         	call	_Network_WaitForLink	;wreg free
  1638                           
  1639                           ;main.c: 152: SYSLOG_Write("Link started");
  1640  006D1C  0E77               	movlw	low STR_5
  1641  006D1E  6E27               	movwf	SYSLOG_Write@message,c
  1642  006D20  5027               	movf	SYSLOG_Write@message,w,c
  1643  006D22  A4D8               	btfss	status,2,c
  1644  006D24  0E10               	movlw	high __smallconst
  1645  006D26  6E28               	movwf	SYSLOG_Write@message+1,c
  1646  006D28  EC79  F042         	call	_SYSLOG_Write	;wreg free
  1647  006D2C                     l10119:
  1648                           
  1649                           ;main.c: 155: {
  1650                           ;main.c: 156: Network_Manage();
  1651  006D2C  EC76  F03C         	call	_Network_Manage	;wreg free
  1652                           
  1653                           ;main.c: 157: time(&t);
  1654  006D30  0EA3               	movlw	low main@t
  1655  006D32  6E02               	movwf	time@t,c
  1656  006D34  0E02               	movlw	high main@t
  1657  006D36  6E03               	movwf	time@t+1,c
  1658  006D38  EC55  F03E         	call	_time	;wreg free
  1659                           
  1660                           ;main.c: 159: ip = IPV4_GetMyIP();
  1661  006D3C  ECA5  F043         	call	_IPV4_GetMyIP	;wreg free
  1662  006D40  C002  F2C8         	movff	?_IPV4_GetMyIP,main@ip
  1663  006D44  C003  F2C9         	movff	?_IPV4_GetMyIP+1,main@ip+1
  1664  006D48  C004  F2CA         	movff	?_IPV4_GetMyIP+2,main@ip+2
  1665  006D4C  C005  F2CB         	movff	?_IPV4_GetMyIP+3,main@ip+3
  1666                           
  1667                           ;main.c: 161: if((no_ip_display) || (old_ip != ip))
  1668  006D50  0102               	movlb	2	; () banked
  1669  006D52  51A7               	movf	main@no_ip_display& (0+255),w,b
  1670  006D54  E10C               	bnz	l1675
  1671                           
  1672                           ; BSR set to: 2
  1673  006D56  51C8               	movf	main@ip& (0+255),w,b
  1674  006D58  199F               	xorwf	main@old_ip& (0+255),w,b
  1675  006D5A  E109               	bnz	u15270
  1676  006D5C  51C9               	movf	(main@ip+1)& (0+255),w,b
  1677  006D5E  19A0               	xorwf	(main@old_ip+1)& (0+255),w,b
  1678  006D60  E106               	bnz	u15270
  1679  006D62  51CA               	movf	(main@ip+2)& (0+255),w,b
  1680  006D64  19A1               	xorwf	(main@old_ip+2)& (0+255),w,b
  1681  006D66  E103               	bnz	u15270
  1682  006D68  51CB               	movf	(main@ip+3)& (0+255),w,b
  1683  006D6A  19A2               	xorwf	(main@old_ip+3)& (0+255),w,b
  1684  006D6C  E038               	bz	l10141
  1685  006D6E                     u15270:
  1686  006D6E                     l1675:
  1687                           
  1688                           ; BSR set to: 2
  1689                           ;main.c: 162: {
  1690                           ;main.c: 163: old_ip = ip;
  1691  006D6E  C2C8  F29F         	movff	main@ip,main@old_ip
  1692  006D72  C2C9  F2A0         	movff	main@ip+1,main@old_ip+1
  1693  006D76  C2CA  F2A1         	movff	main@ip+2,main@old_ip+2
  1694  006D7A  C2CB  F2A2         	movff	main@ip+3,main@old_ip+3
  1695                           
  1696                           ; BSR set to: 2
  1697                           ;main.c: 164: memset(str,0,sizeof(str));
  1698  006D7E  0EA8               	movlw	low main@str
  1699  006D80  6E02               	movwf	memset@p1,c
  1700  006D82  0E02               	movlw	high main@str
  1701  006D84  6E03               	movwf	memset@p1+1,c
  1702  006D86  6A05               	clrf	memset@c+1,c
  1703  006D88  6A04               	clrf	memset@c,c
  1704  006D8A  6A07               	clrf	memset@n+1,c
  1705  006D8C  0E20               	movlw	32
  1706  006D8E  6E06               	movwf	memset@n,c
  1707  006D90  EC26  F042         	call	_memset	;wreg free
  1708                           
  1709                           ; BSR set to: 2
  1710                           ;main.c: 165: sprintf(str,"%d.%d.%d.%d",((char*)&ip)[3],((char*)&ip)[2],((char*)&ip)[1],
      +                          ((char*)&ip)[0]);
  1711  006D94  0EA8               	movlw	low main@str
  1712  006D96  6E1C               	movwf	sprintf@wh,c
  1713  006D98  0E02               	movlw	high main@str
  1714  006D9A  6E1D               	movwf	sprintf@wh+1,c
  1715  006D9C  0E84               	movlw	low STR_6
  1716  006D9E  6E1E               	movwf	sprintf@f,c
  1717  006DA0  C2CB  F01F         	movff	main@ip+3,?_sprintf+3
  1718  006DA4  6A20               	clrf	?_sprintf+4,c
  1719  006DA6  C2CA  F021         	movff	main@ip+2,?_sprintf+5
  1720  006DAA  6A22               	clrf	?_sprintf+6,c
  1721  006DAC  C2C9  F023         	movff	main@ip+1,?_sprintf+7
  1722  006DB0  6A24               	clrf	?_sprintf+8,c
  1723  006DB2  C2C8  F025         	movff	main@ip,?_sprintf+9
  1724  006DB6  6A26               	clrf	?_sprintf+10,c
  1725  006DB8  ECE4  F041         	call	_sprintf	;wreg free
  1726                           
  1727                           ;main.c: 166: lcd_goto1(0);
  1728  006DBC  0E00               	movlw	0
  1729  006DBE  ECBE  F043         	call	_lcd_goto1
  1730                           
  1731                           ;main.c: 167: lcd_puts(str);
  1732  006DC2  0EA8               	movlw	low main@str
  1733  006DC4  6E04               	movwf	lcd_puts@s,c
  1734  006DC6  0E02               	movlw	high main@str
  1735  006DC8  6E05               	movwf	lcd_puts@s+1,c
  1736  006DCA  ECC3  F042         	call	_lcd_puts	;wreg free
  1737                           
  1738                           ;main.c: 168: SYSLOG_Write(str);
  1739  006DCE  0EA8               	movlw	low main@str
  1740  006DD0  6E27               	movwf	SYSLOG_Write@message,c
  1741  006DD2  0E02               	movlw	high main@str
  1742  006DD4  6E28               	movwf	SYSLOG_Write@message+1,c
  1743  006DD6  EC79  F042         	call	_SYSLOG_Write	;wreg free
  1744                           
  1745                           ;main.c: 169: no_ip_display = 0;
  1746  006DDA  0102               	movlb	2	; () banked
  1747  006DDC  6BA7               	clrf	main@no_ip_display& (0+255),b
  1748  006DDE                     l10141:
  1749                           
  1750                           ; BSR set to: 2
  1751                           ;main.c: 170: }
  1752                           ;main.c: 171: DEMO_TCP_EchoServer();
  1753  006DDE  ECD6  F034         	call	_DEMO_TCP_EchoServer	;wreg free
  1754  006DE2  D7A4               	goto	l10119
  1755  006DE4                     __end_of_main:
  1756                           	opt stack 0
  1757                           tblptru	equ	0xFF8
  1758                           tblptrh	equ	0xFF7
  1759                           tblptrl	equ	0xFF6
  1760                           tablat	equ	0xFF5
  1761                           intcon	equ	0xFF2
  1762                           postinc0	equ	0xFEE
  1763                           wreg	equ	0xFE8
  1764                           status	equ	0xFD8
  1765                           
  1766 ;; *************** function _memset *****************
  1767 ;; Defined at:
  1768 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  p1              2    1[COMRAM] PTR void 
  1771 ;;		 -> main@str(32), 
  1772 ;;  c               2    3[COMRAM] int 
  1773 ;;  n               2    5[COMRAM] unsigned int 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  p               2    7[COMRAM] PTR unsigned char 
  1776 ;;		 -> main@str(32), 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  2    1[COMRAM] PTR void 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1781 ;; Tracked objects:
  1782 ;;		On entry : F/2
  1783 ;;		On exit  : F/2
  1784 ;;		Unchanged: F/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1786 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;Total ram usage:        8 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    3
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text1
  1801  00844C                     __ptext1:
  1802                           	opt stack 0
  1803  00844C                     _memset:
  1804                           	opt stack 27
  1805                           
  1806                           ; BSR set to: 2
  1807                           
  1808                           ;incstack = 0
  1809  00844C  C002  F008         	movff	memset@p1,memset@p
  1810  008450  C003  F009         	movff	memset@p1+1,memset@p+1
  1811  008454  D008               	goto	l10097
  1812  008456                     l10093:
  1813                           
  1814                           ; BSR set to: 2
  1815  008456  C008  FFD9         	movff	memset@p,fsr2l
  1816  00845A  C009  FFDA         	movff	memset@p+1,fsr2h
  1817  00845E  C004  FFDF         	movff	memset@c,indf2
  1818                           
  1819                           ; BSR set to: 2
  1820  008462  4A08               	infsnz	memset@p,f,c
  1821  008464  2A09               	incf	memset@p+1,f,c
  1822  008466                     l10097:
  1823                           
  1824                           ; BSR set to: 2
  1825  008466  0606               	decf	memset@n,f,c
  1826  008468  A0D8               	btfss	status,0,c
  1827  00846A  0607               	decf	memset@n+1,f,c
  1828  00846C  2806               	incf	memset@n,w,c
  1829  00846E  E1F3               	bnz	l10093
  1830  008470  2807               	incf	memset@n+1,w,c
  1831  008472  E1F1               	bnz	l10093
  1832                           
  1833                           ; BSR set to: 2
  1834  008474  0012               	return		;funcret
  1835  008476                     __end_of_memset:
  1836                           	opt stack 0
  1837                           tblptru	equ	0xFF8
  1838                           tblptrh	equ	0xFF7
  1839                           tblptrl	equ	0xFF6
  1840                           tablat	equ	0xFF5
  1841                           intcon	equ	0xFF2
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           indf2	equ	0xFDF
  1845                           fsr2h	equ	0xFDA
  1846                           fsr2l	equ	0xFD9
  1847                           status	equ	0xFD8
  1848                           
  1849 ;; *************** function _lcd_puts *****************
  1850 ;; Defined at:
  1851 ;;		line 86 in file "../board_support_package/picdem2_net/lcd.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  s               2    3[COMRAM] PTR const unsigned char 
  1854 ;;		 -> main@str(32), 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;		None               void
  1859 ;; Registers used:
  1860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/2
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;Total ram usage:        2 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    5
  1873 ;; This function calls:
  1874 ;;		_lcd_putch
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text2
  1881  008586                     __ptext2:
  1882                           	opt stack 0
  1883  008586                     _lcd_puts:
  1884                           	opt stack 25
  1885                           
  1886                           ;lcd.c: 88: while(*s)
  1887                           
  1888                           ; BSR set to: 2
  1889                           ;incstack = 0
  1890  008586  D009               	goto	l10009
  1891  008588                     l10005:
  1892                           
  1893                           ;lcd.c: 89: lcd_putch(*s++);
  1894  008588  C004  FFD9         	movff	lcd_puts@s,fsr2l
  1895  00858C  C005  FFDA         	movff	lcd_puts@s+1,fsr2h
  1896  008590  50DF               	movf	indf2,w,c
  1897  008592  EC35  F043         	call	_lcd_putch
  1898  008596  4A04               	infsnz	lcd_puts@s,f,c
  1899  008598  2A05               	incf	lcd_puts@s+1,f,c
  1900  00859A                     l10009:
  1901  00859A  C004  FFD9         	movff	lcd_puts@s,fsr2l
  1902  00859E  C005  FFDA         	movff	lcd_puts@s+1,fsr2h
  1903  0085A2  50DF               	movf	indf2,w,c
  1904  0085A4  E1F1               	bnz	l10005
  1905  0085A6  0012               	return		;funcret
  1906  0085A8                     __end_of_lcd_puts:
  1907                           	opt stack 0
  1908                           tblptru	equ	0xFF8
  1909                           tblptrh	equ	0xFF7
  1910                           tblptrl	equ	0xFF6
  1911                           tablat	equ	0xFF5
  1912                           intcon	equ	0xFF2
  1913                           postinc0	equ	0xFEE
  1914                           wreg	equ	0xFE8
  1915                           indf2	equ	0xFDF
  1916                           fsr2h	equ	0xFDA
  1917                           fsr2l	equ	0xFD9
  1918                           status	equ	0xFD8
  1919                           
  1920 ;; *************** function _lcd_putch *****************
  1921 ;; Defined at:
  1922 ;;		line 76 in file "../board_support_package/picdem2_net/lcd.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  c               1    wreg     unsigned char 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  c               1    2[COMRAM] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;		None               void
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/2
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;Total ram usage:        1 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    4
  1943 ;; This function calls:
  1944 ;;		_lcd_busy
  1945 ;;		_lcd_write_data
  1946 ;; This function is called by:
  1947 ;;		_lcd_puts
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text3
  1952  00866A                     __ptext3:
  1953                           	opt stack 0
  1954  00866A                     _lcd_putch:
  1955                           	opt stack 25
  1956                           
  1957                           ;incstack = 0
  1958                           ;lcd_putch@c stored from wreg
  1959  00866A  6E03               	movwf	lcd_putch@c,c
  1960                           
  1961                           ;lcd.c: 78: if(c >= ' ' && c < 127)
  1962  00866C  0E1F               	movlw	31
  1963  00866E  6403               	cpfsgt	lcd_putch@c,c
  1964  008670  EFF0  F043         	goto	_lcd_busy
  1965  008674  0E7F               	movlw	127
  1966  008676  6003               	cpfslt	lcd_putch@c,c
  1967  008678  EFF0  F043         	goto	_lcd_busy
  1968                           
  1969                           ;lcd.c: 79: {
  1970                           ;lcd.c: 80: lcd_write_data(c);
  1971  00867C  5003               	movf	lcd_putch@c,w,c
  1972  00867E  ECF6  F042         	call	_lcd_write_data
  1973                           
  1974                           ;lcd.c: 81: }
  1975                           ;lcd.c: 82: lcd_busy();
  1976  008682  EFF0  F043         	goto	_lcd_busy	;wreg free
  1977  008686                     __end_of_lcd_putch:
  1978                           	opt stack 0
  1979                           tblptru	equ	0xFF8
  1980                           tblptrh	equ	0xFF7
  1981                           tblptrl	equ	0xFF6
  1982                           tablat	equ	0xFF5
  1983                           intcon	equ	0xFF2
  1984                           postinc0	equ	0xFEE
  1985                           wreg	equ	0xFE8
  1986                           indf2	equ	0xFDF
  1987                           fsr2h	equ	0xFDA
  1988                           fsr2l	equ	0xFD9
  1989                           status	equ	0xFD8
  1990                           
  1991 ;; *************** function _lcd_write_data *****************
  1992 ;; Defined at:
  1993 ;;		line 71 in file "../board_support_package/picdem2_net/lcd_hw.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  d               1    wreg     unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  d               1    1[COMRAM] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;		None               void
  2000 ;; Registers used:
  2001 ;;		wreg
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/2
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;Total ram usage:        1 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    3
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_lcd_putch
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text4
  2022  0085EC                     __ptext4:
  2023                           	opt stack 0
  2024  0085EC                     _lcd_write_data:
  2025                           	opt stack 25
  2026                           
  2027                           ;incstack = 0
  2028                           ;lcd_write_data@d stored from wreg
  2029  0085EC  6E02               	movwf	lcd_write_data@d,c
  2030                           
  2031                           ;lcd_hw.c: 73: LATH1 = 0;
  2032  0085EE  9290               	bcf	3984,1,c	;volatile
  2033                           
  2034                           ;lcd_hw.c: 74: LATH2 = 1;
  2035  0085F0  8490               	bsf	3984,2,c	;volatile
  2036                           
  2037                           ;lcd_hw.c: 75: LATE = d;
  2038  0085F2  C002  FF8D         	movff	lcd_write_data@d,3981	;volatile
  2039                           
  2040                           ;lcd_hw.c: 76: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
  2041  0085F6  0E03               	movlw	3
  2042  0085F8                     u15287:
  2043  0085F8  2EE8               	decfsz	wreg,f,c
  2044  0085FA  D7FE               	goto	u15287
  2045  0085FC  F000               	nop	
  2046                           
  2047                           ;lcd_hw.c: 77: LATH0 = 1;
  2048  0085FE  8090               	bsf	3984,0,c	;volatile
  2049                           
  2050                           ;lcd_hw.c: 78: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
  2051  008600  0E03               	movlw	3
  2052  008602                     u15297:
  2053  008602  2EE8               	decfsz	wreg,f,c
  2054  008604  D7FE               	goto	u15297
  2055  008606  F000               	nop	
  2056                           
  2057                           ;lcd_hw.c: 79: LATH0 = 0;
  2058  008608  9090               	bcf	3984,0,c	;volatile
  2059  00860A  0012               	return		;funcret
  2060  00860C                     __end_of_lcd_write_data:
  2061                           	opt stack 0
  2062                           tblptru	equ	0xFF8
  2063                           tblptrh	equ	0xFF7
  2064                           tblptrl	equ	0xFF6
  2065                           tablat	equ	0xFF5
  2066                           intcon	equ	0xFF2
  2067                           postinc0	equ	0xFEE
  2068                           wreg	equ	0xFE8
  2069                           indf2	equ	0xFDF
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8
  2073                           
  2074 ;; *************** function _lcd_goto1 *****************
  2075 ;; Defined at:
  2076 ;;		line 96 in file "../board_support_package/picdem2_net/lcd.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  pos             1    wreg     unsigned char 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  pos             1    2[COMRAM] unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;		None               void
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/2
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;Total ram usage:        1 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    4
  2097 ;; This function calls:
  2098 ;;		_lcd_busy
  2099 ;;		_lcd_write_ctrl
  2100 ;; This function is called by:
  2101 ;;		_main
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text5
  2106  00877C                     __ptext5:
  2107                           	opt stack 0
  2108  00877C                     _lcd_goto1:
  2109                           	opt stack 26
  2110                           
  2111                           ;incstack = 0
  2112                           ;lcd_goto1@pos stored from wreg
  2113  00877C  6E03               	movwf	lcd_goto1@pos,c
  2114                           
  2115                           ;lcd.c: 98: lcd_write_ctrl(0x80+pos);
  2116  00877E  5003               	movf	lcd_goto1@pos,w,c
  2117  008780  0F80               	addlw	128
  2118  008782  EC06  F043         	call	_lcd_write_ctrl
  2119                           
  2120                           ;lcd.c: 99: lcd_busy();
  2121  008786  EFF0  F043         	goto	_lcd_busy	;wreg free
  2122  00878A                     __end_of_lcd_goto1:
  2123                           	opt stack 0
  2124                           tblptru	equ	0xFF8
  2125                           tblptrh	equ	0xFF7
  2126                           tblptrl	equ	0xFF6
  2127                           tablat	equ	0xFF5
  2128                           intcon	equ	0xFF2
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           indf2	equ	0xFDF
  2132                           fsr2h	equ	0xFDA
  2133                           fsr2l	equ	0xFD9
  2134                           status	equ	0xFD8
  2135                           
  2136 ;; *************** function _initHW *****************
  2137 ;; Defined at:
  2138 ;;		line 50 in file "../board_support_package/picdem2_net/hardware.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;		None               void
  2145 ;; Registers used:
  2146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : F/2
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    5
  2159 ;; This function calls:
  2160 ;;		_ADC_Initialize
  2161 ;;		_LED_Init
  2162 ;;		_lcd_init
  2163 ;;		_rtcc_init
  2164 ;;		_spi_init
  2165 ;;		_uart_init
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text6
  2172  0081E4                     __ptext6:
  2173                           	opt stack 0
  2174  0081E4                     _initHW:
  2175                           	opt stack 25
  2176                           
  2177                           ; BSR set to: 2
  2178                           ;hardware.c: 53: OSCCON = 0x02;
  2179                           
  2180                           ;incstack = 0
  2181  0081E4  0E02               	movlw	2
  2182  0081E6  6ED3               	movwf	4051,c	;volatile
  2183                           
  2184                           ;hardware.c: 56: OSCTUNE = 0x40;
  2185  0081E8  0E40               	movlw	64
  2186  0081EA  6E9B               	movwf	3995,c	;volatile
  2187                           
  2188                           ; BSR set to: 2
  2189                           ;hardware.c: 59: TRISJ = 0;
  2190  0081EC  6A9A               	clrf	3994,c	;volatile
  2191                           
  2192                           ; BSR set to: 2
  2193                           ;hardware.c: 60: LATJ = 0;
  2194  0081EE  6A91               	clrf	3985,c	;volatile
  2195                           
  2196                           ; BSR set to: 2
  2197                           ;hardware.c: 62: TRISDbits.TRISD3 = 0;
  2198  0081F0  9695               	bcf	3989,3,c	;volatile
  2199                           
  2200                           ; BSR set to: 2
  2201                           ;hardware.c: 63: LATDbits.LATD3 = 1;
  2202  0081F2  868C               	bsf	3980,3,c	;volatile
  2203                           
  2204                           ; BSR set to: 2
  2205                           ;hardware.c: 65: TRISCbits.TRISC3 = 0;
  2206  0081F4  9694               	bcf	3988,3,c	;volatile
  2207                           
  2208                           ; BSR set to: 2
  2209                           ;hardware.c: 66: TRISCbits.TRISC4 = 1;
  2210  0081F6  8894               	bsf	3988,4,c	;volatile
  2211                           
  2212                           ; BSR set to: 2
  2213                           ;hardware.c: 67: TRISCbits.TRISC5 = 0;
  2214  0081F8  9A94               	bcf	3988,5,c	;volatile
  2215                           
  2216                           ;hardware.c: 69: TRISA = 0b11111100;
  2217  0081FA  0EFC               	movlw	252
  2218  0081FC  6E92               	movwf	3986,c	;volatile
  2219                           
  2220                           ; BSR set to: 2
  2221                           ;hardware.c: 76: RBPU = 0;
  2222  0081FE  9EF1               	bcf	intcon2,7,c	;volatile
  2223                           
  2224                           ; BSR set to: 2
  2225                           ;hardware.c: 78: TRISBbits.TRISB2 = 1;
  2226  008200  8493               	bsf	3987,2,c	;volatile
  2227                           
  2228                           ; BSR set to: 2
  2229                           ;hardware.c: 81: TRISBbits.TRISB4 = 0;
  2230  008202  9893               	bcf	3987,4,c	;volatile
  2231                           
  2232                           ; BSR set to: 2
  2233                           ;hardware.c: 82: LATBbits.LATB4 = 0;
  2234  008204  988A               	bcf	3978,4,c	;volatile
  2235                           
  2236                           ; BSR set to: 2
  2237                           ;hardware.c: 85: TRISBbits.TRISB3 = 0;
  2238  008206  9693               	bcf	3987,3,c	;volatile
  2239                           
  2240                           ; BSR set to: 2
  2241                           ;hardware.c: 86: LATBbits.LATB3 = 0;
  2242  008208  968A               	bcf	3978,3,c	;volatile
  2243                           
  2244                           ; BSR set to: 2
  2245                           ;hardware.c: 104: rtcc_init();
  2246  00820A  EC4E  F041         	call	_rtcc_init	;wreg free
  2247                           
  2248                           ; BSR set to: 2
  2249                           ;hardware.c: 107: spi_init();
  2250  00820E  ECD3  F043         	call	_spi_init	;wreg free
  2251                           
  2252                           ; BSR set to: 2
  2253                           ;hardware.c: 110: uart_init();
  2254  008212  EC8F  F043         	call	_uart_init	;wreg free
  2255                           
  2256                           ; BSR set to: 2
  2257                           ;hardware.c: 113: lcd_init();
  2258  008216  EC3F  F039         	call	_lcd_init	;wreg free
  2259                           
  2260                           ;hardware.c: 119: ADC_Initialize();
  2261  00821A  EC9A  F043         	call	_ADC_Initialize	;wreg free
  2262                           
  2263                           ;hardware.c: 121: LED_Init();
  2264  00821E  EF16  F043         	goto	_LED_Init	;wreg free
  2265  008222                     __end_of_initHW:
  2266                           	opt stack 0
  2267                           tblptru	equ	0xFF8
  2268                           tblptrh	equ	0xFF7
  2269                           tblptrl	equ	0xFF6
  2270                           tablat	equ	0xFF5
  2271                           intcon	equ	0xFF2
  2272                           intcon2	equ	0xFF1
  2273                           postinc0	equ	0xFEE
  2274                           wreg	equ	0xFE8
  2275                           indf2	equ	0xFDF
  2276                           fsr2h	equ	0xFDA
  2277                           fsr2l	equ	0xFD9
  2278                           status	equ	0xFD8
  2279                           
  2280 ;; *************** function _uart_init *****************
  2281 ;; Defined at:
  2282 ;;		line 55 in file "../board_support_package/picdem2_net/uart.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;		None               void
  2289 ;; Registers used:
  2290 ;;		wreg, status,2
  2291 ;; Tracked objects:
  2292 ;;		On entry : F/2
  2293 ;;		On exit  : F/2
  2294 ;;		Unchanged: F/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    3
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_initHW
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text7
  2311  00871E                     __ptext7:
  2312                           	opt stack 0
  2313  00871E                     _uart_init:
  2314                           	opt stack 26
  2315                           
  2316                           ; BSR set to: 2
  2317                           ;uart.c: 58: TRISCbits.TRISC7 = 1;
  2318                           
  2319                           ;incstack = 0
  2320  00871E  8E94               	bsf	3988,7,c	;volatile
  2321                           
  2322                           ;uart.c: 59: TRISCbits.TRISC6 = 0;
  2323  008720  9C94               	bcf	3988,6,c	;volatile
  2324                           
  2325                           ;uart.c: 62: BAUDCON1 = 0x00;
  2326  008722  6A7E               	clrf	3966,c	;volatile
  2327                           
  2328                           ; BSR set to: 2
  2329                           ;uart.c: 69: SPBRG1 = 89;
  2330  008724  0E59               	movlw	89
  2331  008726  6EAF               	movwf	4015,c	;volatile
  2332                           
  2333                           ; BSR set to: 2
  2334                           ;uart.c: 70: BAUDCON1bits.BRG16 = 1;
  2335  008728  867E               	bsf	3966,3,c	;volatile
  2336                           
  2337                           ;uart.c: 71: TXSTA1 = 0x26;
  2338  00872A  0E26               	movlw	38
  2339  00872C  6EAC               	movwf	4012,c	;volatile
  2340                           
  2341                           ; BSR set to: 2
  2342                           ;uart.c: 73: CREN1 = 1;
  2343  00872E  88AB               	bsf	4011,4,c	;volatile
  2344                           
  2345                           ; BSR set to: 2
  2346                           ;uart.c: 74: SPEN1 = 1;
  2347  008730  8EAB               	bsf	4011,7,c	;volatile
  2348                           
  2349                           ; BSR set to: 2
  2350  008732  0C26               	retlw	38	;funcret
  2351  008734                     __end_of_uart_init:
  2352                           	opt stack 0
  2353                           tblptru	equ	0xFF8
  2354                           tblptrh	equ	0xFF7
  2355                           tblptrl	equ	0xFF6
  2356                           tablat	equ	0xFF5
  2357                           intcon	equ	0xFF2
  2358                           intcon2	equ	0xFF1
  2359                           postinc0	equ	0xFEE
  2360                           wreg	equ	0xFE8
  2361                           indf2	equ	0xFDF
  2362                           fsr2h	equ	0xFDA
  2363                           fsr2l	equ	0xFD9
  2364                           status	equ	0xFD8
  2365                           
  2366 ;; *************** function _spi_init *****************
  2367 ;; Defined at:
  2368 ;;		line 46 in file "../board_support_package/picdem2_net/mssp_spi_master.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;		None               void
  2375 ;; Registers used:
  2376 ;;		wreg, status,2
  2377 ;; Tracked objects:
  2378 ;;		On entry : F/2
  2379 ;;		On exit  : F/2
  2380 ;;		Unchanged: F/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;Total ram usage:        0 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    3
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_initHW
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text8
  2397  0087A6                     __ptext8:
  2398                           	opt stack 0
  2399  0087A6                     _spi_init:
  2400                           	opt stack 26
  2401                           
  2402                           ; BSR set to: 2
  2403                           ;mssp_spi_master.c: 48: SSP1STATbits.CKE = 1;
  2404                           
  2405                           ; BSR set to: 2
  2406                           ;incstack = 0
  2407  0087A6  8CC7               	bsf	4039,6,c	;volatile
  2408                           
  2409                           ;mssp_spi_master.c: 49: SSP1STATbits.SMP = 0;
  2410  0087A8  9EC7               	bcf	4039,7,c	;volatile
  2411                           
  2412                           ; BSR set to: 2
  2413                           ;mssp_spi_master.c: 51: SSP1CON1 = 0x01;
  2414  0087AA  0E01               	movlw	1
  2415  0087AC  6EC6               	movwf	4038,c	;volatile
  2416                           
  2417                           ; BSR set to: 2
  2418                           ;mssp_spi_master.c: 52: SSP1CON1bits.SSPEN = 1;
  2419  0087AE  8AC6               	bsf	4038,5,c	;volatile
  2420                           
  2421                           ; BSR set to: 2
  2422  0087B0  0C01               	retlw	1	;funcret
  2423  0087B2                     __end_of_spi_init:
  2424                           	opt stack 0
  2425                           tblptru	equ	0xFF8
  2426                           tblptrh	equ	0xFF7
  2427                           tblptrl	equ	0xFF6
  2428                           tablat	equ	0xFF5
  2429                           intcon	equ	0xFF2
  2430                           intcon2	equ	0xFF1
  2431                           postinc0	equ	0xFEE
  2432                           wreg	equ	0xFE8
  2433                           indf2	equ	0xFDF
  2434                           fsr2h	equ	0xFDA
  2435                           fsr2l	equ	0xFD9
  2436                           status	equ	0xFD8
  2437                           
  2438 ;; *************** function _rtcc_init *****************
  2439 ;; Defined at:
  2440 ;;		line 77 in file "../board_support_package/picdem2_net/rtcc.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;		None               void
  2447 ;; Registers used:
  2448 ;;		wreg, status,2
  2449 ;; Tracked objects:
  2450 ;;		On entry : F/2
  2451 ;;		On exit  : F/2
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;Total ram usage:        0 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    3
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_initHW
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text9
  2469  00829C                     __ptext9:
  2470                           	opt stack 0
  2471  00829C                     _rtcc_init:
  2472                           	opt stack 26
  2473                           
  2474                           ; BSR set to: 2
  2475                           ;rtcc.c: 79: TMR1CS = 1;
  2476                           
  2477                           ; BSR set to: 2
  2478                           ;incstack = 0
  2479  00829C  82CD               	bsf	4045,1,c	;volatile
  2480                           
  2481                           ;rtcc.c: 80: T1OSCEN = 1;
  2482  00829E  86CD               	bsf	4045,3,c	;volatile
  2483                           
  2484                           ;rtcc.c: 81: T1CKPS0 = 0;
  2485  0082A0  98CD               	bcf	4045,4,c	;volatile
  2486                           
  2487                           ;rtcc.c: 82: T1CKPS1 = 0;
  2488  0082A2  9ACD               	bcf	4045,5,c	;volatile
  2489                           
  2490                           ;rtcc.c: 83: T1SYNC = 1;
  2491  0082A4  84CD               	bsf	4045,2,c	;volatile
  2492                           
  2493                           ;rtcc.c: 84: TMR1ON = 1;
  2494  0082A6  80CD               	bsf	4045,0,c	;volatile
  2495                           
  2496                           ; BSR set to: 2
  2497                           ;rtcc.c: 86: TMR1 = 32768UL;
  2498  0082A8  0E80               	movlw	128
  2499  0082AA  6ECF               	movwf	4047,c	;volatile
  2500  0082AC  6ACE               	clrf	4046,c	;volatile
  2501                           
  2502                           ;rtcc.c: 87: deviceTime = 1293861600;
  2503  0082AE  0EE0               	movlw	224
  2504  0082B0  6FCC               	movwf	_deviceTime& (0+255),b	;volatile
  2505  0082B2  0EC2               	movlw	194
  2506  0082B4  6FCD               	movwf	(_deviceTime+1)& (0+255),b	;volatile
  2507  0082B6  0E1E               	movlw	30
  2508  0082B8  6FCE               	movwf	(_deviceTime+2)& (0+255),b	;volatile
  2509  0082BA  0E4D               	movlw	77
  2510  0082BC  6FCF               	movwf	(_deviceTime+3)& (0+255),b	;volatile
  2511                           
  2512                           ;rtcc.c: 88: localTime = 1293861600 + 2208988800;
  2513  0082BE  0E60               	movlw	96
  2514  0082C0  6FD0               	movwf	_localTime& (0+255),b	;volatile
  2515  0082C2  0E41               	movlw	65
  2516  0082C4  6FD1               	movwf	(_localTime+1)& (0+255),b	;volatile
  2517  0082C6  0EC9               	movlw	201
  2518  0082C8  6FD2               	movwf	(_localTime+2)& (0+255),b	;volatile
  2519  0082CA  0ED0               	movlw	208
  2520  0082CC  6FD3               	movwf	(_localTime+3)& (0+255),b	;volatile
  2521                           
  2522                           ; BSR set to: 2
  2523                           ;rtcc.c: 90: TMR1IP = 1;
  2524  0082CE  809F               	bsf	3999,0,c	;volatile
  2525                           
  2526                           ; BSR set to: 2
  2527                           ;rtcc.c: 91: TMR1IE = 1;
  2528  0082D0  809D               	bsf	3997,0,c	;volatile
  2529                           
  2530                           ; BSR set to: 2
  2531  0082D2  0CD0               	retlw	208	;funcret
  2532  0082D4                     __end_of_rtcc_init:
  2533                           	opt stack 0
  2534                           tblptru	equ	0xFF8
  2535                           tblptrh	equ	0xFF7
  2536                           tblptrl	equ	0xFF6
  2537                           tablat	equ	0xFF5
  2538                           intcon	equ	0xFF2
  2539                           intcon2	equ	0xFF1
  2540                           postinc0	equ	0xFEE
  2541                           wreg	equ	0xFE8
  2542                           indf2	equ	0xFDF
  2543                           fsr2h	equ	0xFDA
  2544                           fsr2l	equ	0xFD9
  2545                           status	equ	0xFD8
  2546                           
  2547 ;; *************** function _lcd_init *****************
  2548 ;; Defined at:
  2549 ;;		line 110 in file "../board_support_package/picdem2_net/lcd.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  y               2    0        volatile int 
  2554 ;;  x               2    0        volatile int 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;		None               void
  2557 ;; Registers used:
  2558 ;;		wreg, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : F/2
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;Total ram usage:        1 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    4
  2571 ;; This function calls:
  2572 ;;		_lcd_busy
  2573 ;;		_lcd_init_pins
  2574 ;;		_lcd_write_ctrl
  2575 ;; This function is called by:
  2576 ;;		_initHW
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text10
  2581  00727E                     __ptext10:
  2582                           	opt stack 0
  2583  00727E                     _lcd_init:
  2584                           	opt stack 25
  2585                           
  2586                           ; BSR set to: 2
  2587                           ;lcd.c: 112: volatile int x,y;
  2588                           ;lcd.c: 114: lcd_init_pins();
  2589                           
  2590                           ; BSR set to: 2
  2591                           ;incstack = 0
  2592  00727E  ECEB  F043         	call	_lcd_init_pins	;wreg free
  2593                           
  2594                           ; BSR set to: 2
  2595                           ;lcd.c: 116: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2596  007282  0E88               	movlw	136
  2597  007284  6E03               	movwf	??_lcd_init& (0+255),c
  2598  007286  0E46               	movlw	70
  2599  007288                     u15307:
  2600  007288  2EE8               	decfsz	wreg,f,c
  2601  00728A  D7FE               	goto	u15307
  2602  00728C  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2603  00728E  D7FC               	goto	u15307
  2604  007290  D000               	nop2	
  2605                           
  2606                           ;lcd.c: 117: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2607  007292  0E88               	movlw	136
  2608  007294  6E03               	movwf	??_lcd_init& (0+255),c
  2609  007296  0E46               	movlw	70
  2610  007298                     u15317:
  2611  007298  2EE8               	decfsz	wreg,f,c
  2612  00729A  D7FE               	goto	u15317
  2613  00729C  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2614  00729E  D7FC               	goto	u15317
  2615  0072A0  D000               	nop2	
  2616                           
  2617                           ;lcd.c: 118: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2618  0072A2  0E88               	movlw	136
  2619  0072A4  6E03               	movwf	??_lcd_init& (0+255),c
  2620  0072A6  0E46               	movlw	70
  2621  0072A8                     u15327:
  2622  0072A8  2EE8               	decfsz	wreg,f,c
  2623  0072AA  D7FE               	goto	u15327
  2624  0072AC  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2625  0072AE  D7FC               	goto	u15327
  2626  0072B0  D000               	nop2	
  2627                           
  2628                           ;lcd.c: 119: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2629  0072B2  0E88               	movlw	136
  2630  0072B4  6E03               	movwf	??_lcd_init& (0+255),c
  2631  0072B6  0E46               	movlw	70
  2632  0072B8                     u15337:
  2633  0072B8  2EE8               	decfsz	wreg,f,c
  2634  0072BA  D7FE               	goto	u15337
  2635  0072BC  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2636  0072BE  D7FC               	goto	u15337
  2637  0072C0  D000               	nop2	
  2638                           
  2639                           ;lcd.c: 122: lcd_write_ctrl(0x03);
  2640  0072C2  0E03               	movlw	3
  2641  0072C4  EC06  F043         	call	_lcd_write_ctrl
  2642                           
  2643                           ;lcd.c: 123: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  2644  0072C8  0E37               	movlw	55
  2645  0072CA  6E03               	movwf	??_lcd_init& (0+255),c
  2646  0072CC  0E1B               	movlw	27
  2647  0072CE                     u15347:
  2648  0072CE  2EE8               	decfsz	wreg,f,c
  2649  0072D0  D7FE               	goto	u15347
  2650  0072D2  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2651  0072D4  D7FC               	goto	u15347
  2652  0072D6  F000               	nop	
  2653                           
  2654                           ;lcd.c: 124: lcd_write_ctrl(0x03);
  2655  0072D8  0E03               	movlw	3
  2656  0072DA  EC06  F043         	call	_lcd_write_ctrl
  2657                           
  2658                           ;lcd.c: 125: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  2659  0072DE  0E37               	movlw	55
  2660  0072E0  6E03               	movwf	??_lcd_init& (0+255),c
  2661  0072E2  0E1B               	movlw	27
  2662  0072E4                     u15357:
  2663  0072E4  2EE8               	decfsz	wreg,f,c
  2664  0072E6  D7FE               	goto	u15357
  2665  0072E8  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2666  0072EA  D7FC               	goto	u15357
  2667  0072EC  F000               	nop	
  2668                           
  2669                           ;lcd.c: 126: lcd_write_ctrl(0x03);
  2670  0072EE  0E03               	movlw	3
  2671  0072F0  EC06  F043         	call	_lcd_write_ctrl
  2672                           
  2673                           ;lcd.c: 129: lcd_write_ctrl(0x38);
  2674  0072F4  0E38               	movlw	56
  2675  0072F6  EC06  F043         	call	_lcd_write_ctrl
  2676                           
  2677                           ;lcd.c: 131: lcd_busy();
  2678  0072FA  ECF0  F043         	call	_lcd_busy	;wreg free
  2679                           
  2680                           ;lcd.c: 132: lcd_write_ctrl(0x0C);
  2681  0072FE  0E0C               	movlw	12
  2682  007300  EC06  F043         	call	_lcd_write_ctrl
  2683                           
  2684                           ;lcd.c: 133: lcd_busy();
  2685  007304  ECF0  F043         	call	_lcd_busy	;wreg free
  2686                           
  2687                           ;lcd.c: 134: lcd_write_ctrl(0x01);
  2688  007308  0E01               	movlw	1
  2689  00730A  EC06  F043         	call	_lcd_write_ctrl
  2690                           
  2691                           ;lcd.c: 135: lcd_busy();
  2692  00730E  ECF0  F043         	call	_lcd_busy	;wreg free
  2693                           
  2694                           ;lcd.c: 138: lcd_write_ctrl(0x01);
  2695  007312  0E01               	movlw	1
  2696  007314  EC06  F043         	call	_lcd_write_ctrl
  2697                           
  2698                           ;lcd.c: 139: _delay((unsigned long)((2)*(41666667UL/4000.0)));
  2699  007318  0E1C               	movlw	28
  2700  00731A  6E03               	movwf	??_lcd_init& (0+255),c
  2701  00731C  0E0D               	movlw	13
  2702  00731E                     u15367:
  2703  00731E  2EE8               	decfsz	wreg,f,c
  2704  007320  D7FE               	goto	u15367
  2705  007322  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2706  007324  D7FC               	goto	u15367
  2707  007326  0012               	return		;funcret
  2708  007328                     __end_of_lcd_init:
  2709                           	opt stack 0
  2710                           tblptru	equ	0xFF8
  2711                           tblptrh	equ	0xFF7
  2712                           tblptrl	equ	0xFF6
  2713                           tablat	equ	0xFF5
  2714                           intcon	equ	0xFF2
  2715                           intcon2	equ	0xFF1
  2716                           postinc0	equ	0xFEE
  2717                           wreg	equ	0xFE8
  2718                           indf2	equ	0xFDF
  2719                           fsr2h	equ	0xFDA
  2720                           fsr2l	equ	0xFD9
  2721                           status	equ	0xFD8
  2722                           
  2723 ;; *************** function _lcd_write_ctrl *****************
  2724 ;; Defined at:
  2725 ;;		line 59 in file "../board_support_package/picdem2_net/lcd_hw.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  c               1    wreg     unsigned char 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  c               1    1[COMRAM] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;		None               void
  2732 ;; Registers used:
  2733 ;;		wreg
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/2
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;Total ram usage:        1 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    3
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_lcd_goto1
  2750 ;;		_lcd_init
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text11
  2755  00860C                     __ptext11:
  2756                           	opt stack 0
  2757  00860C                     _lcd_write_ctrl:
  2758                           	opt stack 26
  2759                           
  2760                           ;incstack = 0
  2761                           ;lcd_write_ctrl@c stored from wreg
  2762  00860C  6E02               	movwf	lcd_write_ctrl@c,c
  2763                           
  2764                           ;lcd_hw.c: 61: LATH1 = 0;
  2765  00860E  9290               	bcf	3984,1,c	;volatile
  2766                           
  2767                           ;lcd_hw.c: 62: LATH2 = 0;
  2768  008610  9490               	bcf	3984,2,c	;volatile
  2769                           
  2770                           ;lcd_hw.c: 64: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  2771  008612  0EAD               	movlw	173
  2772  008614                     u15377:
  2773  008614  2EE8               	decfsz	wreg,f,c
  2774  008616  D7FE               	goto	u15377
  2775  008618  F000               	nop	
  2776                           
  2777                           ;lcd_hw.c: 65: LATE = c;
  2778  00861A  C002  FF8D         	movff	lcd_write_ctrl@c,3981	;volatile
  2779                           
  2780                           ;lcd_hw.c: 66: LATH0 = 1;
  2781  00861E  8090               	bsf	3984,0,c	;volatile
  2782                           
  2783                           ;lcd_hw.c: 67: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  2784  008620  0EAD               	movlw	173
  2785  008622                     u15387:
  2786  008622  2EE8               	decfsz	wreg,f,c
  2787  008624  D7FE               	goto	u15387
  2788  008626  F000               	nop	
  2789                           
  2790                           ;lcd_hw.c: 68: LATH0 = 0;
  2791  008628  9090               	bcf	3984,0,c	;volatile
  2792  00862A  0012               	return		;funcret
  2793  00862C                     __end_of_lcd_write_ctrl:
  2794                           	opt stack 0
  2795                           tblptru	equ	0xFF8
  2796                           tblptrh	equ	0xFF7
  2797                           tblptrl	equ	0xFF6
  2798                           tablat	equ	0xFF5
  2799                           intcon	equ	0xFF2
  2800                           intcon2	equ	0xFF1
  2801                           postinc0	equ	0xFEE
  2802                           wreg	equ	0xFE8
  2803                           indf2	equ	0xFDF
  2804                           fsr2h	equ	0xFDA
  2805                           fsr2l	equ	0xFD9
  2806                           status	equ	0xFD8
  2807                           
  2808 ;; *************** function _lcd_init_pins *****************
  2809 ;; Defined at:
  2810 ;;		line 50 in file "../board_support_package/picdem2_net/lcd_hw.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;		None               void
  2817 ;; Registers used:
  2818 ;;		None
  2819 ;; Tracked objects:
  2820 ;;		On entry : F/2
  2821 ;;		On exit  : F/2
  2822 ;;		Unchanged: F/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:        0 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    3
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_lcd_init
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text12
  2839  0087D6                     __ptext12:
  2840                           	opt stack 0
  2841  0087D6                     _lcd_init_pins:
  2842                           	opt stack 25
  2843                           
  2844                           ; BSR set to: 2
  2845                           ;lcd_hw.c: 52: TRISE = 0;
  2846                           
  2847                           ;incstack = 0
  2848  0087D6  6A96               	clrf	3990,c	;volatile
  2849                           
  2850                           ;lcd_hw.c: 53: TRISH = 0x00;
  2851  0087D8  6A99               	clrf	3993,c	;volatile
  2852                           
  2853                           ;lcd_hw.c: 54: LATE = 0;
  2854  0087DA  6A8D               	clrf	3981,c	;volatile
  2855                           
  2856                           ;lcd_hw.c: 55: LATH = 0;
  2857  0087DC  6A90               	clrf	3984,c	;volatile
  2858                           
  2859                           ; BSR set to: 2
  2860  0087DE  0012               	return		;funcret
  2861  0087E0                     __end_of_lcd_init_pins:
  2862                           	opt stack 0
  2863                           tblptru	equ	0xFF8
  2864                           tblptrh	equ	0xFF7
  2865                           tblptrl	equ	0xFF6
  2866                           tablat	equ	0xFF5
  2867                           intcon	equ	0xFF2
  2868                           intcon2	equ	0xFF1
  2869                           postinc0	equ	0xFEE
  2870                           wreg	equ	0xFE8
  2871                           indf2	equ	0xFDF
  2872                           fsr2h	equ	0xFDA
  2873                           fsr2l	equ	0xFD9
  2874                           status	equ	0xFD8
  2875                           
  2876 ;; *************** function _lcd_busy *****************
  2877 ;; Defined at:
  2878 ;;		line 82 in file "../board_support_package/picdem2_net/lcd_hw.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;		None               void
  2885 ;; Registers used:
  2886 ;;		wreg
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/2
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;Total ram usage:        0 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    3
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_lcd_putch
  2903 ;;		_lcd_goto1
  2904 ;;		_lcd_init
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text13
  2909  0087E0                     __ptext13:
  2910                           	opt stack 0
  2911  0087E0                     _lcd_busy:
  2912                           	opt stack 25
  2913                           
  2914                           ;lcd_hw.c: 84: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  2915                           
  2916                           ; BSR set to: 2
  2917                           ;incstack = 0
  2918  0087E0  0EAD               	movlw	173
  2919  0087E2                     u15397:
  2920  0087E2  2EE8               	decfsz	wreg,f,c
  2921  0087E4  D7FE               	goto	u15397
  2922  0087E6  F000               	nop	
  2923  0087E8  0012               	return		;funcret
  2924  0087EA                     __end_of_lcd_busy:
  2925                           	opt stack 0
  2926                           tblptru	equ	0xFF8
  2927                           tblptrh	equ	0xFF7
  2928                           tblptrl	equ	0xFF6
  2929                           tablat	equ	0xFF5
  2930                           intcon	equ	0xFF2
  2931                           intcon2	equ	0xFF1
  2932                           postinc0	equ	0xFEE
  2933                           wreg	equ	0xFE8
  2934                           indf2	equ	0xFDF
  2935                           fsr2h	equ	0xFDA
  2936                           fsr2l	equ	0xFD9
  2937                           status	equ	0xFD8
  2938                           
  2939 ;; *************** function _LED_Init *****************
  2940 ;; Defined at:
  2941 ;;		line 55 in file "../board_support_package/picdem2_net/led_driver.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;		None
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  x               1    1[COMRAM] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;		None               void
  2948 ;; Registers used:
  2949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/2
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;Total ram usage:        1 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    3
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_initHW
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text14
  2970  00862C                     __ptext14:
  2971                           	opt stack 0
  2972  00862C                     _LED_Init:
  2973                           	opt stack 26
  2974                           
  2975                           ;led_driver.c: 57: uint8_t x = 0;
  2976                           
  2977                           ;incstack = 0
  2978  00862C  6A02               	clrf	LED_Init@x,c
  2979                           
  2980                           ;led_driver.c: 58: for(x = 0; x < 8; x++)
  2981  00862E  6A02               	clrf	LED_Init@x,c
  2982  008630                     l9537:
  2983                           
  2984                           ;led_driver.c: 59: {
  2985                           ;led_driver.c: 60: led_values[x].value = 0;
  2986  008630  5002               	movf	LED_Init@x,w,c
  2987  008632  0D02               	mullw	2
  2988  008634  0E00               	movlw	low _led_values
  2989  008636  24F3               	addwf	prodl,w,c
  2990  008638  6ED9               	movwf	fsr2l,c
  2991  00863A  0E02               	movlw	high _led_values
  2992  00863C  20F4               	addwfc	prodh,w,c
  2993  00863E  6EDA               	movwf	fsr2h,c
  2994  008640  6ADF               	clrf	indf2,c
  2995  008642  2A02               	incf	LED_Init@x,f,c
  2996  008644  0E07               	movlw	7
  2997  008646  6402               	cpfsgt	LED_Init@x,c
  2998  008648  D7F3               	goto	l9537
  2999  00864A  0C07               	retlw	7
  3000  00864C                     __end_of_LED_Init:
  3001                           	opt stack 0
  3002                           tblptru	equ	0xFF8
  3003                           tblptrh	equ	0xFF7
  3004                           tblptrl	equ	0xFF6
  3005                           tablat	equ	0xFF5
  3006                           prodh	equ	0xFF4
  3007                           prodl	equ	0xFF3
  3008                           intcon	equ	0xFF2
  3009                           intcon2	equ	0xFF1
  3010                           postinc0	equ	0xFEE
  3011                           wreg	equ	0xFE8
  3012                           indf2	equ	0xFDF
  3013                           fsr2h	equ	0xFDA
  3014                           fsr2l	equ	0xFD9
  3015                           status	equ	0xFD8
  3016                           
  3017 ;; *************** function _ADC_Initialize *****************
  3018 ;; Defined at:
  3019 ;;		line 55 in file "../board_support_package/picdem2_net/adc.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;		None
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;		None
  3024 ;; Return value:  Size  Location     Type
  3025 ;;		None               void
  3026 ;; Registers used:
  3027 ;;		wreg, status,2
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/2
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;Total ram usage:        0 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    3
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_initHW
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text15
  3048  008734                     __ptext15:
  3049                           	opt stack 0
  3050  008734                     _ADC_Initialize:
  3051                           	opt stack 26
  3052                           
  3053                           ;adc.c: 59: TRISAbits.RA2 = 1;
  3054                           
  3055                           ;incstack = 0
  3056  008734  8492               	bsf	3986,2,c	;volatile
  3057                           
  3058                           ;adc.c: 60: TRISAbits.RA3 = 1;
  3059  008736  8692               	bsf	3986,3,c	;volatile
  3060                           
  3061                           ;adc.c: 63: ADCON0 = 0x0D;
  3062  008738  0E0D               	movlw	13
  3063  00873A  6EC2               	movwf	4034,c	;volatile
  3064                           
  3065                           ;adc.c: 66: ADCON1 = 0x06;
  3066  00873C  0E06               	movlw	6
  3067  00873E  6EC1               	movwf	4033,c	;volatile
  3068                           
  3069                           ;adc.c: 69: ADCON2 = 0xBE;
  3070  008740  0EBE               	movlw	190
  3071  008742  6EC0               	movwf	4032,c	;volatile
  3072                           
  3073                           ;adc.c: 72: ADRESL = 0x00;
  3074  008744  6AC3               	clrf	4035,c	;volatile
  3075                           
  3076                           ;adc.c: 75: ADRESH = 0x00;
  3077  008746  6AC4               	clrf	4036,c	;volatile
  3078  008748  0012               	return		;funcret
  3079  00874A                     __end_of_ADC_Initialize:
  3080                           	opt stack 0
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           prodh	equ	0xFF4
  3086                           prodl	equ	0xFF3
  3087                           intcon	equ	0xFF2
  3088                           intcon2	equ	0xFF1
  3089                           postinc0	equ	0xFEE
  3090                           wreg	equ	0xFE8
  3091                           indf2	equ	0xFDF
  3092                           fsr2h	equ	0xFDA
  3093                           fsr2l	equ	0xFD9
  3094                           status	equ	0xFD8
  3095                           
  3096 ;; *************** function _SYSLOG_Write *****************
  3097 ;; Defined at:
  3098 ;;		line 50 in file "../../TCPIP Library/source/syslog.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  message         2   38[COMRAM] PTR const unsigned char 
  3101 ;;		 -> main@str(32), STR_5(13), STR_4(17), 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  t               2   40[COMRAM] unsigned int 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;		None               void
  3106 ;; Registers used:
  3107 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/1
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;Total ram usage:        4 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    6
  3120 ;; This function calls:
  3121 ;;		_printf
  3122 ;;		_time
  3123 ;; This function is called by:
  3124 ;;		_main
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text16
  3129  0084F2                     __ptext16:
  3130                           	opt stack 0
  3131  0084F2                     _SYSLOG_Write:
  3132                           	opt stack 24
  3133                           
  3134                           ;syslog.c: 52: unsigned int t = (unsigned int) time(0);
  3135                           
  3136                           ;incstack = 0
  3137  0084F2  6A02               	clrf	time@t,c
  3138  0084F4  6A03               	clrf	time@t+1,c
  3139  0084F6  EC55  F03E         	call	_time	;wreg free
  3140  0084FA  C002  F029         	movff	?_time,SYSLOG_Write@t
  3141  0084FE  C003  F02A         	movff	?_time+1,SYSLOG_Write@t+1
  3142                           
  3143                           ;syslog.c: 53: printf("%u : %s\r\n",t,message);
  3144  008502  C029  F01C         	movff	SYSLOG_Write@t,?_printf
  3145  008506  C02A  F01D         	movff	SYSLOG_Write@t+1,?_printf+1
  3146  00850A  C027  F01E         	movff	SYSLOG_Write@message,?_printf+2
  3147  00850E  C028  F01F         	movff	SYSLOG_Write@message+1,?_printf+3
  3148  008512  0E90               	movlw	STR_3& (0+255)
  3149  008514  EF9F  F042         	goto	_printf
  3150  008518                     __end_of_SYSLOG_Write:
  3151                           	opt stack 0
  3152                           tblptru	equ	0xFF8
  3153                           tblptrh	equ	0xFF7
  3154                           tblptrl	equ	0xFF6
  3155                           tablat	equ	0xFF5
  3156                           prodh	equ	0xFF4
  3157                           prodl	equ	0xFF3
  3158                           intcon	equ	0xFF2
  3159                           intcon2	equ	0xFF1
  3160                           postinc0	equ	0xFEE
  3161                           wreg	equ	0xFE8
  3162                           indf2	equ	0xFDF
  3163                           fsr2h	equ	0xFDA
  3164                           fsr2l	equ	0xFD9
  3165                           status	equ	0xFD8
  3166                           
  3167 ;; *************** function _SYSLOG_Init *****************
  3168 ;; Defined at:
  3169 ;;		line 43 in file "../../TCPIP Library/source/syslog.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  t               4   38[COMRAM] unsigned long 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;		None               void
  3176 ;; Registers used:
  3177 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : F/1
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;Total ram usage:        4 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    6
  3190 ;; This function calls:
  3191 ;;		_printf
  3192 ;;		_time
  3193 ;; This function is called by:
  3194 ;;		_main
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text17
  3199  00836C                     __ptext17:
  3200                           	opt stack 0
  3201  00836C                     _SYSLOG_Init:
  3202                           	opt stack 24
  3203                           
  3204                           ; BSR set to: 1
  3205                           ;syslog.c: 45: unsigned long t = time(0);
  3206                           
  3207                           ;incstack = 0
  3208  00836C  6A02               	clrf	time@t,c
  3209  00836E  6A03               	clrf	time@t+1,c
  3210  008370  EC55  F03E         	call	_time	;wreg free
  3211  008374  C002  F027         	movff	?_time,SYSLOG_Init@t
  3212  008378  C003  F028         	movff	?_time+1,SYSLOG_Init@t+1
  3213  00837C  C004  F029         	movff	?_time+2,SYSLOG_Init@t+2
  3214  008380  C005  F02A         	movff	?_time+3,SYSLOG_Init@t+3
  3215                           
  3216                           ;syslog.c: 47: printf("\r\n\r\nStarting Syslog at %u\r\n",t);
  3217  008384  C027  F01C         	movff	SYSLOG_Init@t,?_printf
  3218  008388  C028  F01D         	movff	SYSLOG_Init@t+1,?_printf+1
  3219  00838C  C029  F01E         	movff	SYSLOG_Init@t+2,?_printf+2
  3220  008390  C02A  F01F         	movff	SYSLOG_Init@t+3,?_printf+3
  3221  008394  0E39               	movlw	STR_2& (0+255)
  3222  008396  EF9F  F042         	goto	_printf
  3223  00839A                     __end_of_SYSLOG_Init:
  3224                           	opt stack 0
  3225                           tblptru	equ	0xFF8
  3226                           tblptrh	equ	0xFF7
  3227                           tblptrl	equ	0xFF6
  3228                           tablat	equ	0xFF5
  3229                           prodh	equ	0xFF4
  3230                           prodl	equ	0xFF3
  3231                           intcon	equ	0xFF2
  3232                           intcon2	equ	0xFF1
  3233                           postinc0	equ	0xFEE
  3234                           wreg	equ	0xFE8
  3235                           indf2	equ	0xFDF
  3236                           fsr2h	equ	0xFDA
  3237                           fsr2l	equ	0xFD9
  3238                           status	equ	0xFD8
  3239                           
  3240 ;; *************** function _printf *****************
  3241 ;; Defined at:
  3242 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\printf.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  f               1    wreg     PTR const unsigned char 
  3245 ;;		 -> STR_3(10), STR_2(28), 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  f               1   31[COMRAM] PTR const unsigned char 
  3248 ;;		 -> STR_3(10), STR_2(28), 
  3249 ;;  pb              5   33[COMRAM] struct __prbuf
  3250 ;;  ap              1   32[COMRAM] PTR void [1]
  3251 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2   27[COMRAM] int 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/1
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3261 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;Total ram usage:       11 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    5
  3268 ;; This function calls:
  3269 ;;		__doprnt
  3270 ;; This function is called by:
  3271 ;;		_SYSLOG_Init
  3272 ;;		_SYSLOG_Write
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text18
  3277  00853E                     __ptext18:
  3278                           	opt stack 0
  3279  00853E                     _printf:
  3280                           	opt stack 24
  3281                           
  3282                           ;incstack = 0
  3283                           ;printf@f stored from wreg
  3284  00853E  6E20               	movwf	printf@f,c
  3285  008540  6A22               	clrf	printf@pb,c
  3286  008542  6A23               	clrf	printf@pb+1,c
  3287  008544  0E86               	movlw	low _putch
  3288  008546  6E24               	movwf	printf@pb+2,c
  3289  008548  0E86               	movlw	high _putch
  3290  00854A  6E25               	movwf	printf@pb+3,c
  3291  00854C  0E00               	movlw	low (_putch shr (0+16))
  3292  00854E  6E26               	movwf	printf@pb+4,c
  3293  008550  0E1C               	movlw	low ?_printf
  3294  008552  6E21               	movwf	printf@ap,c
  3295                           
  3296                           ;	Return value of _printf is never used
  3297  008554  C020  F00E         	movff	printf@f,__doprnt@f
  3298  008558  0E21               	movlw	low printf@ap
  3299  00855A  6E0F               	movwf	__doprnt@ap,c
  3300  00855C  0E22               	movlw	printf@pb& (0+255)
  3301  00855E  EFDF  F027         	goto	__doprnt
  3302  008562                     __end_of_printf:
  3303                           	opt stack 0
  3304                           tblptru	equ	0xFF8
  3305                           tblptrh	equ	0xFF7
  3306                           tblptrl	equ	0xFF6
  3307                           tablat	equ	0xFF5
  3308                           prodh	equ	0xFF4
  3309                           prodl	equ	0xFF3
  3310                           intcon	equ	0xFF2
  3311                           intcon2	equ	0xFF1
  3312                           postinc0	equ	0xFEE
  3313                           wreg	equ	0xFE8
  3314                           indf2	equ	0xFDF
  3315                           fsr2h	equ	0xFDA
  3316                           fsr2l	equ	0xFD9
  3317                           status	equ	0xFD8
  3318                           
  3319 ;; *************** function _Network_WaitForLink *****************
  3320 ;; Defined at:
  3321 ;;		line 76 in file "../../TCPIP Library/source/network.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;		None               void
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/1
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;Total ram usage:        0 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    8
  3342 ;; This function calls:
  3343 ;;		_ETH_CheckLinkUp
  3344 ;; This function is called by:
  3345 ;;		_main
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text19
  3350  00878A                     __ptext19:
  3351                           	opt stack 0
  3352  00878A                     _Network_WaitForLink:
  3353                           	opt stack 22
  3354                           
  3355                           ;network.c: 78: while(!ETH_CheckLinkUp()) __nop();
  3356                           
  3357                           ;incstack = 0
  3358  00878A  D001               	goto	l10029
  3359  00878C                     l1108:
  3360  00878C  F000               	nop	
  3361  00878E                     l10029:
  3362  00878E  EC84  F041         	call	_ETH_CheckLinkUp	;wreg free
  3363  008792  0900               	iorlw	0
  3364  008794  E0FB               	bz	l1108
  3365  008796  0012               	return		;funcret
  3366  008798                     __end_of_Network_WaitForLink:
  3367                           	opt stack 0
  3368                           tblptru	equ	0xFF8
  3369                           tblptrh	equ	0xFF7
  3370                           tblptrl	equ	0xFF6
  3371                           tablat	equ	0xFF5
  3372                           prodh	equ	0xFF4
  3373                           prodl	equ	0xFF3
  3374                           intcon	equ	0xFF2
  3375                           intcon2	equ	0xFF1
  3376                           postinc0	equ	0xFEE
  3377                           wreg	equ	0xFE8
  3378                           indf2	equ	0xFDF
  3379                           fsr2h	equ	0xFDA
  3380                           fsr2l	equ	0xFD9
  3381                           status	equ	0xFD8
  3382                           
  3383 ;; *************** function _Network_Manage *****************
  3384 ;; Defined at:
  3385 ;;		line 81 in file "../../TCPIP Library/source/network.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  now             4  127[BANK1 ] long 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;		None               void
  3392 ;; Registers used:
  3393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/1
  3396 ;;		On exit  : E/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;Total ram usage:        5 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:   15
  3406 ;; This function calls:
  3407 ;;		_ARPV4_Update
  3408 ;;		_DHCP_Manage
  3409 ;;		_ETH_EventHandler
  3410 ;;		_Network_Read
  3411 ;;		_TCP_Update
  3412 ;;		_time
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text20
  3419  0078EC                     __ptext20:
  3420                           	opt stack 0
  3421  0078EC                     _Network_Manage:
  3422                           	opt stack 15
  3423                           
  3424                           ;network.c: 83: time_t now;
  3425                           ;network.c: 84: static time_t nowPv = 0;
  3426                           ;network.c: 86: ETH_EventHandler();
  3427                           
  3428                           ;incstack = 0
  3429  0078EC  ECE8  F039         	call	_ETH_EventHandler	;wreg free
  3430                           
  3431                           ;network.c: 87: Network_Read();
  3432  0078F0  ECE9  F038         	call	_Network_Read	;wreg free
  3433                           
  3434                           ;network.c: 90: time(&now);
  3435  0078F4  0E7F               	movlw	low Network_Manage@now
  3436  0078F6  6E02               	movwf	time@t,c
  3437  0078F8  0E01               	movlw	high Network_Manage@now
  3438  0078FA  6E03               	movwf	time@t+1,c
  3439  0078FC  EC55  F03E         	call	_time	;wreg free
  3440                           
  3441                           ;network.c: 91: if(now >= arpTimer)
  3442  007900  0101               	movlb	1	; () banked
  3443  007902  51D0               	movf	_arpTimer& (0+255),w,b
  3444  007904  5D7F               	subwf	Network_Manage@now& (0+255),w,b
  3445  007906  51D1               	movf	(_arpTimer+1)& (0+255),w,b
  3446  007908  5980               	subwfb	(Network_Manage@now+1)& (0+255),w,b
  3447  00790A  51D2               	movf	(_arpTimer+2)& (0+255),w,b
  3448  00790C  5981               	subwfb	(Network_Manage@now+2)& (0+255),w,b
  3449  00790E  5182               	movf	(Network_Manage@now+3)& (0+255),w,b
  3450  007910  0A80               	xorlw	128
  3451  007912  6F7E               	movwf	??_Network_Manage& (0+255),b
  3452  007914  51D3               	movf	(_arpTimer+3)& (0+255),w,b
  3453  007916  0A80               	xorlw	128
  3454  007918  597E               	subwfb	??_Network_Manage& (0+255),w,b
  3455  00791A  E308               	bnc	l10043
  3456                           
  3457                           ; BSR set to: 1
  3458                           ;network.c: 92: {
  3459                           ;network.c: 93: ARPV4_Update();
  3460  00791C  EC3B  F042         	call	_ARPV4_Update	;wreg free
  3461                           
  3462                           ; BSR set to: 1
  3463                           ;network.c: 94: arpTimer += 10;
  3464  007920  0E0A               	movlw	10
  3465  007922  27D0               	addwf	_arpTimer& (0+255),f,b
  3466  007924  0E00               	movlw	0
  3467  007926  23D1               	addwfc	(_arpTimer+1)& (0+255),f,b
  3468  007928  23D2               	addwfc	(_arpTimer+2)& (0+255),f,b
  3469  00792A  23D3               	addwfc	(_arpTimer+3)& (0+255),f,b
  3470  00792C                     l10043:
  3471                           
  3472                           ; BSR set to: 1
  3473                           ;network.c: 95: }
  3474                           ;network.c: 96: if(now > nowPv)
  3475  00792C  517F               	movf	Network_Manage@now& (0+255),w,b
  3476  00792E  0102               	movlb	2	; () banked
  3477  007930  5D1E               	subwf	Network_Manage@nowPv& (0+255),w,b
  3478  007932  0101               	movlb	1	; () banked
  3479  007934  5180               	movf	(Network_Manage@now+1)& (0+255),w,b
  3480  007936  0102               	movlb	2	; () banked
  3481  007938  591F               	subwfb	(Network_Manage@nowPv+1)& (0+255),w,b
  3482  00793A  0101               	movlb	1	; () banked
  3483  00793C  5181               	movf	(Network_Manage@now+2)& (0+255),w,b
  3484  00793E  0102               	movlb	2	; () banked
  3485  007940  5920               	subwfb	(Network_Manage@nowPv+2)& (0+255),w,b
  3486  007942  5121               	movf	(Network_Manage@nowPv+3)& (0+255),w,b
  3487  007944  0A80               	xorlw	128
  3488  007946  0101               	movlb	1	; () banked
  3489  007948  6F7E               	movwf	??_Network_Manage& (0+255),b
  3490  00794A  5182               	movf	(Network_Manage@now+3)& (0+255),w,b
  3491  00794C  0A80               	xorlw	128
  3492  00794E  597E               	subwfb	??_Network_Manage& (0+255),w,b
  3493  007950  E204               	bc	l10047
  3494                           
  3495                           ; BSR set to: 1
  3496                           ;network.c: 97: {
  3497                           ;network.c: 98: DHCP_Manage();
  3498  007952  EC24  F03B         	call	_DHCP_Manage	;wreg free
  3499                           
  3500                           ;network.c: 100: TCP_Update();
  3501  007956  ECB9  F02B         	call	_TCP_Update	;wreg free
  3502  00795A                     l10047:
  3503                           
  3504                           ;network.c: 101: }
  3505                           ;network.c: 102: nowPv = now;
  3506  00795A  C17F  F21E         	movff	Network_Manage@now,Network_Manage@nowPv
  3507  00795E  C180  F21F         	movff	Network_Manage@now+1,Network_Manage@nowPv+1
  3508  007962  C181  F220         	movff	Network_Manage@now+2,Network_Manage@nowPv+2
  3509  007966  C182  F221         	movff	Network_Manage@now+3,Network_Manage@nowPv+3
  3510  00796A  0012               	return		;funcret
  3511  00796C                     __end_of_Network_Manage:
  3512                           	opt stack 0
  3513                           tblptru	equ	0xFF8
  3514                           tblptrh	equ	0xFF7
  3515                           tblptrl	equ	0xFF6
  3516                           tablat	equ	0xFF5
  3517                           prodh	equ	0xFF4
  3518                           prodl	equ	0xFF3
  3519                           intcon	equ	0xFF2
  3520                           intcon2	equ	0xFF1
  3521                           postinc0	equ	0xFEE
  3522                           wreg	equ	0xFE8
  3523                           indf2	equ	0xFDF
  3524                           fsr2h	equ	0xFDA
  3525                           fsr2l	equ	0xFD9
  3526                           status	equ	0xFD8
  3527                           
  3528 ;; *************** function _TCP_Update *****************
  3529 ;; Defined at:
  3530 ;;		line 1417 in file "../../TCPIP Library/source/tcpv4.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  tcbPtr          2  126[BANK0 ] PTR struct .
  3535 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
  3536 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), NULL(0), 
  3537 ;;  count           2  124[BANK0 ] int 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;		None               void
  3540 ;; Registers used:
  3541 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3542 ;; Tracked objects:
  3543 ;;		On entry : E/1
  3544 ;;		On exit  : F/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;Total ram usage:       12 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; Hardware stack levels required when called:   12
  3554 ;; This function calls:
  3555 ;;		_TCP_FiniteStateMachine
  3556 ;; This function is called by:
  3557 ;;		_Network_Manage
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text21
  3562  005772                     __ptext21:
  3563                           	opt stack 0
  3564  005772                     _TCP_Update:
  3565                           	opt stack 17
  3566                           
  3567                           ;tcpv4.c: 1421: int count = 0;
  3568                           
  3569                           ;incstack = 0
  3570  005772  0100               	movlb	0	; () banked
  3571  005774  6BDC               	clrf	TCP_Update@count& (0+255),b
  3572  005776  6BDD               	clrf	(TCP_Update@count+1)& (0+255),b
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;tcpv4.c: 1425: nextSequenceNumber++;
  3576  005778  0102               	movlb	2	; () banked
  3577  00577A  2B2A               	incf	_nextSequenceNumber& (0+255),f,b
  3578  00577C  0E00               	movlw	0
  3579  00577E  232B               	addwfc	(_nextSequenceNumber+1)& (0+255),f,b
  3580  005780  232C               	addwfc	(_nextSequenceNumber+2)& (0+255),f,b
  3581  005782  232D               	addwfc	(_nextSequenceNumber+3)& (0+255),f,b
  3582                           
  3583                           ; BSR set to: 2
  3584                           ;tcpv4.c: 1428: nextAvailablePort = nextAvailablePort + 1;
  3585  005784  0101               	movlb	1	; () banked
  3586  005786  4B9C               	infsnz	_nextAvailablePort& (0+255),f,b
  3587  005788  2B9D               	incf	(_nextAvailablePort+1)& (0+255),f,b
  3588                           
  3589                           ; BSR set to: 1
  3590                           ;tcpv4.c: 1429: if (nextAvailablePort < (1024u))
  3591  00578A  0E04               	movlw	4
  3592  00578C  5D9D               	subwf	(_nextAvailablePort+1)& (0+255),w,b
  3593  00578E  E203               	bc	l9785
  3594                           
  3595                           ; BSR set to: 1
  3596                           ;tcpv4.c: 1430: {
  3597                           ;tcpv4.c: 1431: nextAvailablePort = (1024u);
  3598  005790  0E04               	movlw	4
  3599  005792  6F9D               	movwf	(_nextAvailablePort+1)& (0+255),b
  3600  005794  6B9C               	clrf	_nextAvailablePort& (0+255),b
  3601  005796                     l9785:
  3602                           
  3603                           ; BSR set to: 1
  3604                           ;tcpv4.c: 1432: }
  3605                           ;tcpv4.c: 1435: tcbPtr = tcbList;
  3606  005796  C1A2  F0DE         	movff	_tcbList,TCP_Update@tcbPtr
  3607  00579A  C1A3  F0DF         	movff	_tcbList+1,TCP_Update@tcbPtr+1
  3608                           
  3609                           ;tcpv4.c: 1436: while((tcbPtr != (0)) && (count < tcbListSize))
  3610  00579E  D173               	goto	l9805
  3611  0057A0                     l9787:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;tcpv4.c: 1437: {
  3615                           ;tcpv4.c: 1438: if (tcbPtr->timeout > 0)
  3616  0057A0  0E30               	movlw	48
  3617  0057A2  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3618  0057A4  6FD4               	movwf	??_TCP_Update& (0+255),b
  3619  0057A6  0E00               	movlw	0
  3620  0057A8  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3621  0057AA  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3622  0057AC  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3623  0057B0  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3624  0057B4  0E00               	movlw	low (__smallconst shr (0+16))
  3625  0057B6  6EF8               	movwf	tblptru,c
  3626  0057B8  0E0F               	movlw	(high __ramtop+-1)
  3627  0057BA  64F7               	cpfsgt	tblptrh,c
  3628  0057BC  D007               	bra	u14837
  3629  0057BE  0009               	tblrd		*+
  3630  0057C0  CFF5 F0D6          	movff	tablat,??_TCP_Update+2
  3631  0057C4  0009               	tblrd		*+
  3632  0057C6  CFF5 F0D7          	movff	tablat,??_TCP_Update+3
  3633  0057CA  D008               	bra	u14830
  3634  0057CC                     u14837:
  3635  0057CC  CFF6 FFE9          	movff	tblptrl,fsr0l
  3636  0057D0  CFF7 FFEA          	movff	tblptrh,fsr0h
  3637  0057D4  CFEE F0D6          	movff	postinc0,??_TCP_Update+2
  3638  0057D8  CFEE F0D7          	movff	postinc0,??_TCP_Update+3
  3639  0057DC                     u14830:
  3640  0057DC  0100               	movlb	0	; () banked
  3641  0057DE  51D6               	movf	(??_TCP_Update+2)& (0+255),w,b
  3642  0057E0  11D7               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  3643  0057E2  E101 D12E          	bz	l9801
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;tcpv4.c: 1439: {
  3647                           ;tcpv4.c: 1440: ;
  3648                           ;tcpv4.c: 1441: tcbPtr->timeout = tcbPtr->timeout - 1;
  3649  0057E6  69D4               	setf	??_TCP_Update& (0+255),b
  3650  0057E8  69D5               	setf	(??_TCP_Update+1)& (0+255),b
  3651  0057EA  0E30               	movlw	48
  3652  0057EC  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3653  0057EE  6FD6               	movwf	(??_TCP_Update+2)& (0+255),b
  3654  0057F0  0E00               	movlw	0
  3655  0057F2  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3656  0057F4  6FD7               	movwf	(??_TCP_Update+3)& (0+255),b
  3657  0057F6  C0D6  FFF6         	movff	??_TCP_Update+2,tblptrl
  3658  0057FA  C0D7  FFF7         	movff	??_TCP_Update+3,tblptrh
  3659  0057FE  0E00               	movlw	low (__smallconst shr (0+16))
  3660  005800  6EF8               	movwf	tblptru,c
  3661  005802  0E0F               	movlw	(high __ramtop+-1)
  3662  005804  64F7               	cpfsgt	tblptrh,c
  3663  005806  D007               	bra	u14857
  3664  005808  0009               	tblrd		*+
  3665  00580A  CFF5 F0D8          	movff	tablat,??_TCP_Update+4
  3666  00580E  0009               	tblrd		*+
  3667  005810  CFF5 F0D9          	movff	tablat,??_TCP_Update+5
  3668  005814  D008               	bra	u14850
  3669  005816                     u14857:
  3670  005816  CFF6 FFE9          	movff	tblptrl,fsr0l
  3671  00581A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3672  00581E  CFEE F0D8          	movff	postinc0,??_TCP_Update+4
  3673  005822  CFEE F0D9          	movff	postinc0,??_TCP_Update+5
  3674  005826                     u14850:
  3675  005826  0100               	movlb	0	; () banked
  3676  005828  51D4               	movf	??_TCP_Update& (0+255),w,b
  3677  00582A  27D8               	addwf	(??_TCP_Update+4)& (0+255),f,b
  3678  00582C  51D5               	movf	(??_TCP_Update+1)& (0+255),w,b
  3679  00582E  23D9               	addwfc	(??_TCP_Update+5)& (0+255),f,b
  3680  005830  0E30               	movlw	48
  3681  005832  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3682  005834  6FDA               	movwf	(??_TCP_Update+6)& (0+255),b
  3683  005836  0E00               	movlw	0
  3684  005838  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3685  00583A  6FDB               	movwf	(??_TCP_Update+7)& (0+255),b
  3686  00583C  C0DA  FFF6         	movff	??_TCP_Update+6,tblptrl
  3687  005840  C0DB  FFF7         	movff	??_TCP_Update+7,tblptrh
  3688  005844  0E00               	movlw	low (__smallconst shr (0+16))
  3689  005846  6EF8               	movwf	tblptru,c
  3690  005848  0E0F               	movlw	(high __ramtop+-1)
  3691  00584A  64F7               	cpfsgt	tblptrh,c
  3692  00584C  D007               	bra	u14867
  3693  00584E  C0D8  FFF5         	movff	??_TCP_Update+4,tablat
  3694  005852  000D               	tblwt		*+
  3695  005854  C0D9  FFF5         	movff	??_TCP_Update+5,tablat
  3696  005858  000C               	tblwt		*
  3697  00585A  D008               	bra	u14860
  3698  00585C                     u14867:
  3699  00585C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3700  005860  CFF7 FFEA          	movff	tblptrh,fsr0h
  3701  005864  C0D8  FFEE         	movff	??_TCP_Update+4,postinc0
  3702  005868  C0D9  FFEF         	movff	??_TCP_Update+5,indf0
  3703  00586C                     u14860:
  3704                           
  3705                           ;tcpv4.c: 1443: if (tcbPtr->timeout == 0)
  3706  00586C  0E30               	movlw	48
  3707  00586E  0100               	movlb	0	; () banked
  3708  005870  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3709  005872  6FD4               	movwf	??_TCP_Update& (0+255),b
  3710  005874  0E00               	movlw	0
  3711  005876  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3712  005878  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3713  00587A  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3714  00587E  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3715  005882  0E00               	movlw	low (__smallconst shr (0+16))
  3716  005884  6EF8               	movwf	tblptru,c
  3717  005886  0E0F               	movlw	(high __ramtop+-1)
  3718  005888  64F7               	cpfsgt	tblptrh,c
  3719  00588A  D007               	bra	u14877
  3720  00588C  0009               	tblrd		*+
  3721  00588E  CFF5 F0D6          	movff	tablat,??_TCP_Update+2
  3722  005892  0009               	tblrd		*+
  3723  005894  CFF5 F0D7          	movff	tablat,??_TCP_Update+3
  3724  005898  D008               	bra	u14870
  3725  00589A                     u14877:
  3726  00589A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3727  00589E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3728  0058A2  CFEE F0D6          	movff	postinc0,??_TCP_Update+2
  3729  0058A6  CFEE F0D7          	movff	postinc0,??_TCP_Update+3
  3730  0058AA                     u14870:
  3731  0058AA  0100               	movlb	0	; () banked
  3732  0058AC  51D6               	movf	(??_TCP_Update+2)& (0+255),w,b
  3733  0058AE  11D7               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  3734  0058B0  E001 D0C7          	bnz	l9801
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;tcpv4.c: 1444: {
  3738                           ;tcpv4.c: 1445: if (tcbPtr->timeoutsCount > 0)
  3739  0058B4  0E34               	movlw	52
  3740  0058B6  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3741  0058B8  6FD4               	movwf	??_TCP_Update& (0+255),b
  3742  0058BA  0E00               	movlw	0
  3743  0058BC  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3744  0058BE  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3745  0058C0  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3746  0058C4  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3747  0058C8  0E00               	movlw	low (__smallconst shr (0+16))
  3748  0058CA  6EF8               	movwf	tblptru,c
  3749  0058CC  0E0F               	movlw	(high __ramtop+-1)
  3750  0058CE  64F7               	cpfsgt	tblptrh,c
  3751  0058D0  D003               	bra	u14897
  3752  0058D2  0008               	tblrd		*
  3753  0058D4  50F5               	movf	tablat,w,c
  3754  0058D6  D005               	bra	u14890
  3755  0058D8                     u14897:
  3756  0058D8  CFF6 FFE9          	movff	tblptrl,fsr0l
  3757  0058DC  CFF7 FFEA          	movff	tblptrh,fsr0h
  3758  0058E0  50EF               	movf	indf0,w,c
  3759  0058E2                     u14890:
  3760  0058E2  0900               	iorlw	0
  3761  0058E4  E101 D0AD          	bz	l9801
  3762                           
  3763                           ;tcpv4.c: 1446: {
  3764                           ;tcpv4.c: 1448: if (tcbPtr->connectionEvent == NOP)
  3765  0058E8  0E2B               	movlw	43
  3766  0058EA  0100               	movlb	0	; () banked
  3767  0058EC  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3768  0058EE  6FD4               	movwf	??_TCP_Update& (0+255),b
  3769  0058F0  0E00               	movlw	0
  3770  0058F2  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3771  0058F4  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3772  0058F6  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3773  0058FA  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3774  0058FE  0E00               	movlw	low (__smallconst shr (0+16))
  3775  005900  6EF8               	movwf	tblptru,c
  3776  005902  0E0F               	movlw	(high __ramtop+-1)
  3777  005904  64F7               	cpfsgt	tblptrh,c
  3778  005906  D003               	bra	u14917
  3779  005908  0008               	tblrd		*
  3780  00590A  50F5               	movf	tablat,w,c
  3781  00590C  D005               	bra	u14910
  3782  00590E                     u14917:
  3783  00590E  CFF6 FFE9          	movff	tblptrl,fsr0l
  3784  005912  CFF7 FFEA          	movff	tblptrh,fsr0h
  3785  005916  50EF               	movf	indf0,w,c
  3786  005918                     u14910:
  3787  005918  0A0D               	xorlw	13
  3788  00591A  E001 D092          	bnz	l9801
  3789                           
  3790                           ;tcpv4.c: 1449: {
  3791                           ;tcpv4.c: 1450: tcbPtr->timeout = tcbPtr->timeoutReloadValue;
  3792  00591E  0E32               	movlw	50
  3793  005920  0100               	movlb	0	; () banked
  3794  005922  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3795  005924  6FD4               	movwf	??_TCP_Update& (0+255),b
  3796  005926  0E00               	movlw	0
  3797  005928  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3798  00592A  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3799  00592C  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3800  005930  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3801  005934  0E00               	movlw	low (__smallconst shr (0+16))
  3802  005936  6EF8               	movwf	tblptru,c
  3803  005938  0E0F               	movlw	(high __ramtop+-1)
  3804  00593A  64F7               	cpfsgt	tblptrh,c
  3805  00593C  D007               	bra	u14937
  3806  00593E  0009               	tblrd		*+
  3807  005940  CFF5 F0D6          	movff	tablat,??_TCP_Update+2
  3808  005944  0009               	tblrd		*+
  3809  005946  CFF5 F0D7          	movff	tablat,??_TCP_Update+3
  3810  00594A  D008               	bra	u14930
  3811  00594C                     u14937:
  3812  00594C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3813  005950  CFF7 FFEA          	movff	tblptrh,fsr0h
  3814  005954  CFEE F0D6          	movff	postinc0,??_TCP_Update+2
  3815  005958  CFEE F0D7          	movff	postinc0,??_TCP_Update+3
  3816  00595C                     u14930:
  3817  00595C  0E30               	movlw	48
  3818  00595E  0100               	movlb	0	; () banked
  3819  005960  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3820  005962  6FD8               	movwf	(??_TCP_Update+4)& (0+255),b
  3821  005964  0E00               	movlw	0
  3822  005966  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3823  005968  6FD9               	movwf	(??_TCP_Update+5)& (0+255),b
  3824  00596A  C0D8  FFF6         	movff	??_TCP_Update+4,tblptrl
  3825  00596E  C0D9  FFF7         	movff	??_TCP_Update+5,tblptrh
  3826  005972  0E00               	movlw	low (__smallconst shr (0+16))
  3827  005974  6EF8               	movwf	tblptru,c
  3828  005976  0E0F               	movlw	(high __ramtop+-1)
  3829  005978  64F7               	cpfsgt	tblptrh,c
  3830  00597A  D007               	bra	u14947
  3831  00597C  C0D6  FFF5         	movff	??_TCP_Update+2,tablat
  3832  005980  000D               	tblwt		*+
  3833  005982  C0D7  FFF5         	movff	??_TCP_Update+3,tablat
  3834  005986  000C               	tblwt		*
  3835  005988  D008               	bra	u14940
  3836  00598A                     u14947:
  3837  00598A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3838  00598E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3839  005992  C0D6  FFEE         	movff	??_TCP_Update+2,postinc0
  3840  005996  C0D7  FFEF         	movff	??_TCP_Update+3,indf0
  3841  00599A                     u14940:
  3842                           
  3843                           ;tcpv4.c: 1451: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount - 1;
  3844  00599A  0E34               	movlw	52
  3845  00599C  0100               	movlb	0	; () banked
  3846  00599E  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3847  0059A0  6FD4               	movwf	??_TCP_Update& (0+255),b
  3848  0059A2  0E00               	movlw	0
  3849  0059A4  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3850  0059A6  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3851  0059A8  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3852  0059AC  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3853  0059B0  0E00               	movlw	low (__smallconst shr (0+16))
  3854  0059B2  6EF8               	movwf	tblptru,c
  3855  0059B4  0E0F               	movlw	(high __ramtop+-1)
  3856  0059B6  64F7               	cpfsgt	tblptrh,c
  3857  0059B8  D003               	bra	u14957
  3858  0059BA  0008               	tblrd		*
  3859  0059BC  50F5               	movf	tablat,w,c
  3860  0059BE  D005               	bra	u14950
  3861  0059C0                     u14957:
  3862  0059C0  CFF6 FFE9          	movff	tblptrl,fsr0l
  3863  0059C4  CFF7 FFEA          	movff	tblptrh,fsr0h
  3864  0059C8  50EF               	movf	indf0,w,c
  3865  0059CA                     u14950:
  3866  0059CA  0100               	movlb	0	; () banked
  3867  0059CC  6FD6               	movwf	(??_TCP_Update+2)& (0+255),b
  3868  0059CE  07D6               	decf	(??_TCP_Update+2)& (0+255),f,b
  3869  0059D0  0E34               	movlw	52
  3870  0059D2  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3871  0059D4  6FD7               	movwf	(??_TCP_Update+3)& (0+255),b
  3872  0059D6  0E00               	movlw	0
  3873  0059D8  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3874  0059DA  6FD8               	movwf	(??_TCP_Update+4)& (0+255),b
  3875  0059DC  C0D7  FFF6         	movff	??_TCP_Update+3,tblptrl
  3876  0059E0  C0D8  FFF7         	movff	??_TCP_Update+4,tblptrh
  3877  0059E4  0E00               	movlw	low (__smallconst shr (0+16))
  3878  0059E6  6EF8               	movwf	tblptru,c
  3879  0059E8  0E0F               	movlw	(high __ramtop+-1)
  3880  0059EA  64F7               	cpfsgt	tblptrh,c
  3881  0059EC  D004               	bra	u14967
  3882  0059EE  C0D6  FFF5         	movff	??_TCP_Update+2,tablat
  3883  0059F2  000C               	tblwt		*
  3884  0059F4  D006               	bra	u14960
  3885  0059F6                     u14967:
  3886  0059F6  CFF6 FFE9          	movff	tblptrl,fsr0l
  3887  0059FA  CFF7 FFEA          	movff	tblptrh,fsr0h
  3888  0059FE  C0D6  FFEF         	movff	??_TCP_Update+2,indf0
  3889  005A02                     u14960:
  3890                           
  3891                           ;tcpv4.c: 1452: tcbPtr->connectionEvent = TIMEOUT;
  3892  005A02  0E2B               	movlw	43
  3893  005A04  0100               	movlb	0	; () banked
  3894  005A06  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3895  005A08  6FD4               	movwf	??_TCP_Update& (0+255),b
  3896  005A0A  0E00               	movlw	0
  3897  005A0C  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3898  005A0E  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3899  005A10  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3900  005A14  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3901  005A18  0E00               	movlw	low (__smallconst shr (0+16))
  3902  005A1A  6EF8               	movwf	tblptru,c
  3903  005A1C  0E0F               	movlw	(high __ramtop+-1)
  3904  005A1E  64F7               	cpfsgt	tblptrh,c
  3905  005A20  D004               	bra	u14977
  3906  005A22  0E0C               	movlw	12
  3907  005A24  6EF5               	movwf	tablat,c
  3908  005A26  000C               	tblwt		*
  3909  005A28  D006               	bra	u14970
  3910  005A2A                     u14977:
  3911  005A2A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3912  005A2E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3913  005A32  0E0C               	movlw	12
  3914  005A34  6EEF               	movwf	indf0,c
  3915  005A36                     u14970:
  3916                           
  3917                           ;tcpv4.c: 1453: currentTCB = tcbPtr;
  3918  005A36  C0DE  F0FE         	movff	TCP_Update@tcbPtr,_currentTCB
  3919  005A3A  C0DF  F0FF         	movff	TCP_Update@tcbPtr+1,_currentTCB+1
  3920                           
  3921                           ;tcpv4.c: 1454: TCP_FiniteStateMachine();
  3922  005A3E  EC55  F008         	call	_TCP_FiniteStateMachine	;wreg free
  3923  005A42                     l9801:
  3924                           
  3925                           ;tcpv4.c: 1455: }
  3926                           ;tcpv4.c: 1456: }
  3927                           ;tcpv4.c: 1457: }
  3928                           ;tcpv4.c: 1458: }
  3929                           ;tcpv4.c: 1459: tcbPtr = tcbPtr->nextTCB;
  3930  005A42  0E2C               	movlw	44
  3931  005A44  0100               	movlb	0	; () banked
  3932  005A46  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3933  005A48  6FD4               	movwf	??_TCP_Update& (0+255),b
  3934  005A4A  0E00               	movlw	0
  3935  005A4C  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3936  005A4E  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3937  005A50  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3938  005A54  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3939  005A58  0E00               	movlw	low (__smallconst shr (0+16))
  3940  005A5A  6EF8               	movwf	tblptru,c
  3941  005A5C  0E0F               	movlw	(high __ramtop+-1)
  3942  005A5E  64F7               	cpfsgt	tblptrh,c
  3943  005A60  D007               	bra	u14987
  3944  005A62  0009               	tblrd		*+
  3945  005A64  CFF5 F0DE          	movff	tablat,TCP_Update@tcbPtr
  3946  005A68  0009               	tblrd		*+
  3947  005A6A  CFF5 F0DF          	movff	tablat,TCP_Update@tcbPtr+1
  3948  005A6E  D008               	bra	u14980
  3949  005A70                     u14987:
  3950  005A70  CFF6 FFE9          	movff	tblptrl,fsr0l
  3951  005A74  CFF7 FFEA          	movff	tblptrh,fsr0h
  3952  005A78  CFEE F0DE          	movff	postinc0,TCP_Update@tcbPtr
  3953  005A7C  CFEE F0DF          	movff	postinc0,TCP_Update@tcbPtr+1
  3954  005A80                     u14980:
  3955                           
  3956                           ;tcpv4.c: 1460: count ++;
  3957  005A80  0100               	movlb	0	; () banked
  3958  005A82  4BDC               	infsnz	TCP_Update@count& (0+255),f,b
  3959  005A84  2BDD               	incf	(TCP_Update@count+1)& (0+255),f,b
  3960  005A86                     l9805:
  3961  005A86  0100               	movlb	0	; () banked
  3962  005A88  51DE               	movf	TCP_Update@tcbPtr& (0+255),w,b
  3963  005A8A  11DF               	iorwf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3964  005A8C  B4D8               	btfsc	status,2,c
  3965  005A8E  0012               	return	
  3966                           
  3967                           ; BSR set to: 0
  3968  005A90  C1A7  F0D4         	movff	_tcbListSize,??_TCP_Update
  3969  005A94  6BD5               	clrf	(??_TCP_Update+1)& (0+255),b
  3970  005A96  BFD4               	btfsc	??_TCP_Update& (0+255),7,b
  3971  005A98  07D5               	decf	(??_TCP_Update+1)& (0+255),f,b
  3972  005A9A  51D4               	movf	??_TCP_Update& (0+255),w,b
  3973  005A9C  5DDC               	subwf	TCP_Update@count& (0+255),w,b
  3974  005A9E  51DD               	movf	(TCP_Update@count+1)& (0+255),w,b
  3975  005AA0  0A80               	xorlw	128
  3976  005AA2  6FD6               	movwf	(??_TCP_Update+2)& (0+255),b
  3977  005AA4  51D5               	movf	(??_TCP_Update+1)& (0+255),w,b
  3978  005AA6  0A80               	xorlw	128
  3979  005AA8  59D6               	subwfb	(??_TCP_Update+2)& (0+255),w,b
  3980  005AAA  E201 D679          	bnc	l9787
  3981                           
  3982                           ; BSR set to: 0
  3983  005AAE  0012               	return		;funcret
  3984  005AB0                     __end_of_TCP_Update:
  3985                           	opt stack 0
  3986                           tblptru	equ	0xFF8
  3987                           tblptrh	equ	0xFF7
  3988                           tblptrl	equ	0xFF6
  3989                           tablat	equ	0xFF5
  3990                           prodh	equ	0xFF4
  3991                           prodl	equ	0xFF3
  3992                           intcon	equ	0xFF2
  3993                           intcon2	equ	0xFF1
  3994                           indf0	equ	0xFEF
  3995                           postinc0	equ	0xFEE
  3996                           fsr0h	equ	0xFEA
  3997                           fsr0l	equ	0xFE9
  3998                           wreg	equ	0xFE8
  3999                           indf2	equ	0xFDF
  4000                           fsr2h	equ	0xFDA
  4001                           fsr2l	equ	0xFD9
  4002                           status	equ	0xFD8
  4003                           
  4004 ;; *************** function _Network_Read *****************
  4005 ;; Defined at:
  4006 ;;		line 105 in file "../../TCPIP Library/source/network.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  debug_str      80   32[BANK1 ] unsigned char [80]
  4011 ;;  header         14  112[BANK1 ] struct .
  4012 ;; Return value:  Size  Location     Type
  4013 ;;		None               void
  4014 ;; Registers used:
  4015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/1
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Locals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;      Totals:         0       0      98       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;Total ram usage:       98 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:   14
  4028 ;; This function calls:
  4029 ;;		_ARPV4_Packet
  4030 ;;		_ETH_Flush
  4031 ;;		_ETH_NextPacketUpdate
  4032 ;;		_ETH_ReadBlock
  4033 ;;		_IPV4_Packet
  4034 ;;		_sprintf
  4035 ;; This function is called by:
  4036 ;;		_Network_Manage
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text22
  4041  0071D2                     __ptext22:
  4042                           	opt stack 0
  4043  0071D2                     _Network_Read:
  4044                           	opt stack 15
  4045                           
  4046                           ;network.c: 107: ethernetFrame_t header;
  4047                           ;network.c: 108: char debug_str[80];
  4048                           ;network.c: 110: if(ethData.pktReady)
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;incstack = 0
  4052  0071D2  0101               	movlb	1	; () banked
  4053  0071D4  A383               	btfss	_ethData& (0+255),1,b	;volatile
  4054  0071D6  0012               	return	
  4055                           
  4056                           ; BSR set to: 1
  4057                           ;network.c: 111: {
  4058                           ;network.c: 112: ETH_NextPacketUpdate();
  4059  0071D8  EC2C  F03D         	call	_ETH_NextPacketUpdate	;wreg free
  4060                           
  4061                           ; BSR set to: 2
  4062                           ;network.c: 113: ETH_ReadBlock((char *)&header, sizeof(header));
  4063  0071DC  0E70               	movlw	low Network_Read@header
  4064  0071DE  6E03               	movwf	ETH_ReadBlock@data,c
  4065  0071E0  0E01               	movlw	high Network_Read@header
  4066  0071E2  6E04               	movwf	ETH_ReadBlock@data+1,c
  4067  0071E4  6A06               	clrf	ETH_ReadBlock@length+1,c
  4068  0071E6  0E0E               	movlw	14
  4069  0071E8  6E05               	movwf	ETH_ReadBlock@length,c
  4070  0071EA  ECD9  F03A         	call	_ETH_ReadBlock	;wreg free
  4071                           
  4072                           ; BSR set to: 1
  4073                           ;network.c: 114: header.id.type = ((((uint16_t)header.id.type & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)header.id.type & (uint16_t)0x00FF) << 8));
  4074  0071EE  517C               	movf	(Network_Read@header+12)& (0+255),w,b
  4075  0071F0  6F1D               	movwf	(??_Network_Read+1)& (0+255),b
  4076  0071F2  6B1C               	clrf	??_Network_Read& (0+255),b
  4077  0071F4  EE21  F07C         	lfsr	2,Network_Read@header+12
  4078  0071F8  CFDE F11E          	movff	postinc2,??_Network_Read+2
  4079  0071FC  CFDD F11F          	movff	postdec2,??_Network_Read+3
  4080  007200  C11F  F11E         	movff	??_Network_Read+3,??_Network_Read+2
  4081  007204  6B1F               	clrf	(??_Network_Read+3)& (0+255),b
  4082  007206  6B1F               	clrf	(??_Network_Read+3)& (0+255),b
  4083  007208  511C               	movf	??_Network_Read& (0+255),w,b
  4084  00720A  111E               	iorwf	(??_Network_Read+2)& (0+255),w,b
  4085  00720C  6F7C               	movwf	(Network_Read@header+12)& (0+255),b
  4086  00720E  511D               	movf	(??_Network_Read+1)& (0+255),w,b
  4087  007210  111F               	iorwf	(??_Network_Read+3)& (0+255),w,b
  4088  007212  6F7D               	movwf	(Network_Read@header+13)& (0+255),b
  4089                           
  4090                           ;network.c: 115: switch (header.id.type)
  4091  007214  D01A               	goto	l9759
  4092  007216                     l9751:
  4093                           
  4094                           ; BSR set to: 1
  4095                           ;network.c: 121: ;
  4096                           ;network.c: 122: ARPV4_Packet();
  4097  007216  ECC5  F025         	call	_ARPV4_Packet	;wreg free
  4098                           
  4099                           ;network.c: 123: break;
  4100  00721A  EF6A  F041         	goto	_ETH_Flush
  4101  00721E                     l9753:
  4102                           
  4103                           ; BSR set to: 1
  4104                           ;network.c: 125: ;
  4105                           ;network.c: 126: IPV4_Packet();
  4106  00721E  ECDE  F029         	call	_IPV4_Packet	;wreg free
  4107                           
  4108                           ;network.c: 127: break;
  4109  007222  EF6A  F041         	goto	_ETH_Flush
  4110  007226                     l9755:
  4111                           
  4112                           ; BSR set to: 1
  4113                           ;network.c: 132: sprintf(debug_str,"%x : %d",header.id.type,header.id.length);
  4114  007226  0E20               	movlw	low Network_Read@debug_str
  4115  007228  6E1C               	movwf	sprintf@wh,c
  4116  00722A  0E01               	movlw	high Network_Read@debug_str
  4117  00722C  6E1D               	movwf	sprintf@wh+1,c
  4118  00722E  0E9A               	movlw	low STR_1
  4119  007230  6E1E               	movwf	sprintf@f,c
  4120  007232  C17C  F01F         	movff	Network_Read@header+12,?_sprintf+3
  4121  007236  C17D  F020         	movff	Network_Read@header+13,?_sprintf+4
  4122  00723A  C17C  F021         	movff	Network_Read@header+12,?_sprintf+5
  4123  00723E  C17D  F022         	movff	Network_Read@header+13,?_sprintf+6
  4124  007242  ECE4  F041         	call	_sprintf	;wreg free
  4125                           
  4126                           ;network.c: 133: ;
  4127                           ;network.c: 134: break;
  4128  007246  EF6A  F041         	goto	_ETH_Flush
  4129  00724A                     l9759:
  4130                           
  4131                           ; BSR set to: 1
  4132  00724A  EE21  F07C         	lfsr	2,Network_Read@header+12
  4133  00724E  CFDE F11C          	movff	postinc2,??_Network_Read
  4134  007252  CFDD F11D          	movff	postdec2,??_Network_Read+1
  4135                           
  4136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  4137                           ; Switch size 1, requested type "speed"
  4138                           ; Number of cases is 3, Range of values is 8 to 134
  4139                           ; switch strategies available:
  4140                           ; Name         Instructions Cycles
  4141                           ; simple_byte           10     6 (average)
  4142                           ;	Chosen strategy is simple_byte
  4143  007256  511D               	movf	(??_Network_Read+1)& (0+255),w,b
  4144  007258  0A08               	xorlw	8	; case 8
  4145  00725A  E005               	bz	l10223
  4146  00725C  0A89               	xorlw	137	; case 129
  4147  00725E  E008               	bz	l10225
  4148  007260  0A07               	xorlw	7	; case 134
  4149  007262  E008               	bz	l10227
  4150  007264  D7E0               	goto	l9755
  4151  007266                     l10223:
  4152                           
  4153                           ; BSR set to: 1
  4154                           ; Switch size 1, requested type "speed"
  4155                           ; Number of cases is 2, Range of values is 0 to 6
  4156                           ; switch strategies available:
  4157                           ; Name         Instructions Cycles
  4158                           ; simple_byte            7     4 (average)
  4159                           ;	Chosen strategy is simple_byte
  4160  007266  511C               	movf	??_Network_Read& (0+255),w,b
  4161  007268  E0DA               	bz	l9753
  4162  00726A  0A06               	xorlw	6	; case 6
  4163  00726C  E0D4               	bz	l9751
  4164  00726E  D7DB               	goto	l9755
  4165  007270                     l10225:
  4166                           
  4167                           ; BSR set to: 1
  4168                           ; Switch size 1, requested type "speed"
  4169                           ; Number of cases is 1, Range of values is 0 to 0
  4170                           ; switch strategies available:
  4171                           ; Name         Instructions Cycles
  4172                           ; simple_byte            4     3 (average)
  4173                           ;	Chosen strategy is simple_byte
  4174  007270  511C               	movf	??_Network_Read& (0+255),w,b
  4175  007272  D002               	goto	L1
  4176  007274                     l10227:
  4177                           
  4178                           ; BSR set to: 1
  4179                           ; Switch size 1, requested type "speed"
  4180                           ; Number of cases is 1, Range of values is 221 to 221
  4181                           ; switch strategies available:
  4182                           ; Name         Instructions Cycles
  4183                           ; simple_byte            4     3 (average)
  4184                           ;	Chosen strategy is simple_byte
  4185  007274  511C               	movf	??_Network_Read& (0+255),w,b
  4186  007276  0ADD               	xorlw	221	; case 221
  4187  007278                     L1:
  4188  007278  E1D6               	bnz	l9755
  4189                           
  4190                           ;network.c: 136: ETH_Flush();
  4191  00727A  EF6A  F041         	goto	_ETH_Flush	;wreg free
  4192  00727E                     __end_of_Network_Read:
  4193                           	opt stack 0
  4194                           tblptru	equ	0xFF8
  4195                           tblptrh	equ	0xFF7
  4196                           tblptrl	equ	0xFF6
  4197                           tablat	equ	0xFF5
  4198                           prodh	equ	0xFF4
  4199                           prodl	equ	0xFF3
  4200                           intcon	equ	0xFF2
  4201                           intcon2	equ	0xFF1
  4202                           indf0	equ	0xFEF
  4203                           postinc0	equ	0xFEE
  4204                           fsr0h	equ	0xFEA
  4205                           fsr0l	equ	0xFE9
  4206                           wreg	equ	0xFE8
  4207                           indf2	equ	0xFDF
  4208                           postinc2	equ	0xFDE
  4209                           postdec2	equ	0xFDD
  4210                           fsr2h	equ	0xFDA
  4211                           fsr2l	equ	0xFD9
  4212                           status	equ	0xFD8
  4213                           
  4214 ;; *************** function _sprintf *****************
  4215 ;; Defined at:
  4216 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprintf.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  wh              2   27[COMRAM] PTR unsigned char 
  4219 ;;		 -> main@str(32), Network_Read@debug_str(80), 
  4220 ;;  f               1   29[COMRAM] PTR const unsigned char 
  4221 ;;		 -> STR_6(12), STR_1(8), 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  pb              5   39[COMRAM] struct __prbuf
  4224 ;;  ap              1   38[COMRAM] PTR void [1]
  4225 ;;		 -> ?_sprintf(2), ?_printf(2), 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2   27[COMRAM] int 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/2
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4235 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;Total ram usage:       17 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    5
  4242 ;; This function calls:
  4243 ;;		__doprnt
  4244 ;; This function is called by:
  4245 ;;		_Network_Read
  4246 ;;		_main
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text23
  4251  0083C8                     __ptext23:
  4252                           	opt stack 0
  4253  0083C8                     _sprintf:
  4254                           	opt stack 25
  4255                           
  4256                           ;incstack = 0
  4257  0083C8  C01C  F028         	movff	sprintf@wh,sprintf@pb
  4258  0083CC  C01D  F029         	movff	sprintf@wh+1,sprintf@pb+1
  4259  0083D0  6A2A               	clrf	sprintf@pb+2,c
  4260  0083D2  6A2B               	clrf	sprintf@pb+3,c
  4261  0083D4  6A2C               	clrf	sprintf@pb+4,c
  4262  0083D6  0E1F               	movlw	low (?_sprintf+3)
  4263  0083D8  6E27               	movwf	sprintf@ap,c
  4264  0083DA  C01E  F00E         	movff	sprintf@f,__doprnt@f
  4265  0083DE  0E27               	movlw	low sprintf@ap
  4266  0083E0  6E0F               	movwf	__doprnt@ap,c
  4267  0083E2  0E28               	movlw	sprintf@pb& (0+255)
  4268  0083E4  ECDF  F027         	call	__doprnt
  4269  0083E8  C028  FFD9         	movff	sprintf@pb,fsr2l
  4270  0083EC  C029  FFDA         	movff	sprintf@pb+1,fsr2h
  4271  0083F0  6ADF               	clrf	indf2,c
  4272  0083F2  0C00               	retlw	0	;funcret
  4273  0083F4                     __end_of_sprintf:
  4274                           	opt stack 0
  4275                           tblptru	equ	0xFF8
  4276                           tblptrh	equ	0xFF7
  4277                           tblptrl	equ	0xFF6
  4278                           tablat	equ	0xFF5
  4279                           prodh	equ	0xFF4
  4280                           prodl	equ	0xFF3
  4281                           intcon	equ	0xFF2
  4282                           intcon2	equ	0xFF1
  4283                           indf0	equ	0xFEF
  4284                           postinc0	equ	0xFEE
  4285                           fsr0h	equ	0xFEA
  4286                           fsr0l	equ	0xFE9
  4287                           wreg	equ	0xFE8
  4288                           indf2	equ	0xFDF
  4289                           postinc2	equ	0xFDE
  4290                           postdec2	equ	0xFDD
  4291                           fsr2h	equ	0xFDA
  4292                           fsr2l	equ	0xFD9
  4293                           status	equ	0xFD8
  4294                           
  4295 ;; *************** function __doprnt *****************
  4296 ;; Defined at:
  4297 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  pb              1    wreg     PTR struct __prbuf
  4300 ;;		 -> sprintf@pb(5), printf@pb(5), 
  4301 ;;  f               1   13[COMRAM] PTR const unsigned char 
  4302 ;;		 -> STR_6(12), STR_3(10), STR_2(28), STR_1(8), 
  4303 ;;  ap              1   14[COMRAM] PTR PTR void 
  4304 ;;		 -> sprintf@ap(1), printf@ap(1), 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  pb              1   26[COMRAM] PTR struct __prbuf
  4307 ;;		 -> sprintf@pb(5), printf@pb(5), 
  4308 ;;  idx             1   18[COMRAM] unsigned char 
  4309 ;;  tmpval          4    0        struct .
  4310 ;;  val             2   23[COMRAM] unsigned int 
  4311 ;;  cp              2   20[COMRAM] PTR const unsigned char 
  4312 ;;		 -> ?_sprintf(2), ?_printf(2), STR_7(7), main@str(32), 
  4313 ;;		 -> STR_5(13), STR_4(17), Network_Read@debug_str(80), NULL(0), 
  4314 ;;  len             2    0        unsigned int 
  4315 ;;  c               1   25[COMRAM] char 
  4316 ;;  flag            1   22[COMRAM] unsigned char 
  4317 ;;  prec            1   19[COMRAM] char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2   13[COMRAM] int 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/1
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;Total ram usage:       14 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    4
  4334 ;; This function calls:
  4335 ;;		Absolute function
  4336 ;;		___lwdiv
  4337 ;;		___lwmod
  4338 ;;		_putch
  4339 ;; This function is called by:
  4340 ;;		_printf
  4341 ;;		_sprintf
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text24
  4346  004FBE                     __ptext24:
  4347                           	opt stack 0
  4348  004FBE                     __doprnt:
  4349                           	opt stack 25
  4350                           
  4351                           ;incstack = 0
  4352                           ;__doprnt@pb stored from wreg
  4353  004FBE  6E1B               	movwf	__doprnt@pb,c
  4354                           
  4355                           ;doprnt.c: 499: signed char c;
  4356                           ;doprnt.c: 506: signed char prec;
  4357                           ;doprnt.c: 508: unsigned char flag;
  4358                           ;doprnt.c: 523: union {
  4359                           ;doprnt.c: 524: unsigned long vd;
  4360                           ;doprnt.c: 525: double integ;
  4361                           ;doprnt.c: 526: } tmpval;
  4362                           ;doprnt.c: 528: unsigned int val;
  4363                           ;doprnt.c: 529: unsigned len;
  4364                           ;doprnt.c: 530: const char * cp;
  4365                           ;doprnt.c: 536: while(c = *f++) {
  4366  004FC0  D1EB               	goto	l9207
  4367  004FC2                     l9093:
  4368                           
  4369                           ;doprnt.c: 538: if(c != '%')
  4370  004FC2  0E25               	movlw	37
  4371  004FC4  181A               	xorwf	__doprnt@c,w,c
  4372  004FC6  E02F               	bz	l1689
  4373                           
  4374                           ;doprnt.c: 540: {
  4375                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4376  004FC8  501B               	movf	__doprnt@pb,w,c
  4377  004FCA  6ED9               	movwf	fsr2l,c
  4378  004FCC  6ADA               	clrf	fsr2h,c
  4379  004FCE  0E02               	movlw	2
  4380  004FD0  26D9               	addwf	fsr2l,f,c
  4381  004FD2  50DE               	movf	postinc2,w,c
  4382  004FD4  10DE               	iorwf	postinc2,w,c
  4383  004FD6  10DE               	iorwf	postinc2,w,c
  4384  004FD8  E012               	bz	l9099
  4385  004FDA  501B               	movf	__doprnt@pb,w,c
  4386  004FDC  6ED9               	movwf	fsr2l,c
  4387  004FDE  6ADA               	clrf	fsr2h,c
  4388  004FE0  0E02               	movlw	2
  4389  004FE2  26D9               	addwf	fsr2l,f,c
  4390  004FE4  D801               	call	u13968
  4391  004FE6  D1D8               	goto	l9207
  4392  004FE8                     u13968:
  4393  004FE8  0005               	push	
  4394  004FEA  6EFA               	movwf	pclath,c
  4395  004FEC  50DE               	movf	postinc2,w,c
  4396  004FEE  6EFD               	movwf	tosl,c
  4397  004FF0  50DE               	movf	postinc2,w,c
  4398  004FF2  6EFE               	movwf	tosh,c
  4399  004FF4  50DE               	movf	postinc2,w,c
  4400  004FF6  6EFF               	movwf	tosu,c
  4401  004FF8  50FA               	movf	pclath,w,c
  4402  004FFA  501A               	movf	__doprnt@c,w,c
  4403  004FFC  0012               	return		;indir
  4404  004FFE                     l9099:
  4405  004FFE  501B               	movf	__doprnt@pb,w,c
  4406  005000  6ED9               	movwf	fsr2l,c
  4407  005002  6ADA               	clrf	fsr2h,c
  4408  005004  CFDE F010          	movff	postinc2,??__doprnt
  4409  005008  CFDD F011          	movff	postdec2,??__doprnt+1
  4410  00500C  C010  FFD9         	movff	??__doprnt,fsr2l
  4411  005010  C011  FFDA         	movff	??__doprnt+1,fsr2h
  4412  005014  C01A  FFDF         	movff	__doprnt@c,indf2
  4413  005018  501B               	movf	__doprnt@pb,w,c
  4414  00501A  6ED9               	movwf	fsr2l,c
  4415  00501C  6ADA               	clrf	fsr2h,c
  4416  00501E  2ADE               	incf	postinc2,f,c
  4417  005020  0E00               	movlw	0
  4418  005022  22DD               	addwfc	postdec2,f,c
  4419  005024  D1B9               	goto	l9207
  4420  005026                     l1689:
  4421                           
  4422                           ;doprnt.c: 543: }
  4423                           ;doprnt.c: 548: flag = 0;
  4424  005026  6A17               	clrf	__doprnt@flag,c
  4425                           
  4426                           ;doprnt.c: 635: switch(c = *f++) {
  4427  005028  D083               	goto	l9129
  4428  00502A                     l9103:
  4429                           
  4430                           ;doprnt.c: 721: flag |= 0x80;
  4431  00502A  8E17               	bsf	__doprnt@flag,7,c
  4432                           
  4433                           ;doprnt.c: 723: break;
  4434  00502C  D09D               	goto	l9131
  4435  00502E                     l9105:
  4436                           
  4437                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4438  00502E  500F               	movf	__doprnt@ap,w,c
  4439  005030  6ED9               	movwf	fsr2l,c
  4440  005032  6ADA               	clrf	fsr2h,c
  4441  005034  0E02               	movlw	2
  4442  005036  26DF               	addwf	indf2,f,c
  4443  005038  5CDF               	subwf	indf2,w,c
  4444  00503A  6ED9               	movwf	fsr2l,c
  4445  00503C  6ADA               	clrf	fsr2h,c
  4446  00503E  CFDE F015          	movff	postinc2,__doprnt@cp
  4447  005042  CFDE F016          	movff	postinc2,__doprnt@cp+1
  4448                           
  4449                           ;doprnt.c: 740: if(!cp)
  4450  005046  5015               	movf	__doprnt@cp,w,c
  4451  005048  1016               	iorwf	__doprnt@cp+1,w,c
  4452  00504A  E15A               	bnz	l9123
  4453                           
  4454                           ;doprnt.c: 741: cp = "(null)";
  4455  00504C  0EA2               	movlw	low STR_7
  4456  00504E  6E15               	movwf	__doprnt@cp,c
  4457  005050  5015               	movf	__doprnt@cp,w,c
  4458  005052  A4D8               	btfss	status,2,c
  4459  005054  0E10               	movlw	high __smallconst
  4460  005056  6E16               	movwf	__doprnt@cp+1,c
  4461  005058  D053               	goto	l9123
  4462  00505A                     l9111:
  4463                           
  4464                           ;doprnt.c: 778: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  4465  00505A  501B               	movf	__doprnt@pb,w,c
  4466  00505C  6ED9               	movwf	fsr2l,c
  4467  00505E  6ADA               	clrf	fsr2h,c
  4468  005060  0E02               	movlw	2
  4469  005062  26D9               	addwf	fsr2l,f,c
  4470  005064  50DE               	movf	postinc2,w,c
  4471  005066  10DE               	iorwf	postinc2,w,c
  4472  005068  10DE               	iorwf	postinc2,w,c
  4473  00506A  E025               	bz	l9117
  4474  00506C  501B               	movf	__doprnt@pb,w,c
  4475  00506E  6ED9               	movwf	fsr2l,c
  4476  005070  6ADA               	clrf	fsr2h,c
  4477  005072  0E02               	movlw	2
  4478  005074  26D9               	addwf	fsr2l,f,c
  4479  005076  D801               	call	u13998
  4480  005078  D01B               	goto	l9115
  4481  00507A                     u13998:
  4482  00507A  0005               	push	
  4483  00507C  6EFA               	movwf	pclath,c
  4484  00507E  50DE               	movf	postinc2,w,c
  4485  005080  6EFD               	movwf	tosl,c
  4486  005082  50DE               	movf	postinc2,w,c
  4487  005084  6EFE               	movwf	tosh,c
  4488  005086  50DE               	movf	postinc2,w,c
  4489  005088  6EFF               	movwf	tosu,c
  4490  00508A  50FA               	movf	pclath,w,c
  4491  00508C  C015  FFF6         	movff	__doprnt@cp,tblptrl
  4492  005090  C016  FFF7         	movff	__doprnt@cp+1,tblptrh
  4493  005094  0E00               	movlw	low (__smallconst shr (0+16))
  4494  005096  6EF8               	movwf	tblptru,c
  4495  005098  0E0F               	movlw	(high __ramtop+-1)
  4496  00509A  64F7               	cpfsgt	tblptrh,c
  4497  00509C  D003               	bra	u14007
  4498  00509E  0008               	tblrd		*
  4499  0050A0  50F5               	movf	tablat,w,c
  4500  0050A2  D005               	bra	u14000
  4501  0050A4                     u14007:
  4502  0050A4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4503  0050A8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4504  0050AC  50EF               	movf	indf0,w,c
  4505  0050AE                     u14000:
  4506  0050AE  0012               	return		;indir
  4507  0050B0                     l9115:
  4508  0050B0  4A15               	infsnz	__doprnt@cp,f,c
  4509  0050B2  2A16               	incf	__doprnt@cp+1,f,c
  4510  0050B4  D025               	goto	l9123
  4511  0050B6                     l9117:
  4512  0050B6  C015  FFF6         	movff	__doprnt@cp,tblptrl
  4513  0050BA  C016  FFF7         	movff	__doprnt@cp+1,tblptrh
  4514  0050BE  0E00               	movlw	low (__smallconst shr (0+16))
  4515  0050C0  6EF8               	movwf	tblptru,c
  4516  0050C2  501B               	movf	__doprnt@pb,w,c
  4517  0050C4  6ED9               	movwf	fsr2l,c
  4518  0050C6  6ADA               	clrf	fsr2h,c
  4519  0050C8  CFDE F010          	movff	postinc2,??__doprnt
  4520  0050CC  CFDD F011          	movff	postdec2,??__doprnt+1
  4521  0050D0  C010  FFD9         	movff	??__doprnt,fsr2l
  4522  0050D4  C011  FFDA         	movff	??__doprnt+1,fsr2h
  4523  0050D8  0E0F               	movlw	(high __ramtop+-1)
  4524  0050DA  64F7               	cpfsgt	tblptrh,c
  4525  0050DC  D003               	bra	u14017
  4526  0050DE  0008               	tblrd		*
  4527  0050E0  50F5               	movf	tablat,w,c
  4528  0050E2  D005               	bra	u14010
  4529  0050E4                     u14017:
  4530  0050E4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4531  0050E8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4532  0050EC  50EF               	movf	indf0,w,c
  4533  0050EE                     u14010:
  4534  0050EE  6EDF               	movwf	indf2,c
  4535  0050F0  4A15               	infsnz	__doprnt@cp,f,c
  4536  0050F2  2A16               	incf	__doprnt@cp+1,f,c
  4537  0050F4  501B               	movf	__doprnt@pb,w,c
  4538  0050F6  6ED9               	movwf	fsr2l,c
  4539  0050F8  6ADA               	clrf	fsr2h,c
  4540  0050FA  2ADE               	incf	postinc2,f,c
  4541  0050FC  0E00               	movlw	0
  4542  0050FE  22DD               	addwfc	postdec2,f,c
  4543  005100                     l9123:
  4544  005100  C015  FFF6         	movff	__doprnt@cp,tblptrl
  4545  005104  C016  FFF7         	movff	__doprnt@cp+1,tblptrh
  4546  005108  0E00               	movlw	low (__smallconst shr (0+16))
  4547  00510A  6EF8               	movwf	tblptru,c
  4548  00510C  0E0F               	movlw	(high __ramtop+-1)
  4549  00510E  64F7               	cpfsgt	tblptrh,c
  4550  005110  D003               	bra	u14027
  4551  005112  0008               	tblrd		*
  4552  005114  50F5               	movf	tablat,w,c
  4553  005116  D005               	bra	u14020
  4554  005118                     u14027:
  4555  005118  CFF6 FFE9          	movff	tblptrl,fsr0l
  4556  00511C  CFF7 FFEA          	movff	tblptrh,fsr0h
  4557  005120  50EF               	movf	indf0,w,c
  4558  005122                     u14020:
  4559  005122  0900               	iorlw	0
  4560  005124  E101 D138          	bz	l9207
  4561  005128  D798               	goto	l9111
  4562  00512A                     l9125:
  4563                           
  4564                           ;doprnt.c: 818: flag |= 0xC0;
  4565  00512A  0EC0               	movlw	192
  4566  00512C  1217               	iorwf	__doprnt@flag,f,c
  4567                           
  4568                           ;doprnt.c: 819: break;
  4569  00512E  D01C               	goto	l9131
  4570  005130                     l9129:
  4571  005130  2A0E               	incf	__doprnt@f,f,c
  4572  005132  040E               	decf	__doprnt@f,w,c
  4573  005134  6E10               	movwf	??__doprnt& (0+255),c
  4574  005136  C010  FFF6         	movff	??__doprnt,tblptrl
  4575  00513A                     	if	1	;There is more than 1 active tblptr byte
  4576  00513A  0E10               	movlw	high __smallconst
  4577  00513C  6EF7               	movwf	tblptrh,c
  4578  00513E                     	endif
  4579  00513E                     	if	0	;tblptru may be non-zero
  4580  00513E                     	endif
  4581  00513E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4582  00513E  0E00               	movlw	low (__smallconst shr (0+16))
  4583  005140  6EF8               	movwf	tblptru,c
  4584  005142                     	endif
  4585  005142  0008               	tblrd		*
  4586  005144  CFF5 F01A          	movff	tablat,__doprnt@c
  4587  005148  501A               	movf	__doprnt@c,w,c
  4588                           
  4589                           ; Switch size 1, requested type "speed"
  4590                           ; Number of cases is 6, Range of values is 0 to 120
  4591                           ; switch strategies available:
  4592                           ; Name         Instructions Cycles
  4593                           ; simple_byte           19    10 (average)
  4594                           ;	Chosen strategy is simple_byte
  4595  00514A  E101 D134          	bz	l1694
  4596  00514E  0A64               	xorlw	100	; case 100
  4597  005150  E00B               	bz	l9131
  4598  005152  0A0D               	xorlw	13	; case 105
  4599  005154  E009               	bz	l9131
  4600  005156  0A1A               	xorlw	26	; case 115
  4601  005158  E101 D769          	bz	l9105
  4602  00515C  0A06               	xorlw	6	; case 117
  4603  00515E  E0E5               	bz	l9125
  4604  005160  0A0D               	xorlw	13	; case 120
  4605  005162  E101 D762          	bz	l9103
  4606  005166  D118               	goto	l9207
  4607  005168                     l9131:
  4608                           
  4609                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
  4610  005168  C017  F010         	movff	__doprnt@flag,??__doprnt
  4611  00516C  0EC0               	movlw	192
  4612  00516E  1610               	andwf	??__doprnt,f,c
  4613  005170  E115               	bnz	l9141
  4614                           
  4615                           ;doprnt.c: 1253: {
  4616                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4617  005172  500F               	movf	__doprnt@ap,w,c
  4618  005174  6ED9               	movwf	fsr2l,c
  4619  005176  6ADA               	clrf	fsr2h,c
  4620  005178  0E02               	movlw	2
  4621  00517A  26DF               	addwf	indf2,f,c
  4622  00517C  5CDF               	subwf	indf2,w,c
  4623  00517E  6ED9               	movwf	fsr2l,c
  4624  005180  6ADA               	clrf	fsr2h,c
  4625  005182  CFDE F018          	movff	postinc2,__doprnt@val
  4626  005186  CFDE F019          	movff	postinc2,__doprnt@val+1
  4627                           
  4628                           ;doprnt.c: 1261: if((int)val < 0) {
  4629  00518A  AE19               	btfss	__doprnt@val+1,7,c
  4630  00518C  D046               	goto	l9173
  4631                           
  4632                           ;doprnt.c: 1262: flag |= 0x03;
  4633  00518E  0E03               	movlw	3
  4634  005190  1217               	iorwf	__doprnt@flag,f,c
  4635                           
  4636                           ;doprnt.c: 1263: val = -val;
  4637  005192  6C18               	negf	__doprnt@val,c
  4638  005194  1E19               	comf	__doprnt@val+1,f,c
  4639  005196  B0D8               	btfsc	status,0,c
  4640  005198  2A19               	incf	__doprnt@val+1,f,c
  4641  00519A  D03F               	goto	l9173
  4642  00519C                     l9141:
  4643                           
  4644                           ;doprnt.c: 1268: else
  4645                           ;doprnt.c: 1273: {
  4646                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4647  00519C  500F               	movf	__doprnt@ap,w,c
  4648  00519E  6ED9               	movwf	fsr2l,c
  4649  0051A0  6ADA               	clrf	fsr2h,c
  4650  0051A2  0E02               	movlw	2
  4651  0051A4  26DF               	addwf	indf2,f,c
  4652  0051A6  5CDF               	subwf	indf2,w,c
  4653  0051A8  6ED9               	movwf	fsr2l,c
  4654  0051AA  6ADA               	clrf	fsr2h,c
  4655  0051AC  CFDE F018          	movff	postinc2,__doprnt@val
  4656  0051B0  CFDE F019          	movff	postinc2,__doprnt@val+1
  4657  0051B4  D032               	goto	l9173
  4658  0051B6                     l9143:
  4659                           
  4660                           ;doprnt.c: 1302: case 0xC0:
  4661                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4662  0051B6  0E01               	movlw	1
  4663  0051B8  6E1A               	movwf	__doprnt@c,c
  4664  0051BA                     l9149:
  4665                           
  4666                           ;doprnt.c: 1306: if(val < dpowers[c])
  4667  0051BA  501A               	movf	__doprnt@c,w,c
  4668  0051BC  0D02               	mullw	2
  4669  0051BE  50F3               	movf	prodl,w,c
  4670  0051C0  0F01               	addlw	low _dpowers
  4671  0051C2  6E10               	movwf	??__doprnt& (0+255),c
  4672  0051C4  C010  FFF6         	movff	??__doprnt,tblptrl
  4673  0051C8                     	if	1	;There is more than 1 active tblptr byte
  4674  0051C8  0E10               	movlw	high __smallconst
  4675  0051CA  6EF7               	movwf	tblptrh,c
  4676  0051CC                     	endif
  4677  0051CC                     	if	0	;tblptru may be non-zero
  4678  0051CC                     	endif
  4679  0051CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4680  0051CC  0E00               	movlw	low (__smallconst shr (0+16))
  4681  0051CE  6EF8               	movwf	tblptru,c
  4682  0051D0                     	endif
  4683  0051D0  0009               	tblrd		*+
  4684  0051D2  50F5               	movf	tablat,w,c
  4685  0051D4  5C18               	subwf	__doprnt@val,w,c
  4686  0051D6  0009               	tblrd		*+
  4687  0051D8  50F5               	movf	tablat,w,c
  4688  0051DA  5819               	subwfb	__doprnt@val+1,w,c
  4689  0051DC  E325               	bnc	l9175
  4690  0051DE  2A1A               	incf	__doprnt@c,f,c
  4691  0051E0  0E05               	movlw	5
  4692  0051E2  181A               	xorwf	__doprnt@c,w,c
  4693  0051E4  E021               	bz	l9175
  4694  0051E6  D7E9               	goto	l9149
  4695  0051E8                     l9157:
  4696                           
  4697                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4698  0051E8  0E01               	movlw	1
  4699  0051EA  6E1A               	movwf	__doprnt@c,c
  4700  0051EC                     l9163:
  4701                           
  4702                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4703  0051EC  501A               	movf	__doprnt@c,w,c
  4704  0051EE  0D02               	mullw	2
  4705  0051F0  50F3               	movf	prodl,w,c
  4706  0051F2  0F0B               	addlw	low _hexpowers
  4707  0051F4  6E10               	movwf	??__doprnt& (0+255),c
  4708  0051F6  C010  FFF6         	movff	??__doprnt,tblptrl
  4709  0051FA                     	if	1	;There is more than 1 active tblptr byte
  4710  0051FA  0E10               	movlw	high __smallconst
  4711  0051FC  6EF7               	movwf	tblptrh,c
  4712  0051FE                     	endif
  4713  0051FE                     	if	0	;tblptru may be non-zero
  4714  0051FE                     	endif
  4715  0051FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4716  0051FE  0E00               	movlw	low (__smallconst shr (0+16))
  4717  005200  6EF8               	movwf	tblptru,c
  4718  005202                     	endif
  4719  005202  0009               	tblrd		*+
  4720  005204  50F5               	movf	tablat,w,c
  4721  005206  5C18               	subwf	__doprnt@val,w,c
  4722  005208  0009               	tblrd		*+
  4723  00520A  50F5               	movf	tablat,w,c
  4724  00520C  5819               	subwfb	__doprnt@val+1,w,c
  4725  00520E  E30C               	bnc	l9175
  4726  005210  2A1A               	incf	__doprnt@c,f,c
  4727  005212  0E04               	movlw	4
  4728  005214  181A               	xorwf	__doprnt@c,w,c
  4729  005216  E008               	bz	l9175
  4730  005218  D7E9               	goto	l9163
  4731  00521A                     l9173:
  4732  00521A  5017               	movf	__doprnt@flag,w,c
  4733  00521C  0BC0               	andlw	192
  4734                           
  4735                           ; Switch size 1, requested type "speed"
  4736                           ; Number of cases is 3, Range of values is 0 to 192
  4737                           ; switch strategies available:
  4738                           ; Name         Instructions Cycles
  4739                           ; simple_byte           10     6 (average)
  4740                           ;	Chosen strategy is simple_byte
  4741  00521E  E0CB               	bz	l9143
  4742  005220  0A80               	xorlw	128	; case 128
  4743  005222  E0E2               	bz	l9157
  4744  005224  0A40               	xorlw	64	; case 192
  4745  005226  E0C7               	bz	l9143
  4746  005228                     l9175:
  4747                           
  4748                           ;doprnt.c: 1422: {
  4749                           ;doprnt.c: 1438: if(flag & 0x03)
  4750  005228  C017  F010         	movff	__doprnt@flag,??__doprnt
  4751  00522C  0E03               	movlw	3
  4752  00522E  1610               	andwf	??__doprnt,f,c
  4753  005230  E02D               	bz	l9185
  4754                           
  4755                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4756  005232  501B               	movf	__doprnt@pb,w,c
  4757  005234  6ED9               	movwf	fsr2l,c
  4758  005236  6ADA               	clrf	fsr2h,c
  4759  005238  0E02               	movlw	2
  4760  00523A  26D9               	addwf	fsr2l,f,c
  4761  00523C  50DE               	movf	postinc2,w,c
  4762  00523E  10DE               	iorwf	postinc2,w,c
  4763  005240  10DE               	iorwf	postinc2,w,c
  4764  005242  E011               	bz	l9181
  4765  005244  501B               	movf	__doprnt@pb,w,c
  4766  005246  6ED9               	movwf	fsr2l,c
  4767  005248  6ADA               	clrf	fsr2h,c
  4768  00524A  0E02               	movlw	2
  4769  00524C  26D9               	addwf	fsr2l,f,c
  4770  00524E  D801               	call	u14128
  4771  005250  D01D               	goto	l9185
  4772  005252                     u14128:
  4773  005252  0005               	push	
  4774  005254  6EFA               	movwf	pclath,c
  4775  005256  50DE               	movf	postinc2,w,c
  4776  005258  6EFD               	movwf	tosl,c
  4777  00525A  50DE               	movf	postinc2,w,c
  4778  00525C  6EFE               	movwf	tosh,c
  4779  00525E  50DE               	movf	postinc2,w,c
  4780  005260  6EFF               	movwf	tosu,c
  4781  005262  50FA               	movf	pclath,w,c
  4782  005264  0C2D               	retlw	45	;indir
  4783  005266                     l9181:
  4784  005266  501B               	movf	__doprnt@pb,w,c
  4785  005268  6ED9               	movwf	fsr2l,c
  4786  00526A  6ADA               	clrf	fsr2h,c
  4787  00526C  CFDE F010          	movff	postinc2,??__doprnt
  4788  005270  CFDD F011          	movff	postdec2,??__doprnt+1
  4789  005274  C010  FFD9         	movff	??__doprnt,fsr2l
  4790  005278  C011  FFDA         	movff	??__doprnt+1,fsr2h
  4791  00527C  0E2D               	movlw	45
  4792  00527E  6EDF               	movwf	indf2,c
  4793  005280  501B               	movf	__doprnt@pb,w,c
  4794  005282  6ED9               	movwf	fsr2l,c
  4795  005284  6ADA               	clrf	fsr2h,c
  4796  005286  2ADE               	incf	postinc2,f,c
  4797  005288  0E00               	movlw	0
  4798  00528A  22DD               	addwfc	postdec2,f,c
  4799  00528C                     l9185:
  4800                           
  4801                           ;doprnt.c: 1469: }
  4802                           ;doprnt.c: 1472: prec = c;
  4803  00528C  C01A  F014         	movff	__doprnt@c,__doprnt@prec
  4804                           
  4805                           ;doprnt.c: 1474: while(prec--) {
  4806  005290  D080               	goto	l9205
  4807  005292                     l9187:
  4808                           
  4809                           ;doprnt.c: 1486: case 0xC0:
  4810                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4811  005292  5014               	movf	__doprnt@prec,w,c
  4812  005294  0D02               	mullw	2
  4813  005296  50F3               	movf	prodl,w,c
  4814  005298  0F01               	addlw	low _dpowers
  4815  00529A  6E10               	movwf	??__doprnt& (0+255),c
  4816  00529C  C010  FFF6         	movff	??__doprnt,tblptrl
  4817  0052A0                     	if	1	;There is more than 1 active tblptr byte
  4818  0052A0  0E10               	movlw	high __smallconst
  4819  0052A2  6EF7               	movwf	tblptrh,c
  4820  0052A4                     	endif
  4821  0052A4                     	if	0	;tblptru may be non-zero
  4822  0052A4                     	endif
  4823  0052A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4824  0052A4  0E00               	movlw	low (__smallconst shr (0+16))
  4825  0052A6  6EF8               	movwf	tblptru,c
  4826  0052A8                     	endif
  4827  0052A8  0009               	tblrd		*+
  4828  0052AA  CFF5 F004          	movff	tablat,___lwdiv@divisor
  4829  0052AE  000A               	tblrd		*-
  4830  0052B0  CFF5 F005          	movff	tablat,___lwdiv@divisor+1
  4831  0052B4  C018  F002         	movff	__doprnt@val,___lwdiv@dividend
  4832  0052B8  C019  F003         	movff	__doprnt@val+1,___lwdiv@dividend+1
  4833  0052BC  EC95  F03F         	call	___lwdiv
  4834  0052C0  C002  F009         	movff	?___lwdiv,___lwmod@dividend
  4835  0052C4  C003  F00A         	movff	?___lwdiv+1,___lwmod@dividend+1
  4836  0052C8  6A0C               	clrf	___lwmod@divisor+1,c
  4837  0052CA  0E0A               	movlw	10
  4838  0052CC  6E0B               	movwf	___lwmod@divisor,c
  4839  0052CE  EC11  F041         	call	___lwmod	;wreg free
  4840  0052D2  5009               	movf	?___lwmod,w,c
  4841  0052D4  0F30               	addlw	48
  4842  0052D6  6E1A               	movwf	__doprnt@c,c
  4843                           
  4844                           ;doprnt.c: 1491: break;
  4845  0052D8  D02E               	goto	l9197
  4846  0052DA                     l9189:
  4847                           
  4848                           ;doprnt.c: 1499: {
  4849                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4850  0052DA  C018  F002         	movff	__doprnt@val,___lwdiv@dividend
  4851  0052DE  C019  F003         	movff	__doprnt@val+1,___lwdiv@dividend+1
  4852  0052E2  5014               	movf	__doprnt@prec,w,c
  4853  0052E4  0D02               	mullw	2
  4854  0052E6  50F3               	movf	prodl,w,c
  4855  0052E8  0F0B               	addlw	low _hexpowers
  4856  0052EA  6E10               	movwf	??__doprnt& (0+255),c
  4857  0052EC  C010  FFF6         	movff	??__doprnt,tblptrl
  4858  0052F0                     	if	1	;There is more than 1 active tblptr byte
  4859  0052F0  0E10               	movlw	high __smallconst
  4860  0052F2  6EF7               	movwf	tblptrh,c
  4861  0052F4                     	endif
  4862  0052F4                     	if	0	;tblptru may be non-zero
  4863  0052F4                     	endif
  4864  0052F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4865  0052F4  0E00               	movlw	low (__smallconst shr (0+16))
  4866  0052F6  6EF8               	movwf	tblptru,c
  4867  0052F8                     	endif
  4868  0052F8  0009               	tblrd		*+
  4869  0052FA  CFF5 F004          	movff	tablat,___lwdiv@divisor
  4870  0052FE  000A               	tblrd		*-
  4871  005300  CFF5 F005          	movff	tablat,___lwdiv@divisor+1
  4872  005304  EC95  F03F         	call	___lwdiv	;wreg free
  4873  005308  5002               	movf	?___lwdiv,w,c
  4874  00530A  0B0F               	andlw	15
  4875  00530C  6E13               	movwf	__doprnt@idx,c
  4876                           
  4877                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  4878  00530E  5013               	movf	__doprnt@idx,w,c
  4879  005310  0F55               	addlw	low STR_8
  4880  005312  6E10               	movwf	??__doprnt& (0+255),c
  4881  005314  C010  FFF6         	movff	??__doprnt,tblptrl
  4882  005318                     	if	1	;There is more than 1 active tblptr byte
  4883  005318  0E10               	movlw	high __smallconst
  4884  00531A  6EF7               	movwf	tblptrh,c
  4885  00531C                     	endif
  4886  00531C                     	if	0	;tblptru may be non-zero
  4887  00531C                     	endif
  4888  00531C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4889  00531C  0E00               	movlw	low (__smallconst shr (0+16))
  4890  00531E  6EF8               	movwf	tblptru,c
  4891  005320                     	endif
  4892  005320  0008               	tblrd		*
  4893  005322  CFF5 F01A          	movff	tablat,__doprnt@c
  4894                           
  4895                           ;doprnt.c: 1508: }
  4896                           ;doprnt.c: 1510: break;
  4897  005326  D007               	goto	l9197
  4898  005328                     l9195:
  4899  005328  5017               	movf	__doprnt@flag,w,c
  4900  00532A  0BC0               	andlw	192
  4901                           
  4902                           ; Switch size 1, requested type "speed"
  4903                           ; Number of cases is 3, Range of values is 0 to 192
  4904                           ; switch strategies available:
  4905                           ; Name         Instructions Cycles
  4906                           ; simple_byte           10     6 (average)
  4907                           ;	Chosen strategy is simple_byte
  4908  00532C  E0B2               	bz	l9187
  4909  00532E  0A80               	xorlw	128	; case 128
  4910  005330  E0D4               	bz	l9189
  4911  005332  0A40               	xorlw	64	; case 192
  4912  005334  E0AE               	bz	l9187
  4913  005336                     l9197:
  4914                           
  4915                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4916  005336  501B               	movf	__doprnt@pb,w,c
  4917  005338  6ED9               	movwf	fsr2l,c
  4918  00533A  6ADA               	clrf	fsr2h,c
  4919  00533C  0E02               	movlw	2
  4920  00533E  26D9               	addwf	fsr2l,f,c
  4921  005340  50DE               	movf	postinc2,w,c
  4922  005342  10DE               	iorwf	postinc2,w,c
  4923  005344  10DE               	iorwf	postinc2,w,c
  4924  005346  E012               	bz	l9201
  4925  005348  501B               	movf	__doprnt@pb,w,c
  4926  00534A  6ED9               	movwf	fsr2l,c
  4927  00534C  6ADA               	clrf	fsr2h,c
  4928  00534E  0E02               	movlw	2
  4929  005350  26D9               	addwf	fsr2l,f,c
  4930  005352  D801               	call	u14148
  4931  005354  D01E               	goto	l9205
  4932  005356                     u14148:
  4933  005356  0005               	push	
  4934  005358  6EFA               	movwf	pclath,c
  4935  00535A  50DE               	movf	postinc2,w,c
  4936  00535C  6EFD               	movwf	tosl,c
  4937  00535E  50DE               	movf	postinc2,w,c
  4938  005360  6EFE               	movwf	tosh,c
  4939  005362  50DE               	movf	postinc2,w,c
  4940  005364  6EFF               	movwf	tosu,c
  4941  005366  50FA               	movf	pclath,w,c
  4942  005368  501A               	movf	__doprnt@c,w,c
  4943  00536A  0012               	return		;indir
  4944  00536C                     l9201:
  4945  00536C  501B               	movf	__doprnt@pb,w,c
  4946  00536E  6ED9               	movwf	fsr2l,c
  4947  005370  6ADA               	clrf	fsr2h,c
  4948  005372  CFDE F010          	movff	postinc2,??__doprnt
  4949  005376  CFDD F011          	movff	postdec2,??__doprnt+1
  4950  00537A  C010  FFD9         	movff	??__doprnt,fsr2l
  4951  00537E  C011  FFDA         	movff	??__doprnt+1,fsr2h
  4952  005382  C01A  FFDF         	movff	__doprnt@c,indf2
  4953  005386  501B               	movf	__doprnt@pb,w,c
  4954  005388  6ED9               	movwf	fsr2l,c
  4955  00538A  6ADA               	clrf	fsr2h,c
  4956  00538C  2ADE               	incf	postinc2,f,c
  4957  00538E  0E00               	movlw	0
  4958  005390  22DD               	addwfc	postdec2,f,c
  4959  005392                     l9205:
  4960  005392  0614               	decf	__doprnt@prec,f,c
  4961  005394  2814               	incf	__doprnt@prec,w,c
  4962  005396  E1C8               	bnz	l9195
  4963  005398                     l9207:
  4964  005398  2A0E               	incf	__doprnt@f,f,c
  4965  00539A  040E               	decf	__doprnt@f,w,c
  4966  00539C  6E10               	movwf	??__doprnt& (0+255),c
  4967  00539E  C010  FFF6         	movff	??__doprnt,tblptrl
  4968  0053A2                     	if	1	;There is more than 1 active tblptr byte
  4969  0053A2  0E10               	movlw	high __smallconst
  4970  0053A4  6EF7               	movwf	tblptrh,c
  4971  0053A6                     	endif
  4972  0053A6                     	if	0	;tblptru may be non-zero
  4973  0053A6                     	endif
  4974  0053A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4975  0053A6  0E00               	movlw	low (__smallconst shr (0+16))
  4976  0053A8  6EF8               	movwf	tblptru,c
  4977  0053AA                     	endif
  4978  0053AA  0008               	tblrd		*
  4979  0053AC  CFF5 F01A          	movff	tablat,__doprnt@c
  4980  0053B0  501A               	movf	__doprnt@c,w,c
  4981  0053B2  E001 D606          	bnz	l9093
  4982  0053B6                     l1694:
  4983                           
  4984                           ;doprnt.c: 1540: return 0;
  4985  0053B6  6A0E               	clrf	?__doprnt,c
  4986  0053B8  6A0F               	clrf	?__doprnt+1,c
  4987  0053BA  0012               	return		;funcret
  4988  0053BC                     __end_of__doprnt:
  4989                           	opt stack 0
  4990                           tosu	equ	0xFFF
  4991                           tosh	equ	0xFFE
  4992                           tosl	equ	0xFFD
  4993                           pclath	equ	0xFFA
  4994                           tblptru	equ	0xFF8
  4995                           tblptrh	equ	0xFF7
  4996                           tblptrl	equ	0xFF6
  4997                           tablat	equ	0xFF5
  4998                           prodh	equ	0xFF4
  4999                           prodl	equ	0xFF3
  5000                           intcon	equ	0xFF2
  5001                           intcon2	equ	0xFF1
  5002                           indf0	equ	0xFEF
  5003                           postinc0	equ	0xFEE
  5004                           fsr0h	equ	0xFEA
  5005                           fsr0l	equ	0xFE9
  5006                           wreg	equ	0xFE8
  5007                           indf2	equ	0xFDF
  5008                           postinc2	equ	0xFDE
  5009                           postdec2	equ	0xFDD
  5010                           fsr2h	equ	0xFDA
  5011                           fsr2l	equ	0xFD9
  5012                           status	equ	0xFD8
  5013                           
  5014 ;; *************** function _putch *****************
  5015 ;; Defined at:
  5016 ;;		line 77 in file "../board_support_package/picdem2_net/uart.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  data            1    wreg     unsigned char 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  data            1    1[COMRAM] unsigned char 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;		None               void
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/1
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;Total ram usage:        1 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    3
  5037 ;; This function calls:
  5038 ;;		Nothing
  5039 ;; This function is called by:
  5040 ;;		_printf
  5041 ;;		__doprnt
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text25
  5046  008686                     __ptext25:
  5047                           	opt stack 0
  5048  008686                     _putch:
  5049                           	opt stack 25
  5050                           
  5051                           ;incstack = 0
  5052                           ;putch@data stored from wreg
  5053  008686  6E02               	movwf	putch@data,c
  5054                           
  5055                           ;uart.c: 79: if(data == '\n')
  5056  008688  0E0A               	movlw	10
  5057  00868A  1802               	xorwf	putch@data,w,c
  5058  00868C  E104               	bnz	l354
  5059  00868E                     l351:
  5060  00868E  A89E               	btfss	3998,4,c	;volatile
  5061  008690  D7FE               	goto	l351
  5062                           
  5063                           ;uart.c: 83: TXREG1 = '\r';
  5064  008692  0E0D               	movlw	13
  5065  008694  6EAD               	movwf	4013,c	;volatile
  5066  008696                     l354:
  5067  008696  A89E               	btfss	3998,4,c	;volatile
  5068  008698  D7FE               	goto	l354
  5069                           
  5070                           ;uart.c: 87: TXREG1 = data;
  5071  00869A  C002  FFAD         	movff	putch@data,4013	;volatile
  5072  00869E  0012               	return		;funcret
  5073  0086A0                     __end_of_putch:
  5074                           	opt stack 0
  5075                           tosu	equ	0xFFF
  5076                           tosh	equ	0xFFE
  5077                           tosl	equ	0xFFD
  5078                           pclath	equ	0xFFA
  5079                           tblptru	equ	0xFF8
  5080                           tblptrh	equ	0xFF7
  5081                           tblptrl	equ	0xFF6
  5082                           tablat	equ	0xFF5
  5083                           prodh	equ	0xFF4
  5084                           prodl	equ	0xFF3
  5085                           intcon	equ	0xFF2
  5086                           intcon2	equ	0xFF1
  5087                           indf0	equ	0xFEF
  5088                           postinc0	equ	0xFEE
  5089                           fsr0h	equ	0xFEA
  5090                           fsr0l	equ	0xFE9
  5091                           wreg	equ	0xFE8
  5092                           indf2	equ	0xFDF
  5093                           postinc2	equ	0xFDE
  5094                           postdec2	equ	0xFDD
  5095                           fsr2h	equ	0xFDA
  5096                           fsr2l	equ	0xFD9
  5097                           status	equ	0xFD8
  5098                           
  5099 ;; *************** function ___lwmod *****************
  5100 ;; Defined at:
  5101 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  dividend        2    8[COMRAM] unsigned int 
  5104 ;;  divisor         2   10[COMRAM] unsigned int 
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  counter         1   12[COMRAM] unsigned char 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  2    8[COMRAM] unsigned int 
  5109 ;; Registers used:
  5110 ;;		wreg, status,2, status,0
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/1
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5116 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5120 ;;Total ram usage:        5 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:    3
  5123 ;; This function calls:
  5124 ;;		Nothing
  5125 ;; This function is called by:
  5126 ;;		__doprnt
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           	psect	text26
  5131  008222                     __ptext26:
  5132                           	opt stack 0
  5133  008222                     ___lwmod:
  5134                           	opt stack 25
  5135                           
  5136                           ;incstack = 0
  5137  008222  500B               	movf	___lwmod@divisor,w,c
  5138  008224  100C               	iorwf	___lwmod@divisor+1,w,c
  5139  008226  E017               	bz	l2143
  5140  008228  0E01               	movlw	1
  5141  00822A  6E0D               	movwf	___lwmod@counter,c
  5142  00822C  D004               	goto	l8865
  5143  00822E                     l8863:
  5144  00822E  90D8               	bcf	status,0,c
  5145  008230  360B               	rlcf	___lwmod@divisor,f,c
  5146  008232  360C               	rlcf	___lwmod@divisor+1,f,c
  5147  008234  2A0D               	incf	___lwmod@counter,f,c
  5148  008236                     l8865:
  5149  008236  AE0C               	btfss	___lwmod@divisor+1,7,c
  5150  008238  D7FA               	goto	l8863
  5151  00823A                     l8867:
  5152  00823A  500B               	movf	___lwmod@divisor,w,c
  5153  00823C  5C09               	subwf	___lwmod@dividend,w,c
  5154  00823E  500C               	movf	___lwmod@divisor+1,w,c
  5155  008240  580A               	subwfb	___lwmod@dividend+1,w,c
  5156  008242  E304               	bnc	l8871
  5157  008244  500B               	movf	___lwmod@divisor,w,c
  5158  008246  5E09               	subwf	___lwmod@dividend,f,c
  5159  008248  500C               	movf	___lwmod@divisor+1,w,c
  5160  00824A  5A0A               	subwfb	___lwmod@dividend+1,f,c
  5161  00824C                     l8871:
  5162  00824C  90D8               	bcf	status,0,c
  5163  00824E  320C               	rrcf	___lwmod@divisor+1,f,c
  5164  008250  320B               	rrcf	___lwmod@divisor,f,c
  5165  008252  2E0D               	decfsz	___lwmod@counter,f,c
  5166  008254  D7F2               	goto	l8867
  5167  008256                     l2143:
  5168  008256  C009  F009         	movff	___lwmod@dividend,?___lwmod
  5169  00825A  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  5170  00825E  0012               	return		;funcret
  5171  008260                     __end_of___lwmod:
  5172                           	opt stack 0
  5173                           tosu	equ	0xFFF
  5174                           tosh	equ	0xFFE
  5175                           tosl	equ	0xFFD
  5176                           pclath	equ	0xFFA
  5177                           tblptru	equ	0xFF8
  5178                           tblptrh	equ	0xFF7
  5179                           tblptrl	equ	0xFF6
  5180                           tablat	equ	0xFF5
  5181                           prodh	equ	0xFF4
  5182                           prodl	equ	0xFF3
  5183                           intcon	equ	0xFF2
  5184                           intcon2	equ	0xFF1
  5185                           indf0	equ	0xFEF
  5186                           postinc0	equ	0xFEE
  5187                           fsr0h	equ	0xFEA
  5188                           fsr0l	equ	0xFE9
  5189                           wreg	equ	0xFE8
  5190                           indf2	equ	0xFDF
  5191                           postinc2	equ	0xFDE
  5192                           postdec2	equ	0xFDD
  5193                           fsr2h	equ	0xFDA
  5194                           fsr2l	equ	0xFD9
  5195                           status	equ	0xFD8
  5196                           
  5197 ;; *************** function ___lwdiv *****************
  5198 ;; Defined at:
  5199 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  dividend        2    1[COMRAM] unsigned int 
  5202 ;;  divisor         2    3[COMRAM] unsigned int 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  quotient        2    6[COMRAM] unsigned int 
  5205 ;;  counter         1    5[COMRAM] unsigned char 
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  2    1[COMRAM] unsigned int 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/1
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;Total ram usage:        7 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    3
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		__doprnt
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text27
  5230  007F2A                     __ptext27:
  5231                           	opt stack 0
  5232  007F2A                     ___lwdiv:
  5233                           	opt stack 25
  5234                           
  5235                           ;incstack = 0
  5236  007F2A  6A07               	clrf	___lwdiv@quotient,c
  5237  007F2C  6A08               	clrf	___lwdiv@quotient+1,c
  5238  007F2E  5004               	movf	___lwdiv@divisor,w,c
  5239  007F30  1005               	iorwf	___lwdiv@divisor+1,w,c
  5240  007F32  E01B               	bz	l2133
  5241  007F34  0E01               	movlw	1
  5242  007F36  6E06               	movwf	___lwdiv@counter,c
  5243  007F38  D004               	goto	l8845
  5244  007F3A                     l8843:
  5245  007F3A  90D8               	bcf	status,0,c
  5246  007F3C  3604               	rlcf	___lwdiv@divisor,f,c
  5247  007F3E  3605               	rlcf	___lwdiv@divisor+1,f,c
  5248  007F40  2A06               	incf	___lwdiv@counter,f,c
  5249  007F42                     l8845:
  5250  007F42  AE05               	btfss	___lwdiv@divisor+1,7,c
  5251  007F44  D7FA               	goto	l8843
  5252  007F46                     l8847:
  5253  007F46  90D8               	bcf	status,0,c
  5254  007F48  3607               	rlcf	___lwdiv@quotient,f,c
  5255  007F4A  3608               	rlcf	___lwdiv@quotient+1,f,c
  5256  007F4C  5004               	movf	___lwdiv@divisor,w,c
  5257  007F4E  5C02               	subwf	___lwdiv@dividend,w,c
  5258  007F50  5005               	movf	___lwdiv@divisor+1,w,c
  5259  007F52  5803               	subwfb	___lwdiv@dividend+1,w,c
  5260  007F54  E305               	bnc	l8855
  5261  007F56  5004               	movf	___lwdiv@divisor,w,c
  5262  007F58  5E02               	subwf	___lwdiv@dividend,f,c
  5263  007F5A  5005               	movf	___lwdiv@divisor+1,w,c
  5264  007F5C  5A03               	subwfb	___lwdiv@dividend+1,f,c
  5265  007F5E  8007               	bsf	___lwdiv@quotient,0,c
  5266  007F60                     l8855:
  5267  007F60  90D8               	bcf	status,0,c
  5268  007F62  3205               	rrcf	___lwdiv@divisor+1,f,c
  5269  007F64  3204               	rrcf	___lwdiv@divisor,f,c
  5270  007F66  2E06               	decfsz	___lwdiv@counter,f,c
  5271  007F68  D7EE               	goto	l8847
  5272  007F6A                     l2133:
  5273  007F6A  C007  F002         	movff	___lwdiv@quotient,?___lwdiv
  5274  007F6E  C008  F003         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5275  007F72  0012               	return		;funcret
  5276  007F74                     __end_of___lwdiv:
  5277                           	opt stack 0
  5278                           tosu	equ	0xFFF
  5279                           tosh	equ	0xFFE
  5280                           tosl	equ	0xFFD
  5281                           pclath	equ	0xFFA
  5282                           tblptru	equ	0xFF8
  5283                           tblptrh	equ	0xFF7
  5284                           tblptrl	equ	0xFF6
  5285                           tablat	equ	0xFF5
  5286                           prodh	equ	0xFF4
  5287                           prodl	equ	0xFF3
  5288                           intcon	equ	0xFF2
  5289                           intcon2	equ	0xFF1
  5290                           indf0	equ	0xFEF
  5291                           postinc0	equ	0xFEE
  5292                           fsr0h	equ	0xFEA
  5293                           fsr0l	equ	0xFE9
  5294                           wreg	equ	0xFE8
  5295                           indf2	equ	0xFDF
  5296                           postinc2	equ	0xFDE
  5297                           postdec2	equ	0xFDD
  5298                           fsr2h	equ	0xFDA
  5299                           fsr2l	equ	0xFD9
  5300                           status	equ	0xFD8
  5301                           
  5302 ;; *************** function _IPV4_Packet *****************
  5303 ;; Defined at:
  5304 ;;		line 115 in file "../../TCPIP Library/source/ipv4.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  msg            40    0        unsigned char [40]
  5309 ;;  cksm            2  156[BANK0 ] unsigned int 
  5310 ;;  length          2  154[BANK0 ] unsigned int 
  5311 ;;  hdrLen          1  153[BANK0 ] unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      enum E6944
  5314 ;; Registers used:
  5315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/1
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Totals:         0       5      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;Total ram usage:       33 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:   13
  5328 ;; This function calls:
  5329 ;;		_ETH_Dump
  5330 ;;		_ETH_ReadBlock
  5331 ;;		_ETH_RxComputeChecksum
  5332 ;;		_ICMP_Receive
  5333 ;;		_IPV4_PseudoHeaderChecksum
  5334 ;;		_TCP_Recv
  5335 ;;		_UDP_Receive
  5336 ;; This function is called by:
  5337 ;;		_Network_Read
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text28
  5342  0053BC                     __ptext28:
  5343                           	opt stack 0
  5344  0053BC                     _IPV4_Packet:
  5345                           	opt stack 15
  5346                           
  5347                           ;ipv4.c: 118: uint16_t length = 0;
  5348                           
  5349                           ;incstack = 0
  5350  0053BC  0100               	movlb	0	; () banked
  5351  0053BE  6BFA               	clrf	IPV4_Packet@length& (0+255),b
  5352  0053C0  6BFB               	clrf	(IPV4_Packet@length+1)& (0+255),b
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;ipv4.c: 119: char msg[40];
  5356                           ;ipv4.c: 120: uint8_t hdrLen;
  5357                           ;ipv4.c: 123: cksm = ETH_RxComputeChecksum(sizeof(ipv4Header_t), 0);
  5358  0053C2  6A0E               	clrf	ETH_RxComputeChecksum@len+1,c
  5359  0053C4  0E14               	movlw	20
  5360  0053C6  6E0D               	movwf	ETH_RxComputeChecksum@len,c
  5361  0053C8  6A10               	clrf	ETH_RxComputeChecksum@seed+1,c
  5362  0053CA  6A0F               	clrf	ETH_RxComputeChecksum@seed,c
  5363  0053CC  ECCD  F037         	call	_ETH_RxComputeChecksum
  5364  0053D0  C00D  F0FC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  5365  0053D4  C00E  F0FD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  5366                           
  5367                           ;ipv4.c: 124: if (cksm != 0)
  5368  0053D8  0100               	movlb	0	; () banked
  5369  0053DA  51FC               	movf	IPV4_Packet@cksm& (0+255),w,b
  5370  0053DC  11FD               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  5371  0053DE  E001               	bz	l9395
  5372  0053E0  0012               	return	
  5373  0053E2                     l9395:
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;ipv4.c: 128: }
  5377                           ;ipv4.c: 130: ETH_ReadBlock((char *)&ipv4Header, sizeof(ipv4Header_t));
  5378  0053E2  0EA8               	movlw	low _ipv4Header
  5379  0053E4  6E03               	movwf	ETH_ReadBlock@data,c
  5380  0053E6  0E01               	movlw	high _ipv4Header
  5381  0053E8  6E04               	movwf	ETH_ReadBlock@data+1,c
  5382  0053EA  6A06               	clrf	ETH_ReadBlock@length+1,c
  5383  0053EC  0E14               	movlw	20
  5384  0053EE  6E05               	movwf	ETH_ReadBlock@length,c
  5385  0053F0  ECD9  F03A         	call	_ETH_ReadBlock	;wreg free
  5386                           
  5387                           ; BSR set to: 1
  5388                           ;ipv4.c: 131: if(ipv4Header.version != 4)
  5389  0053F4  39A8               	swapf	_ipv4Header& (0+255),w,b
  5390  0053F6  0B0F               	andlw	15
  5391  0053F8  0A04               	xorlw	4
  5392  0053FA  E001               	bz	l9401
  5393  0053FC  0012               	return	
  5394  0053FE                     l9401:
  5395                           
  5396                           ; BSR set to: 1
  5397                           ;ipv4.c: 134: }
  5398                           ;ipv4.c: 136: ipv4Header.dstIpAddress = ((((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.d
  5399  0053FE  51B8               	movf	(_ipv4Header+16)& (0+255),w,b
  5400  005400  6F00               	movwf	??_IPV4_Packet& (0+255),b
  5401  005402  6B01               	clrf	(??_IPV4_Packet+1)& (0+255),b
  5402  005404  6B02               	clrf	(??_IPV4_Packet+2)& (0+255),b
  5403  005406  6B03               	clrf	(??_IPV4_Packet+3)& (0+255),b
  5404  005408  C100  F103         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  5405  00540C  6B02               	clrf	(??_IPV4_Packet+2)& (0+255),b
  5406  00540E  6B01               	clrf	(??_IPV4_Packet+1)& (0+255),b
  5407  005410  6B00               	clrf	??_IPV4_Packet& (0+255),b
  5408  005412  EE21  F0B8         	lfsr	2,_ipv4Header+16
  5409  005416  0E00               	movlw	0
  5410  005418  14DE               	andwf	postinc2,w,c
  5411  00541A  6F04               	movwf	(??_IPV4_Packet+4)& (0+255),b
  5412  00541C  0EFF               	movlw	255
  5413  00541E  14DE               	andwf	postinc2,w,c
  5414  005420  6F05               	movwf	(??_IPV4_Packet+5)& (0+255),b
  5415  005422  0E00               	movlw	0
  5416  005424  14DE               	andwf	postinc2,w,c
  5417  005426  6F06               	movwf	(??_IPV4_Packet+6)& (0+255),b
  5418  005428  0E00               	movlw	0
  5419  00542A  14DE               	andwf	postinc2,w,c
  5420  00542C  6F07               	movwf	(??_IPV4_Packet+7)& (0+255),b
  5421  00542E  C106  F107         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  5422  005432  C105  F106         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  5423  005436  C104  F105         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  5424  00543A  6B04               	clrf	(??_IPV4_Packet+4)& (0+255),b
  5425  00543C  C1B8  F108         	movff	_ipv4Header+16,??_IPV4_Packet+8
  5426  005440  C1B9  F109         	movff	_ipv4Header+17,??_IPV4_Packet+9
  5427  005444  C1BA  F10A         	movff	_ipv4Header+18,??_IPV4_Packet+10
  5428  005448  C1BB  F10B         	movff	_ipv4Header+19,??_IPV4_Packet+11
  5429  00544C  C109  F108         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  5430  005450  C10A  F109         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  5431  005454  C10B  F10A         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  5432  005458  6B0B               	clrf	(??_IPV4_Packet+11)& (0+255),b
  5433  00545A  6B0C               	clrf	(??_IPV4_Packet+12)& (0+255),b
  5434  00545C  5109               	movf	(??_IPV4_Packet+9)& (0+255),w,b
  5435  00545E  6F0D               	movwf	(??_IPV4_Packet+13)& (0+255),b
  5436  005460  0E00               	movlw	0
  5437  005462  6B0E               	clrf	(??_IPV4_Packet+14)& (0+255),b
  5438  005464  6B0F               	clrf	(??_IPV4_Packet+15)& (0+255),b
  5439  005466  EE21  F0B8         	lfsr	2,_ipv4Header+16
  5440  00546A  14DE               	andwf	postinc2,w,c
  5441  00546C  6F10               	movwf	(??_IPV4_Packet+16)& (0+255),b
  5442  00546E  0E00               	movlw	0
  5443  005470  14DE               	andwf	postinc2,w,c
  5444  005472  6F11               	movwf	(??_IPV4_Packet+17)& (0+255),b
  5445  005474  0E00               	movlw	0
  5446  005476  14DE               	andwf	postinc2,w,c
  5447  005478  6F12               	movwf	(??_IPV4_Packet+18)& (0+255),b
  5448  00547A  0EFF               	movlw	255
  5449  00547C  14DE               	andwf	postinc2,w,c
  5450  00547E  6F13               	movwf	(??_IPV4_Packet+19)& (0+255),b
  5451  005480  0E19               	movlw	25
  5452  005482  D005               	goto	u14430
  5453  005484                     u14435:
  5454  005484  90D8               	bcf	status,0,c
  5455  005486  3313               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  5456  005488  3312               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  5457  00548A  3311               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  5458  00548C  3310               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  5459  00548E                     u14430:
  5460  00548E  2EE8               	decfsz	wreg,f,c
  5461  005490  D7F9               	goto	u14435
  5462  005492  510C               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  5463  005494  1110               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  5464  005496  6F14               	movwf	(??_IPV4_Packet+20)& (0+255),b
  5465  005498  510D               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  5466  00549A  1111               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  5467  00549C  6F15               	movwf	(??_IPV4_Packet+21)& (0+255),b
  5468  00549E  510E               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  5469  0054A0  1112               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  5470  0054A2  6F16               	movwf	(??_IPV4_Packet+22)& (0+255),b
  5471  0054A4  510F               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  5472  0054A6  1113               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  5473  0054A8  6F17               	movwf	(??_IPV4_Packet+23)& (0+255),b
  5474  0054AA  5104               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  5475  0054AC  1114               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  5476  0054AE  6F18               	movwf	(??_IPV4_Packet+24)& (0+255),b
  5477  0054B0  5105               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  5478  0054B2  1115               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  5479  0054B4  6F19               	movwf	(??_IPV4_Packet+25)& (0+255),b
  5480  0054B6  5106               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  5481  0054B8  1116               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  5482  0054BA  6F1A               	movwf	(??_IPV4_Packet+26)& (0+255),b
  5483  0054BC  5107               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  5484  0054BE  1117               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  5485  0054C0  6F1B               	movwf	(??_IPV4_Packet+27)& (0+255),b
  5486  0054C2  5100               	movf	??_IPV4_Packet& (0+255),w,b
  5487  0054C4  1118               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  5488  0054C6  6FB8               	movwf	(_ipv4Header+16)& (0+255),b
  5489  0054C8  5101               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  5490  0054CA  1119               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  5491  0054CC  6FB9               	movwf	(_ipv4Header+17)& (0+255),b
  5492  0054CE  5102               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  5493  0054D0  111A               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  5494  0054D2  6FBA               	movwf	(_ipv4Header+18)& (0+255),b
  5495  0054D4  5103               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  5496  0054D6  111B               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  5497  0054D8  6FBB               	movwf	(_ipv4Header+19)& (0+255),b
  5498                           
  5499                           ;ipv4.c: 137: ipv4Header.srcIpAddress = ((((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.s
  5500  0054DA  51B4               	movf	(_ipv4Header+12)& (0+255),w,b
  5501  0054DC  6F00               	movwf	??_IPV4_Packet& (0+255),b
  5502  0054DE  6B01               	clrf	(??_IPV4_Packet+1)& (0+255),b
  5503  0054E0  6B02               	clrf	(??_IPV4_Packet+2)& (0+255),b
  5504  0054E2  6B03               	clrf	(??_IPV4_Packet+3)& (0+255),b
  5505  0054E4  C100  F103         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  5506  0054E8  6B02               	clrf	(??_IPV4_Packet+2)& (0+255),b
  5507  0054EA  6B01               	clrf	(??_IPV4_Packet+1)& (0+255),b
  5508  0054EC  6B00               	clrf	??_IPV4_Packet& (0+255),b
  5509  0054EE  EE21  F0B4         	lfsr	2,_ipv4Header+12
  5510  0054F2  0E00               	movlw	0
  5511  0054F4  14DE               	andwf	postinc2,w,c
  5512  0054F6  6F04               	movwf	(??_IPV4_Packet+4)& (0+255),b
  5513  0054F8  0EFF               	movlw	255
  5514  0054FA  14DE               	andwf	postinc2,w,c
  5515  0054FC  6F05               	movwf	(??_IPV4_Packet+5)& (0+255),b
  5516  0054FE  0E00               	movlw	0
  5517  005500  14DE               	andwf	postinc2,w,c
  5518  005502  6F06               	movwf	(??_IPV4_Packet+6)& (0+255),b
  5519  005504  0E00               	movlw	0
  5520  005506  14DE               	andwf	postinc2,w,c
  5521  005508  6F07               	movwf	(??_IPV4_Packet+7)& (0+255),b
  5522  00550A  C106  F107         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  5523  00550E  C105  F106         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  5524  005512  C104  F105         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  5525  005516  6B04               	clrf	(??_IPV4_Packet+4)& (0+255),b
  5526  005518  C1B4  F108         	movff	_ipv4Header+12,??_IPV4_Packet+8
  5527  00551C  C1B5  F109         	movff	_ipv4Header+13,??_IPV4_Packet+9
  5528  005520  C1B6  F10A         	movff	_ipv4Header+14,??_IPV4_Packet+10
  5529  005524  C1B7  F10B         	movff	_ipv4Header+15,??_IPV4_Packet+11
  5530  005528  C109  F108         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  5531  00552C  C10A  F109         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  5532  005530  C10B  F10A         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  5533  005534  6B0B               	clrf	(??_IPV4_Packet+11)& (0+255),b
  5534  005536  6B0C               	clrf	(??_IPV4_Packet+12)& (0+255),b
  5535  005538  5109               	movf	(??_IPV4_Packet+9)& (0+255),w,b
  5536  00553A  6F0D               	movwf	(??_IPV4_Packet+13)& (0+255),b
  5537  00553C  0E00               	movlw	0
  5538  00553E  6B0E               	clrf	(??_IPV4_Packet+14)& (0+255),b
  5539  005540  6B0F               	clrf	(??_IPV4_Packet+15)& (0+255),b
  5540  005542  EE21  F0B4         	lfsr	2,_ipv4Header+12
  5541  005546  14DE               	andwf	postinc2,w,c
  5542  005548  6F10               	movwf	(??_IPV4_Packet+16)& (0+255),b
  5543  00554A  0E00               	movlw	0
  5544  00554C  14DE               	andwf	postinc2,w,c
  5545  00554E  6F11               	movwf	(??_IPV4_Packet+17)& (0+255),b
  5546  005550  0E00               	movlw	0
  5547  005552  14DE               	andwf	postinc2,w,c
  5548  005554  6F12               	movwf	(??_IPV4_Packet+18)& (0+255),b
  5549  005556  0EFF               	movlw	255
  5550  005558  14DE               	andwf	postinc2,w,c
  5551  00555A  6F13               	movwf	(??_IPV4_Packet+19)& (0+255),b
  5552  00555C  0E19               	movlw	25
  5553  00555E  D005               	goto	u14440
  5554  005560                     u14445:
  5555  005560  90D8               	bcf	status,0,c
  5556  005562  3313               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  5557  005564  3312               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  5558  005566  3311               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  5559  005568  3310               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  5560  00556A                     u14440:
  5561  00556A  2EE8               	decfsz	wreg,f,c
  5562  00556C  D7F9               	goto	u14445
  5563  00556E  510C               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  5564  005570  1110               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  5565  005572  6F14               	movwf	(??_IPV4_Packet+20)& (0+255),b
  5566  005574  510D               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  5567  005576  1111               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  5568  005578  6F15               	movwf	(??_IPV4_Packet+21)& (0+255),b
  5569  00557A  510E               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  5570  00557C  1112               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  5571  00557E  6F16               	movwf	(??_IPV4_Packet+22)& (0+255),b
  5572  005580  510F               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  5573  005582  1113               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  5574  005584  6F17               	movwf	(??_IPV4_Packet+23)& (0+255),b
  5575  005586  5104               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  5576  005588  1114               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  5577  00558A  6F18               	movwf	(??_IPV4_Packet+24)& (0+255),b
  5578  00558C  5105               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  5579  00558E  1115               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  5580  005590  6F19               	movwf	(??_IPV4_Packet+25)& (0+255),b
  5581  005592  5106               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  5582  005594  1116               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  5583  005596  6F1A               	movwf	(??_IPV4_Packet+26)& (0+255),b
  5584  005598  5107               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  5585  00559A  1117               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  5586  00559C  6F1B               	movwf	(??_IPV4_Packet+27)& (0+255),b
  5587  00559E  5100               	movf	??_IPV4_Packet& (0+255),w,b
  5588  0055A0  1118               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  5589  0055A2  6FB4               	movwf	(_ipv4Header+12)& (0+255),b
  5590  0055A4  5101               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  5591  0055A6  1119               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  5592  0055A8  6FB5               	movwf	(_ipv4Header+13)& (0+255),b
  5593  0055AA  5102               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  5594  0055AC  111A               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  5595  0055AE  6FB6               	movwf	(_ipv4Header+14)& (0+255),b
  5596  0055B0  5103               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  5597  0055B2  111B               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  5598  0055B4  6FB7               	movwf	(_ipv4Header+15)& (0+255),b
  5599                           
  5600                           ; BSR set to: 1
  5601                           ;ipv4.c: 139: if((ipv4Header.dstIpAddress == ipv4Address) ||( ipv4Header.dstIpAddress ==
      +                           0xFFFFFFFF))
  5602  0055B6  518E               	movf	_ipv4Address& (0+255),w,b
  5603  0055B8  19B8               	xorwf	(_ipv4Header+16)& (0+255),w,b
  5604  0055BA  E109               	bnz	u14450
  5605  0055BC  518F               	movf	(_ipv4Address+1)& (0+255),w,b
  5606  0055BE  19B9               	xorwf	(_ipv4Header+17)& (0+255),w,b
  5607  0055C0  E106               	bnz	u14450
  5608  0055C2  5190               	movf	(_ipv4Address+2)& (0+255),w,b
  5609  0055C4  19BA               	xorwf	(_ipv4Header+18)& (0+255),w,b
  5610  0055C6  E103               	bnz	u14450
  5611  0055C8  5191               	movf	(_ipv4Address+3)& (0+255),w,b
  5612  0055CA  19BB               	xorwf	(_ipv4Header+19)& (0+255),w,b
  5613  0055CC  E009               	bz	l9407
  5614  0055CE                     u14450:
  5615                           
  5616                           ; BSR set to: 1
  5617  0055CE  29B8               	incf	(_ipv4Header+16)& (0+255),w,b
  5618  0055D0  E106               	bnz	u14461
  5619  0055D2  29B9               	incf	(_ipv4Header+17)& (0+255),w,b
  5620  0055D4  E104               	bnz	u14461
  5621  0055D6  29BA               	incf	(_ipv4Header+18)& (0+255),w,b
  5622  0055D8  E102               	bnz	u14461
  5623  0055DA  29BB               	incf	(_ipv4Header+19)& (0+255),w,b
  5624  0055DC  A4D8               	btfss	status,2,c
  5625  0055DE                     u14461:
  5626  0055DE  0012               	return	
  5627  0055E0                     l9407:
  5628                           
  5629                           ; BSR set to: 1
  5630                           ;ipv4.c: 140: {
  5631                           ;ipv4.c: 141: ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
  5632  0055E0  51AA               	movf	(_ipv4Header+2)& (0+255),w,b
  5633  0055E2  6F01               	movwf	(??_IPV4_Packet+1)& (0+255),b
  5634  0055E4  6B00               	clrf	??_IPV4_Packet& (0+255),b
  5635  0055E6  EE21  F0AA         	lfsr	2,_ipv4Header+2
  5636  0055EA  CFDE F102          	movff	postinc2,??_IPV4_Packet+2
  5637  0055EE  CFDD F103          	movff	postdec2,??_IPV4_Packet+3
  5638  0055F2  C103  F102         	movff	??_IPV4_Packet+3,??_IPV4_Packet+2
  5639  0055F6  6B03               	clrf	(??_IPV4_Packet+3)& (0+255),b
  5640  0055F8  6B03               	clrf	(??_IPV4_Packet+3)& (0+255),b
  5641  0055FA  5100               	movf	??_IPV4_Packet& (0+255),w,b
  5642  0055FC  1102               	iorwf	(??_IPV4_Packet+2)& (0+255),w,b
  5643  0055FE  6FAA               	movwf	(_ipv4Header+2)& (0+255),b
  5644  005600  5101               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  5645  005602  1103               	iorwf	(??_IPV4_Packet+3)& (0+255),w,b
  5646  005604  6FAB               	movwf	(_ipv4Header+3)& (0+255),b
  5647                           
  5648                           ; BSR set to: 1
  5649                           ;ipv4.c: 143: hdrLen = (uint8_t)(ipv4Header.ihl << 2);
  5650  005606  51A8               	movf	_ipv4Header& (0+255),w,b
  5651  005608  0B0F               	andlw	15
  5652  00560A  6F00               	movwf	??_IPV4_Packet& (0+255),b
  5653  00560C  90D8               	bcf	status,0,c
  5654  00560E  3700               	rlcf	??_IPV4_Packet& (0+255),f,b
  5655  005610  90D8               	bcf	status,0,c
  5656  005612  3500               	rlcf	??_IPV4_Packet& (0+255),w,b
  5657  005614  0100               	movlb	0	; () banked
  5658  005616  6FF9               	movwf	IPV4_Packet@hdrLen& (0+255),b
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;ipv4.c: 145: if (ipv4Header.ihl > 5)
  5662  005618  0101               	movlb	1	; () banked
  5663  00561A  51A8               	movf	_ipv4Header& (0+255),w,b
  5664  00561C  0B0F               	andlw	15
  5665  00561E  6F00               	movwf	??_IPV4_Packet& (0+255),b
  5666  005620  0E05               	movlw	5
  5667  005622  6500               	cpfsgt	??_IPV4_Packet& (0+255),b
  5668  005624  D09C               	goto	l9447
  5669                           
  5670                           ; BSR set to: 1
  5671                           ;ipv4.c: 146: {
  5672                           ;ipv4.c: 148: ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
  5673  005626  0EEC               	movlw	236
  5674  005628  0100               	movlb	0	; () banked
  5675  00562A  25F9               	addwf	IPV4_Packet@hdrLen& (0+255),w,b
  5676  00562C  6E0B               	movwf	ETH_Dump@length,c
  5677  00562E  6A0C               	clrf	ETH_Dump@length+1,c
  5678  005630  0EFF               	movlw	255
  5679  005632  220C               	addwfc	ETH_Dump@length+1,f,c
  5680  005634  ECBA  F03F         	call	_ETH_Dump	;wreg free
  5681  005638  D092               	goto	l9447
  5682  00563A                     l9415:
  5683                           
  5684                           ; BSR set to: 1
  5685                           ;ipv4.c: 154: {
  5686                           ;ipv4.c: 156: ;
  5687                           ;ipv4.c: 157: length = ipv4Header.length - hdrLen;
  5688  00563A  0100               	movlb	0	; () banked
  5689  00563C  51F9               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  5690  00563E  0101               	movlb	1	; () banked
  5691  005640  5DAA               	subwf	(_ipv4Header+2)& (0+255),w,b
  5692  005642  0100               	movlb	0	; () banked
  5693  005644  6FFA               	movwf	IPV4_Packet@length& (0+255),b
  5694  005646  0101               	movlb	1	; () banked
  5695  005648  51AB               	movf	(_ipv4Header+3)& (0+255),w,b
  5696  00564A  A0D8               	btfss	status,0,c
  5697  00564C  05AB               	decf	(_ipv4Header+3)& (0+255),w,b
  5698  00564E  0100               	movlb	0	; () banked
  5699  005650  6FFB               	movwf	(IPV4_Packet@length+1)& (0+255),b
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;ipv4.c: 158: cksm = ETH_RxComputeChecksum(length, 0);
  5703  005652  C0FA  F00D         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  5704  005656  C0FB  F00E         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  5705  00565A  6A10               	clrf	ETH_RxComputeChecksum@seed+1,c
  5706  00565C  6A0F               	clrf	ETH_RxComputeChecksum@seed,c
  5707  00565E  ECCD  F037         	call	_ETH_RxComputeChecksum	;wreg free
  5708  005662  C00D  F0FC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  5709  005666  C00E  F0FD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  5710                           
  5711                           ;ipv4.c: 160: if (cksm == 0)
  5712  00566A  0100               	movlb	0	; () banked
  5713  00566C  51FC               	movf	IPV4_Packet@cksm& (0+255),w,b
  5714  00566E  11FD               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  5715  005670  A4D8               	btfss	status,2,c
  5716  005672  0012               	return	
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;ipv4.c: 161: {
  5720                           ;ipv4.c: 162: ICMP_Receive(&ipv4Header);
  5721  005674  0EA8               	movlw	low _ipv4Header
  5722  005676  6E5A               	movwf	ICMP_Receive@ipv4Hdr,c
  5723  005678  0E01               	movlw	high _ipv4Header
  5724  00567A  6E5B               	movwf	ICMP_Receive@ipv4Hdr+1,c
  5725  00567C  EF28  F040         	goto	_ICMP_Receive	;wreg free
  5726  005680                     l9423:
  5727                           
  5728                           ; BSR set to: 1
  5729                           ;ipv4.c: 174: ;
  5730                           ;ipv4.c: 175: length = ipv4Header.length - hdrLen;
  5731  005680  0100               	movlb	0	; () banked
  5732  005682  51F9               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  5733  005684  0101               	movlb	1	; () banked
  5734  005686  5DAA               	subwf	(_ipv4Header+2)& (0+255),w,b
  5735  005688  0100               	movlb	0	; () banked
  5736  00568A  6FFA               	movwf	IPV4_Packet@length& (0+255),b
  5737  00568C  0101               	movlb	1	; () banked
  5738  00568E  51AB               	movf	(_ipv4Header+3)& (0+255),w,b
  5739  005690  A0D8               	btfss	status,0,c
  5740  005692  05AB               	decf	(_ipv4Header+3)& (0+255),w,b
  5741  005694  0100               	movlb	0	; () banked
  5742  005696  6FFB               	movwf	(IPV4_Packet@length+1)& (0+255),b
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;ipv4.c: 176: cksm = IPV4_PseudoHeaderChecksum(length);
  5746  005698  C0FA  F002         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  5747  00569C  C0FB  F003         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  5748  0056A0  EC8D  F03A         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  5749  0056A4  C002  F0FC         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  5750  0056A8  C003  F0FD         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;ipv4.c: 177: cksm = ETH_RxComputeChecksum(length, cksm);
  5754  0056AC  C0FA  F00D         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  5755  0056B0  C0FB  F00E         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  5756  0056B4  C0FC  F00F         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  5757  0056B8  C0FD  F010         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  5758  0056BC  ECCD  F037         	call	_ETH_RxComputeChecksum	;wreg free
  5759  0056C0  C00D  F0FC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  5760  0056C4  C00E  F0FD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  5761                           
  5762                           ;ipv4.c: 178: UDP_Receive(cksm);
  5763  0056C8  C0FC  F097         	movff	IPV4_Packet@cksm,UDP_Receive@udpcksm
  5764  0056CC  C0FD  F098         	movff	IPV4_Packet@cksm+1,UDP_Receive@udpcksm+1
  5765  0056D0  EFF2  F036         	goto	_UDP_Receive	;wreg free
  5766  0056D4                     l9431:
  5767                           
  5768                           ; BSR set to: 1
  5769                           ;ipv4.c: 183: ;
  5770                           ;ipv4.c: 184: length = ipv4Header.length - hdrLen;
  5771  0056D4  0100               	movlb	0	; () banked
  5772  0056D6  51F9               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  5773  0056D8  0101               	movlb	1	; () banked
  5774  0056DA  5DAA               	subwf	(_ipv4Header+2)& (0+255),w,b
  5775  0056DC  0100               	movlb	0	; () banked
  5776  0056DE  6FFA               	movwf	IPV4_Packet@length& (0+255),b
  5777  0056E0  0101               	movlb	1	; () banked
  5778  0056E2  51AB               	movf	(_ipv4Header+3)& (0+255),w,b
  5779  0056E4  A0D8               	btfss	status,0,c
  5780  0056E6  05AB               	decf	(_ipv4Header+3)& (0+255),w,b
  5781  0056E8  0100               	movlb	0	; () banked
  5782  0056EA  6FFB               	movwf	(IPV4_Packet@length+1)& (0+255),b
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;ipv4.c: 185: cksm = IPV4_PseudoHeaderChecksum(length);
  5786  0056EC  C0FA  F002         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  5787  0056F0  C0FB  F003         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  5788  0056F4  EC8D  F03A         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  5789  0056F8  C002  F0FC         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  5790  0056FC  C003  F0FD         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;ipv4.c: 186: cksm = ETH_RxComputeChecksum(length, cksm);
  5794  005700  C0FA  F00D         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  5795  005704  C0FB  F00E         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  5796  005708  C0FC  F00F         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  5797  00570C  C0FD  F010         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  5798  005710  ECCD  F037         	call	_ETH_RxComputeChecksum	;wreg free
  5799  005714  C00D  F0FC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  5800  005718  C00E  F0FD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  5801                           
  5802                           ;ipv4.c: 189: if (cksm == 0)
  5803  00571C  0100               	movlb	0	; () banked
  5804  00571E  51FC               	movf	IPV4_Packet@cksm& (0+255),w,b
  5805  005720  11FD               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  5806  005722  A4D8               	btfss	status,2,c
  5807  005724  0012               	return	
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;ipv4.c: 190: {
  5811                           ;ipv4.c: 191: remoteIpv4Address = ipv4Header.srcIpAddress;
  5812  005726  C1B4  F22E         	movff	_ipv4Header+12,_remoteIpv4Address
  5813  00572A  C1B5  F22F         	movff	_ipv4Header+13,_remoteIpv4Address+1
  5814  00572E  C1B6  F230         	movff	_ipv4Header+14,_remoteIpv4Address+2
  5815  005732  C1B7  F231         	movff	_ipv4Header+15,_remoteIpv4Address+3
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;ipv4.c: 192: TCP_Recv(remoteIpv4Address, length);
  5819  005736  C22E  F0D4         	movff	_remoteIpv4Address,TCP_Recv@remoteAddress
  5820  00573A  C22F  F0D5         	movff	_remoteIpv4Address+1,TCP_Recv@remoteAddress+1
  5821  00573E  C230  F0D6         	movff	_remoteIpv4Address+2,TCP_Recv@remoteAddress+2
  5822  005742  C231  F0D7         	movff	_remoteIpv4Address+3,TCP_Recv@remoteAddress+3
  5823  005746  C0FA  F0D8         	movff	IPV4_Packet@length,TCP_Recv@length
  5824  00574A  C0FB  F0D9         	movff	IPV4_Packet@length+1,TCP_Recv@length+1
  5825  00574E  EFED  F022         	goto	_TCP_Recv	;wreg free
  5826  005752                     l9443:
  5827                           
  5828                           ; BSR set to: 1
  5829                           ;ipv4.c: 199: ETH_Dump(ipv4Header.length);
  5830  005752  C1AA  F00B         	movff	_ipv4Header+2,ETH_Dump@length
  5831  005756  C1AB  F00C         	movff	_ipv4Header+3,ETH_Dump@length+1
  5832  00575A  EFBA  F03F         	goto	_ETH_Dump	;wreg free
  5833  00575E                     l9447:
  5834  00575E  0101               	movlb	1	; () banked
  5835  005760  51B1               	movf	(_ipv4Header+9)& (0+255),w,b
  5836                           
  5837                           ; Switch size 1, requested type "speed"
  5838                           ; Number of cases is 3, Range of values is 1 to 17
  5839                           ; switch strategies available:
  5840                           ; Name         Instructions Cycles
  5841                           ; simple_byte           10     6 (average)
  5842                           ;	Chosen strategy is simple_byte
  5843  005762  0A01               	xorlw	1	; case 1
  5844  005764  E101 D769          	bz	l9415
  5845  005768  0A07               	xorlw	7	; case 6
  5846  00576A  E0B4               	bz	l9431
  5847  00576C  0A17               	xorlw	23	; case 17
  5848  00576E  E088               	bz	l9423
  5849  005770  D7F0               	goto	l9443
  5850  005772                     __end_of_IPV4_Packet:
  5851                           	opt stack 0
  5852                           tosu	equ	0xFFF
  5853                           tosh	equ	0xFFE
  5854                           tosl	equ	0xFFD
  5855                           pclath	equ	0xFFA
  5856                           tblptru	equ	0xFF8
  5857                           tblptrh	equ	0xFF7
  5858                           tblptrl	equ	0xFF6
  5859                           tablat	equ	0xFF5
  5860                           prodh	equ	0xFF4
  5861                           prodl	equ	0xFF3
  5862                           intcon	equ	0xFF2
  5863                           intcon2	equ	0xFF1
  5864                           indf0	equ	0xFEF
  5865                           postinc0	equ	0xFEE
  5866                           fsr0h	equ	0xFEA
  5867                           fsr0l	equ	0xFE9
  5868                           wreg	equ	0xFE8
  5869                           indf2	equ	0xFDF
  5870                           postinc2	equ	0xFDE
  5871                           postdec2	equ	0xFDD
  5872                           fsr2h	equ	0xFDA
  5873                           fsr2l	equ	0xFD9
  5874                           status	equ	0xFD8
  5875                           
  5876 ;; *************** function _UDP_Receive *****************
  5877 ;; Defined at:
  5878 ;;		line 126 in file "../../TCPIP Library/source/udpv4.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  udpcksm         2   55[BANK0 ] unsigned int 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  x               2   63[BANK0 ] unsigned int 
  5883 ;;  hptr            1   65[BANK0 ] PTR const struct .
  5884 ;;		 -> UDP_CallBackTable(5), 
  5885 ;;  ret             1    0        enum E367
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      enum E6944
  5888 ;; Registers used:
  5889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5895 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;Total ram usage:       11 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:   12
  5902 ;; This function calls:
  5903 ;;		_DHCP_Handler
  5904 ;;		_ETH_ReadBlock
  5905 ;; This function is called by:
  5906 ;;		_IPV4_Packet
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text29
  5911  006DE4                     __ptext29:
  5912                           	opt stack 0
  5913  006DE4                     _UDP_Receive:
  5914                           	opt stack 15
  5915                           
  5916                           ;udpv4.c: 129: const udp_handler_t *hptr;
  5917                           ;udpv4.c: 130: uint16_t x;
  5918                           ;udpv4.c: 132: hptr = UDP_CallBackTable;
  5919                           
  5920                           ;incstack = 0
  5921  006DE4  0E34               	movlw	low _UDP_CallBackTable
  5922  006DE6  0100               	movlb	0	; () banked
  5923  006DE8  6FA1               	movwf	UDP_Receive@hptr& (0+255),b
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;udpv4.c: 133: ETH_ReadBlock((char *)&udpHeader,sizeof(udpHeader));
  5927  006DEA  0E91               	movlw	low _udpHeader
  5928  006DEC  6E03               	movwf	ETH_ReadBlock@data,c
  5929  006DEE  0E02               	movlw	high _udpHeader
  5930  006DF0  6E04               	movwf	ETH_ReadBlock@data+1,c
  5931  006DF2  6A06               	clrf	ETH_ReadBlock@length+1,c
  5932  006DF4  0E08               	movlw	8
  5933  006DF6  6E05               	movwf	ETH_ReadBlock@length,c
  5934  006DF8  ECD9  F03A         	call	_ETH_ReadBlock	;wreg free
  5935                           
  5936                           ; BSR set to: 1
  5937                           ;udpv4.c: 135: if((udpHeader.checksum == 0) || (udpcksm == 0))
  5938  006DFC  0102               	movlb	2	; () banked
  5939  006DFE  5197               	movf	(_udpHeader+6)& (0+255),w,b
  5940  006E00  1198               	iorwf	(_udpHeader+7)& (0+255),w,b
  5941  006E02  E005               	bz	l8973
  5942                           
  5943                           ; BSR set to: 2
  5944  006E04  0100               	movlb	0	; () banked
  5945  006E06  5197               	movf	UDP_Receive@udpcksm& (0+255),w,b
  5946  006E08  1198               	iorwf	(UDP_Receive@udpcksm+1)& (0+255),w,b
  5947  006E0A  A4D8               	btfss	status,2,c
  5948  006E0C  0012               	return	
  5949  006E0E                     l8973:
  5950                           
  5951                           ;udpv4.c: 138: destPort = ((((uint16_t)udpHeader.srcPort & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)udpHeader.srcPort & (uint16_t)0x00FF) << 8));
  5952  006E0E  0102               	movlb	2	; () banked
  5953  006E10  5193               	movf	(_udpHeader+2)& (0+255),w,b
  5954  006E12  0100               	movlb	0	; () banked
  5955  006E14  6F9A               	movwf	(??_UDP_Receive+1)& (0+255),b
  5956  006E16  6B99               	clrf	??_UDP_Receive& (0+255),b
  5957  006E18  EE22  F093         	lfsr	2,_udpHeader+2
  5958  006E1C  CFDE F09B          	movff	postinc2,??_UDP_Receive+2
  5959  006E20  CFDD F09C          	movff	postdec2,??_UDP_Receive+3
  5960  006E24  C09C  F09B         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  5961  006E28  6B9C               	clrf	(??_UDP_Receive+3)& (0+255),b
  5962  006E2A  6B9C               	clrf	(??_UDP_Receive+3)& (0+255),b
  5963  006E2C  5199               	movf	??_UDP_Receive& (0+255),w,b
  5964  006E2E  119B               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  5965  006E30  0102               	movlb	2	; () banked
  5966  006E32  6F93               	movwf	(_udpHeader+2)& (0+255),b
  5967  006E34  0100               	movlb	0	; () banked
  5968  006E36  519A               	movf	(??_UDP_Receive+1)& (0+255),w,b
  5969  006E38  119C               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  5970  006E3A  0102               	movlb	2	; () banked
  5971  006E3C  6F94               	movwf	(_udpHeader+3)& (0+255),b
  5972                           
  5973                           ; BSR set to: 2
  5974                           ;udpv4.c: 142: for(x = 0; x < (sizeof(UDP_CallBackTable) / sizeof(*(UDP_CallBackTable)))
      +                          ;x++)
  5975                           
  5976                           ; BSR set to: 2
  5977  006E3E  0100               	movlb	0	; () banked
  5978  006E40  6B9F               	clrf	UDP_Receive@x& (0+255),b
  5979  006E42  6BA0               	clrf	(UDP_Receive@x+1)& (0+255),b
  5980  006E44                     l8983:
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;udpv4.c: 143: {
  5984                           ;udpv4.c: 144: if(hptr->portNumber == udpHeader.dstPort)
  5985  006E44  C0A1  FFF6         	movff	UDP_Receive@hptr,tblptrl
  5986  006E48                     	if	1	;There is more than 1 active tblptr byte
  5987  006E48  0E10               	movlw	high __smallconst
  5988  006E4A  6EF7               	movwf	tblptrh,c
  5989  006E4C                     	endif
  5990  006E4C                     	if	0	;tblptru may be non-zero
  5991  006E4C                     	endif
  5992  006E4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5993  006E4C  0E00               	movlw	low (__smallconst shr (0+16))
  5994  006E4E  6EF8               	movwf	tblptru,c
  5995  006E50                     	endif
  5996  006E50  0102               	movlb	2	; () banked
  5997  006E52  5193               	movf	(_udpHeader+2)& (0+255),w,b
  5998  006E54  0009               	tblrd		*+
  5999  006E56  18F5               	xorwf	tablat,w,c
  6000  006E58  E133               	bnz	l8989
  6001  006E5A  5194               	movf	(_udpHeader+3)& (0+255),w,b
  6002  006E5C  0009               	tblrd		*+
  6003  006E5E  18F5               	xorwf	tablat,w,c
  6004  006E60  E12F               	bnz	l8989
  6005                           
  6006                           ; BSR set to: 2
  6007                           ;udpv4.c: 145: {
  6008                           ;udpv4.c: 146: hptr->callBack(((((uint16_t)udpHeader.length & (uint16_t)0xFF00) >> 8) | 
      +                          (((uint16_t)udpHeader.length & (uint16_t)0x00FF) << 8)) - sizeof(udpHeader));
  6009  006E62  5195               	movf	(_udpHeader+4)& (0+255),w,b
  6010  006E64  0100               	movlb	0	; () banked
  6011  006E66  6F9A               	movwf	(??_UDP_Receive+1)& (0+255),b
  6012  006E68  6B99               	clrf	??_UDP_Receive& (0+255),b
  6013  006E6A  EE22  F095         	lfsr	2,_udpHeader+4
  6014  006E6E  CFDE F09B          	movff	postinc2,??_UDP_Receive+2
  6015  006E72  CFDD F09C          	movff	postdec2,??_UDP_Receive+3
  6016  006E76  C09C  F09B         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  6017  006E7A  6B9C               	clrf	(??_UDP_Receive+3)& (0+255),b
  6018  006E7C  6B9C               	clrf	(??_UDP_Receive+3)& (0+255),b
  6019  006E7E  5199               	movf	??_UDP_Receive& (0+255),w,b
  6020  006E80  139B               	iorwf	(??_UDP_Receive+2)& (0+255),f,b
  6021  006E82  519A               	movf	(??_UDP_Receive+1)& (0+255),w,b
  6022  006E84  139C               	iorwf	(??_UDP_Receive+3)& (0+255),f,b
  6023  006E86  0EF8               	movlw	248
  6024  006E88  259B               	addwf	(??_UDP_Receive+2)& (0+255),w,b
  6025  006E8A  6E59               	movwf	DHCP_Handler@length,c
  6026  006E8C  0EFF               	movlw	255
  6027  006E8E  219C               	addwfc	(??_UDP_Receive+3)& (0+255),w,b
  6028  006E90  6E5A               	movwf	DHCP_Handler@length+1,c
  6029  006E92  C0A1  F09D         	movff	UDP_Receive@hptr,??_UDP_Receive+4
  6030  006E96  0E02               	movlw	2
  6031  006E98  279D               	addwf	(??_UDP_Receive+4)& (0+255),f,b
  6032  006E9A  C09D  FFF6         	movff	??_UDP_Receive+4,tblptrl
  6033  006E9E                     	if	1	;There is more than 1 active tblptr byte
  6034  006E9E  0E10               	movlw	high __smallconst
  6035  006EA0  6EF7               	movwf	tblptrh,c
  6036  006EA2                     	endif
  6037  006EA2                     	if	0	;tblptru may be non-zero
  6038  006EA2                     	endif
  6039  006EA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6040  006EA2  0E00               	movlw	low (__smallconst shr (0+16))
  6041  006EA4  6EF8               	movwf	tblptru,c
  6042  006EA6                     	endif
  6043  006EA6  0005               	push	
  6044  006EA8  6EFA               	movwf	pclath,c
  6045  006EAA  0009               	tblrd		*+
  6046  006EAC  50F5               	movf	tablat,w,c
  6047  006EAE  6EFD               	movwf	tosl,c
  6048  006EB0  0009               	tblrd		*+
  6049  006EB2  50F5               	movf	tablat,w,c
  6050  006EB4  6EFE               	movwf	tosh,c
  6051  006EB6  0009               	tblrd		*+
  6052  006EB8  50F5               	movf	tablat,w,c
  6053  006EBA  6EFF               	movwf	tosu,c
  6054  006EBC  50FA               	movf	pclath,w,c
  6055  006EBE  0012               	return		;indir
  6056  006EC0                     l8989:
  6057                           
  6058                           ; BSR set to: 2
  6059                           ;udpv4.c: 149: }
  6060                           ;udpv4.c: 150: hptr ++;
  6061  006EC0  0E05               	movlw	5
  6062  006EC2  0100               	movlb	0	; () banked
  6063  006EC4  27A1               	addwf	UDP_Receive@hptr& (0+255),f,b
  6064                           
  6065                           ; BSR set to: 0
  6066  006EC6  4B9F               	infsnz	UDP_Receive@x& (0+255),f,b
  6067  006EC8  2BA0               	incf	(UDP_Receive@x+1)& (0+255),f,b
  6068                           
  6069                           ; BSR set to: 0
  6070  006ECA  519F               	movf	UDP_Receive@x& (0+255),w,b
  6071  006ECC  11A0               	iorwf	(UDP_Receive@x+1)& (0+255),w,b
  6072  006ECE  E0BA               	bz	l8983
  6073  006ED0  0012               	return	
  6074  006ED2                     __end_of_UDP_Receive:
  6075                           	opt stack 0
  6076                           tosu	equ	0xFFF
  6077                           tosh	equ	0xFFE
  6078                           tosl	equ	0xFFD
  6079                           pclath	equ	0xFFA
  6080                           tblptru	equ	0xFF8
  6081                           tblptrh	equ	0xFF7
  6082                           tblptrl	equ	0xFF6
  6083                           tablat	equ	0xFF5
  6084                           prodh	equ	0xFF4
  6085                           prodl	equ	0xFF3
  6086                           intcon	equ	0xFF2
  6087                           intcon2	equ	0xFF1
  6088                           indf0	equ	0xFEF
  6089                           postinc0	equ	0xFEE
  6090                           fsr0h	equ	0xFEA
  6091                           fsr0l	equ	0xFE9
  6092                           wreg	equ	0xFE8
  6093                           indf2	equ	0xFDF
  6094                           postinc2	equ	0xFDE
  6095                           postdec2	equ	0xFDD
  6096                           fsr2h	equ	0xFDA
  6097                           fsr2l	equ	0xFD9
  6098                           status	equ	0xFD8
  6099                           
  6100 ;; *************** function _DHCP_Handler *****************
  6101 ;; Defined at:
  6102 ;;		line 162 in file "../../TCPIP Library/source/dhcp_client.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  length          2   88[COMRAM] int 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  optionLength    1   50[BANK0 ] unsigned char 
  6107 ;;  option          1   37[BANK0 ] unsigned char 
  6108 ;;  ip              8   23[BANK0 ] unsigned int [4]
  6109 ;;  ethMAC          6   44[BANK0 ] struct .
  6110 ;;  ethPktMAC       6   38[BANK0 ] struct .
  6111 ;;  myip            4   51[BANK0 ] unsigned long 
  6112 ;;  v               4   31[BANK0 ] unsigned long 
  6113 ;;  v16             2   35[BANK0 ] unsigned int 
  6114 ;; Return value:  Size  Location     Type
  6115 ;;		None               void
  6116 ;; Registers used:
  6117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6118 ;; Tracked objects:
  6119 ;;		On entry : F/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6126 ;;      Totals:         4      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;Total ram usage:       36 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; Hardware stack levels required when called:   11
  6130 ;; This function calls:
  6131 ;;		_DHCP_Request
  6132 ;;		_ETH_Dump
  6133 ;;		_ETH_GetMAC
  6134 ;;		_ETH_Read16
  6135 ;;		_ETH_Read32
  6136 ;;		_ETH_Read8
  6137 ;;		_ETH_ReadBlock
  6138 ;;		_memcmp
  6139 ;; This function is called by:
  6140 ;;		_UDP_Receive
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text30
  6145  00608C                     __ptext30:
  6146                           	opt stack 0
  6147  00608C                     _DHCP_Handler:
  6148                           	opt stack 15
  6149                           
  6150                           ; BSR set to: 0
  6151                           ;dhcp_client.c: 165: uint32_t myip,v;
  6152                           ;dhcp_client.c: 166: uint16_t v16;
  6153                           ;dhcp_client.c: 167: uint16_t ip[4];
  6154                           ;dhcp_client.c: 169: mac48Address_t ethPktMAC;
  6155                           ;dhcp_client.c: 170: mac48Address_t ethMAC;
  6156                           ;dhcp_client.c: 172: ETH_GetMAC((char*)&ethMAC);
  6157                           
  6158                           ;incstack = 0
  6159  00608C  0E8C               	movlw	low DHCP_Handler@ethMAC
  6160  00608E  6E08               	movwf	ETH_GetMAC@macAddr,c
  6161  006090  6A09               	clrf	ETH_GetMAC@macAddr+1,c
  6162  006092  ECB6  F03C         	call	_ETH_GetMAC	;wreg free
  6163                           
  6164                           ;dhcp_client.c: 178: if(length > 240)
  6165  006096  BE5A               	btfsc	DHCP_Handler@length+1,7,c
  6166  006098  0012               	return	
  6167  00609A  505A               	movf	DHCP_Handler@length+1,w,c
  6168  00609C  E104               	bnz	u11440
  6169  00609E  0EF1               	movlw	241
  6170  0060A0  5C59               	subwf	DHCP_Handler@length,w,c
  6171  0060A2  A0D8               	btfss	status,0,c
  6172  0060A4  0012               	return	
  6173  0060A6                     u11440:
  6174                           
  6175                           ;dhcp_client.c: 179: {
  6176                           ;dhcp_client.c: 180: v16 = ETH_Read16();
  6177  0060A6  EC04  F040         	call	_ETH_Read16	;wreg free
  6178  0060AA  C003  F083         	movff	?_ETH_Read16,DHCP_Handler@v16
  6179  0060AE  C004  F084         	movff	?_ETH_Read16+1,DHCP_Handler@v16+1
  6180                           
  6181                           ; BSR set to: 1
  6182                           ;dhcp_client.c: 181: if(v16 == 0x0201)
  6183  0060B2  0100               	movlb	0	; () banked
  6184  0060B4  0583               	decf	DHCP_Handler@v16& (0+255),w,b
  6185  0060B6  E103               	bnz	u11451
  6186  0060B8  0E02               	movlw	2
  6187  0060BA  1984               	xorwf	(DHCP_Handler@v16+1)& (0+255),w,b
  6188  0060BC  A4D8               	btfss	status,2,c
  6189  0060BE                     u11451:
  6190  0060BE  0012               	return	
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;dhcp_client.c: 182: {
  6194                           ;dhcp_client.c: 183: ETH_Dump(2);
  6195  0060C0  6A0C               	clrf	ETH_Dump@length+1,c
  6196  0060C2  0E02               	movlw	2
  6197  0060C4  6E0B               	movwf	ETH_Dump@length,c
  6198  0060C6  ECBA  F03F         	call	_ETH_Dump	;wreg free
  6199                           
  6200                           ;dhcp_client.c: 184: v = ETH_Read32();
  6201  0060CA  EC9B  F03D         	call	_ETH_Read32	;wreg free
  6202  0060CE  C003  F07F         	movff	?_ETH_Read32,DHCP_Handler@v
  6203  0060D2  C004  F080         	movff	?_ETH_Read32+1,DHCP_Handler@v+1
  6204  0060D6  C005  F081         	movff	?_ETH_Read32+2,DHCP_Handler@v+2
  6205  0060DA  C006  F082         	movff	?_ETH_Read32+3,DHCP_Handler@v+3
  6206                           
  6207                           ; BSR set to: 1
  6208                           ;dhcp_client.c: 185: if(v == xidValue)
  6209  0060DE  0E50               	movlw	80
  6210  0060E0  0100               	movlb	0	; () banked
  6211  0060E2  197F               	xorwf	DHCP_Handler@v& (0+255),w,b
  6212  0060E4  E109               	bnz	u11461
  6213  0060E6  0E48               	movlw	72
  6214  0060E8  1980               	xorwf	(DHCP_Handler@v+1)& (0+255),w,b
  6215  0060EA  E106               	bnz	u11461
  6216  0060EC  0E43               	movlw	67
  6217  0060EE  1981               	xorwf	(DHCP_Handler@v+2)& (0+255),w,b
  6218  0060F0  E103               	bnz	u11461
  6219  0060F2  0E4D               	movlw	77
  6220  0060F4  1982               	xorwf	(DHCP_Handler@v+3)& (0+255),w,b
  6221  0060F6  A4D8               	btfss	status,2,c
  6222  0060F8                     u11461:
  6223  0060F8  0012               	return	
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;dhcp_client.c: 186: {
  6227                           ;dhcp_client.c: 187: ETH_Dump(8);
  6228  0060FA  6A0C               	clrf	ETH_Dump@length+1,c
  6229  0060FC  0E08               	movlw	8
  6230  0060FE  6E0B               	movwf	ETH_Dump@length,c
  6231  006100  ECBA  F03F         	call	_ETH_Dump	;wreg free
  6232                           
  6233                           ;dhcp_client.c: 188: myip = ETH_Read32();
  6234  006104  EC9B  F03D         	call	_ETH_Read32	;wreg free
  6235  006108  C003  F093         	movff	?_ETH_Read32,DHCP_Handler@myip
  6236  00610C  C004  F094         	movff	?_ETH_Read32+1,DHCP_Handler@myip+1
  6237  006110  C005  F095         	movff	?_ETH_Read32+2,DHCP_Handler@myip+2
  6238  006114  C006  F096         	movff	?_ETH_Read32+3,DHCP_Handler@myip+3
  6239                           
  6240                           ; BSR set to: 1
  6241                           ;dhcp_client.c: 189: ip[0] = myip & 0x00FF;
  6242  006118  0100               	movlb	0	; () banked
  6243  00611A  5193               	movf	DHCP_Handler@myip& (0+255),w,b
  6244  00611C  6F77               	movwf	DHCP_Handler@ip& (0+255),b
  6245  00611E  6B78               	clrf	(DHCP_Handler@ip+1)& (0+255),b
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;dhcp_client.c: 190: ip[1] = (myip >> 8) & 0x00FF;
  6249  006120  5194               	movf	(DHCP_Handler@myip+1)& (0+255),w,b
  6250  006122  6F79               	movwf	(DHCP_Handler@ip+2)& (0+255),b
  6251  006124  6B7A               	clrf	(DHCP_Handler@ip+3)& (0+255),b
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;dhcp_client.c: 191: ip[2] = (myip >> 16) & 0x00FF;
  6255  006126  5195               	movf	(DHCP_Handler@myip+2)& (0+255),w,b
  6256  006128  6F7B               	movwf	(DHCP_Handler@ip+4)& (0+255),b
  6257  00612A  6B7C               	clrf	(DHCP_Handler@ip+5)& (0+255),b
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;dhcp_client.c: 192: ip[3] = (myip >> 24) & 0x00FF;
  6261  00612C  C096  F07D         	movff	DHCP_Handler@myip+3,DHCP_Handler@ip+6
  6262  006130  6B7E               	clrf	(DHCP_Handler@ip+7)& (0+255),b
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;dhcp_client.c: 193: ETH_Dump(8);
  6266  006132  6A0C               	clrf	ETH_Dump@length+1,c
  6267  006134  0E08               	movlw	8
  6268  006136  6E0B               	movwf	ETH_Dump@length,c
  6269  006138  ECBA  F03F         	call	_ETH_Dump	;wreg free
  6270                           
  6271                           ; BSR set to: 2
  6272                           ;dhcp_client.c: 194: ETH_ReadBlock((char *)&ethPktMAC, sizeof(ethPktMAC.s));
  6273  00613C  0E86               	movlw	low DHCP_Handler@ethPktMAC
  6274  00613E  6E03               	movwf	ETH_ReadBlock@data,c
  6275  006140  6A04               	clrf	ETH_ReadBlock@data+1,c
  6276  006142  6A06               	clrf	ETH_ReadBlock@length+1,c
  6277  006144  0E06               	movlw	6
  6278  006146  6E05               	movwf	ETH_ReadBlock@length,c
  6279  006148  ECD9  F03A         	call	_ETH_ReadBlock	;wreg free
  6280                           
  6281                           ; BSR set to: 1
  6282                           ;dhcp_client.c: 196: if(memcmp(&ethPktMAC.s, &ethMAC.s, 6)== 0)
  6283  00614C  0E8C               	movlw	low DHCP_Handler@ethMAC
  6284  00614E  6E02               	movwf	memcmp@s2,c
  6285  006150  6A04               	clrf	memcmp@n+1,c
  6286  006152  0E06               	movlw	6
  6287  006154  6E03               	movwf	memcmp@n,c
  6288  006156  0E86               	movlw	DHCP_Handler@ethPktMAC& (0+255)
  6289  006158  EC49  F03F         	call	_memcmp
  6290  00615C  5002               	movf	?_memcmp,w,c
  6291  00615E  1003               	iorwf	?_memcmp+1,w,c
  6292  006160  E001 D0C1          	bnz	l8389
  6293                           
  6294                           ;dhcp_client.c: 197: {
  6295                           ;dhcp_client.c: 198: ETH_Dump(202);
  6296  006164  6A0C               	clrf	ETH_Dump@length+1,c
  6297  006166  0ECA               	movlw	202
  6298  006168  6E0B               	movwf	ETH_Dump@length,c
  6299  00616A  ECBA  F03F         	call	_ETH_Dump	;wreg free
  6300                           
  6301                           ;dhcp_client.c: 199: if(ETH_Read32() == 0x63825363)
  6302  00616E  EC9B  F03D         	call	_ETH_Read32	;wreg free
  6303  006172  0E63               	movlw	99
  6304  006174  1803               	xorwf	?_ETH_Read32,w,c
  6305  006176  E109               	bnz	u11481
  6306  006178  0E53               	movlw	83
  6307  00617A  1804               	xorwf	?_ETH_Read32+1,w,c
  6308  00617C  E106               	bnz	u11481
  6309  00617E  0E82               	movlw	130
  6310  006180  1805               	xorwf	?_ETH_Read32+2,w,c
  6311  006182  E103               	bnz	u11481
  6312  006184  0E63               	movlw	99
  6313  006186  1806               	xorwf	?_ETH_Read32+3,w,c
  6314  006188  A4D8               	btfss	status,2,c
  6315  00618A                     u11481:
  6316  00618A  0012               	return	
  6317                           
  6318                           ; BSR set to: 1
  6319                           ;dhcp_client.c: 200: {
  6320                           ;dhcp_client.c: 201: length -= 240;
  6321  00618C  0E10               	movlw	16
  6322  00618E  2659               	addwf	DHCP_Handler@length,f,c
  6323  006190  0EFF               	movlw	255
  6324  006192  225A               	addwfc	DHCP_Handler@length+1,f,c
  6325                           
  6326                           ;dhcp_client.c: 202: while(length>0)
  6327  006194  D09A               	goto	l8383
  6328  006196                     l8335:
  6329                           
  6330                           ;dhcp_client.c: 203: {
  6331                           ;dhcp_client.c: 205: uint8_t option, optionLength;
  6332                           ;dhcp_client.c: 206: option = ETH_Read8();
  6333  006196  EC9E  F041         	call	_ETH_Read8	;wreg free
  6334  00619A  0100               	movlb	0	; () banked
  6335  00619C  6F85               	movwf	DHCP_Handler@option& (0+255),b
  6336                           
  6337                           ;dhcp_client.c: 207: optionLength = ETH_Read8();
  6338  00619E  EC9E  F041         	call	_ETH_Read8	;wreg free
  6339  0061A2  0100               	movlb	0	; () banked
  6340  0061A4  6F92               	movwf	DHCP_Handler@optionLength& (0+255),b
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;dhcp_client.c: 208: length -= 2 + optionLength;
  6344  0061A6  5192               	movf	DHCP_Handler@optionLength& (0+255),w,b
  6345  0061A8  6E5B               	movwf	??_DHCP_Handler& (0+255),c
  6346  0061AA  6A5C               	clrf	(??_DHCP_Handler+1)& (0+255),c
  6347  0061AC  0E02               	movlw	2
  6348  0061AE  265B               	addwf	??_DHCP_Handler,f,c
  6349  0061B0  0E00               	movlw	0
  6350  0061B2  225C               	addwfc	??_DHCP_Handler+1,f,c
  6351  0061B4  505B               	movf	??_DHCP_Handler,w,c
  6352  0061B6  5E59               	subwf	DHCP_Handler@length,f,c
  6353  0061B8  505C               	movf	??_DHCP_Handler+1,w,c
  6354  0061BA  5A5A               	subwfb	DHCP_Handler@length+1,f,c
  6355                           
  6356                           ;dhcp_client.c: 209: switch(option)
  6357  0061BC  D078               	goto	l8381
  6358  0061BE                     l8339:
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;dhcp_client.c: 212: ipv4SubnetMask = ETH_Read32();
  6362  0061BE  EC9B  F03D         	call	_ETH_Read32	;wreg free
  6363  0061C2  C003  F192         	movff	?_ETH_Read32,_ipv4SubnetMask
  6364  0061C6  C004  F193         	movff	?_ETH_Read32+1,_ipv4SubnetMask+1
  6365  0061CA  C005  F194         	movff	?_ETH_Read32+2,_ipv4SubnetMask+2
  6366  0061CE  C006  F195         	movff	?_ETH_Read32+3,_ipv4SubnetMask+3
  6367                           
  6368                           ;dhcp_client.c: 213: break;
  6369  0061D2  D07B               	goto	l8383
  6370  0061D4                     l8341:
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;dhcp_client.c: 215: ipv4Router = ETH_Read32();
  6374  0061D4  EC9B  F03D         	call	_ETH_Read32	;wreg free
  6375  0061D8  C003  F226         	movff	?_ETH_Read32,_ipv4Router
  6376  0061DC  C004  F227         	movff	?_ETH_Read32+1,_ipv4Router+1
  6377  0061E0  C005  F228         	movff	?_ETH_Read32+2,_ipv4Router+2
  6378  0061E4  C006  F229         	movff	?_ETH_Read32+3,_ipv4Router+3
  6379                           
  6380                           ;dhcp_client.c: 216: break;
  6381  0061E8  D070               	goto	l8383
  6382  0061EA                     l8343:
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;dhcp_client.c: 219: if(optionLength >= 4)
  6386  0061EA  0E03               	movlw	3
  6387  0061EC  6592               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  6388  0061EE  D06D               	goto	l8383
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;dhcp_client.c: 220: {
  6392                           ;dhcp_client.c: 221: ipv4DNS[0] = ETH_Read32();
  6393  0061F0  EC9B  F03D         	call	_ETH_Read32	;wreg free
  6394  0061F4  C003  F210         	movff	?_ETH_Read32,_ipv4DNS
  6395  0061F8  C004  F211         	movff	?_ETH_Read32+1,_ipv4DNS+1
  6396  0061FC  C005  F212         	movff	?_ETH_Read32+2,_ipv4DNS+2
  6397  006200  C006  F213         	movff	?_ETH_Read32+3,_ipv4DNS+3
  6398                           
  6399                           ; BSR set to: 1
  6400                           ;dhcp_client.c: 222: optionLength -= 4;
  6401  006204  0E04               	movlw	4
  6402  006206  0100               	movlb	0	; () banked
  6403  006208  5F92               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;dhcp_client.c: 223: if(optionLength >= 4)
  6407  00620A  0E03               	movlw	3
  6408  00620C  6592               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  6409  00620E  D05D               	goto	l8383
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;dhcp_client.c: 224: {
  6413                           ;dhcp_client.c: 225: ipv4DNS[1] = ETH_Read32();
  6414  006210  EC9B  F03D         	call	_ETH_Read32	;wreg free
  6415  006214  C003  F214         	movff	?_ETH_Read32,_ipv4DNS+4
  6416  006218  C004  F215         	movff	?_ETH_Read32+1,_ipv4DNS+5
  6417  00621C  C005  F216         	movff	?_ETH_Read32+2,_ipv4DNS+6
  6418  006220  C006  F217         	movff	?_ETH_Read32+3,_ipv4DNS+7
  6419  006224                     l8353:
  6420                           
  6421                           ; BSR set to: 1
  6422                           ;dhcp_client.c: 226: optionLength -= 4;
  6423  006224  0E04               	movlw	4
  6424  006226  0100               	movlb	0	; () banked
  6425  006228  5F92               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  6426  00622A  D04F               	goto	l8383
  6427  00622C                     l8355:
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;dhcp_client.c: 231: if(optionLength >= 4)
  6431  00622C  0E03               	movlw	3
  6432  00622E  6592               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  6433  006230  D04C               	goto	l8383
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;dhcp_client.c: 232: {
  6437                           ;dhcp_client.c: 233: dhcpLeaseTime = ETH_Read32();
  6438  006232  EC9B  F03D         	call	_ETH_Read32	;wreg free
  6439  006236  C003  F18A         	movff	?_ETH_Read32,_dhcpLeaseTime
  6440  00623A  C004  F18B         	movff	?_ETH_Read32+1,_dhcpLeaseTime+1
  6441  00623E  C005  F18C         	movff	?_ETH_Read32+2,_dhcpLeaseTime+2
  6442  006242  C006  F18D         	movff	?_ETH_Read32+3,_dhcpLeaseTime+3
  6443  006246  D7EE               	goto	l8353
  6444  006248                     l8361:
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;dhcp_client.c: 238: dhcpServerId = ETH_Read32();
  6448  006248  EC9B  F03D         	call	_ETH_Read32	;wreg free
  6449  00624C  C003  F222         	movff	?_ETH_Read32,_dhcpServerId
  6450  006250  C004  F223         	movff	?_ETH_Read32+1,_dhcpServerId+1
  6451  006254  C005  F224         	movff	?_ETH_Read32+2,_dhcpServerId+2
  6452  006258  C006  F225         	movff	?_ETH_Read32+3,_dhcpServerId+3
  6453  00625C  D7E3               	goto	l8353
  6454  00625E                     l900:
  6455                           
  6456                           ; BSR set to: 1
  6457                           ;dhcp_client.c: 245: ipv4Address = myip;
  6458  00625E  C093  F18E         	movff	DHCP_Handler@myip,_ipv4Address
  6459  006262  C094  F18F         	movff	DHCP_Handler@myip+1,_ipv4Address+1
  6460  006266  C095  F190         	movff	DHCP_Handler@myip+2,_ipv4Address+2
  6461  00626A  C096  F191         	movff	DHCP_Handler@myip+3,_ipv4Address+3
  6462                           
  6463                           ; BSR set to: 1
  6464                           ;dhcp_client.c: 246: clientState = REQUESTING;
  6465  00626E  0E04               	movlw	4
  6466  006270  D00B               	goto	L3
  6467  006272                     l902:
  6468                           
  6469                           ; BSR set to: 1
  6470                           ;dhcp_client.c: 249: ipv4Address = myip;
  6471  006272  C093  F18E         	movff	DHCP_Handler@myip,_ipv4Address
  6472  006276  C094  F18F         	movff	DHCP_Handler@myip+1,_ipv4Address+1
  6473  00627A  C095  F190         	movff	DHCP_Handler@myip+2,_ipv4Address+2
  6474  00627E  C096  F191         	movff	DHCP_Handler@myip+3,_ipv4Address+3
  6475                           
  6476                           ; BSR set to: 1
  6477                           ;dhcp_client.c: 250: clientState = BOUND;
  6478  006282  0E05               	movlw	5
  6479  006284  D001               	goto	L3
  6480  006286                     l8369:
  6481                           
  6482                           ; BSR set to: 1
  6483                           ;dhcp_client.c: 254: clientState = INIT;
  6484  006286  0E01               	movlw	1
  6485  006288                     L3:
  6486  006288  6E5D               	movwf	_clientState,c
  6487                           
  6488                           ;dhcp_client.c: 255: break;
  6489  00628A  D008               	goto	l8375
  6490  00628C                     l8373:
  6491                           
  6492                           ; BSR set to: 0
  6493  00628C  EC9E  F041         	call	_ETH_Read8	;wreg free
  6494                           
  6495                           ; Switch size 1, requested type "speed"
  6496                           ; Number of cases is 3, Range of values is 2 to 6
  6497                           ; switch strategies available:
  6498                           ; Name         Instructions Cycles
  6499                           ; simple_byte           10     6 (average)
  6500                           ;	Chosen strategy is simple_byte
  6501  006290  0A02               	xorlw	2	; case 2
  6502  006292  E0E5               	bz	l900
  6503  006294  0A07               	xorlw	7	; case 5
  6504  006296  E0ED               	bz	l902
  6505  006298  0A03               	xorlw	3	; case 6
  6506  00629A  E0F5               	bz	l8369
  6507  00629C                     l8375:
  6508                           
  6509                           ; BSR set to: 1
  6510                           ;dhcp_client.c: 259: optionLength -=1;
  6511  00629C  0100               	movlb	0	; () banked
  6512  00629E  0792               	decf	DHCP_Handler@optionLength& (0+255),f,b
  6513                           
  6514                           ;dhcp_client.c: 260: break;
  6515  0062A0  D014               	goto	l8383
  6516  0062A2                     l8377:
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;dhcp_client.c: 262: ETH_Dump(optionLength);
  6520  0062A2  C092  F00B         	movff	DHCP_Handler@optionLength,ETH_Dump@length
  6521  0062A6  6A0C               	clrf	ETH_Dump@length+1,c
  6522  0062A8  ECBA  F03F         	call	_ETH_Dump	;wreg free
  6523                           
  6524                           ;dhcp_client.c: 263: break;
  6525  0062AC  D00E               	goto	l8383
  6526  0062AE                     l8381:
  6527                           
  6528                           ; BSR set to: 0
  6529  0062AE  5185               	movf	DHCP_Handler@option& (0+255),w,b
  6530                           
  6531                           ; Switch size 1, requested type "speed"
  6532                           ; Number of cases is 6, Range of values is 1 to 54
  6533                           ; switch strategies available:
  6534                           ; Name         Instructions Cycles
  6535                           ; simple_byte           19    10 (average)
  6536                           ;	Chosen strategy is simple_byte
  6537  0062B0  0A01               	xorlw	1	; case 1
  6538  0062B2  E085               	bz	l8339
  6539  0062B4  0A02               	xorlw	2	; case 3
  6540  0062B6  E08E               	bz	l8341
  6541  0062B8  0A05               	xorlw	5	; case 6
  6542  0062BA  E097               	bz	l8343
  6543  0062BC  0A35               	xorlw	53	; case 51
  6544  0062BE  E0B6               	bz	l8355
  6545  0062C0  0A06               	xorlw	6	; case 53
  6546  0062C2  E0E4               	bz	l8373
  6547  0062C4  0A03               	xorlw	3	; case 54
  6548  0062C6  E0C0               	bz	l8361
  6549  0062C8  D7EC               	goto	l8377
  6550  0062CA                     l8383:
  6551  0062CA  BE5A               	btfsc	DHCP_Handler@length+1,7,c
  6552  0062CC  D005               	goto	l8385
  6553  0062CE  505A               	movf	DHCP_Handler@length+1,w,c
  6554  0062D0  E102               	bnz	u11521
  6555  0062D2  0459               	decf	DHCP_Handler@length,w,c
  6556  0062D4  B0D8               	btfsc	status,0,c
  6557  0062D6                     u11521:
  6558  0062D6  D75F               	goto	l8335
  6559  0062D8                     l8385:
  6560                           
  6561                           ;dhcp_client.c: 265: }
  6562                           ;dhcp_client.c: 266: if (clientState == REQUESTING)
  6563  0062D8  0E04               	movlw	4
  6564  0062DA  185D               	xorwf	_clientState,w,c
  6565  0062DC  A4D8               	btfss	status,2,c
  6566  0062DE  0012               	return	
  6567                           
  6568                           ;dhcp_client.c: 267: DHCP_Request( DHCP_REQUEST );
  6569  0062E0  0E03               	movlw	3
  6570  0062E2  EF7B  F031         	goto	_DHCP_Request
  6571  0062E6                     l8389:
  6572                           
  6573                           ;dhcp_client.c: 270: else
  6574                           ;dhcp_client.c: 271: ETH_Dump(length - 34);
  6575  0062E6  0EDE               	movlw	222
  6576  0062E8  2459               	addwf	DHCP_Handler@length,w,c
  6577  0062EA  6E0B               	movwf	ETH_Dump@length,c
  6578  0062EC  0EFF               	movlw	255
  6579  0062EE  205A               	addwfc	DHCP_Handler@length+1,w,c
  6580  0062F0  6E0C               	movwf	ETH_Dump@length+1,c
  6581  0062F2  EFBA  F03F         	goto	_ETH_Dump	;wreg free
  6582  0062F6                     __end_of_DHCP_Handler:
  6583                           	opt stack 0
  6584                           tosu	equ	0xFFF
  6585                           tosh	equ	0xFFE
  6586                           tosl	equ	0xFFD
  6587                           pclath	equ	0xFFA
  6588                           tblptru	equ	0xFF8
  6589                           tblptrh	equ	0xFF7
  6590                           tblptrl	equ	0xFF6
  6591                           tablat	equ	0xFF5
  6592                           prodh	equ	0xFF4
  6593                           prodl	equ	0xFF3
  6594                           intcon	equ	0xFF2
  6595                           intcon2	equ	0xFF1
  6596                           indf0	equ	0xFEF
  6597                           postinc0	equ	0xFEE
  6598                           fsr0h	equ	0xFEA
  6599                           fsr0l	equ	0xFE9
  6600                           wreg	equ	0xFE8
  6601                           indf2	equ	0xFDF
  6602                           postinc2	equ	0xFDE
  6603                           postdec2	equ	0xFDD
  6604                           fsr2h	equ	0xFDA
  6605                           fsr2l	equ	0xFD9
  6606                           status	equ	0xFD8
  6607                           
  6608 ;; *************** function _memcmp *****************
  6609 ;; Defined at:
  6610 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memcmp.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  s1              1    wreg     PTR const void 
  6613 ;;		 -> DHCP_Handler@ethPktMAC(6), 
  6614 ;;  s2              1    1[COMRAM] PTR const void 
  6615 ;;		 -> DHCP_Handler@ethMAC(6), 
  6616 ;;  n               2    2[COMRAM] unsigned int 
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;  s1              1    6[COMRAM] PTR const void 
  6619 ;;		 -> DHCP_Handler@ethPktMAC(6), 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  2    1[COMRAM] int 
  6622 ;; Registers used:
  6623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6624 ;; Tracked objects:
  6625 ;;		On entry : F/1
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6629 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6632 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;Total ram usage:        6 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:    3
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_DHCP_Handler
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           	psect	text31
  6644  007E92                     __ptext31:
  6645                           	opt stack 0
  6646  007E92                     _memcmp:
  6647                           	opt stack 22
  6648                           
  6649                           ;incstack = 0
  6650                           ;memcmp@s1 stored from wreg
  6651  007E92  6E07               	movwf	memcmp@s1,c
  6652  007E94  D01A               	goto	l8263
  6653  007E96                     l8255:
  6654  007E96  5002               	movf	memcmp@s2,w,c
  6655  007E98  6ED9               	movwf	fsr2l,c
  6656  007E9A  6ADA               	clrf	fsr2h,c
  6657  007E9C  5007               	movf	memcmp@s1,w,c
  6658  007E9E  6EE1               	movwf	fsr1l,c
  6659  007EA0  6AE2               	clrf	fsr1h,c
  6660  007EA2  50DE               	movf	postinc2,w,c
  6661  007EA4  18E6               	xorwf	postinc1,w,c
  6662  007EA6  E00F               	bz	l8261
  6663  007EA8  5007               	movf	memcmp@s1,w,c
  6664  007EAA  6ED9               	movwf	fsr2l,c
  6665  007EAC  6ADA               	clrf	fsr2h,c
  6666  007EAE  50DF               	movf	indf2,w,c
  6667  007EB0  6E05               	movwf	??_memcmp& (0+255),c
  6668  007EB2  5002               	movf	memcmp@s2,w,c
  6669  007EB4  6ED9               	movwf	fsr2l,c
  6670  007EB6  6ADA               	clrf	fsr2h,c
  6671  007EB8  50DF               	movf	indf2,w,c
  6672  007EBA  5C05               	subwf	??_memcmp,w,c
  6673  007EBC  6E02               	movwf	?_memcmp,c
  6674  007EBE  6A03               	clrf	?_memcmp+1,c
  6675  007EC0  A0D8               	btfss	status,0,c
  6676  007EC2  0603               	decf	?_memcmp+1,f,c
  6677  007EC4  0012               	return	
  6678  007EC6                     l8261:
  6679  007EC6  2A07               	incf	memcmp@s1,f,c
  6680  007EC8  2A02               	incf	memcmp@s2,f,c
  6681  007ECA                     l8263:
  6682  007ECA  0603               	decf	memcmp@n,f,c
  6683  007ECC  A0D8               	btfss	status,0,c
  6684  007ECE  0604               	decf	memcmp@n+1,f,c
  6685  007ED0  2803               	incf	memcmp@n,w,c
  6686  007ED2  E1E1               	bnz	l8255
  6687  007ED4  2804               	incf	memcmp@n+1,w,c
  6688  007ED6  E1DF               	bnz	l8255
  6689  007ED8  6A02               	clrf	?_memcmp,c
  6690  007EDA  6A03               	clrf	?_memcmp+1,c
  6691  007EDC  0012               	return		;funcret
  6692  007EDE                     __end_of_memcmp:
  6693                           	opt stack 0
  6694                           tosu	equ	0xFFF
  6695                           tosh	equ	0xFFE
  6696                           tosl	equ	0xFFD
  6697                           pclath	equ	0xFFA
  6698                           tblptru	equ	0xFF8
  6699                           tblptrh	equ	0xFF7
  6700                           tblptrl	equ	0xFF6
  6701                           tablat	equ	0xFF5
  6702                           prodh	equ	0xFF4
  6703                           prodl	equ	0xFF3
  6704                           intcon	equ	0xFF2
  6705                           intcon2	equ	0xFF1
  6706                           indf0	equ	0xFEF
  6707                           postinc0	equ	0xFEE
  6708                           fsr0h	equ	0xFEA
  6709                           fsr0l	equ	0xFE9
  6710                           wreg	equ	0xFE8
  6711                           postinc1	equ	0xFE6
  6712                           fsr1h	equ	0xFE2
  6713                           fsr1l	equ	0xFE1
  6714                           indf2	equ	0xFDF
  6715                           postinc2	equ	0xFDE
  6716                           postdec2	equ	0xFDD
  6717                           fsr2h	equ	0xFDA
  6718                           fsr2l	equ	0xFD9
  6719                           status	equ	0xFD8
  6720                           
  6721 ;; *************** function _ETH_Read32 *****************
  6722 ;; Defined at:
  6723 ;;		line 277 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;		None
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  ret             4    6[COMRAM] unsigned long 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  4    2[COMRAM] unsigned long 
  6730 ;; Registers used:
  6731 ;;		wreg, status,2, status,0, cstack
  6732 ;; Tracked objects:
  6733 ;;		On entry : D/2
  6734 ;;		On exit  : F/1
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6738 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;Total ram usage:        8 bytes
  6742 ;; Hardware stack levels used:    1
  6743 ;; Hardware stack levels required when called:    4
  6744 ;; This function calls:
  6745 ;;		_SPI_ExchangeByte
  6746 ;; This function is called by:
  6747 ;;		_DHCP_Handler
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           	psect	text32
  6752  007B36                     __ptext32:
  6753                           	opt stack 0
  6754  007B36                     _ETH_Read32:
  6755                           	opt stack 21
  6756                           
  6757                           ;encX24j600_spi.c: 279: uint32_t ret;
  6758                           ;encX24j600_spi.c: 280: if(rxPacketStatusVector.ByteCount >= sizeof(ret))
  6759                           
  6760                           ;incstack = 0
  6761  007B36  0102               	movlb	2	; () banked
  6762  007B38  5119               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  6763  007B3A  E103               	bnz	u11080
  6764  007B3C  0E04               	movlw	4
  6765  007B3E  5D18               	subwf	_rxPacketStatusVector& (0+255),w,b
  6766  007B40  E325               	bnc	l626
  6767  007B42                     u11080:
  6768                           
  6769                           ; BSR set to: 2
  6770                           
  6771                           ;encX24j600_spi.c: 281: {
  6772                           ;encX24j600_spi.c: 282: do{LATB3 = 0;} while(0);
  6773  007B42  968A               	bcf	3978,3,c	;volatile
  6774                           
  6775                           ; BSR set to: 2
  6776                           ;encX24j600_spi.c: 283: SPI_ExchangeByte(rrxdata_inst);
  6777  007B44  0E2C               	movlw	44
  6778  007B46  ECCC  F043         	call	_SPI_ExchangeByte
  6779                           
  6780                           ;encX24j600_spi.c: 284: ((uint8_t *)&ret)[3] = SPI_ExchangeByte(0);
  6781  007B4A  0E00               	movlw	0
  6782  007B4C  ECCC  F043         	call	_SPI_ExchangeByte
  6783  007B50  6E0A               	movwf	ETH_Read32@ret+3,c
  6784                           
  6785                           ;encX24j600_spi.c: 285: ((uint8_t *)&ret)[2] = SPI_ExchangeByte(0);
  6786  007B52  0E00               	movlw	0
  6787  007B54  ECCC  F043         	call	_SPI_ExchangeByte
  6788  007B58  6E09               	movwf	ETH_Read32@ret+2,c
  6789                           
  6790                           ;encX24j600_spi.c: 286: ((uint8_t *)&ret)[1] = SPI_ExchangeByte(0);
  6791  007B5A  0E00               	movlw	0
  6792  007B5C  ECCC  F043         	call	_SPI_ExchangeByte
  6793  007B60  6E08               	movwf	ETH_Read32@ret+1,c
  6794                           
  6795                           ;encX24j600_spi.c: 287: ((uint8_t *)&ret)[0] = SPI_ExchangeByte(0);
  6796  007B62  0E00               	movlw	0
  6797  007B64  ECCC  F043         	call	_SPI_ExchangeByte
  6798  007B68  6E07               	movwf	ETH_Read32@ret,c
  6799  007B6A  868A               	bsf	3978,3,c	;volatile
  6800                           
  6801                           ;encX24j600_spi.c: 289: rxPacketStatusVector.ByteCount -= sizeof(ret);
  6802  007B6C  0E04               	movlw	4
  6803  007B6E  0102               	movlb	2	; () banked
  6804  007B70  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
  6805  007B72  0E00               	movlw	0
  6806  007B74  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  6807                           
  6808                           ; BSR set to: 2
  6809                           ;encX24j600_spi.c: 290: ethData.error = 0;
  6810  007B76  0101               	movlb	1	; () banked
  6811  007B78  9183               	bcf	_ethData& (0+255),0,b	;volatile
  6812                           
  6813                           ; BSR set to: 1
  6814                           ;encX24j600_spi.c: 291: return ret;
  6815  007B7A  C007  F003         	movff	ETH_Read32@ret,?_ETH_Read32
  6816  007B7E  C008  F004         	movff	ETH_Read32@ret+1,?_ETH_Read32+1
  6817  007B82  C009  F005         	movff	ETH_Read32@ret+2,?_ETH_Read32+2
  6818  007B86  C00A  F006         	movff	ETH_Read32@ret+3,?_ETH_Read32+3
  6819  007B8A  0C00               	retlw	0
  6820  007B8C                     l626:
  6821                           
  6822                           ; BSR set to: 2
  6823                           ;encX24j600_spi.c: 293: else
  6824                           ;encX24j600_spi.c: 294: {
  6825                           ;encX24j600_spi.c: 295: ethData.error = 1;
  6826  007B8C  0101               	movlb	1	; () banked
  6827  007B8E  8183               	bsf	_ethData& (0+255),0,b	;volatile
  6828                           
  6829                           ;encX24j600_spi.c: 296: return 0;
  6830  007B90  6A03               	clrf	?_ETH_Read32,c
  6831  007B92  6A04               	clrf	?_ETH_Read32+1,c
  6832  007B94  6A05               	clrf	?_ETH_Read32+2,c
  6833  007B96  6A06               	clrf	?_ETH_Read32+3,c
  6834                           
  6835                           ; BSR set to: 1
  6836  007B98  0012               	return		;funcret
  6837  007B9A                     __end_of_ETH_Read32:
  6838                           	opt stack 0
  6839                           tosu	equ	0xFFF
  6840                           tosh	equ	0xFFE
  6841                           tosl	equ	0xFFD
  6842                           pclath	equ	0xFFA
  6843                           tblptru	equ	0xFF8
  6844                           tblptrh	equ	0xFF7
  6845                           tblptrl	equ	0xFF6
  6846                           tablat	equ	0xFF5
  6847                           prodh	equ	0xFF4
  6848                           prodl	equ	0xFF3
  6849                           intcon	equ	0xFF2
  6850                           intcon2	equ	0xFF1
  6851                           indf0	equ	0xFEF
  6852                           postinc0	equ	0xFEE
  6853                           fsr0h	equ	0xFEA
  6854                           fsr0l	equ	0xFE9
  6855                           wreg	equ	0xFE8
  6856                           postinc1	equ	0xFE6
  6857                           fsr1h	equ	0xFE2
  6858                           fsr1l	equ	0xFE1
  6859                           indf2	equ	0xFDF
  6860                           postinc2	equ	0xFDE
  6861                           postdec2	equ	0xFDD
  6862                           fsr2h	equ	0xFDA
  6863                           fsr2l	equ	0xFD9
  6864                           status	equ	0xFD8
  6865                           
  6866 ;; *************** function _TCP_Recv *****************
  6867 ;; Defined at:
  6868 ;;		line 483 in file "../../TCPIP Library/source/tcpv4.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;  remoteAddres    4  116[BANK0 ] unsigned long 
  6871 ;;  length          2  120[BANK0 ] unsigned int 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  tcbPtr          2  151[BANK0 ] PTR struct .
  6874 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
  6875 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), NULL(0), 
  6876 ;;  count           1  150[BANK0 ] char 
  6877 ;; Return value:  Size  Location     Type
  6878 ;;		None               void
  6879 ;; Registers used:
  6880 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6881 ;; Tracked objects:
  6882 ;;		On entry : F/0
  6883 ;;		On exit  : C/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6886 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6887 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;Total ram usage:       37 bytes
  6891 ;; Hardware stack levels used:    1
  6892 ;; Hardware stack levels required when called:   12
  6893 ;; This function calls:
  6894 ;;		_ETH_ReadBlock
  6895 ;;		_TCP_FiniteStateMachine
  6896 ;;		_TCP_ParseTCPOptions
  6897 ;; This function is called by:
  6898 ;;		_IPV4_Packet
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           	psect	text33
  6903  0045DA                     __ptext33:
  6904                           	opt stack 0
  6905  0045DA                     _TCP_Recv:
  6906                           	opt stack 15
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;tcpv4.c: 485: tcpTCB_t *tcbPtr;
  6910                           ;tcpv4.c: 486: socklistsize_t count = 0;
  6911                           
  6912                           ; BSR set to: 1
  6913                           ;incstack = 0
  6914  0045DA  6BF6               	clrf	TCP_Recv@count& (0+255),b
  6915                           
  6916                           ;tcpv4.c: 490: receivedRemoteAddress = 0;
  6917  0045DC  0101               	movlb	1	; () banked
  6918  0045DE  6B96               	clrf	_receivedRemoteAddress& (0+255),b
  6919  0045E0  6B97               	clrf	(_receivedRemoteAddress+1)& (0+255),b
  6920  0045E2  6B98               	clrf	(_receivedRemoteAddress+2)& (0+255),b
  6921  0045E4  6B99               	clrf	(_receivedRemoteAddress+3)& (0+255),b
  6922                           
  6923                           ;tcpv4.c: 491: rcvPayloadLen = 0;
  6924  0045E6  6BA0               	clrf	_rcvPayloadLen& (0+255),b
  6925  0045E8  6BA1               	clrf	(_rcvPayloadLen+1)& (0+255),b
  6926                           
  6927                           ; BSR set to: 1
  6928                           ;tcpv4.c: 493: ETH_ReadBlock((char *)&tcpHeader,sizeof(tcpHeader_t));
  6929  0045EA  0EBC               	movlw	low _tcpHeader
  6930  0045EC  6E03               	movwf	ETH_ReadBlock@data,c
  6931  0045EE  0E01               	movlw	high _tcpHeader
  6932  0045F0  6E04               	movwf	ETH_ReadBlock@data+1,c
  6933  0045F2  6A06               	clrf	ETH_ReadBlock@length+1,c
  6934  0045F4  0E14               	movlw	20
  6935  0045F6  6E05               	movwf	ETH_ReadBlock@length,c
  6936  0045F8  ECD9  F03A         	call	_ETH_ReadBlock	;wreg free
  6937                           
  6938                           ; BSR set to: 1
  6939                           ;tcpv4.c: 495: currentTCB = (0);
  6940  0045FC  0100               	movlb	0	; () banked
  6941  0045FE  6BFE               	clrf	_currentTCB& (0+255),b
  6942  004600  6BFF               	clrf	(_currentTCB+1)& (0+255),b
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;tcpv4.c: 498: if ((tcpHeader.destPort != 0) && (tcpHeader.sourcePort != 0))
  6946  004602  0101               	movlb	1	; () banked
  6947  004604  51BE               	movf	(_tcpHeader+2)& (0+255),w,b
  6948  004606  11BF               	iorwf	(_tcpHeader+3)& (0+255),w,b
  6949  004608  B4D8               	btfsc	status,2,c
  6950  00460A  0012               	return	
  6951                           
  6952                           ; BSR set to: 1
  6953  00460C  51BC               	movf	_tcpHeader& (0+255),w,b
  6954  00460E  11BD               	iorwf	(_tcpHeader+1)& (0+255),w,b
  6955  004610  B4D8               	btfsc	status,2,c
  6956  004612  0012               	return	
  6957                           
  6958                           ; BSR set to: 1
  6959                           ;tcpv4.c: 499: {
  6960                           ;tcpv4.c: 500: tcpHeader.sourcePort = ((((uint16_t)tcpHeader.sourcePort & (uint16_t)0xFF
      +                          00) >> 8) | (((uint16_t)tcpHeader.sourcePort & (uint16_t)0x00FF) << 8));
  6961  004614  51BC               	movf	_tcpHeader& (0+255),w,b
  6962  004616  0100               	movlb	0	; () banked
  6963  004618  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  6964  00461A  6BDA               	clrf	??_TCP_Recv& (0+255),b
  6965  00461C  0101               	movlb	1	; () banked
  6966  00461E  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
  6967  004620  0100               	movlb	0	; () banked
  6968  004622  6FDC               	movwf	(??_TCP_Recv+2)& (0+255),b
  6969  004624  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  6970  004626  51DA               	movf	??_TCP_Recv& (0+255),w,b
  6971  004628  11DC               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  6972  00462A  0101               	movlb	1	; () banked
  6973  00462C  6FBC               	movwf	_tcpHeader& (0+255),b
  6974  00462E  0100               	movlb	0	; () banked
  6975  004630  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6976  004632  11DD               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  6977  004634  0101               	movlb	1	; () banked
  6978  004636  6FBD               	movwf	(_tcpHeader+1)& (0+255),b
  6979                           
  6980                           ; BSR set to: 1
  6981                           ;tcpv4.c: 501: tcpHeader.destPort = ((((uint16_t)tcpHeader.destPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcpHeader.destPort & (uint16_t)0x00FF) << 8));
  6982  004638  51BE               	movf	(_tcpHeader+2)& (0+255),w,b
  6983  00463A  0100               	movlb	0	; () banked
  6984  00463C  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  6985  00463E  6BDA               	clrf	??_TCP_Recv& (0+255),b
  6986  004640  EE21  F0BE         	lfsr	2,_tcpHeader+2
  6987  004644  CFDE F0DC          	movff	postinc2,??_TCP_Recv+2
  6988  004648  CFDD F0DD          	movff	postdec2,??_TCP_Recv+3
  6989  00464C  C0DD  F0DC         	movff	??_TCP_Recv+3,??_TCP_Recv+2
  6990  004650  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  6991  004652  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  6992  004654  51DA               	movf	??_TCP_Recv& (0+255),w,b
  6993  004656  11DC               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  6994  004658  0101               	movlb	1	; () banked
  6995  00465A  6FBE               	movwf	(_tcpHeader+2)& (0+255),b
  6996  00465C  0100               	movlb	0	; () banked
  6997  00465E  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6998  004660  11DD               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  6999  004662  0101               	movlb	1	; () banked
  7000  004664  6FBF               	movwf	(_tcpHeader+3)& (0+255),b
  7001                           
  7002                           ; BSR set to: 1
  7003                           ;tcpv4.c: 504: tcbPtr = tcbList;
  7004  004666  C1A2  F0F7         	movff	_tcbList,TCP_Recv@tcbPtr
  7005  00466A  C1A3  F0F8         	movff	_tcbList+1,TCP_Recv@tcbPtr+1
  7006                           
  7007                           ;tcpv4.c: 505: while((tcbPtr != (0)) && (count < tcbListSize))
  7008  00466E  D048               	goto	l9025
  7009  004670                     l9015:
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;tcpv4.c: 506: {
  7013                           ;tcpv4.c: 507: if (tcpHeader.destPort == tcbPtr->localPort)
  7014  004670  C0F7  FFF6         	movff	TCP_Recv@tcbPtr,tblptrl
  7015  004674  C0F8  FFF7         	movff	TCP_Recv@tcbPtr+1,tblptrh
  7016  004678  0E00               	movlw	low (__smallconst shr (0+16))
  7017  00467A  6EF8               	movwf	tblptru,c
  7018  00467C  0E0F               	movlw	(high __ramtop+-1)
  7019  00467E  64F7               	cpfsgt	tblptrh,c
  7020  004680  D007               	bra	u13617
  7021  004682  0009               	tblrd		*+
  7022  004684  CFF5 F0DA          	movff	tablat,??_TCP_Recv
  7023  004688  0009               	tblrd		*+
  7024  00468A  CFF5 F0DB          	movff	tablat,??_TCP_Recv+1
  7025  00468E  D008               	bra	u13610
  7026  004690                     u13617:
  7027  004690  CFF6 FFE9          	movff	tblptrl,fsr0l
  7028  004694  CFF7 FFEA          	movff	tblptrh,fsr0h
  7029  004698  CFEE F0DA          	movff	postinc0,??_TCP_Recv
  7030  00469C  CFEE F0DB          	movff	postinc0,??_TCP_Recv+1
  7031  0046A0                     u13610:
  7032  0046A0  0100               	movlb	0	; () banked
  7033  0046A2  51DA               	movf	??_TCP_Recv& (0+255),w,b
  7034  0046A4  0101               	movlb	1	; () banked
  7035  0046A6  19BE               	xorwf	(_tcpHeader+2)& (0+255),w,b
  7036  0046A8  E10A               	bnz	l9021
  7037  0046AA  0100               	movlb	0	; () banked
  7038  0046AC  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  7039  0046AE  0101               	movlb	1	; () banked
  7040  0046B0  19BF               	xorwf	(_tcpHeader+3)& (0+255),w,b
  7041  0046B2  E105               	bnz	l9021
  7042                           
  7043                           ; BSR set to: 1
  7044                           ;tcpv4.c: 508: {
  7045                           ;tcpv4.c: 509: currentTCB = tcbPtr;
  7046  0046B4  C0F7  F0FE         	movff	TCP_Recv@tcbPtr,_currentTCB
  7047  0046B8  C0F8  F0FF         	movff	TCP_Recv@tcbPtr+1,_currentTCB+1
  7048                           
  7049                           ;tcpv4.c: 510: break;
  7050  0046BC  D02E               	goto	l9029
  7051  0046BE                     l9021:
  7052                           
  7053                           ; BSR set to: 1
  7054                           ;tcpv4.c: 512: else
  7055                           ;tcpv4.c: 513: {
  7056                           ;tcpv4.c: 514: tcbPtr = tcbPtr->nextTCB;
  7057  0046BE  0E2C               	movlw	44
  7058  0046C0  0100               	movlb	0	; () banked
  7059  0046C2  25F7               	addwf	TCP_Recv@tcbPtr& (0+255),w,b
  7060  0046C4  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7061  0046C6  0E00               	movlw	0
  7062  0046C8  21F8               	addwfc	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  7063  0046CA  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7064  0046CC  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7065  0046D0  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7066  0046D4  0E00               	movlw	low (__smallconst shr (0+16))
  7067  0046D6  6EF8               	movwf	tblptru,c
  7068  0046D8  0E0F               	movlw	(high __ramtop+-1)
  7069  0046DA  64F7               	cpfsgt	tblptrh,c
  7070  0046DC  D007               	bra	u13637
  7071  0046DE  0009               	tblrd		*+
  7072  0046E0  CFF5 F0F7          	movff	tablat,TCP_Recv@tcbPtr
  7073  0046E4  0009               	tblrd		*+
  7074  0046E6  CFF5 F0F8          	movff	tablat,TCP_Recv@tcbPtr+1
  7075  0046EA  D008               	bra	u13630
  7076  0046EC                     u13637:
  7077  0046EC  CFF6 FFE9          	movff	tblptrl,fsr0l
  7078  0046F0  CFF7 FFEA          	movff	tblptrh,fsr0h
  7079  0046F4  CFEE F0F7          	movff	postinc0,TCP_Recv@tcbPtr
  7080  0046F8  CFEE F0F8          	movff	postinc0,TCP_Recv@tcbPtr+1
  7081  0046FC                     u13630:
  7082                           
  7083                           ;tcpv4.c: 515: count ++;
  7084  0046FC  0100               	movlb	0	; () banked
  7085  0046FE  2BF6               	incf	TCP_Recv@count& (0+255),f,b
  7086  004700                     l9025:
  7087  004700  0100               	movlb	0	; () banked
  7088  004702  51F7               	movf	TCP_Recv@tcbPtr& (0+255),w,b
  7089  004704  11F8               	iorwf	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  7090  004706  E009               	bz	l9029
  7091                           
  7092                           ; BSR set to: 0
  7093  004708  51F6               	movf	TCP_Recv@count& (0+255),w,b
  7094  00470A  0A80               	xorlw	128
  7095  00470C  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7096  00470E  0101               	movlb	1	; () banked
  7097  004710  51A7               	movf	_tcbListSize& (0+255),w,b
  7098  004712  0A80               	xorlw	128
  7099  004714  0100               	movlb	0	; () banked
  7100  004716  5DDA               	subwf	??_TCP_Recv& (0+255),w,b
  7101  004718  E3AB               	bnc	l9015
  7102  00471A                     l9029:
  7103                           
  7104                           ;tcpv4.c: 516: }
  7105                           ;tcpv4.c: 517: }
  7106                           ;tcpv4.c: 519: if (currentTCB != (0))
  7107  00471A  0100               	movlb	0	; () banked
  7108  00471C  51FE               	movf	_currentTCB& (0+255),w,b
  7109  00471E  11FF               	iorwf	(_currentTCB+1)& (0+255),w,b
  7110  004720  B4D8               	btfsc	status,2,c
  7111  004722  0012               	return	
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;tcpv4.c: 520: {
  7115                           ;tcpv4.c: 521: if((tcpHeader.sourcePort == currentTCB->destPort) ||
  7116                           ;tcpv4.c: 522: (currentTCB->destIP == 0))
  7117  004724  0E06               	movlw	6
  7118  004726  25FE               	addwf	_currentTCB& (0+255),w,b
  7119  004728  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7120  00472A  0E00               	movlw	0
  7121  00472C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7122  00472E  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7123  004730  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7124  004734  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7125  004738  0E00               	movlw	low (__smallconst shr (0+16))
  7126  00473A  6EF8               	movwf	tblptru,c
  7127  00473C  0E0F               	movlw	(high __ramtop+-1)
  7128  00473E  64F7               	cpfsgt	tblptrh,c
  7129  004740  D007               	bra	u13677
  7130  004742  0009               	tblrd		*+
  7131  004744  CFF5 F0DC          	movff	tablat,??_TCP_Recv+2
  7132  004748  0009               	tblrd		*+
  7133  00474A  CFF5 F0DD          	movff	tablat,??_TCP_Recv+3
  7134  00474E  D008               	bra	u13670
  7135  004750                     u13677:
  7136  004750  CFF6 FFE9          	movff	tblptrl,fsr0l
  7137  004754  CFF7 FFEA          	movff	tblptrh,fsr0h
  7138  004758  CFEE F0DC          	movff	postinc0,??_TCP_Recv+2
  7139  00475C  CFEE F0DD          	movff	postinc0,??_TCP_Recv+3
  7140  004760                     u13670:
  7141  004760  0101               	movlb	1	; () banked
  7142  004762  51BC               	movf	_tcpHeader& (0+255),w,b
  7143  004764  0100               	movlb	0	; () banked
  7144  004766  19DC               	xorwf	(??_TCP_Recv+2)& (0+255),w,b
  7145  004768  E105               	bnz	u13680
  7146  00476A  0101               	movlb	1	; () banked
  7147  00476C  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
  7148  00476E  0100               	movlb	0	; () banked
  7149  004770  19DD               	xorwf	(??_TCP_Recv+3)& (0+255),w,b
  7150  004772  E02F               	bz	l1268
  7151  004774                     u13680:
  7152                           
  7153                           ; BSR set to: 0
  7154  004774  0E02               	movlw	2
  7155  004776  25FE               	addwf	_currentTCB& (0+255),w,b
  7156  004778  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7157  00477A  0E00               	movlw	0
  7158  00477C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7159  00477E  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7160  004780  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7161  004784  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7162  004788  0E00               	movlw	low (__smallconst shr (0+16))
  7163  00478A  6EF8               	movwf	tblptru,c
  7164  00478C  0E0F               	movlw	(high __ramtop+-1)
  7165  00478E  64F7               	cpfsgt	tblptrh,c
  7166  004790  D00D               	bra	u13697
  7167  004792  0009               	tblrd		*+
  7168  004794  CFF5 F0DC          	movff	tablat,??_TCP_Recv+2
  7169  004798  0009               	tblrd		*+
  7170  00479A  CFF5 F0DD          	movff	tablat,??_TCP_Recv+3
  7171  00479E  0009               	tblrd		*+
  7172  0047A0  CFF5 F0DE          	movff	tablat,??_TCP_Recv+4
  7173  0047A4  0009               	tblrd		*+
  7174  0047A6  CFF5 F0DF          	movff	tablat,??_TCP_Recv+5
  7175  0047AA  D00C               	bra	u13690
  7176  0047AC                     u13697:
  7177  0047AC  CFF6 FFE9          	movff	tblptrl,fsr0l
  7178  0047B0  CFF7 FFEA          	movff	tblptrh,fsr0h
  7179  0047B4  CFEE F0DC          	movff	postinc0,??_TCP_Recv+2
  7180  0047B8  CFEE F0DD          	movff	postinc0,??_TCP_Recv+3
  7181  0047BC  CFEE F0DE          	movff	postinc0,??_TCP_Recv+4
  7182  0047C0  CFEE F0DF          	movff	postinc0,??_TCP_Recv+5
  7183  0047C4                     u13690:
  7184  0047C4  0100               	movlb	0	; () banked
  7185  0047C6  51DC               	movf	(??_TCP_Recv+2)& (0+255),w,b
  7186  0047C8  11DD               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  7187  0047CA  11DE               	iorwf	(??_TCP_Recv+4)& (0+255),w,b
  7188  0047CC  11DF               	iorwf	(??_TCP_Recv+5)& (0+255),w,b
  7189  0047CE  A4D8               	btfss	status,2,c
  7190  0047D0  0012               	return	
  7191  0047D2                     l1268:
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;tcpv4.c: 523: {
  7195                           ;tcpv4.c: 526: receivedRemoteAddress = remoteAddress;
  7196  0047D2  C0D4  F196         	movff	TCP_Recv@remoteAddress,_receivedRemoteAddress
  7197  0047D6  C0D5  F197         	movff	TCP_Recv@remoteAddress+1,_receivedRemoteAddress+1
  7198  0047DA  C0D6  F198         	movff	TCP_Recv@remoteAddress+2,_receivedRemoteAddress+2
  7199  0047DE  C0D7  F199         	movff	TCP_Recv@remoteAddress+3,_receivedRemoteAddress+3
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;tcpv4.c: 527: rcvPayloadLen = length - (uint16_t)(tcpHeader.dataOffset << 2);
  7203  0047E2  0101               	movlb	1	; () banked
  7204  0047E4  39C8               	swapf	(_tcpHeader+12)& (0+255),w,b
  7205  0047E6  0B0F               	andlw	15
  7206  0047E8  0100               	movlb	0	; () banked
  7207  0047EA  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7208  0047EC  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  7209  0047EE  90D8               	bcf	status,0,c
  7210  0047F0  37DA               	rlcf	??_TCP_Recv& (0+255),f,b
  7211  0047F2  37DB               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  7212  0047F4  90D8               	bcf	status,0,c
  7213  0047F6  37DA               	rlcf	??_TCP_Recv& (0+255),f,b
  7214  0047F8  37DB               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  7215  0047FA  51DA               	movf	??_TCP_Recv& (0+255),w,b
  7216  0047FC  5DD8               	subwf	TCP_Recv@length& (0+255),w,b
  7217  0047FE  0101               	movlb	1	; () banked
  7218  004800  6FA0               	movwf	_rcvPayloadLen& (0+255),b
  7219  004802  0100               	movlb	0	; () banked
  7220  004804  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  7221  004806  59D9               	subwfb	(TCP_Recv@length+1)& (0+255),w,b
  7222  004808  0101               	movlb	1	; () banked
  7223  00480A  6FA1               	movwf	(_rcvPayloadLen+1)& (0+255),b
  7224                           
  7225                           ; BSR set to: 1
  7226                           ;tcpv4.c: 530: if (TCP_ParseTCPOptions() == 1)
  7227  00480C  ECF0  F035         	call	_TCP_ParseTCPOptions	;wreg free
  7228  004810  06E8               	decf	wreg,f,c
  7229  004812  A4D8               	btfss	status,2,c
  7230  004814  0012               	return	
  7231                           
  7232                           ;tcpv4.c: 531: {
  7233                           ;tcpv4.c: 534: if(tcpHeader.syn)
  7234  004816  0101               	movlb	1	; () banked
  7235  004818  A3C9               	btfss	(_tcpHeader+13)& (0+255),1,b
  7236  00481A  D038               	goto	l1270
  7237                           
  7238                           ; BSR set to: 1
  7239                           ;tcpv4.c: 535: {
  7240                           ;tcpv4.c: 536: if(tcpHeader.ack)
  7241  00481C  A9C9               	btfss	(_tcpHeader+13)& (0+255),4,b
  7242  00481E  D01B               	goto	l9045
  7243                           
  7244                           ; BSR set to: 1
  7245                           ;tcpv4.c: 537: {
  7246                           ;tcpv4.c: 538: ;
  7247                           ;tcpv4.c: 539: currentTCB->connectionEvent = RCV_SYNACK;
  7248  004820  0E2B               	movlw	43
  7249  004822  0100               	movlb	0	; () banked
  7250  004824  25FE               	addwf	_currentTCB& (0+255),w,b
  7251  004826  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7252  004828  0E00               	movlw	0
  7253  00482A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7254  00482C  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7255  00482E  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7256  004832  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7257  004836  0E00               	movlw	low (__smallconst shr (0+16))
  7258  004838  6EF8               	movwf	tblptru,c
  7259  00483A  0E0F               	movlw	(high __ramtop+-1)
  7260  00483C  64F7               	cpfsgt	tblptrh,c
  7261  00483E  D004               	bra	u13747
  7262  004840  0E05               	movlw	5
  7263  004842  6EF5               	movwf	tablat,c
  7264  004844  000C               	tblwt		*
  7265  004846  D006               	bra	u13740
  7266  004848                     u13747:
  7267  004848  CFF6 FFE9          	movff	tblptrl,fsr0l
  7268  00484C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7269  004850  0E05               	movlw	5
  7270  004852  D08E               	goto	L8
  7271  004854                     u13740:
  7272                           
  7273                           ;tcpv4.c: 540: } else
  7274  004854  D0AB               	goto	l9061
  7275  004856                     l9045:
  7276                           
  7277                           ; BSR set to: 1
  7278                           ;tcpv4.c: 541: {
  7279                           ;tcpv4.c: 542: ;
  7280                           ;tcpv4.c: 543: currentTCB->connectionEvent = RCV_SYN;
  7281  004856  0E2B               	movlw	43
  7282  004858  0100               	movlb	0	; () banked
  7283  00485A  25FE               	addwf	_currentTCB& (0+255),w,b
  7284  00485C  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7285  00485E  0E00               	movlw	0
  7286  004860  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7287  004862  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7288  004864  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7289  004868  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7290  00486C  0E00               	movlw	low (__smallconst shr (0+16))
  7291  00486E  6EF8               	movwf	tblptru,c
  7292  004870  0E0F               	movlw	(high __ramtop+-1)
  7293  004872  64F7               	cpfsgt	tblptrh,c
  7294  004874  D004               	bra	u13757
  7295  004876  0E03               	movlw	3
  7296  004878  6EF5               	movwf	tablat,c
  7297  00487A  000C               	tblwt		*
  7298  00487C  D006               	bra	u13750
  7299  00487E                     u13757:
  7300  00487E  CFF6 FFE9          	movff	tblptrl,fsr0l
  7301  004882  CFF7 FFEA          	movff	tblptrh,fsr0h
  7302  004886  0E03               	movlw	3
  7303  004888  D073               	goto	L8
  7304  00488A                     u13750:
  7305  00488A  D090               	goto	l9061
  7306  00488C                     l1270:
  7307                           
  7308                           ; BSR set to: 1
  7309  00488C  A1C9               	btfss	(_tcpHeader+13)& (0+255),0,b
  7310  00488E  D038               	goto	l1274
  7311                           
  7312                           ; BSR set to: 1
  7313                           ;tcpv4.c: 546: {
  7314                           ;tcpv4.c: 547: if(tcpHeader.ack)
  7315  004890  A9C9               	btfss	(_tcpHeader+13)& (0+255),4,b
  7316  004892  D01B               	goto	l9051
  7317                           
  7318                           ; BSR set to: 1
  7319                           ;tcpv4.c: 548: {
  7320                           ;tcpv4.c: 549: ;
  7321                           ;tcpv4.c: 550: currentTCB->connectionEvent = RCV_FINACK;
  7322  004894  0E2B               	movlw	43
  7323  004896  0100               	movlb	0	; () banked
  7324  004898  25FE               	addwf	_currentTCB& (0+255),w,b
  7325  00489A  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7326  00489C  0E00               	movlw	0
  7327  00489E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7328  0048A0  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7329  0048A2  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7330  0048A6  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7331  0048AA  0E00               	movlw	low (__smallconst shr (0+16))
  7332  0048AC  6EF8               	movwf	tblptru,c
  7333  0048AE  0E0F               	movlw	(high __ramtop+-1)
  7334  0048B0  64F7               	cpfsgt	tblptrh,c
  7335  0048B2  D004               	bra	u13787
  7336  0048B4  0E07               	movlw	7
  7337  0048B6  6EF5               	movwf	tablat,c
  7338  0048B8  000C               	tblwt		*
  7339  0048BA  D006               	bra	u13780
  7340  0048BC                     u13787:
  7341  0048BC  CFF6 FFE9          	movff	tblptrl,fsr0l
  7342  0048C0  CFF7 FFEA          	movff	tblptrh,fsr0h
  7343  0048C4  0E07               	movlw	7
  7344  0048C6  D054               	goto	L8
  7345  0048C8                     u13780:
  7346                           
  7347                           ;tcpv4.c: 551: } else
  7348  0048C8  D071               	goto	l9061
  7349  0048CA                     l9051:
  7350                           
  7351                           ; BSR set to: 1
  7352                           ;tcpv4.c: 552: {
  7353                           ;tcpv4.c: 553: ;
  7354                           ;tcpv4.c: 554: currentTCB->connectionEvent = RCV_FIN;
  7355  0048CA  0E2B               	movlw	43
  7356  0048CC  0100               	movlb	0	; () banked
  7357  0048CE  25FE               	addwf	_currentTCB& (0+255),w,b
  7358  0048D0  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7359  0048D2  0E00               	movlw	0
  7360  0048D4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7361  0048D6  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7362  0048D8  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7363  0048DC  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7364  0048E0  0E00               	movlw	low (__smallconst shr (0+16))
  7365  0048E2  6EF8               	movwf	tblptru,c
  7366  0048E4  0E0F               	movlw	(high __ramtop+-1)
  7367  0048E6  64F7               	cpfsgt	tblptrh,c
  7368  0048E8  D004               	bra	u13797
  7369  0048EA  0E06               	movlw	6
  7370  0048EC  6EF5               	movwf	tablat,c
  7371  0048EE  000C               	tblwt		*
  7372  0048F0  D006               	bra	u13790
  7373  0048F2                     u13797:
  7374  0048F2  CFF6 FFE9          	movff	tblptrl,fsr0l
  7375  0048F6  CFF7 FFEA          	movff	tblptrh,fsr0h
  7376  0048FA  0E06               	movlw	6
  7377  0048FC  D039               	goto	L8
  7378  0048FE                     u13790:
  7379  0048FE  D056               	goto	l9061
  7380  004900                     l1274:
  7381                           
  7382                           ; BSR set to: 1
  7383  004900  A5C9               	btfss	(_tcpHeader+13)& (0+255),2,b
  7384  004902  D038               	goto	l1278
  7385                           
  7386                           ; BSR set to: 1
  7387                           ;tcpv4.c: 557: {
  7388                           ;tcpv4.c: 558: if(tcpHeader.ack)
  7389  004904  A9C9               	btfss	(_tcpHeader+13)& (0+255),4,b
  7390  004906  D01B               	goto	l9057
  7391                           
  7392                           ; BSR set to: 1
  7393                           ;tcpv4.c: 559: {
  7394                           ;tcpv4.c: 560: ;
  7395                           ;tcpv4.c: 561: currentTCB->connectionEvent = RCV_RSTACK;
  7396  004908  0E2B               	movlw	43
  7397  00490A  0100               	movlb	0	; () banked
  7398  00490C  25FE               	addwf	_currentTCB& (0+255),w,b
  7399  00490E  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7400  004910  0E00               	movlw	0
  7401  004912  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7402  004914  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7403  004916  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7404  00491A  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7405  00491E  0E00               	movlw	low (__smallconst shr (0+16))
  7406  004920  6EF8               	movwf	tblptru,c
  7407  004922  0E0F               	movlw	(high __ramtop+-1)
  7408  004924  64F7               	cpfsgt	tblptrh,c
  7409  004926  D004               	bra	u13827
  7410  004928  0E0A               	movlw	10
  7411  00492A  6EF5               	movwf	tablat,c
  7412  00492C  000C               	tblwt		*
  7413  00492E  D006               	bra	u13820
  7414  004930                     u13827:
  7415  004930  CFF6 FFE9          	movff	tblptrl,fsr0l
  7416  004934  CFF7 FFEA          	movff	tblptrh,fsr0h
  7417  004938  0E0A               	movlw	10
  7418  00493A  D01A               	goto	L8
  7419  00493C                     u13820:
  7420                           
  7421                           ;tcpv4.c: 562: } else
  7422  00493C  D037               	goto	l9061
  7423  00493E                     l9057:
  7424                           
  7425                           ; BSR set to: 1
  7426                           ;tcpv4.c: 563: {
  7427                           ;tcpv4.c: 564: ;
  7428                           ;tcpv4.c: 565: currentTCB->connectionEvent = RCV_RST;
  7429  00493E  0E2B               	movlw	43
  7430  004940  0100               	movlb	0	; () banked
  7431  004942  25FE               	addwf	_currentTCB& (0+255),w,b
  7432  004944  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7433  004946  0E00               	movlw	0
  7434  004948  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7435  00494A  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7436  00494C  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7437  004950  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7438  004954  0E00               	movlw	low (__smallconst shr (0+16))
  7439  004956  6EF8               	movwf	tblptru,c
  7440  004958  0E0F               	movlw	(high __ramtop+-1)
  7441  00495A  64F7               	cpfsgt	tblptrh,c
  7442  00495C  D004               	bra	u13837
  7443  00495E  0E09               	movlw	9
  7444  004960  6EF5               	movwf	tablat,c
  7445  004962  000C               	tblwt		*
  7446  004964  D006               	bra	u13830
  7447  004966                     u13837:
  7448  004966  CFF6 FFE9          	movff	tblptrl,fsr0l
  7449  00496A  CFF7 FFEA          	movff	tblptrh,fsr0h
  7450  00496E  0E09               	movlw	9
  7451  004970                     L8:
  7452  004970  6EEF               	movwf	indf0,c
  7453  004972                     u13830:
  7454  004972  D01C               	goto	l9061
  7455  004974                     l1278:
  7456                           
  7457                           ; BSR set to: 1
  7458  004974  A9C9               	btfss	(_tcpHeader+13)& (0+255),4,b
  7459  004976  D01A               	goto	l9061
  7460                           
  7461                           ; BSR set to: 1
  7462                           ;tcpv4.c: 568: {
  7463                           ;tcpv4.c: 569: ;
  7464                           ;tcpv4.c: 570: currentTCB->connectionEvent = RCV_ACK;
  7465  004978  0E2B               	movlw	43
  7466  00497A  0100               	movlb	0	; () banked
  7467  00497C  25FE               	addwf	_currentTCB& (0+255),w,b
  7468  00497E  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7469  004980  0E00               	movlw	0
  7470  004982  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7471  004984  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7472  004986  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7473  00498A  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7474  00498E  0E00               	movlw	low (__smallconst shr (0+16))
  7475  004990  6EF8               	movwf	tblptru,c
  7476  004992  0E0F               	movlw	(high __ramtop+-1)
  7477  004994  64F7               	cpfsgt	tblptrh,c
  7478  004996  D004               	bra	u13857
  7479  004998  0E04               	movlw	4
  7480  00499A  6EF5               	movwf	tablat,c
  7481  00499C  000C               	tblwt		*
  7482  00499E  D006               	bra	u13850
  7483  0049A0                     u13857:
  7484  0049A0  CFF6 FFE9          	movff	tblptrl,fsr0l
  7485  0049A4  CFF7 FFEA          	movff	tblptrh,fsr0h
  7486  0049A8  0E04               	movlw	4
  7487  0049AA  6EEF               	movwf	indf0,c
  7488  0049AC                     u13850:
  7489  0049AC                     l9061:
  7490                           
  7491                           ;tcpv4.c: 575: }
  7492                           ;tcpv4.c: 577: tcpHeader.ackNumber = ((((uint32_t)tcpHeader.ackNumber&(uint32_t)0xff0000
      +                          00) >> 24) | (((uint32_t)tcpHeader.ackNumber&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)t
      +                          cpHeader.ackNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHeader.ackNumber&(uint32
      +                          _
  7493  0049AC  0101               	movlb	1	; () banked
  7494  0049AE  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
  7495  0049B0  0100               	movlb	0	; () banked
  7496  0049B2  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7497  0049B4  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  7498  0049B6  6BDC               	clrf	(??_TCP_Recv+2)& (0+255),b
  7499  0049B8  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  7500  0049BA  C0DA  F0DD         	movff	??_TCP_Recv,??_TCP_Recv+3
  7501  0049BE  6BDC               	clrf	(??_TCP_Recv+2)& (0+255),b
  7502  0049C0  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  7503  0049C2  6BDA               	clrf	??_TCP_Recv& (0+255),b
  7504  0049C4  EE21  F0C4         	lfsr	2,_tcpHeader+8
  7505  0049C8  0E00               	movlw	0
  7506  0049CA  14DE               	andwf	postinc2,w,c
  7507  0049CC  6FDE               	movwf	(??_TCP_Recv+4)& (0+255),b
  7508  0049CE  0EFF               	movlw	255
  7509  0049D0  14DE               	andwf	postinc2,w,c
  7510  0049D2  6FDF               	movwf	(??_TCP_Recv+5)& (0+255),b
  7511  0049D4  0E00               	movlw	0
  7512  0049D6  14DE               	andwf	postinc2,w,c
  7513  0049D8  6FE0               	movwf	(??_TCP_Recv+6)& (0+255),b
  7514  0049DA  0E00               	movlw	0
  7515  0049DC  14DE               	andwf	postinc2,w,c
  7516  0049DE  6FE1               	movwf	(??_TCP_Recv+7)& (0+255),b
  7517  0049E0  C0E0  F0E1         	movff	??_TCP_Recv+6,??_TCP_Recv+7
  7518  0049E4  C0DF  F0E0         	movff	??_TCP_Recv+5,??_TCP_Recv+6
  7519  0049E8  C0DE  F0DF         	movff	??_TCP_Recv+4,??_TCP_Recv+5
  7520  0049EC  6BDE               	clrf	(??_TCP_Recv+4)& (0+255),b
  7521  0049EE  C1C4  F0E2         	movff	_tcpHeader+8,??_TCP_Recv+8
  7522  0049F2  C1C5  F0E3         	movff	_tcpHeader+9,??_TCP_Recv+9
  7523  0049F6  C1C6  F0E4         	movff	_tcpHeader+10,??_TCP_Recv+10
  7524  0049FA  C1C7  F0E5         	movff	_tcpHeader+11,??_TCP_Recv+11
  7525  0049FE  C0E3  F0E2         	movff	??_TCP_Recv+9,??_TCP_Recv+8
  7526  004A02  C0E4  F0E3         	movff	??_TCP_Recv+10,??_TCP_Recv+9
  7527  004A06  C0E5  F0E4         	movff	??_TCP_Recv+11,??_TCP_Recv+10
  7528  004A0A  6BE5               	clrf	(??_TCP_Recv+11)& (0+255),b
  7529  004A0C  6BE6               	clrf	(??_TCP_Recv+12)& (0+255),b
  7530  004A0E  51E3               	movf	(??_TCP_Recv+9)& (0+255),w,b
  7531  004A10  6FE7               	movwf	(??_TCP_Recv+13)& (0+255),b
  7532  004A12  0E00               	movlw	0
  7533  004A14  6BE8               	clrf	(??_TCP_Recv+14)& (0+255),b
  7534  004A16  6BE9               	clrf	(??_TCP_Recv+15)& (0+255),b
  7535  004A18  EE21  F0C4         	lfsr	2,_tcpHeader+8
  7536  004A1C  14DE               	andwf	postinc2,w,c
  7537  004A1E  6FEA               	movwf	(??_TCP_Recv+16)& (0+255),b
  7538  004A20  0E00               	movlw	0
  7539  004A22  14DE               	andwf	postinc2,w,c
  7540  004A24  6FEB               	movwf	(??_TCP_Recv+17)& (0+255),b
  7541  004A26  0E00               	movlw	0
  7542  004A28  14DE               	andwf	postinc2,w,c
  7543  004A2A  6FEC               	movwf	(??_TCP_Recv+18)& (0+255),b
  7544  004A2C  0EFF               	movlw	255
  7545  004A2E  14DE               	andwf	postinc2,w,c
  7546  004A30  6FED               	movwf	(??_TCP_Recv+19)& (0+255),b
  7547  004A32  0E19               	movlw	25
  7548  004A34  D005               	goto	u13860
  7549  004A36                     u13865:
  7550  004A36  90D8               	bcf	status,0,c
  7551  004A38  33ED               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
  7552  004A3A  33EC               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
  7553  004A3C  33EB               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
  7554  004A3E  33EA               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
  7555  004A40                     u13860:
  7556  004A40  2EE8               	decfsz	wreg,f,c
  7557  004A42  D7F9               	goto	u13865
  7558  004A44  51E6               	movf	(??_TCP_Recv+12)& (0+255),w,b
  7559  004A46  11EA               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
  7560  004A48  6FEE               	movwf	(??_TCP_Recv+20)& (0+255),b
  7561  004A4A  51E7               	movf	(??_TCP_Recv+13)& (0+255),w,b
  7562  004A4C  11EB               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
  7563  004A4E  6FEF               	movwf	(??_TCP_Recv+21)& (0+255),b
  7564  004A50  51E8               	movf	(??_TCP_Recv+14)& (0+255),w,b
  7565  004A52  11EC               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
  7566  004A54  6FF0               	movwf	(??_TCP_Recv+22)& (0+255),b
  7567  004A56  51E9               	movf	(??_TCP_Recv+15)& (0+255),w,b
  7568  004A58  11ED               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
  7569  004A5A  6FF1               	movwf	(??_TCP_Recv+23)& (0+255),b
  7570  004A5C  51DE               	movf	(??_TCP_Recv+4)& (0+255),w,b
  7571  004A5E  11EE               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
  7572  004A60  6FF2               	movwf	(??_TCP_Recv+24)& (0+255),b
  7573  004A62  51DF               	movf	(??_TCP_Recv+5)& (0+255),w,b
  7574  004A64  11EF               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
  7575  004A66  6FF3               	movwf	(??_TCP_Recv+25)& (0+255),b
  7576  004A68  51E0               	movf	(??_TCP_Recv+6)& (0+255),w,b
  7577  004A6A  11F0               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
  7578  004A6C  6FF4               	movwf	(??_TCP_Recv+26)& (0+255),b
  7579  004A6E  51E1               	movf	(??_TCP_Recv+7)& (0+255),w,b
  7580  004A70  11F1               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
  7581  004A72  6FF5               	movwf	(??_TCP_Recv+27)& (0+255),b
  7582  004A74  51DA               	movf	??_TCP_Recv& (0+255),w,b
  7583  004A76  11F2               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
  7584  004A78  0101               	movlb	1	; () banked
  7585  004A7A  6FC4               	movwf	(_tcpHeader+8)& (0+255),b
  7586  004A7C  0100               	movlb	0	; () banked
  7587  004A7E  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  7588  004A80  11F3               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  7589  004A82  0101               	movlb	1	; () banked
  7590  004A84  6FC5               	movwf	(_tcpHeader+9)& (0+255),b
  7591  004A86  0100               	movlb	0	; () banked
  7592  004A88  51DC               	movf	(??_TCP_Recv+2)& (0+255),w,b
  7593  004A8A  11F4               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  7594  004A8C  0101               	movlb	1	; () banked
  7595  004A8E  6FC6               	movwf	(_tcpHeader+10)& (0+255),b
  7596  004A90  0100               	movlb	0	; () banked
  7597  004A92  51DD               	movf	(??_TCP_Recv+3)& (0+255),w,b
  7598  004A94  11F5               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  7599  004A96  0101               	movlb	1	; () banked
  7600  004A98  6FC7               	movwf	(_tcpHeader+11)& (0+255),b
  7601                           
  7602                           ;tcpv4.c: 578: tcpHeader.sequenceNumber = ((((uint32_t)tcpHeader.sequenceNumber&(uint32_
      +                          t)0xff000000) >> 24) | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x00ff0000) >> 8) 
      +                          | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHead
      +                          e
  7603  004A9A  51C0               	movf	(_tcpHeader+4)& (0+255),w,b
  7604  004A9C  0100               	movlb	0	; () banked
  7605  004A9E  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7606  004AA0  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  7607  004AA2  6BDC               	clrf	(??_TCP_Recv+2)& (0+255),b
  7608  004AA4  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  7609  004AA6  C0DA  F0DD         	movff	??_TCP_Recv,??_TCP_Recv+3
  7610  004AAA  6BDC               	clrf	(??_TCP_Recv+2)& (0+255),b
  7611  004AAC  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  7612  004AAE  6BDA               	clrf	??_TCP_Recv& (0+255),b
  7613  004AB0  EE21  F0C0         	lfsr	2,_tcpHeader+4
  7614  004AB4  0E00               	movlw	0
  7615  004AB6  14DE               	andwf	postinc2,w,c
  7616  004AB8  6FDE               	movwf	(??_TCP_Recv+4)& (0+255),b
  7617  004ABA  0EFF               	movlw	255
  7618  004ABC  14DE               	andwf	postinc2,w,c
  7619  004ABE  6FDF               	movwf	(??_TCP_Recv+5)& (0+255),b
  7620  004AC0  0E00               	movlw	0
  7621  004AC2  14DE               	andwf	postinc2,w,c
  7622  004AC4  6FE0               	movwf	(??_TCP_Recv+6)& (0+255),b
  7623  004AC6  0E00               	movlw	0
  7624  004AC8  14DE               	andwf	postinc2,w,c
  7625  004ACA  6FE1               	movwf	(??_TCP_Recv+7)& (0+255),b
  7626  004ACC  C0E0  F0E1         	movff	??_TCP_Recv+6,??_TCP_Recv+7
  7627  004AD0  C0DF  F0E0         	movff	??_TCP_Recv+5,??_TCP_Recv+6
  7628  004AD4  C0DE  F0DF         	movff	??_TCP_Recv+4,??_TCP_Recv+5
  7629  004AD8  6BDE               	clrf	(??_TCP_Recv+4)& (0+255),b
  7630  004ADA  C1C0  F0E2         	movff	_tcpHeader+4,??_TCP_Recv+8
  7631  004ADE  C1C1  F0E3         	movff	_tcpHeader+5,??_TCP_Recv+9
  7632  004AE2  C1C2  F0E4         	movff	_tcpHeader+6,??_TCP_Recv+10
  7633  004AE6  C1C3  F0E5         	movff	_tcpHeader+7,??_TCP_Recv+11
  7634  004AEA  C0E3  F0E2         	movff	??_TCP_Recv+9,??_TCP_Recv+8
  7635  004AEE  C0E4  F0E3         	movff	??_TCP_Recv+10,??_TCP_Recv+9
  7636  004AF2  C0E5  F0E4         	movff	??_TCP_Recv+11,??_TCP_Recv+10
  7637  004AF6  6BE5               	clrf	(??_TCP_Recv+11)& (0+255),b
  7638  004AF8  6BE6               	clrf	(??_TCP_Recv+12)& (0+255),b
  7639  004AFA  51E3               	movf	(??_TCP_Recv+9)& (0+255),w,b
  7640  004AFC  6FE7               	movwf	(??_TCP_Recv+13)& (0+255),b
  7641  004AFE  0E00               	movlw	0
  7642  004B00  6BE8               	clrf	(??_TCP_Recv+14)& (0+255),b
  7643  004B02  6BE9               	clrf	(??_TCP_Recv+15)& (0+255),b
  7644  004B04  EE21  F0C0         	lfsr	2,_tcpHeader+4
  7645  004B08  14DE               	andwf	postinc2,w,c
  7646  004B0A  6FEA               	movwf	(??_TCP_Recv+16)& (0+255),b
  7647  004B0C  0E00               	movlw	0
  7648  004B0E  14DE               	andwf	postinc2,w,c
  7649  004B10  6FEB               	movwf	(??_TCP_Recv+17)& (0+255),b
  7650  004B12  0E00               	movlw	0
  7651  004B14  14DE               	andwf	postinc2,w,c
  7652  004B16  6FEC               	movwf	(??_TCP_Recv+18)& (0+255),b
  7653  004B18  0EFF               	movlw	255
  7654  004B1A  14DE               	andwf	postinc2,w,c
  7655  004B1C  6FED               	movwf	(??_TCP_Recv+19)& (0+255),b
  7656  004B1E  0E19               	movlw	25
  7657  004B20  D005               	goto	u13870
  7658  004B22                     u13875:
  7659  004B22  90D8               	bcf	status,0,c
  7660  004B24  33ED               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
  7661  004B26  33EC               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
  7662  004B28  33EB               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
  7663  004B2A  33EA               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
  7664  004B2C                     u13870:
  7665  004B2C  2EE8               	decfsz	wreg,f,c
  7666  004B2E  D7F9               	goto	u13875
  7667  004B30  51E6               	movf	(??_TCP_Recv+12)& (0+255),w,b
  7668  004B32  11EA               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
  7669  004B34  6FEE               	movwf	(??_TCP_Recv+20)& (0+255),b
  7670  004B36  51E7               	movf	(??_TCP_Recv+13)& (0+255),w,b
  7671  004B38  11EB               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
  7672  004B3A  6FEF               	movwf	(??_TCP_Recv+21)& (0+255),b
  7673  004B3C  51E8               	movf	(??_TCP_Recv+14)& (0+255),w,b
  7674  004B3E  11EC               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
  7675  004B40  6FF0               	movwf	(??_TCP_Recv+22)& (0+255),b
  7676  004B42  51E9               	movf	(??_TCP_Recv+15)& (0+255),w,b
  7677  004B44  11ED               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
  7678  004B46  6FF1               	movwf	(??_TCP_Recv+23)& (0+255),b
  7679  004B48  51DE               	movf	(??_TCP_Recv+4)& (0+255),w,b
  7680  004B4A  11EE               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
  7681  004B4C  6FF2               	movwf	(??_TCP_Recv+24)& (0+255),b
  7682  004B4E  51DF               	movf	(??_TCP_Recv+5)& (0+255),w,b
  7683  004B50  11EF               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
  7684  004B52  6FF3               	movwf	(??_TCP_Recv+25)& (0+255),b
  7685  004B54  51E0               	movf	(??_TCP_Recv+6)& (0+255),w,b
  7686  004B56  11F0               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
  7687  004B58  6FF4               	movwf	(??_TCP_Recv+26)& (0+255),b
  7688  004B5A  51E1               	movf	(??_TCP_Recv+7)& (0+255),w,b
  7689  004B5C  11F1               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
  7690  004B5E  6FF5               	movwf	(??_TCP_Recv+27)& (0+255),b
  7691  004B60  51DA               	movf	??_TCP_Recv& (0+255),w,b
  7692  004B62  11F2               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
  7693  004B64  0101               	movlb	1	; () banked
  7694  004B66  6FC0               	movwf	(_tcpHeader+4)& (0+255),b
  7695  004B68  0100               	movlb	0	; () banked
  7696  004B6A  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  7697  004B6C  11F3               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  7698  004B6E  0101               	movlb	1	; () banked
  7699  004B70  6FC1               	movwf	(_tcpHeader+5)& (0+255),b
  7700  004B72  0100               	movlb	0	; () banked
  7701  004B74  51DC               	movf	(??_TCP_Recv+2)& (0+255),w,b
  7702  004B76  11F4               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  7703  004B78  0101               	movlb	1	; () banked
  7704  004B7A  6FC2               	movwf	(_tcpHeader+6)& (0+255),b
  7705  004B7C  0100               	movlb	0	; () banked
  7706  004B7E  51DD               	movf	(??_TCP_Recv+3)& (0+255),w,b
  7707  004B80  11F5               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  7708  004B82  0101               	movlb	1	; () banked
  7709  004B84  6FC3               	movwf	(_tcpHeader+7)& (0+255),b
  7710                           
  7711                           ; BSR set to: 1
  7712                           ;tcpv4.c: 580: TCP_FiniteStateMachine();
  7713  004B86  EF55  F008         	goto	_TCP_FiniteStateMachine	;wreg free
  7714  004B8A                     __end_of_TCP_Recv:
  7715                           	opt stack 0
  7716                           tosu	equ	0xFFF
  7717                           tosh	equ	0xFFE
  7718                           tosl	equ	0xFFD
  7719                           pclath	equ	0xFFA
  7720                           tblptru	equ	0xFF8
  7721                           tblptrh	equ	0xFF7
  7722                           tblptrl	equ	0xFF6
  7723                           tablat	equ	0xFF5
  7724                           prodh	equ	0xFF4
  7725                           prodl	equ	0xFF3
  7726                           intcon	equ	0xFF2
  7727                           intcon2	equ	0xFF1
  7728                           indf0	equ	0xFEF
  7729                           postinc0	equ	0xFEE
  7730                           fsr0h	equ	0xFEA
  7731                           fsr0l	equ	0xFE9
  7732                           wreg	equ	0xFE8
  7733                           postinc1	equ	0xFE6
  7734                           fsr1h	equ	0xFE2
  7735                           fsr1l	equ	0xFE1
  7736                           indf2	equ	0xFDF
  7737                           postinc2	equ	0xFDE
  7738                           postdec2	equ	0xFDD
  7739                           fsr2h	equ	0xFDA
  7740                           fsr2l	equ	0xFD9
  7741                           status	equ	0xFD8
  7742                           
  7743 ;; *************** function _TCP_ParseTCPOptions *****************
  7744 ;; Defined at:
  7745 ;;		line 356 in file "../../TCPIP Library/source/tcpv4.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;		None
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  tcpOptionsSi    2   18[COMRAM] unsigned int 
  7750 ;;  opt             1   17[COMRAM] unsigned char 
  7751 ;;  ret             1   16[COMRAM] unsigned char 
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      unsigned char 
  7754 ;; Registers used:
  7755 ;;		wreg, status,2, status,0, cstack
  7756 ;; Tracked objects:
  7757 ;;		On entry : F/1
  7758 ;;		On exit  : C/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7762 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7765 ;;Total ram usage:        6 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:    7
  7768 ;; This function calls:
  7769 ;;		_ETH_Dump
  7770 ;;		_ETH_Read16
  7771 ;;		_ETH_Read8
  7772 ;; This function is called by:
  7773 ;;		_TCP_Recv
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text34
  7778  006BE0                     __ptext34:
  7779                           	opt stack 0
  7780  006BE0                     _TCP_ParseTCPOptions:
  7781                           	opt stack 19
  7782                           
  7783                           ; BSR set to: 1
  7784                           ;tcpv4.c: 358: uint8_t opt;
  7785                           ;tcpv4.c: 359: uint16_t tcpOptionsSize;
  7786                           ;tcpv4.c: 360: bool ret;
  7787                           ;tcpv4.c: 362: ret = 0;
  7788                           
  7789                           ;incstack = 0
  7790  006BE0  6A11               	clrf	TCP_ParseTCPOptions@ret,c
  7791                           
  7792                           ; BSR set to: 1
  7793                           ;tcpv4.c: 364: tcpOptionsSize = (uint16_t)((tcpHeader.dataOffset << 2) - sizeof(tcpHeade
      +                          r_t));
  7794  006BE2  39C8               	swapf	(_tcpHeader+12)& (0+255),w,b
  7795  006BE4  0B0F               	andlw	15
  7796  006BE6  6E0F               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  7797  006BE8  6A10               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  7798  006BEA  90D8               	bcf	status,0,c
  7799  006BEC  360F               	rlcf	??_TCP_ParseTCPOptions,f,c
  7800  006BEE  3610               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  7801  006BF0  90D8               	bcf	status,0,c
  7802  006BF2  360F               	rlcf	??_TCP_ParseTCPOptions,f,c
  7803  006BF4  3610               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  7804  006BF6  0EEC               	movlw	236
  7805  006BF8  240F               	addwf	??_TCP_ParseTCPOptions,w,c
  7806  006BFA  6E13               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
  7807  006BFC  0EFF               	movlw	255
  7808  006BFE  2010               	addwfc	??_TCP_ParseTCPOptions+1,w,c
  7809  006C00  6E14               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  7810                           
  7811                           ;tcpv4.c: 366: if (tcpOptionsSize > 0)
  7812  006C02  1013               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7813  006C04  E071               	bz	l8481
  7814                           
  7815                           ; BSR set to: 1
  7816                           ;tcpv4.c: 367: {
  7817                           ;tcpv4.c: 370: tcpMss = 536;
  7818  006C06  0E02               	movlw	2
  7819  006C08  6FA5               	movwf	(_tcpMss+1)& (0+255),b
  7820  006C0A  0E18               	movlw	24
  7821  006C0C  6FA4               	movwf	_tcpMss& (0+255),b
  7822                           
  7823                           ; BSR set to: 1
  7824                           ;tcpv4.c: 372: if(tcpHeader.syn)
  7825  006C0E  A3C9               	btfss	(_tcpHeader+13)& (0+255),1,b
  7826  006C10  D065               	goto	l8479
  7827  006C12  D05C               	goto	l8477
  7828  006C14                     l8435:
  7829                           
  7830                           ;tcpv4.c: 376: {
  7831                           ;tcpv4.c: 377: opt = ETH_Read8();
  7832  006C14  EC9E  F041         	call	_ETH_Read8	;wreg free
  7833  006C18  6E12               	movwf	TCP_ParseTCPOptions@opt,c
  7834                           
  7835                           ;tcpv4.c: 378: switch (opt)
  7836  006C1A  D051               	goto	l8475
  7837  006C1C                     l8437:
  7838                           
  7839                           ; BSR set to: 1
  7840                           ;tcpv4.c: 382: if (tcpOptionsSize)
  7841  006C1C  5013               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7842  006C1E  1014               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  7843  006C20  E008               	bz	l8443
  7844                           
  7845                           ; BSR set to: 1
  7846                           ;tcpv4.c: 383: {
  7847                           ;tcpv4.c: 385: ETH_Dump(tcpOptionsSize);
  7848  006C22  C013  F00B         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
  7849  006C26  C014  F00C         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
  7850  006C2A  ECBA  F03F         	call	_ETH_Dump	;wreg free
  7851                           
  7852                           ; BSR set to: 2
  7853                           ;tcpv4.c: 386: tcpOptionsSize = 0;
  7854  006C2E  6A13               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  7855  006C30  6A14               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  7856  006C32                     l8443:
  7857                           
  7858                           ;tcpv4.c: 387: }
  7859                           ;tcpv4.c: 388: ret = 1;
  7860  006C32  0E01               	movlw	1
  7861  006C34  6E11               	movwf	TCP_ParseTCPOptions@ret,c
  7862                           
  7863                           ;tcpv4.c: 389: break;
  7864  006C36  D04A               	goto	l8477
  7865  006C38                     l8445:
  7866                           
  7867                           ; BSR set to: 1
  7868                           ;tcpv4.c: 394: if (tcpOptionsSize >= 3)
  7869  006C38  5014               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  7870  006C3A  E103               	bnz	u11590
  7871  006C3C  0E03               	movlw	3
  7872  006C3E  5C13               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7873  006C40  E31D               	bnc	l1241
  7874  006C42                     u11590:
  7875                           
  7876                           ; BSR set to: 1
  7877                           ;tcpv4.c: 395: {
  7878                           ;tcpv4.c: 396: opt = ETH_Read8();
  7879  006C42  EC9E  F041         	call	_ETH_Read8	;wreg free
  7880  006C46  6E12               	movwf	TCP_ParseTCPOptions@opt,c
  7881                           
  7882                           ; BSR set to: 1
  7883                           ;tcpv4.c: 397: if (opt == 0x04)
  7884  006C48  0E04               	movlw	4
  7885  006C4A  1812               	xorwf	TCP_ParseTCPOptions@opt,w,c
  7886  006C4C  E114               	bnz	l1242
  7887                           
  7888                           ; BSR set to: 1
  7889                           ;tcpv4.c: 398: {
  7890                           ;tcpv4.c: 400: tcpMss = ETH_Read16();
  7891  006C4E  EC04  F040         	call	_ETH_Read16	;wreg free
  7892  006C52  C003  F1A4         	movff	?_ETH_Read16,_tcpMss
  7893  006C56  C004  F1A5         	movff	?_ETH_Read16+1,_tcpMss+1
  7894                           
  7895                           ; BSR set to: 1
  7896                           ;tcpv4.c: 402: tcpOptionsSize = tcpOptionsSize - 3;
  7897  006C5A  0EFD               	movlw	253
  7898  006C5C  2613               	addwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  7899  006C5E  0EFF               	movlw	255
  7900  006C60  2214               	addwfc	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  7901                           
  7902                           ; BSR set to: 1
  7903                           ;tcpv4.c: 405: if (tcpMss > 1460u)
  7904  006C62  0EB5               	movlw	181
  7905  006C64  5DA4               	subwf	_tcpMss& (0+255),w,b
  7906  006C66  0E05               	movlw	5
  7907  006C68  59A5               	subwfb	(_tcpMss+1)& (0+255),w,b
  7908  006C6A  E3E3               	bnc	l8443
  7909                           
  7910                           ; BSR set to: 1
  7911                           ;tcpv4.c: 406: {
  7912                           ;tcpv4.c: 407: tcpMss = 1460u;
  7913  006C6C  0E05               	movlw	5
  7914  006C6E  6FA5               	movwf	(_tcpMss+1)& (0+255),b
  7915  006C70  0EB4               	movlw	180
  7916  006C72  6FA4               	movwf	_tcpMss& (0+255),b
  7917  006C74  D7DE               	goto	l8443
  7918  006C76                     l1242:
  7919                           
  7920                           ; BSR set to: 1
  7921                           ;tcpv4.c: 412: {
  7922                           ;tcpv4.c: 414: ;
  7923                           ;tcpv4.c: 416: tcpOptionsSize = 0;
  7924  006C76  6A13               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  7925  006C78  6A14               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  7926  006C7A  D028               	goto	l8477
  7927  006C7C                     l1241:
  7928                           
  7929                           ; BSR set to: 1
  7930                           ;tcpv4.c: 419: {
  7931                           ;tcpv4.c: 421: tcpOptionsSize = 0;
  7932  006C7C  6A13               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  7933  006C7E  6A14               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  7934                           
  7935                           ;tcpv4.c: 422: ret = 0;
  7936  006C80  6A11               	clrf	TCP_ParseTCPOptions@ret,c
  7937  006C82  D024               	goto	l8477
  7938  006C84                     l8459:
  7939                           
  7940                           ; BSR set to: 1
  7941                           ;tcpv4.c: 426: ;
  7942                           ;tcpv4.c: 427: opt = ETH_Read8();
  7943  006C84  EC9E  F041         	call	_ETH_Read8	;wreg free
  7944  006C88  6E12               	movwf	TCP_ParseTCPOptions@opt,c
  7945                           
  7946                           ; BSR set to: 1
  7947                           ;tcpv4.c: 428: tcpOptionsSize--;
  7948  006C8A  0613               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  7949  006C8C  A0D8               	btfss	status,0,c
  7950  006C8E  0614               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  7951                           
  7952                           ; BSR set to: 1
  7953                           ;tcpv4.c: 430: if (opt > 1)
  7954  006C90  0E01               	movlw	1
  7955  006C92  6412               	cpfsgt	TCP_ParseTCPOptions@opt,c
  7956  006C94  D7F3               	goto	l1241
  7957                           
  7958                           ; BSR set to: 1
  7959                           ;tcpv4.c: 431: {
  7960                           ;tcpv4.c: 433: opt = opt - 2;
  7961  006C96  0EFE               	movlw	254
  7962  006C98  2612               	addwf	TCP_ParseTCPOptions@opt,f,c
  7963                           
  7964                           ;tcpv4.c: 434: if (opt <= tcpOptionsSize)
  7965  006C9A  5012               	movf	TCP_ParseTCPOptions@opt,w,c
  7966  006C9C  6E0F               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  7967  006C9E  6A10               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  7968  006CA0  500F               	movf	??_TCP_ParseTCPOptions,w,c
  7969  006CA2  5C13               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7970  006CA4  5010               	movf	??_TCP_ParseTCPOptions+1,w,c
  7971  006CA6  5814               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  7972  006CA8  E3E9               	bnc	l1241
  7973                           
  7974                           ; BSR set to: 1
  7975                           ;tcpv4.c: 435: {
  7976                           ;tcpv4.c: 437: ETH_Dump(opt);
  7977  006CAA  C012  F00B         	movff	TCP_ParseTCPOptions@opt,ETH_Dump@length
  7978  006CAE  6A0C               	clrf	ETH_Dump@length+1,c
  7979  006CB0  ECBA  F03F         	call	_ETH_Dump	;wreg free
  7980                           
  7981                           ; BSR set to: 2
  7982                           ;tcpv4.c: 438: tcpOptionsSize = tcpOptionsSize - opt;
  7983  006CB4  5012               	movf	TCP_ParseTCPOptions@opt,w,c
  7984  006CB6  5E13               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  7985  006CB8  0E00               	movlw	0
  7986  006CBA  5A14               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  7987  006CBC  D7BA               	goto	l8443
  7988  006CBE                     l8475:
  7989                           
  7990                           ; BSR set to: 1
  7991  006CBE  5012               	movf	TCP_ParseTCPOptions@opt,w,c
  7992                           
  7993                           ; Switch size 1, requested type "speed"
  7994                           ; Number of cases is 3, Range of values is 0 to 2
  7995                           ; switch strategies available:
  7996                           ; Name         Instructions Cycles
  7997                           ; simple_byte           10     6 (average)
  7998                           ;	Chosen strategy is simple_byte
  7999  006CC0  E0AD               	bz	l8437
  8000  006CC2  0A01               	xorlw	1	; case 1
  8001  006CC4  E003               	bz	l8477
  8002  006CC6  0A03               	xorlw	3	; case 2
  8003  006CC8  E0B7               	bz	l8445
  8004  006CCA  D7DC               	goto	l8459
  8005  006CCC                     l8477:
  8006  006CCC  0613               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  8007  006CCE  A0D8               	btfss	status,0,c
  8008  006CD0  0614               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  8009  006CD2  2813               	incf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  8010  006CD4  E19F               	bnz	l8435
  8011  006CD6  2814               	incf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  8012  006CD8  E009               	bz	l1253
  8013  006CDA  D79C               	goto	l8435
  8014  006CDC                     l8479:
  8015                           
  8016                           ; BSR set to: 1
  8017                           ;tcpv4.c: 459: {
  8018                           ;tcpv4.c: 460: ETH_Dump(tcpOptionsSize);
  8019  006CDC  C013  F00B         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
  8020  006CE0  C014  F00C         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
  8021  006CE4  ECBA  F03F         	call	_ETH_Dump	;wreg free
  8022  006CE8                     l8481:
  8023                           
  8024                           ;tcpv4.c: 461: ret = 1;
  8025  006CE8  0E01               	movlw	1
  8026  006CEA  6E11               	movwf	TCP_ParseTCPOptions@ret,c
  8027  006CEC                     l1253:
  8028                           
  8029                           ;tcpv4.c: 466: }
  8030                           ;tcpv4.c: 468: return ret;
  8031  006CEC  5011               	movf	TCP_ParseTCPOptions@ret,w,c
  8032  006CEE  0012               	return		;funcret
  8033  006CF0                     __end_of_TCP_ParseTCPOptions:
  8034                           	opt stack 0
  8035                           tosu	equ	0xFFF
  8036                           tosh	equ	0xFFE
  8037                           tosl	equ	0xFFD
  8038                           pclath	equ	0xFFA
  8039                           tblptru	equ	0xFF8
  8040                           tblptrh	equ	0xFF7
  8041                           tblptrl	equ	0xFF6
  8042                           tablat	equ	0xFF5
  8043                           prodh	equ	0xFF4
  8044                           prodl	equ	0xFF3
  8045                           intcon	equ	0xFF2
  8046                           intcon2	equ	0xFF1
  8047                           indf0	equ	0xFEF
  8048                           postinc0	equ	0xFEE
  8049                           fsr0h	equ	0xFEA
  8050                           fsr0l	equ	0xFE9
  8051                           wreg	equ	0xFE8
  8052                           postinc1	equ	0xFE6
  8053                           fsr1h	equ	0xFE2
  8054                           fsr1l	equ	0xFE1
  8055                           indf2	equ	0xFDF
  8056                           postinc2	equ	0xFDE
  8057                           postdec2	equ	0xFDD
  8058                           fsr2h	equ	0xFDA
  8059                           fsr2l	equ	0xFD9
  8060                           status	equ	0xFD8
  8061                           
  8062 ;; *************** function _ETH_Read8 *****************
  8063 ;; Defined at:
  8064 ;;		line 228 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;		None
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;  ret             1    2[COMRAM] unsigned char 
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  1    wreg      unsigned char 
  8071 ;; Registers used:
  8072 ;;		wreg, status,2, status,0, cstack
  8073 ;; Tracked objects:
  8074 ;;		On entry : C/1
  8075 ;;		On exit  : F/1
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8082 ;;Total ram usage:        1 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; Hardware stack levels required when called:    4
  8085 ;; This function calls:
  8086 ;;		_SPI_ExchangeByte
  8087 ;; This function is called by:
  8088 ;;		_DHCP_Handler
  8089 ;;		_TCP_ParseTCPOptions
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           	psect	text35
  8094  00833C                     __ptext35:
  8095                           	opt stack 0
  8096  00833C                     _ETH_Read8:
  8097                           	opt stack 21
  8098                           
  8099                           ;encX24j600_spi.c: 230: uint8_t ret;
  8100                           ;encX24j600_spi.c: 231: if(rxPacketStatusVector.ByteCount >= sizeof(ret))
  8101                           
  8102                           ;incstack = 0
  8103  00833C  0102               	movlb	2	; () banked
  8104  00833E  5118               	movf	_rxPacketStatusVector& (0+255),w,b
  8105  008340  1119               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
  8106  008342  E011               	bz	l608
  8107                           
  8108                           ; BSR set to: 2
  8109                           
  8110                           ;encX24j600_spi.c: 232: {
  8111                           ;encX24j600_spi.c: 233: do{LATB3 = 0;} while(0);
  8112  008344  968A               	bcf	3978,3,c	;volatile
  8113                           
  8114                           ; BSR set to: 2
  8115                           ;encX24j600_spi.c: 234: SPI_ExchangeByte(rrxdata_inst);
  8116  008346  0E2C               	movlw	44
  8117  008348  ECCC  F043         	call	_SPI_ExchangeByte
  8118                           
  8119                           ;encX24j600_spi.c: 235: ret = SPI_ExchangeByte(0);
  8120  00834C  0E00               	movlw	0
  8121  00834E  ECCC  F043         	call	_SPI_ExchangeByte
  8122  008352  6E03               	movwf	ETH_Read8@ret,c
  8123  008354  868A               	bsf	3978,3,c	;volatile
  8124                           
  8125                           ;encX24j600_spi.c: 237: rxPacketStatusVector.ByteCount -= sizeof(ret);
  8126  008356  0102               	movlb	2	; () banked
  8127  008358  0718               	decf	_rxPacketStatusVector& (0+255),f,b
  8128  00835A  A0D8               	btfss	status,0,c
  8129  00835C  0719               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
  8130                           
  8131                           ; BSR set to: 2
  8132                           ;encX24j600_spi.c: 238: ethData.error = 0;
  8133  00835E  0101               	movlb	1	; () banked
  8134  008360  9183               	bcf	_ethData& (0+255),0,b	;volatile
  8135                           
  8136                           ; BSR set to: 1
  8137                           ;encX24j600_spi.c: 239: return ret;
  8138  008362  5003               	movf	ETH_Read8@ret,w,c
  8139  008364  0012               	return	
  8140  008366                     l608:
  8141                           
  8142                           ; BSR set to: 2
  8143                           ;encX24j600_spi.c: 241: else
  8144                           ;encX24j600_spi.c: 242: {
  8145                           ;encX24j600_spi.c: 243: ethData.error = 1;
  8146  008366  0101               	movlb	1	; () banked
  8147  008368  8183               	bsf	_ethData& (0+255),0,b	;volatile
  8148                           
  8149                           ; BSR set to: 1
  8150                           
  8151                           ; BSR set to: 1
  8152                           ;encX24j600_spi.c: 244: return 0;
  8153  00836A  0C00               	retlw	0	;funcret
  8154  00836C                     __end_of_ETH_Read8:
  8155                           	opt stack 0
  8156                           tosu	equ	0xFFF
  8157                           tosh	equ	0xFFE
  8158                           tosl	equ	0xFFD
  8159                           pclath	equ	0xFFA
  8160                           tblptru	equ	0xFF8
  8161                           tblptrh	equ	0xFF7
  8162                           tblptrl	equ	0xFF6
  8163                           tablat	equ	0xFF5
  8164                           prodh	equ	0xFF4
  8165                           prodl	equ	0xFF3
  8166                           intcon	equ	0xFF2
  8167                           intcon2	equ	0xFF1
  8168                           indf0	equ	0xFEF
  8169                           postinc0	equ	0xFEE
  8170                           fsr0h	equ	0xFEA
  8171                           fsr0l	equ	0xFE9
  8172                           wreg	equ	0xFE8
  8173                           postinc1	equ	0xFE6
  8174                           fsr1h	equ	0xFE2
  8175                           fsr1l	equ	0xFE1
  8176                           indf2	equ	0xFDF
  8177                           postinc2	equ	0xFDE
  8178                           postdec2	equ	0xFDD
  8179                           fsr2h	equ	0xFDA
  8180                           fsr2l	equ	0xFD9
  8181                           status	equ	0xFD8
  8182                           
  8183 ;; *************** function _ETH_Read16 *****************
  8184 ;; Defined at:
  8185 ;;		line 252 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;		None
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;  ret             2    4[COMRAM] unsigned int 
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  2    2[COMRAM] unsigned int 
  8192 ;; Registers used:
  8193 ;;		wreg, status,2, status,0, cstack
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : F/1
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8200 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8202 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8203 ;;Total ram usage:        4 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:    4
  8206 ;; This function calls:
  8207 ;;		_SPI_ExchangeByte
  8208 ;; This function is called by:
  8209 ;;		_DHCP_Handler
  8210 ;;		_TCP_ParseTCPOptions
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text36
  8215  008008                     __ptext36:
  8216                           	opt stack 0
  8217  008008                     _ETH_Read16:
  8218                           	opt stack 21
  8219                           
  8220                           ;encX24j600_spi.c: 254: uint16_t ret;
  8221                           ;encX24j600_spi.c: 255: if(rxPacketStatusVector.ByteCount >= sizeof(ret))
  8222                           
  8223                           ; BSR set to: 1
  8224                           ;incstack = 0
  8225  008008  0102               	movlb	2	; () banked
  8226  00800A  5119               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  8227  00800C  E103               	bnz	u11070
  8228  00800E  0E02               	movlw	2
  8229  008010  5D18               	subwf	_rxPacketStatusVector& (0+255),w,b
  8230  008012  E319               	bnc	l617
  8231  008014                     u11070:
  8232                           
  8233                           ; BSR set to: 2
  8234                           
  8235                           ;encX24j600_spi.c: 256: {
  8236                           ;encX24j600_spi.c: 257: do{LATB3 = 0;} while(0);
  8237  008014  968A               	bcf	3978,3,c	;volatile
  8238                           
  8239                           ; BSR set to: 2
  8240                           ;encX24j600_spi.c: 258: SPI_ExchangeByte(rrxdata_inst);
  8241  008016  0E2C               	movlw	44
  8242  008018  ECCC  F043         	call	_SPI_ExchangeByte
  8243                           
  8244                           ;encX24j600_spi.c: 259: ((uint8_t *)&ret)[1] = SPI_ExchangeByte(0);
  8245  00801C  0E00               	movlw	0
  8246  00801E  ECCC  F043         	call	_SPI_ExchangeByte
  8247  008022  6E06               	movwf	ETH_Read16@ret+1,c
  8248                           
  8249                           ;encX24j600_spi.c: 260: ((uint8_t *)&ret)[0] = SPI_ExchangeByte(0);
  8250  008024  0E00               	movlw	0
  8251  008026  ECCC  F043         	call	_SPI_ExchangeByte
  8252  00802A  6E05               	movwf	ETH_Read16@ret,c
  8253  00802C  868A               	bsf	3978,3,c	;volatile
  8254                           
  8255                           ;encX24j600_spi.c: 262: rxPacketStatusVector.ByteCount -= sizeof(ret);
  8256  00802E  0E02               	movlw	2
  8257  008030  0102               	movlb	2	; () banked
  8258  008032  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
  8259  008034  0E00               	movlw	0
  8260  008036  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  8261                           
  8262                           ; BSR set to: 2
  8263                           ;encX24j600_spi.c: 263: ethData.error = 0;
  8264  008038  0101               	movlb	1	; () banked
  8265  00803A  9183               	bcf	_ethData& (0+255),0,b	;volatile
  8266                           
  8267                           ; BSR set to: 1
  8268                           ;encX24j600_spi.c: 264: return ret;
  8269  00803C  C005  F003         	movff	ETH_Read16@ret,?_ETH_Read16
  8270  008040  C006  F004         	movff	ETH_Read16@ret+1,?_ETH_Read16+1
  8271  008044  0C00               	retlw	0
  8272  008046                     l617:
  8273                           
  8274                           ; BSR set to: 2
  8275                           ;encX24j600_spi.c: 266: else
  8276                           ;encX24j600_spi.c: 267: {
  8277                           ;encX24j600_spi.c: 268: ethData.error = 1;
  8278  008046  0101               	movlb	1	; () banked
  8279  008048  8183               	bsf	_ethData& (0+255),0,b	;volatile
  8280                           
  8281                           ;encX24j600_spi.c: 269: return 0;
  8282  00804A  6A03               	clrf	?_ETH_Read16,c
  8283  00804C  6A04               	clrf	?_ETH_Read16+1,c
  8284                           
  8285                           ; BSR set to: 1
  8286  00804E  0012               	return		;funcret
  8287  008050                     __end_of_ETH_Read16:
  8288                           	opt stack 0
  8289                           tosu	equ	0xFFF
  8290                           tosh	equ	0xFFE
  8291                           tosl	equ	0xFFD
  8292                           pclath	equ	0xFFA
  8293                           tblptru	equ	0xFF8
  8294                           tblptrh	equ	0xFF7
  8295                           tblptrl	equ	0xFF6
  8296                           tablat	equ	0xFF5
  8297                           prodh	equ	0xFF4
  8298                           prodl	equ	0xFF3
  8299                           intcon	equ	0xFF2
  8300                           intcon2	equ	0xFF1
  8301                           indf0	equ	0xFEF
  8302                           postinc0	equ	0xFEE
  8303                           fsr0h	equ	0xFEA
  8304                           fsr0l	equ	0xFE9
  8305                           wreg	equ	0xFE8
  8306                           postinc1	equ	0xFE6
  8307                           fsr1h	equ	0xFE2
  8308                           fsr1l	equ	0xFE1
  8309                           indf2	equ	0xFDF
  8310                           postinc2	equ	0xFDE
  8311                           postdec2	equ	0xFDD
  8312                           fsr2h	equ	0xFDA
  8313                           fsr2l	equ	0xFD9
  8314                           status	equ	0xFD8
  8315                           
  8316 ;; *************** function _ETH_Dump *****************
  8317 ;; Defined at:
  8318 ;;		line 324 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  8319 ;; Parameters:    Size  Location     Type
  8320 ;;  length          2   10[COMRAM] unsigned int 
  8321 ;; Auto vars:     Size  Location     Type
  8322 ;;  newRXTail       2   12[COMRAM] unsigned int 
  8323 ;; Return value:  Size  Location     Type
  8324 ;;		None               void
  8325 ;; Registers used:
  8326 ;;		wreg, status,2, status,0, cstack
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/0
  8329 ;;		On exit  : F/2
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;Total ram usage:        4 bytes
  8337 ;; Hardware stack levels used:    1
  8338 ;; Hardware stack levels required when called:    6
  8339 ;; This function calls:
  8340 ;;		_ENCx24_Read
  8341 ;;		_ENCx24_Write
  8342 ;; This function is called by:
  8343 ;;		_DHCP_Handler
  8344 ;;		_IPV4_Packet
  8345 ;;		_TCP_ParseTCPOptions
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           	psect	text37
  8350  007F74                     __ptext37:
  8351                           	opt stack 0
  8352  007F74                     _ETH_Dump:
  8353                           	opt stack 19
  8354                           
  8355                           ;encX24J600_driver.c: 326: uint16_t newRXTail;
  8356                           ;encX24J600_driver.c: 327: length = (rxPacketStatusVector.ByteCount <= length) ? rxPacke
      +                          tStatusVector.ByteCount : length;
  8357                           
  8358                           ; BSR set to: 1
  8359                           ;incstack = 0
  8360  007F74  0102               	movlb	2	; () banked
  8361  007F76  5118               	movf	_rxPacketStatusVector& (0+255),w,b
  8362  007F78  5C0B               	subwf	ETH_Dump@length,w,c
  8363  007F7A  5119               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  8364  007F7C  580C               	subwfb	ETH_Dump@length+1,w,c
  8365  007F7E  E304               	bnc	l8123
  8366                           
  8367                           ; BSR set to: 2
  8368  007F80  C218  F00B         	movff	_rxPacketStatusVector,ETH_Dump@length
  8369  007F84  C219  F00C         	movff	_rxPacketStatusVector+1,ETH_Dump@length+1
  8370  007F88                     l8123:
  8371                           
  8372                           ; BSR set to: 2
  8373                           ;encX24J600_driver.c: 328: if(length)
  8374  007F88  500B               	movf	ETH_Dump@length,w,c
  8375  007F8A  100C               	iorwf	ETH_Dump@length+1,w,c
  8376  007F8C  E012               	bz	l473
  8377                           
  8378                           ; BSR set to: 2
  8379                           ;encX24J600_driver.c: 329: {
  8380                           ;encX24J600_driver.c: 330: newRXTail = ENCx24_Read(XJ600_ERXRDPTL);
  8381  007F8E  0E8A               	movlw	138
  8382  007F90  ECDF  F03F         	call	_ENCx24_Read
  8383  007F94  C005  F00D         	movff	?_ENCx24_Read,ETH_Dump@newRXTail
  8384  007F98  C006  F00E         	movff	?_ENCx24_Read+1,ETH_Dump@newRXTail+1
  8385                           
  8386                           ;encX24J600_driver.c: 331: newRXTail += length;
  8387  007F9C  500B               	movf	ETH_Dump@length,w,c
  8388  007F9E  260D               	addwf	ETH_Dump@newRXTail,f,c
  8389  007FA0  500C               	movf	ETH_Dump@length+1,w,c
  8390  007FA2  220E               	addwfc	ETH_Dump@newRXTail+1,f,c
  8391                           
  8392                           ;encX24J600_driver.c: 333: ENCx24_Write(XJ600_ERXRDPTL, newRXTail);
  8393  007FA4  C00D  F005         	movff	ETH_Dump@newRXTail,ENCx24_Write@data
  8394  007FA8  C00E  F006         	movff	ETH_Dump@newRXTail+1,ENCx24_Write@data+1
  8395  007FAC  0E8A               	movlw	138
  8396  007FAE  EC91  F040         	call	_ENCx24_Write
  8397  007FB2                     l473:
  8398                           
  8399                           ;encX24J600_driver.c: 334: }
  8400                           ;encX24J600_driver.c: 335: rxPacketStatusVector.ByteCount -= length;
  8401  007FB2  500B               	movf	ETH_Dump@length,w,c
  8402  007FB4  0102               	movlb	2	; () banked
  8403  007FB6  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
  8404  007FB8  500C               	movf	ETH_Dump@length+1,w,c
  8405  007FBA  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  8406                           
  8407                           ; BSR set to: 2
  8408  007FBC  0012               	return		;funcret
  8409  007FBE                     __end_of_ETH_Dump:
  8410                           	opt stack 0
  8411                           tosu	equ	0xFFF
  8412                           tosh	equ	0xFFE
  8413                           tosl	equ	0xFFD
  8414                           pclath	equ	0xFFA
  8415                           tblptru	equ	0xFF8
  8416                           tblptrh	equ	0xFF7
  8417                           tblptrl	equ	0xFF6
  8418                           tablat	equ	0xFF5
  8419                           prodh	equ	0xFF4
  8420                           prodl	equ	0xFF3
  8421                           intcon	equ	0xFF2
  8422                           intcon2	equ	0xFF1
  8423                           indf0	equ	0xFEF
  8424                           postinc0	equ	0xFEE
  8425                           fsr0h	equ	0xFEA
  8426                           fsr0l	equ	0xFE9
  8427                           wreg	equ	0xFE8
  8428                           postinc1	equ	0xFE6
  8429                           fsr1h	equ	0xFE2
  8430                           fsr1l	equ	0xFE1
  8431                           indf2	equ	0xFDF
  8432                           postinc2	equ	0xFDE
  8433                           postdec2	equ	0xFDD
  8434                           fsr2h	equ	0xFDA
  8435                           fsr2l	equ	0xFD9
  8436                           status	equ	0xFD8
  8437                           
  8438 ;; *************** function _IPV4_PseudoHeaderChecksum *****************
  8439 ;; Defined at:
  8440 ;;		line 83 in file "../../TCPIP Library/source/ipv4.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;  payloadLen      2    1[COMRAM] unsigned int 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;  tmp            12   13[COMRAM] struct .
  8445 ;;  cksm            4    9[COMRAM] unsigned long 
  8446 ;;  len             1    8[COMRAM] unsigned char 
  8447 ;;  v               1    7[COMRAM] PTR unsigned int 
  8448 ;;		 -> IPV4_PseudoHeaderChecksum@tmp(12), 
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  2    1[COMRAM] unsigned int 
  8451 ;; Registers used:
  8452 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8453 ;; Tracked objects:
  8454 ;;		On entry : F/0
  8455 ;;		On exit  : F/0
  8456 ;;		Unchanged: F/0
  8457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8459 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8460 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8461 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;Total ram usage:       24 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:    3
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_IPV4_Packet
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           	psect	text38
  8473  00751A                     __ptext38:
  8474                           	opt stack 0
  8475  00751A                     _IPV4_PseudoHeaderChecksum:
  8476                           	opt stack 24
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;ipv4.c: 85: ipv4_pseudo_header_t tmp;
  8480                           ;ipv4.c: 86: uint8_t len;
  8481                           ;ipv4.c: 87: uint32_t cksm = 0;
  8482                           
  8483                           ; BSR set to: 2
  8484                           ;incstack = 0
  8485  00751A  6A0A               	clrf	IPV4_PseudoHeaderChecksum@cksm,c
  8486  00751C  6A0B               	clrf	IPV4_PseudoHeaderChecksum@cksm+1,c
  8487  00751E  6A0C               	clrf	IPV4_PseudoHeaderChecksum@cksm+2,c
  8488  007520  6A0D               	clrf	IPV4_PseudoHeaderChecksum@cksm+3,c
  8489                           
  8490                           ;ipv4.c: 88: uint16_t *v;
  8491                           ;ipv4.c: 90: tmp.srcIpAddress = ipv4Header.srcIpAddress;
  8492  007522  C1B4  F00E         	movff	_ipv4Header+12,IPV4_PseudoHeaderChecksum@tmp
  8493  007526  C1B5  F00F         	movff	_ipv4Header+13,IPV4_PseudoHeaderChecksum@tmp+1
  8494  00752A  C1B6  F010         	movff	_ipv4Header+14,IPV4_PseudoHeaderChecksum@tmp+2
  8495  00752E  C1B7  F011         	movff	_ipv4Header+15,IPV4_PseudoHeaderChecksum@tmp+3
  8496                           
  8497                           ;ipv4.c: 91: tmp.dstIpAddress = ipv4Header.dstIpAddress;
  8498  007532  C1B8  F012         	movff	_ipv4Header+16,IPV4_PseudoHeaderChecksum@tmp+4
  8499  007536  C1B9  F013         	movff	_ipv4Header+17,IPV4_PseudoHeaderChecksum@tmp+5
  8500  00753A  C1BA  F014         	movff	_ipv4Header+18,IPV4_PseudoHeaderChecksum@tmp+6
  8501  00753E  C1BB  F015         	movff	_ipv4Header+19,IPV4_PseudoHeaderChecksum@tmp+7
  8502                           
  8503                           ;ipv4.c: 92: tmp.protocol = ipv4Header.protocol;
  8504  007542  C1B1  F016         	movff	_ipv4Header+9,IPV4_PseudoHeaderChecksum@tmp+8
  8505                           
  8506                           ;ipv4.c: 93: tmp.z = 0;
  8507  007546  6A17               	clrf	IPV4_PseudoHeaderChecksum@tmp+9,c
  8508                           
  8509                           ;ipv4.c: 94: tmp.length = payloadLen;
  8510  007548  C002  F018         	movff	IPV4_PseudoHeaderChecksum@payloadLen,IPV4_PseudoHeaderChecksum@tmp+10
  8511  00754C  C003  F019         	movff	IPV4_PseudoHeaderChecksum@payloadLen+1,IPV4_PseudoHeaderChecksum@tmp+11
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;ipv4.c: 96: len = sizeof(tmp);
  8515  007550  0E0C               	movlw	12
  8516  007552  6E09               	movwf	IPV4_PseudoHeaderChecksum@len,c
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;ipv4.c: 97: len = len >> 1;
  8520  007554  90D8               	bcf	status,0,c
  8521  007556  3209               	rrcf	IPV4_PseudoHeaderChecksum@len,f,c
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;ipv4.c: 99: v = (uint16_t *) &tmp;
  8525  007558  0E0E               	movlw	low IPV4_PseudoHeaderChecksum@tmp
  8526  00755A  6E08               	movwf	IPV4_PseudoHeaderChecksum@v,c
  8527                           
  8528                           ;ipv4.c: 101: while(len)
  8529  00755C  D011               	goto	l8955
  8530  00755E                     l8949:
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;ipv4.c: 102: {
  8534                           ;ipv4.c: 103: cksm += *v;
  8535  00755E  5008               	movf	IPV4_PseudoHeaderChecksum@v,w,c
  8536  007560  6ED9               	movwf	fsr2l,c
  8537  007562  6ADA               	clrf	fsr2h,c
  8538  007564  CFDE F004          	movff	postinc2,??_IPV4_PseudoHeaderChecksum
  8539  007568  CFDD F005          	movff	postdec2,??_IPV4_PseudoHeaderChecksum+1
  8540  00756C  5004               	movf	??_IPV4_PseudoHeaderChecksum,w,c
  8541  00756E  260A               	addwf	IPV4_PseudoHeaderChecksum@cksm,f,c
  8542  007570  5005               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
  8543  007572  220B               	addwfc	IPV4_PseudoHeaderChecksum@cksm+1,f,c
  8544  007574  0E00               	movlw	0
  8545  007576  220C               	addwfc	IPV4_PseudoHeaderChecksum@cksm+2,f,c
  8546  007578  220D               	addwfc	IPV4_PseudoHeaderChecksum@cksm+3,f,c
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;ipv4.c: 104: len--;
  8550  00757A  0609               	decf	IPV4_PseudoHeaderChecksum@len,f,c
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;ipv4.c: 105: v++;
  8554  00757C  0E02               	movlw	2
  8555  00757E  2608               	addwf	IPV4_PseudoHeaderChecksum@v,f,c
  8556  007580                     l8955:
  8557                           
  8558                           ; BSR set to: 0
  8559  007580  5009               	movf	IPV4_PseudoHeaderChecksum@len,w,c
  8560  007582  E1ED               	bnz	l8949
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;ipv4.c: 106: }
  8564                           ;ipv4.c: 109: cksm = (cksm & 0x0FFFF) + (cksm>>16);
  8565  007584  500A               	movf	IPV4_PseudoHeaderChecksum@cksm,w,c
  8566  007586  6E04               	movwf	??_IPV4_PseudoHeaderChecksum& (0+255),c
  8567  007588  500B               	movf	IPV4_PseudoHeaderChecksum@cksm+1,w,c
  8568  00758A  6E05               	movwf	(??_IPV4_PseudoHeaderChecksum+1)& (0+255),c
  8569  00758C  6A06               	clrf	(??_IPV4_PseudoHeaderChecksum+2)& (0+255),c
  8570  00758E  6A07               	clrf	(??_IPV4_PseudoHeaderChecksum+3)& (0+255),c
  8571  007590  500C               	movf	IPV4_PseudoHeaderChecksum@cksm+2,w,c
  8572  007592  2404               	addwf	??_IPV4_PseudoHeaderChecksum,w,c
  8573  007594  6E0A               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
  8574  007596  500D               	movf	IPV4_PseudoHeaderChecksum@cksm+3,w,c
  8575  007598  2005               	addwfc	??_IPV4_PseudoHeaderChecksum+1,w,c
  8576  00759A  6E0B               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
  8577  00759C  0E00               	movlw	0
  8578  00759E  2006               	addwfc	??_IPV4_PseudoHeaderChecksum+2,w,c
  8579  0075A0  6E0C               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
  8580  0075A2  0E00               	movlw	0
  8581  0075A4  2007               	addwfc	??_IPV4_PseudoHeaderChecksum+3,w,c
  8582  0075A6  6E0D               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;ipv4.c: 112: return cksm;
  8586  0075A8  C00A  F002         	movff	IPV4_PseudoHeaderChecksum@cksm,?_IPV4_PseudoHeaderChecksum
  8587  0075AC  C00B  F003         	movff	IPV4_PseudoHeaderChecksum@cksm+1,?_IPV4_PseudoHeaderChecksum+1
  8588                           
  8589                           ; BSR set to: 0
  8590  0075B0  0012               	return		;funcret
  8591  0075B2                     __end_of_IPV4_PseudoHeaderChecksum:
  8592                           	opt stack 0
  8593                           tosu	equ	0xFFF
  8594                           tosh	equ	0xFFE
  8595                           tosl	equ	0xFFD
  8596                           pclath	equ	0xFFA
  8597                           tblptru	equ	0xFF8
  8598                           tblptrh	equ	0xFF7
  8599                           tblptrl	equ	0xFF6
  8600                           tablat	equ	0xFF5
  8601                           prodh	equ	0xFF4
  8602                           prodl	equ	0xFF3
  8603                           intcon	equ	0xFF2
  8604                           intcon2	equ	0xFF1
  8605                           indf0	equ	0xFEF
  8606                           postinc0	equ	0xFEE
  8607                           fsr0h	equ	0xFEA
  8608                           fsr0l	equ	0xFE9
  8609                           wreg	equ	0xFE8
  8610                           postinc1	equ	0xFE6
  8611                           fsr1h	equ	0xFE2
  8612                           fsr1l	equ	0xFE1
  8613                           indf2	equ	0xFDF
  8614                           postinc2	equ	0xFDE
  8615                           postdec2	equ	0xFDD
  8616                           fsr2h	equ	0xFDA
  8617                           fsr2l	equ	0xFD9
  8618                           status	equ	0xFD8
  8619                           
  8620 ;; *************** function _ICMP_Receive *****************
  8621 ;; Defined at:
  8622 ;;		line 56 in file "../../TCPIP Library/source/icmp.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  ipv4Hdr         2   89[COMRAM] PTR struct .
  8625 ;;		 -> ipv4Header(20), 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  icmpHdr         8   26[BANK0 ] struct .
  8628 ;;  ret             1    0        enum E366
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      enum E366
  8631 ;; Registers used:
  8632 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8633 ;; Tracked objects:
  8634 ;;		On entry : F/0
  8635 ;;		On exit  : F/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8639 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8640 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8641 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8642 ;;Total ram usage:       15 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:   10
  8645 ;; This function calls:
  8646 ;;		_ETH_ReadBlock
  8647 ;;		_ETH_SaveRDPT
  8648 ;;		_ICMP_EchoReply
  8649 ;; This function is called by:
  8650 ;;		_IPV4_Packet
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text39
  8655  008050                     __ptext39:
  8656                           	opt stack 0
  8657  008050                     _ICMP_Receive:
  8658                           	opt stack 17
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;icmp.c: 60: ETH_ReadBlock((char *)&icmpHdr, sizeof(icmpHeader_t));
  8662                           
  8663                           ; BSR set to: 0
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;incstack = 0
  8667  008050  0E7A               	movlw	low ICMP_Receive@icmpHdr
  8668  008052  6E03               	movwf	ETH_ReadBlock@data,c
  8669  008054  6A04               	clrf	ETH_ReadBlock@data+1,c
  8670  008056  6A06               	clrf	ETH_ReadBlock@length+1,c
  8671  008058  0E08               	movlw	8
  8672  00805A  6E05               	movwf	ETH_ReadBlock@length,c
  8673  00805C  ECD9  F03A         	call	_ETH_ReadBlock	;wreg free
  8674                           
  8675                           ; BSR set to: 1
  8676                           ;icmp.c: 61: ETH_SaveRDPT();
  8677  008060  ECAE  F043         	call	_ETH_SaveRDPT	;wreg free
  8678                           
  8679                           ;icmp.c: 63: switch(((((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0x00FF) << 8)))
  8680  008064  D007               	goto	l8935
  8681  008066                     l8931:
  8682                           
  8683                           ; BSR set to: 0
  8684  008066  C05A  F058         	movff	ICMP_Receive@ipv4Hdr,ICMP_EchoReply@ipv4Hdr
  8685  00806A  C05B  F059         	movff	ICMP_Receive@ipv4Hdr+1,ICMP_EchoReply@ipv4Hdr+1
  8686  00806E  0E7A               	movlw	ICMP_Receive@icmpHdr& (0+255)
  8687  008070  EF45  F033         	goto	_ICMP_EchoReply
  8688  008074                     l8935:
  8689  008074  0100               	movlb	0	; () banked
  8690  008076  517A               	movf	ICMP_Receive@icmpHdr& (0+255),w,b
  8691  008078  6F76               	movwf	(??_ICMP_Receive+1)& (0+255),b
  8692  00807A  6B75               	clrf	??_ICMP_Receive& (0+255),b
  8693  00807C  517B               	movf	(ICMP_Receive@icmpHdr+1)& (0+255),w,b
  8694  00807E  6F77               	movwf	(??_ICMP_Receive+2)& (0+255),b
  8695  008080  6B78               	clrf	(??_ICMP_Receive+3)& (0+255),b
  8696  008082  5175               	movf	??_ICMP_Receive& (0+255),w,b
  8697  008084  1377               	iorwf	(??_ICMP_Receive+2)& (0+255),f,b
  8698  008086  5176               	movf	(??_ICMP_Receive+1)& (0+255),w,b
  8699  008088  1378               	iorwf	(??_ICMP_Receive+3)& (0+255),f,b
  8700                           
  8701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8702                           ; Switch size 1, requested type "speed"
  8703                           ; Number of cases is 1, Range of values is 8 to 8
  8704                           ; switch strategies available:
  8705                           ; Name         Instructions Cycles
  8706                           ; simple_byte            4     3 (average)
  8707                           ;	Chosen strategy is simple_byte
  8708  00808A  5178               	movf	(??_ICMP_Receive+3)& (0+255),w,b
  8709  00808C  0A08               	xorlw	8	; case 8
  8710  00808E  A4D8               	btfss	status,2,c
  8711  008090  0012               	return	
  8712                           
  8713                           ; BSR set to: 0
  8714                           ; Switch size 1, requested type "speed"
  8715                           ; Number of cases is 1, Range of values is 0 to 0
  8716                           ; switch strategies available:
  8717                           ; Name         Instructions Cycles
  8718                           ; simple_byte            4     3 (average)
  8719                           ;	Chosen strategy is simple_byte
  8720  008092  5177               	movf	(??_ICMP_Receive+2)& (0+255),w,b
  8721  008094  E0E8               	bz	l8931
  8722                           
  8723                           ; BSR set to: 0
  8724  008096  0012               	return		;funcret
  8725  008098                     __end_of_ICMP_Receive:
  8726                           	opt stack 0
  8727                           tosu	equ	0xFFF
  8728                           tosh	equ	0xFFE
  8729                           tosl	equ	0xFFD
  8730                           pclath	equ	0xFFA
  8731                           tblptru	equ	0xFF8
  8732                           tblptrh	equ	0xFF7
  8733                           tblptrl	equ	0xFF6
  8734                           tablat	equ	0xFF5
  8735                           prodh	equ	0xFF4
  8736                           prodl	equ	0xFF3
  8737                           intcon	equ	0xFF2
  8738                           intcon2	equ	0xFF1
  8739                           indf0	equ	0xFEF
  8740                           postinc0	equ	0xFEE
  8741                           fsr0h	equ	0xFEA
  8742                           fsr0l	equ	0xFE9
  8743                           wreg	equ	0xFE8
  8744                           postinc1	equ	0xFE6
  8745                           fsr1h	equ	0xFE2
  8746                           fsr1l	equ	0xFE1
  8747                           indf2	equ	0xFDF
  8748                           postinc2	equ	0xFDE
  8749                           postdec2	equ	0xFDD
  8750                           fsr2h	equ	0xFDA
  8751                           fsr2l	equ	0xFD9
  8752                           status	equ	0xFD8
  8753                           
  8754 ;; *************** function _ICMP_EchoReply *****************
  8755 ;; Defined at:
  8756 ;;		line 86 in file "../../TCPIP Library/source/icmp.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;  icmpHdr         1    wreg     PTR struct .
  8759 ;;		 -> ICMP_Receive@icmpHdr(8), 
  8760 ;;  ipv4Hdr         2   87[COMRAM] PTR struct .
  8761 ;;		 -> ipv4Header(20), 
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;  icmpHdr         1   20[BANK0 ] PTR struct .
  8764 ;;		 -> ICMP_Receive@icmpHdr(8), 
  8765 ;;  ipv4PayloadL    2   17[BANK0 ] unsigned int 
  8766 ;;  icmp_cksm_st    2    0        unsigned int 
  8767 ;;  cksm            2   15[BANK0 ] unsigned int 
  8768 ;;  ret             1   19[BANK0 ] enum E366
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      enum E366
  8771 ;; Registers used:
  8772 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8773 ;; Tracked objects:
  8774 ;;		On entry : F/0
  8775 ;;		On exit  : F/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8779 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8780 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8781 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;Total ram usage:       16 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; Hardware stack levels required when called:    9
  8785 ;; This function calls:
  8786 ;;		_ETH_Copy
  8787 ;;		_ETH_Insert
  8788 ;;		_ETH_SaveRDPT
  8789 ;;		_ETH_TxComputeChecksum
  8790 ;;		_ETH_Write16
  8791 ;;		_IPV4_Send
  8792 ;;		_IPv4_Start
  8793 ;; This function is called by:
  8794 ;;		_ICMP_Receive
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           	psect	text40
  8799  00668A                     __ptext40:
  8800                           	opt stack 0
  8801  00668A                     _ICMP_EchoReply:
  8802                           	opt stack 17
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;incstack = 0
  8806                           ;ICMP_EchoReply@icmpHdr stored from wreg
  8807  00668A  6F74               	movwf	ICMP_EchoReply@icmpHdr& (0+255),b
  8808                           
  8809                           ;icmp.c: 89: error_msg ret = ERROR;
  8810  00668C  0100               	movlb	0	; () banked
  8811  00668E  6B73               	clrf	ICMP_EchoReply@ret& (0+255),b
  8812                           
  8813                           ; BSR set to: 0
  8814                           ;icmp.c: 91: ret = IPv4_Start(ipv4Hdr->srcIpAddress, ipv4Hdr->protocol);
  8815  006690  EE20 F00C          	lfsr	2,12
  8816  006694  5058               	movf	ICMP_EchoReply@ipv4Hdr,w,c
  8817  006696  26D9               	addwf	fsr2l,f,c
  8818  006698  5059               	movf	ICMP_EchoReply@ipv4Hdr+1,w,c
  8819  00669A  22DA               	addwfc	fsr2h,f,c
  8820  00669C  CFDE F04B          	movff	postinc2,IPv4_Start@destAddress
  8821  0066A0  CFDE F04C          	movff	postinc2,IPv4_Start@destAddress+1
  8822  0066A4  CFDE F04D          	movff	postinc2,IPv4_Start@destAddress+2
  8823  0066A8  CFDE F04E          	movff	postinc2,IPv4_Start@destAddress+3
  8824  0066AC  EE20 F009          	lfsr	2,9
  8825  0066B0  5058               	movf	ICMP_EchoReply@ipv4Hdr,w,c
  8826  0066B2  26D9               	addwf	fsr2l,f,c
  8827  0066B4  5059               	movf	ICMP_EchoReply@ipv4Hdr+1,w,c
  8828  0066B6  22DA               	addwfc	fsr2h,f,c
  8829  0066B8  50DF               	movf	indf2,w,c
  8830  0066BA  6E4F               	movwf	IPv4_Start@protocol,c
  8831  0066BC  EC0F  F034         	call	_IPv4_Start	;wreg free
  8832  0066C0  6F73               	movwf	ICMP_EchoReply@ret& (0+255),b
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;icmp.c: 92: if(ret == SUCCESS)
  8836  0066C2  0573               	decf	ICMP_EchoReply@ret& (0+255),w,b
  8837  0066C4  E001 D0A9          	bnz	l8421
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;icmp.c: 93: {
  8841                           ;icmp.c: 94: uint16_t icmp_cksm_start;
  8842                           ;icmp.c: 95: uint16_t ipv4PayloadLength = ipv4Hdr->length - sizeof(ipv4Header_t);
  8843  0066C8  EE20 F002          	lfsr	2,2
  8844  0066CC  5058               	movf	ICMP_EchoReply@ipv4Hdr,w,c
  8845  0066CE  26D9               	addwf	fsr2l,f,c
  8846  0066D0  5059               	movf	ICMP_EchoReply@ipv4Hdr+1,w,c
  8847  0066D2  22DA               	addwfc	fsr2h,f,c
  8848  0066D4  CFDE F067          	movff	postinc2,??_ICMP_EchoReply
  8849  0066D8  CFDD F068          	movff	postdec2,??_ICMP_EchoReply+1
  8850  0066DC  0EEC               	movlw	236
  8851  0066DE  2567               	addwf	??_ICMP_EchoReply& (0+255),w,b
  8852  0066E0  6F71               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
  8853  0066E2  0EFF               	movlw	255
  8854  0066E4  2168               	addwfc	(??_ICMP_EchoReply+1)& (0+255),w,b
  8855  0066E6  6F72               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
  8856                           
  8857                           ;icmp.c: 97: ipv4PayloadLength = ipv4Hdr->length - (uint16_t)(ipv4Hdr->ihl << 2);
  8858  0066E8  C058  FFD9         	movff	ICMP_EchoReply@ipv4Hdr,fsr2l
  8859  0066EC  C059  FFDA         	movff	ICMP_EchoReply@ipv4Hdr+1,fsr2h
  8860  0066F0  50DF               	movf	indf2,w,c
  8861  0066F2  0B0F               	andlw	15
  8862  0066F4  6F67               	movwf	??_ICMP_EchoReply& (0+255),b
  8863  0066F6  6B68               	clrf	(??_ICMP_EchoReply+1)& (0+255),b
  8864  0066F8  90D8               	bcf	status,0,c
  8865  0066FA  3767               	rlcf	??_ICMP_EchoReply& (0+255),f,b
  8866  0066FC  3768               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
  8867  0066FE  90D8               	bcf	status,0,c
  8868  006700  3767               	rlcf	??_ICMP_EchoReply& (0+255),f,b
  8869  006702  3768               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
  8870  006704  EE20 F002          	lfsr	2,2
  8871  006708  5058               	movf	ICMP_EchoReply@ipv4Hdr,w,c
  8872  00670A  26D9               	addwf	fsr2l,f,c
  8873  00670C  5059               	movf	ICMP_EchoReply@ipv4Hdr+1,w,c
  8874  00670E  22DA               	addwfc	fsr2h,f,c
  8875  006710  CFDE F069          	movff	postinc2,??_ICMP_EchoReply+2
  8876  006714  CFDD F06A          	movff	postdec2,??_ICMP_EchoReply+3
  8877  006718  5167               	movf	??_ICMP_EchoReply& (0+255),w,b
  8878  00671A  5D69               	subwf	(??_ICMP_EchoReply+2)& (0+255),w,b
  8879  00671C  6F71               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
  8880  00671E  5168               	movf	(??_ICMP_EchoReply+1)& (0+255),w,b
  8881  006720  596A               	subwfb	(??_ICMP_EchoReply+3)& (0+255),w,b
  8882  006722  6F72               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;icmp.c: 99: ETH_Write16(ECHO_REPLY);
  8886  006724  6A04               	clrf	ETH_Write16@data+1,c
  8887  006726  6A03               	clrf	ETH_Write16@data,c
  8888  006728  ECD4  F042         	call	_ETH_Write16	;wreg free
  8889                           
  8890                           ;icmp.c: 100: ETH_Write16(0);
  8891  00672C  6A04               	clrf	ETH_Write16@data+1,c
  8892  00672E  6A03               	clrf	ETH_Write16@data,c
  8893  006730  ECD4  F042         	call	_ETH_Write16	;wreg free
  8894                           
  8895                           ;icmp.c: 101: ETH_Write16(((((uint16_t)icmpHdr->identifier & (uint16_t)0xFF00) >> 8) | (
      +                          ((uint16_t)icmpHdr->identifier & (uint16_t)0x00FF) << 8)));
  8896  006734  0100               	movlb	0	; () banked
  8897  006736  5174               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
  8898  006738  6ED9               	movwf	fsr2l,c
  8899  00673A  6ADA               	clrf	fsr2h,c
  8900  00673C  0E04               	movlw	4
  8901  00673E  26D9               	addwf	fsr2l,f,c
  8902  006740  CFDE F067          	movff	postinc2,??_ICMP_EchoReply
  8903  006744  CFDD F068          	movff	postdec2,??_ICMP_EchoReply+1
  8904  006748  5167               	movf	??_ICMP_EchoReply& (0+255),w,b
  8905  00674A  6F6A               	movwf	(??_ICMP_EchoReply+3)& (0+255),b
  8906  00674C  6B69               	clrf	(??_ICMP_EchoReply+2)& (0+255),b
  8907  00674E  5174               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
  8908  006750  6ED9               	movwf	fsr2l,c
  8909  006752  6ADA               	clrf	fsr2h,c
  8910  006754  0E04               	movlw	4
  8911  006756  26D9               	addwf	fsr2l,f,c
  8912  006758  CFDE F06B          	movff	postinc2,??_ICMP_EchoReply+4
  8913  00675C  CFDD F06C          	movff	postdec2,??_ICMP_EchoReply+5
  8914  006760  C06C  F06B         	movff	??_ICMP_EchoReply+5,??_ICMP_EchoReply+4
  8915  006764  6B6C               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  8916  006766  6B6C               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  8917  006768  5169               	movf	(??_ICMP_EchoReply+2)& (0+255),w,b
  8918  00676A  116B               	iorwf	(??_ICMP_EchoReply+4)& (0+255),w,b
  8919  00676C  6E03               	movwf	ETH_Write16@data,c
  8920  00676E  516A               	movf	(??_ICMP_EchoReply+3)& (0+255),w,b
  8921  006770  116C               	iorwf	(??_ICMP_EchoReply+5)& (0+255),w,b
  8922  006772  6E04               	movwf	ETH_Write16@data+1,c
  8923  006774  ECD4  F042         	call	_ETH_Write16	;wreg free
  8924                           
  8925                           ;icmp.c: 102: ETH_Write16(((((uint16_t)icmpHdr->sequence & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)icmpHdr->sequence & (uint16_t)0x00FF) << 8)));
  8926  006778  0100               	movlb	0	; () banked
  8927  00677A  5174               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
  8928  00677C  6ED9               	movwf	fsr2l,c
  8929  00677E  6ADA               	clrf	fsr2h,c
  8930  006780  0E06               	movlw	6
  8931  006782  26D9               	addwf	fsr2l,f,c
  8932  006784  CFDE F067          	movff	postinc2,??_ICMP_EchoReply
  8933  006788  CFDD F068          	movff	postdec2,??_ICMP_EchoReply+1
  8934  00678C  5167               	movf	??_ICMP_EchoReply& (0+255),w,b
  8935  00678E  6F6A               	movwf	(??_ICMP_EchoReply+3)& (0+255),b
  8936  006790  6B69               	clrf	(??_ICMP_EchoReply+2)& (0+255),b
  8937  006792  5174               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
  8938  006794  6ED9               	movwf	fsr2l,c
  8939  006796  6ADA               	clrf	fsr2h,c
  8940  006798  0E06               	movlw	6
  8941  00679A  26D9               	addwf	fsr2l,f,c
  8942  00679C  CFDE F06B          	movff	postinc2,??_ICMP_EchoReply+4
  8943  0067A0  CFDD F06C          	movff	postdec2,??_ICMP_EchoReply+5
  8944  0067A4  C06C  F06B         	movff	??_ICMP_EchoReply+5,??_ICMP_EchoReply+4
  8945  0067A8  6B6C               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  8946  0067AA  6B6C               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  8947  0067AC  5169               	movf	(??_ICMP_EchoReply+2)& (0+255),w,b
  8948  0067AE  116B               	iorwf	(??_ICMP_EchoReply+4)& (0+255),w,b
  8949  0067B0  6E03               	movwf	ETH_Write16@data,c
  8950  0067B2  516A               	movf	(??_ICMP_EchoReply+3)& (0+255),w,b
  8951  0067B4  116C               	iorwf	(??_ICMP_EchoReply+5)& (0+255),w,b
  8952  0067B6  6E04               	movwf	ETH_Write16@data+1,c
  8953  0067B8  ECD4  F042         	call	_ETH_Write16	;wreg free
  8954                           
  8955                           ;icmp.c: 105: ret = ETH_Copy(ipv4PayloadLength - sizeof(icmpHeader_t));
  8956  0067BC  0EF8               	movlw	248
  8957  0067BE  0100               	movlb	0	; () banked
  8958  0067C0  2571               	addwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),w,b
  8959  0067C2  6E0D               	movwf	ETH_Copy@len,c
  8960  0067C4  0EFF               	movlw	255
  8961  0067C6  2172               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),w,b
  8962  0067C8  6E0E               	movwf	ETH_Copy@len+1,c
  8963  0067CA  EC3B  F03A         	call	_ETH_Copy	;wreg free
  8964  0067CE  0100               	movlb	0	; () banked
  8965  0067D0  6F73               	movwf	ICMP_EchoReply@ret& (0+255),b
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;icmp.c: 106: if(ret==SUCCESS)
  8969  0067D2  0573               	decf	ICMP_EchoReply@ret& (0+255),w,b
  8970  0067D4  E122               	bnz	l8421
  8971                           
  8972                           ; BSR set to: 0
  8973                           ;icmp.c: 107: {
  8974                           ;icmp.c: 108: ETH_SaveRDPT();
  8975  0067D6  ECAE  F043         	call	_ETH_SaveRDPT	;wreg free
  8976                           
  8977                           ;icmp.c: 112: cksm = ETH_TxComputeChecksum(icmp_cksm_start, ipv4PayloadLength, 0);
  8978  0067DA  6A0E               	clrf	ETH_TxComputeChecksum@position+1,c
  8979  0067DC  0E22               	movlw	34
  8980  0067DE  6E0D               	movwf	ETH_TxComputeChecksum@position,c
  8981  0067E0  C071  F00F         	movff	ICMP_EchoReply@ipv4PayloadLength,ETH_TxComputeChecksum@length
  8982  0067E4  C072  F010         	movff	ICMP_EchoReply@ipv4PayloadLength+1,ETH_TxComputeChecksum@length+1
  8983  0067E8  6A12               	clrf	ETH_TxComputeChecksum@seed+1,c
  8984  0067EA  6A11               	clrf	ETH_TxComputeChecksum@seed,c
  8985  0067EC  EC92  F038         	call	_ETH_TxComputeChecksum	;wreg free
  8986  0067F0  C00D  F06F         	movff	?_ETH_TxComputeChecksum,ICMP_EchoReply@cksm
  8987  0067F4  C00E  F070         	movff	?_ETH_TxComputeChecksum+1,ICMP_EchoReply@cksm+1
  8988                           
  8989                           ;icmp.c: 113: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (int)(((char*)&((icmpHeader_t *)1)->checksum)-1));
  8990  0067F8  6A0C               	clrf	ETH_Insert@len+1,c
  8991  0067FA  0E02               	movlw	2
  8992  0067FC  6E0B               	movwf	ETH_Insert@len,c
  8993  0067FE  6A0E               	clrf	ETH_Insert@offset+1,c
  8994  006800  0E24               	movlw	36
  8995  006802  6E0D               	movwf	ETH_Insert@offset,c
  8996  006804  0E6F               	movlw	ICMP_EchoReply@cksm& (0+255)
  8997  006806  ECA9  F03E         	call	_ETH_Insert
  8998                           
  8999                           ;icmp.c: 114: ret = IPV4_Send(ipv4PayloadLength);
  9000  00680A  C071  F01D         	movff	ICMP_EchoReply@ipv4PayloadLength,IPV4_Send@payloadLength
  9001  00680E  C072  F01E         	movff	ICMP_EchoReply@ipv4PayloadLength+1,IPV4_Send@payloadLength+1
  9002  006812  EC64  F03D         	call	_IPV4_Send	;wreg free
  9003  006816  0100               	movlb	0	; () banked
  9004  006818  6F73               	movwf	ICMP_EchoReply@ret& (0+255),b
  9005  00681A                     l8421:
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;icmp.c: 115: }
  9009                           ;icmp.c: 116: }
  9010                           ;icmp.c: 117: return ret;
  9011  00681A  5173               	movf	ICMP_EchoReply@ret& (0+255),w,b
  9012                           
  9013                           ; BSR set to: 0
  9014  00681C  0012               	return		;funcret
  9015  00681E                     __end_of_ICMP_EchoReply:
  9016                           	opt stack 0
  9017                           tosu	equ	0xFFF
  9018                           tosh	equ	0xFFE
  9019                           tosl	equ	0xFFD
  9020                           pclath	equ	0xFFA
  9021                           tblptru	equ	0xFF8
  9022                           tblptrh	equ	0xFF7
  9023                           tblptrl	equ	0xFF6
  9024                           tablat	equ	0xFF5
  9025                           prodh	equ	0xFF4
  9026                           prodl	equ	0xFF3
  9027                           intcon	equ	0xFF2
  9028                           intcon2	equ	0xFF1
  9029                           indf0	equ	0xFEF
  9030                           postinc0	equ	0xFEE
  9031                           fsr0h	equ	0xFEA
  9032                           fsr0l	equ	0xFE9
  9033                           wreg	equ	0xFE8
  9034                           postinc1	equ	0xFE6
  9035                           fsr1h	equ	0xFE2
  9036                           fsr1l	equ	0xFE1
  9037                           indf2	equ	0xFDF
  9038                           postinc2	equ	0xFDE
  9039                           postdec2	equ	0xFDD
  9040                           fsr2h	equ	0xFDA
  9041                           fsr2l	equ	0xFD9
  9042                           status	equ	0xFD8
  9043                           
  9044 ;; *************** function _ETH_SaveRDPT *****************
  9045 ;; Defined at:
  9046 ;;		line 592 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;		None
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;		None
  9051 ;; Return value:  Size  Location     Type
  9052 ;;		None               void
  9053 ;; Registers used:
  9054 ;;		wreg, status,2, status,0, cstack
  9055 ;; Tracked objects:
  9056 ;;		On entry : E/1
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9064 ;;Total ram usage:        0 bytes
  9065 ;; Hardware stack levels used:    1
  9066 ;; Hardware stack levels required when called:    6
  9067 ;; This function calls:
  9068 ;;		_ENCx24_Read
  9069 ;; This function is called by:
  9070 ;;		_ICMP_Receive
  9071 ;;		_ICMP_EchoReply
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           	psect	text41
  9076  00875C                     __ptext41:
  9077                           	opt stack 0
  9078  00875C                     _ETH_SaveRDPT:
  9079                           	opt stack 19
  9080                           
  9081                           ;encX24J600_driver.c: 594: ethData.saveRDPT = ENCx24_Read(XJ600_ERXRDPTL);
  9082                           
  9083                           ; BSR set to: 0
  9084                           ;incstack = 0
  9085  00875C  0E8A               	movlw	138
  9086  00875E  ECDF  F03F         	call	_ENCx24_Read
  9087  008762  C005  F186         	movff	?_ENCx24_Read,_ethData+3	;volatile
  9088  008766  C006  F187         	movff	?_ENCx24_Read+1,_ethData+4	;volatile
  9089  00876A  0012               	return		;funcret
  9090  00876C                     __end_of_ETH_SaveRDPT:
  9091                           	opt stack 0
  9092                           tosu	equ	0xFFF
  9093                           tosh	equ	0xFFE
  9094                           tosl	equ	0xFFD
  9095                           pclath	equ	0xFFA
  9096                           tblptru	equ	0xFF8
  9097                           tblptrh	equ	0xFF7
  9098                           tblptrl	equ	0xFF6
  9099                           tablat	equ	0xFF5
  9100                           prodh	equ	0xFF4
  9101                           prodl	equ	0xFF3
  9102                           intcon	equ	0xFF2
  9103                           intcon2	equ	0xFF1
  9104                           indf0	equ	0xFEF
  9105                           postinc0	equ	0xFEE
  9106                           fsr0h	equ	0xFEA
  9107                           fsr0l	equ	0xFE9
  9108                           wreg	equ	0xFE8
  9109                           postinc1	equ	0xFE6
  9110                           fsr1h	equ	0xFE2
  9111                           fsr1l	equ	0xFE1
  9112                           indf2	equ	0xFDF
  9113                           postinc2	equ	0xFDE
  9114                           postdec2	equ	0xFDD
  9115                           fsr2h	equ	0xFDA
  9116                           fsr2l	equ	0xFD9
  9117                           status	equ	0xFD8
  9118                           
  9119 ;; *************** function _ETH_Copy *****************
  9120 ;; Defined at:
  9121 ;;		line 416 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;  len             2   12[COMRAM] unsigned int 
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;  txBufferAddr    2   14[COMRAM] unsigned int 
  9126 ;; Return value:  Size  Location     Type
  9127 ;;                  1    wreg      enum E6988
  9128 ;; Registers used:
  9129 ;;		wreg, status,2, status,0, cstack
  9130 ;; Tracked objects:
  9131 ;;		On entry : F/0
  9132 ;;		On exit  : 0/0
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9136 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9138 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9139 ;;Total ram usage:        4 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; Hardware stack levels required when called:    7
  9142 ;; This function calls:
  9143 ;;		_ENCx24_BFC
  9144 ;;		_ENCx24_BFS
  9145 ;;		_ENCx24_Read
  9146 ;;		_ENCx24_Write
  9147 ;;		_waitForDMA
  9148 ;; This function is called by:
  9149 ;;		_ICMP_EchoReply
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153                           	psect	text42
  9154  007476                     __ptext42:
  9155                           	opt stack 0
  9156  007476                     _ETH_Copy:
  9157                           	opt stack 0
  9158  007476                     i1L__ptext93:
  9159                           	opt stack 0
  9160  007476                     i1L_waitForDMA:
  9161                           	opt stack 0
  9162  007476                     i1Ll501:
  9163                           	opt stack 0
  9164  007476                     i1Ll7801:
  9165                           	opt stack 18
  9166                           
  9167                           ;encX24J600_driver.c: 487: {
  9168                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
  9169  007476  0EFE               	movlw	254
  9170  007478  ECDF  F03F         	call	_ENCx24_Read
  9171  00747C  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
  9172  007480  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
  9173  007484                     i1Ll7803:
  9174                           	opt stack 18
  9175                           
  9176                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
  9177  007484  BA0B               	btfsc	waitForDMA@econ1_val,5,c
  9178  007486                     i1Lu10341:
  9179                           	opt stack 0
  9180  007486  D7F7               	goto	i1Ll501
  9181  007488                     i1Lu10340:
  9182                           	opt stack 0
  9183  007488                     i1Ll503:
  9184                           	opt stack 18
  9185                           
  9186                           ;encX24J600_driver.c: 425: if((ENCx24_Read(XJ600_ECON1L) & 0x20) == 0)
  9187  007488  0EFE               	movlw	254
  9188  00748A  ECDF  F03F         	call	_ENCx24_Read
  9189  00748E  BA05               	btfsc	?_ENCx24_Read,5,c
  9190  007490  D042               	goto	l491
  9191                           
  9192                           ;encX24J600_driver.c: 426: {
  9193                           ;encX24J600_driver.c: 427: txBufferAddress = ENCx24_Read(XJ600_EGPWRPTL);
  9194  007492  0E88               	movlw	136
  9195  007494  ECDF  F03F         	call	_ENCx24_Read
  9196  007498  C005  F00F         	movff	?_ENCx24_Read,ETH_Copy@txBufferAddress
  9197  00749C  C006  F010         	movff	?_ENCx24_Read+1,ETH_Copy@txBufferAddress+1
  9198                           
  9199                           ;encX24J600_driver.c: 428: ENCx24_Write(XJ600_EDMASTL, ethData.saveRDPT);
  9200  0074A0  C186  F005         	movff	_ethData+3,ENCx24_Write@data	;volatile
  9201  0074A4  C187  F006         	movff	_ethData+4,ENCx24_Write@data+1	;volatile
  9202  0074A8  0E0A               	movlw	10
  9203  0074AA  EC91  F040         	call	_ENCx24_Write
  9204                           
  9205                           ;encX24J600_driver.c: 429: ENCx24_Write(XJ600_EDMALENL,len);
  9206  0074AE  C00D  F005         	movff	ETH_Copy@len,ENCx24_Write@data
  9207  0074B2  C00E  F006         	movff	ETH_Copy@len+1,ENCx24_Write@data+1
  9208  0074B6  0E0C               	movlw	12
  9209  0074B8  EC91  F040         	call	_ENCx24_Write
  9210                           
  9211                           ;encX24J600_driver.c: 430: ENCx24_Write(XJ600_EDMADSTL, txBufferAddress);
  9212  0074BC  C00F  F005         	movff	ETH_Copy@txBufferAddress,ENCx24_Write@data
  9213  0074C0  C010  F006         	movff	ETH_Copy@txBufferAddress+1,ENCx24_Write@data+1
  9214  0074C4  0E0E               	movlw	14
  9215  0074C6  EC91  F040         	call	_ENCx24_Write
  9216                           
  9217                           ;encX24J600_driver.c: 433: ENCx24_BFC(XJ600_ECON1L, 0x0004);
  9218  0074CA  6A06               	clrf	ENCx24_BFC@bitMask+1,c
  9219  0074CC  0E04               	movlw	4
  9220  0074CE  6E05               	movwf	ENCx24_BFC@bitMask,c
  9221  0074D0  0EFE               	movlw	254
  9222  0074D2  ECD2  F040         	call	_ENCx24_BFC
  9223                           
  9224                           ;encX24J600_driver.c: 437: ENCx24_BFS(XJ600_ECON1L, 0b0000000000111000);
  9225  0074D6  6A06               	clrf	ENCx24_BFS@bitMask+1,c
  9226  0074D8  0E38               	movlw	56
  9227  0074DA  6E05               	movwf	ENCx24_BFS@bitMask,c
  9228  0074DC  0EFE               	movlw	254
  9229  0074DE  ECB2  F040         	call	_ENCx24_BFS
  9230  0074E2                     i2L__ptext93:
  9231                           	opt stack 0
  9232  0074E2                     i2L_waitForDMA:
  9233                           	opt stack 0
  9234  0074E2                     i2Ll501:
  9235                           	opt stack 0
  9236  0074E2                     i2Ll7801:
  9237                           	opt stack 18
  9238                           
  9239                           ;encX24J600_driver.c: 487: {
  9240                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
  9241  0074E2  0EFE               	movlw	254
  9242  0074E4  ECDF  F03F         	call	_ENCx24_Read
  9243  0074E8  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
  9244  0074EC  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
  9245  0074F0                     i2Ll7803:
  9246                           	opt stack 18
  9247                           
  9248                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
  9249  0074F0  BA0B               	btfsc	waitForDMA@econ1_val,5,c
  9250  0074F2                     i2Lu10341:
  9251                           	opt stack 0
  9252  0074F2  D7F7               	goto	i2Ll501
  9253  0074F4                     i2Lu10340:
  9254                           	opt stack 0
  9255  0074F4                     i2Ll503:
  9256                           	opt stack 18
  9257                           
  9258                           ;encX24J600_driver.c: 441: txBufferAddress += len;
  9259  0074F4  500D               	movf	ETH_Copy@len,w,c
  9260  0074F6  260F               	addwf	ETH_Copy@txBufferAddress,f,c
  9261  0074F8  500E               	movf	ETH_Copy@len+1,w,c
  9262  0074FA  2210               	addwfc	ETH_Copy@txBufferAddress+1,f,c
  9263                           
  9264                           ;encX24J600_driver.c: 443: ENCx24_Write(XJ600_EGPWRPTL, txBufferAddress);
  9265  0074FC  C00F  F005         	movff	ETH_Copy@txBufferAddress,ENCx24_Write@data
  9266  007500  C010  F006         	movff	ETH_Copy@txBufferAddress+1,ENCx24_Write@data+1
  9267  007504  0E88               	movlw	136
  9268  007506  EC91  F040         	call	_ENCx24_Write
  9269                           
  9270                           ;encX24J600_driver.c: 445: TXPacketSize += len;
  9271  00750A  500D               	movf	ETH_Copy@len,w,c
  9272  00750C  0101               	movlb	1	; () banked
  9273  00750E  279A               	addwf	_TXPacketSize& (0+255),f,b
  9274  007510  500E               	movf	ETH_Copy@len+1,w,c
  9275  007512  239B               	addwfc	(_TXPacketSize+1)& (0+255),f,b
  9276                           
  9277                           ; BSR set to: 1
  9278                           ;encX24J600_driver.c: 447: return SUCCESS;
  9279  007514  0C01               	retlw	1
  9280  007516                     l491:
  9281  007516  00FF               	reset		;# 
  9282                           
  9283                           ;encX24J600_driver.c: 450: return DMA_TIMEOUT;
  9284  007518  0C0C               	retlw	12	;funcret
  9285  00751A                     __end_of_ETH_Copy:
  9286                           	opt stack 0
  9287                           tosu	equ	0xFFF
  9288                           tosh	equ	0xFFE
  9289                           tosl	equ	0xFFD
  9290                           pclath	equ	0xFFA
  9291                           tblptru	equ	0xFF8
  9292                           tblptrh	equ	0xFF7
  9293                           tblptrl	equ	0xFF6
  9294                           tablat	equ	0xFF5
  9295                           prodh	equ	0xFF4
  9296                           prodl	equ	0xFF3
  9297                           intcon	equ	0xFF2
  9298                           intcon2	equ	0xFF1
  9299                           indf0	equ	0xFEF
  9300                           postinc0	equ	0xFEE
  9301                           fsr0h	equ	0xFEA
  9302                           fsr0l	equ	0xFE9
  9303                           wreg	equ	0xFE8
  9304                           postinc1	equ	0xFE6
  9305                           fsr1h	equ	0xFE2
  9306                           fsr1l	equ	0xFE1
  9307                           indf2	equ	0xFDF
  9308                           postinc2	equ	0xFDE
  9309                           postdec2	equ	0xFDD
  9310                           fsr2h	equ	0xFDA
  9311                           fsr2l	equ	0xFD9
  9312                           status	equ	0xFD8
  9313                           
  9314 ;; *************** function _ETH_RxComputeChecksum *****************
  9315 ;; Defined at:
  9316 ;;		line 545 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  len             2   12[COMRAM] unsigned int 
  9319 ;;  seed            2   14[COMRAM] unsigned int 
  9320 ;; Auto vars:     Size  Location     Type
  9321 ;;  econ1Val        2   24[COMRAM] unsigned int 
  9322 ;;  rxPtr           2   22[COMRAM] unsigned int 
  9323 ;;  cksm            2   20[COMRAM] unsigned int 
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  2   12[COMRAM] unsigned int 
  9326 ;; Registers used:
  9327 ;;		wreg, status,2, status,0, cstack
  9328 ;; Tracked objects:
  9329 ;;		On entry : F/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9334 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9335 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9336 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9337 ;;Total ram usage:       14 bytes
  9338 ;; Hardware stack levels used:    1
  9339 ;; Hardware stack levels required when called:    7
  9340 ;; This function calls:
  9341 ;;		_ENCx24_BFC
  9342 ;;		_ENCx24_BFS
  9343 ;;		_ENCx24_Read
  9344 ;;		_ENCx24_Write
  9345 ;;		_waitForDMA
  9346 ;; This function is called by:
  9347 ;;		_IPV4_Packet
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           	psect	text43
  9352  006F9A                     __ptext43:
  9353                           	opt stack 0
  9354  006F9A                     _ETH_RxComputeChecksum:
  9355                           	opt stack 0
  9356  006F9A                     i3L__ptext93:
  9357                           	opt stack 0
  9358  006F9A                     i3L_waitForDMA:
  9359                           	opt stack 0
  9360  006F9A                     i3Ll501:
  9361                           	opt stack 0
  9362  006F9A                     i3Ll7801:
  9363                           	opt stack 18
  9364                           
  9365                           ;encX24J600_driver.c: 487: {
  9366                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
  9367  006F9A  0EFE               	movlw	254
  9368  006F9C  ECDF  F03F         	call	_ENCx24_Read
  9369  006FA0  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
  9370  006FA4  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
  9371  006FA8                     i3Ll7803:
  9372                           	opt stack 18
  9373                           
  9374                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
  9375  006FA8  BA0B               	btfsc	waitForDMA@econ1_val,5,c
  9376  006FAA                     i3Lu10341:
  9377                           	opt stack 0
  9378  006FAA  D7F7               	goto	i3Ll501
  9379  006FAC                     i3Lu10340:
  9380                           	opt stack 0
  9381  006FAC                     i3Ll503:
  9382                           	opt stack 20
  9383                           
  9384                           ;encX24J600_driver.c: 560: ENCx24_BFC(XJ600_ECON1L, econ1Val);
  9385  006FAC  6A06               	clrf	ENCx24_BFC@bitMask+1,c
  9386  006FAE  0E1C               	movlw	28
  9387  006FB0  6E05               	movwf	ENCx24_BFC@bitMask,c
  9388  006FB2  0EFE               	movlw	254
  9389  006FB4  ECD2  F040         	call	_ENCx24_BFC
  9390                           
  9391                           ;encX24J600_driver.c: 562: rxPtr = ENCx24_Read(XJ600_ERXRDPTL);
  9392  006FB8  0E8A               	movlw	138
  9393  006FBA  ECDF  F03F         	call	_ENCx24_Read
  9394  006FBE  C005  F017         	movff	?_ENCx24_Read,ETH_RxComputeChecksum@rxPtr
  9395  006FC2  C006  F018         	movff	?_ENCx24_Read+1,ETH_RxComputeChecksum@rxPtr+1
  9396                           
  9397                           ;encX24J600_driver.c: 565: ENCx24_Write(XJ600_EDMASTL, rxPtr);
  9398  006FC6  C017  F005         	movff	ETH_RxComputeChecksum@rxPtr,ENCx24_Write@data
  9399  006FCA  C018  F006         	movff	ETH_RxComputeChecksum@rxPtr+1,ENCx24_Write@data+1
  9400  006FCE  0E0A               	movlw	10
  9401  006FD0  EC91  F040         	call	_ENCx24_Write
  9402                           
  9403                           ;encX24J600_driver.c: 567: ENCx24_Write(XJ600_EDMALENL, len);
  9404  006FD4  C00D  F005         	movff	ETH_RxComputeChecksum@len,ENCx24_Write@data
  9405  006FD8  C00E  F006         	movff	ETH_RxComputeChecksum@len+1,ENCx24_Write@data+1
  9406  006FDC  0E0C               	movlw	12
  9407  006FDE  EC91  F040         	call	_ENCx24_Write
  9408                           
  9409                           ;encX24J600_driver.c: 569: econ1Val = 0x0020;
  9410  006FE2  6A1A               	clrf	ETH_RxComputeChecksum@econ1Val+1,c
  9411  006FE4  0E20               	movlw	32
  9412  006FE6  6E19               	movwf	ETH_RxComputeChecksum@econ1Val,c
  9413                           
  9414                           ;encX24J600_driver.c: 570: if (seed)
  9415  006FE8  500F               	movf	ETH_RxComputeChecksum@seed,w,c
  9416  006FEA  1010               	iorwf	ETH_RxComputeChecksum@seed+1,w,c
  9417  006FEC  E016               	bz	l8913
  9418                           
  9419                           ;encX24J600_driver.c: 571: {
  9420                           ;encX24J600_driver.c: 572: econ1Val |= 0x0008;
  9421  006FEE  8619               	bsf	ETH_RxComputeChecksum@econ1Val,3,c
  9422                           
  9423                           ;encX24J600_driver.c: 573: seed=~(seed);
  9424  006FF0  1E0F               	comf	ETH_RxComputeChecksum@seed,f,c
  9425  006FF2  1E10               	comf	ETH_RxComputeChecksum@seed+1,f,c
  9426                           
  9427                           ;encX24J600_driver.c: 574: seed = ((((uint16_t)seed & (uint16_t)0xFF00) >> 8) | (((uint1
      +                          6_t)seed & (uint16_t)0x00FF) << 8));
  9428  006FF4  500F               	movf	ETH_RxComputeChecksum@seed,w,c
  9429  006FF6  6E12               	movwf	(??_ETH_RxComputeChecksum+1)& (0+255),c
  9430  006FF8  6A11               	clrf	??_ETH_RxComputeChecksum& (0+255),c
  9431  006FFA  5010               	movf	ETH_RxComputeChecksum@seed+1,w,c
  9432  006FFC  6E13               	movwf	(??_ETH_RxComputeChecksum+2)& (0+255),c
  9433  006FFE  6A14               	clrf	(??_ETH_RxComputeChecksum+3)& (0+255),c
  9434  007000  5011               	movf	??_ETH_RxComputeChecksum,w,c
  9435  007002  1013               	iorwf	??_ETH_RxComputeChecksum+2,w,c
  9436  007004  6E0F               	movwf	ETH_RxComputeChecksum@seed,c
  9437  007006  5012               	movf	??_ETH_RxComputeChecksum+1,w,c
  9438  007008  1014               	iorwf	??_ETH_RxComputeChecksum+3,w,c
  9439  00700A  6E10               	movwf	ETH_RxComputeChecksum@seed+1,c
  9440                           
  9441                           ;encX24J600_driver.c: 575: ENCx24_Write(XJ600_EDMACSL, seed);
  9442  00700C  C00F  F005         	movff	ETH_RxComputeChecksum@seed,ENCx24_Write@data
  9443  007010  C010  F006         	movff	ETH_RxComputeChecksum@seed+1,ENCx24_Write@data+1
  9444  007014  0E10               	movlw	16
  9445  007016  EC91  F040         	call	_ENCx24_Write
  9446  00701A                     l8913:
  9447                           
  9448                           ;encX24J600_driver.c: 576: }
  9449                           ;encX24J600_driver.c: 579: ENCx24_BFS(XJ600_ECON1L, econ1Val);
  9450  00701A  C019  F005         	movff	ETH_RxComputeChecksum@econ1Val,ENCx24_BFS@bitMask
  9451  00701E  C01A  F006         	movff	ETH_RxComputeChecksum@econ1Val+1,ENCx24_BFS@bitMask+1
  9452  007022  0EFE               	movlw	254
  9453  007024  ECB2  F040         	call	_ENCx24_BFS
  9454  007028                     i4L__ptext93:
  9455                           	opt stack 0
  9456  007028                     i4L_waitForDMA:
  9457                           	opt stack 0
  9458  007028                     i4Ll501:
  9459                           	opt stack 0
  9460  007028                     i4Ll7801:
  9461                           	opt stack 18
  9462                           
  9463                           ;encX24J600_driver.c: 487: {
  9464                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
  9465  007028  0EFE               	movlw	254
  9466  00702A  ECDF  F03F         	call	_ENCx24_Read
  9467  00702E  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
  9468  007032  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
  9469  007036                     i4Ll7803:
  9470                           	opt stack 18
  9471                           
  9472                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
  9473  007036  BA0B               	btfsc	waitForDMA@econ1_val,5,c
  9474  007038                     i4Lu10341:
  9475                           	opt stack 0
  9476  007038  D7F7               	goto	i4Ll501
  9477  00703A                     i4Lu10340:
  9478                           	opt stack 0
  9479  00703A                     i4Ll503:
  9480                           	opt stack 20
  9481                           
  9482                           ;encX24J600_driver.c: 582: cksm = ENCx24_Read(XJ600_EDMACSL);
  9483  00703A  0E10               	movlw	16
  9484  00703C  ECDF  F03F         	call	_ENCx24_Read
  9485  007040  C005  F015         	movff	?_ENCx24_Read,ETH_RxComputeChecksum@cksm
  9486  007044  C006  F016         	movff	?_ENCx24_Read+1,ETH_RxComputeChecksum@cksm+1
  9487                           
  9488                           ;encX24J600_driver.c: 584: ENCx24_Write(XJ600_ERXRDPTL, rxPtr);
  9489  007048  C017  F005         	movff	ETH_RxComputeChecksum@rxPtr,ENCx24_Write@data
  9490  00704C  C018  F006         	movff	ETH_RxComputeChecksum@rxPtr+1,ENCx24_Write@data+1
  9491  007050  0E8A               	movlw	138
  9492  007052  EC91  F040         	call	_ENCx24_Write
  9493                           
  9494                           ;encX24J600_driver.c: 586: return cksm;
  9495  007056  C015  F00D         	movff	ETH_RxComputeChecksum@cksm,?_ETH_RxComputeChecksum
  9496  00705A  C016  F00E         	movff	ETH_RxComputeChecksum@cksm+1,?_ETH_RxComputeChecksum+1
  9497  00705E  0012               	return		;funcret
  9498  007060                     __end_of_ETH_RxComputeChecksum:
  9499                           	opt stack 0
  9500                           tosu	equ	0xFFF
  9501                           tosh	equ	0xFFE
  9502                           tosl	equ	0xFFD
  9503                           pclath	equ	0xFFA
  9504                           tblptru	equ	0xFF8
  9505                           tblptrh	equ	0xFF7
  9506                           tblptrl	equ	0xFF6
  9507                           tablat	equ	0xFF5
  9508                           prodh	equ	0xFF4
  9509                           prodl	equ	0xFF3
  9510                           intcon	equ	0xFF2
  9511                           intcon2	equ	0xFF1
  9512                           indf0	equ	0xFEF
  9513                           postinc0	equ	0xFEE
  9514                           fsr0h	equ	0xFEA
  9515                           fsr0l	equ	0xFE9
  9516                           wreg	equ	0xFE8
  9517                           postinc1	equ	0xFE6
  9518                           fsr1h	equ	0xFE2
  9519                           fsr1l	equ	0xFE1
  9520                           indf2	equ	0xFDF
  9521                           postinc2	equ	0xFDE
  9522                           postdec2	equ	0xFDD
  9523                           fsr2h	equ	0xFDA
  9524                           fsr2l	equ	0xFD9
  9525                           status	equ	0xFD8
  9526                           
  9527 ;; *************** function _ETH_NextPacketUpdate *****************
  9528 ;; Defined at:
  9529 ;;		line 278 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;		None
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;		None
  9534 ;; Return value:  Size  Location     Type
  9535 ;;		None               void
  9536 ;; Registers used:
  9537 ;;		wreg, status,2, status,0, cstack
  9538 ;; Tracked objects:
  9539 ;;		On entry : F/1
  9540 ;;		On exit  : F/2
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;Total ram usage:        0 bytes
  9548 ;; Hardware stack levels used:    1
  9549 ;; Hardware stack levels required when called:    5
  9550 ;; This function calls:
  9551 ;;		_ETH_SetRXptr
  9552 ;;		_SPI_ExchangeByte
  9553 ;; This function is called by:
  9554 ;;		_Network_Read
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text44
  9559  007A58                     __ptext44:
  9560                           	opt stack 0
  9561  007A58                     _ETH_NextPacketUpdate:
  9562                           	opt stack 23
  9563                           
  9564                           ; BSR set to: 1
  9565                           ;encX24J600_driver.c: 280: ETH_SetRXptr(nextPacketPointer);
  9566                           
  9567                           ;incstack = 0
  9568  007A58  C19E  F003         	movff	_nextPacketPointer,ETH_SetRXptr@address
  9569  007A5C  C19F  F004         	movff	_nextPacketPointer+1,ETH_SetRXptr@address+1
  9570  007A60  EC77  F043         	call	_ETH_SetRXptr	;wreg free
  9571  007A64  968A               	bcf	3978,3,c	;volatile
  9572                           
  9573                           ;encX24J600_driver.c: 283: SPI_ExchangeByte(rrxdata_inst);
  9574  007A66  0E2C               	movlw	44
  9575  007A68  ECCC  F043         	call	_SPI_ExchangeByte
  9576                           
  9577                           ;encX24J600_driver.c: 284: ((char *) &nextPacketPointer)[0] = SPI_ExchangeByte(0);
  9578  007A6C  0E00               	movlw	0
  9579  007A6E  ECCC  F043         	call	_SPI_ExchangeByte
  9580  007A72  0101               	movlb	1	; () banked
  9581  007A74  6F9E               	movwf	_nextPacketPointer& (0+255),b
  9582                           
  9583                           ;encX24J600_driver.c: 285: ((char *) &nextPacketPointer)[1] = SPI_ExchangeByte(0);
  9584  007A76  0E00               	movlw	0
  9585  007A78  ECCC  F043         	call	_SPI_ExchangeByte
  9586  007A7C  0101               	movlb	1	; () banked
  9587  007A7E  6F9F               	movwf	(_nextPacketPointer+1)& (0+255),b
  9588                           
  9589                           ;encX24J600_driver.c: 286: ((char *) &rxPacketStatusVector)[0] = SPI_ExchangeByte(0);
  9590  007A80  0E00               	movlw	0
  9591  007A82  ECCC  F043         	call	_SPI_ExchangeByte
  9592  007A86  0102               	movlb	2	; () banked
  9593  007A88  6F18               	movwf	_rxPacketStatusVector& (0+255),b
  9594                           
  9595                           ;encX24J600_driver.c: 287: ((char *) &rxPacketStatusVector)[1] = SPI_ExchangeByte(0);
  9596  007A8A  0E00               	movlw	0
  9597  007A8C  ECCC  F043         	call	_SPI_ExchangeByte
  9598  007A90  0102               	movlb	2	; () banked
  9599  007A92  6F19               	movwf	(_rxPacketStatusVector+1)& (0+255),b
  9600                           
  9601                           ;encX24J600_driver.c: 288: ((char *) &rxPacketStatusVector)[2] = SPI_ExchangeByte(0);
  9602  007A94  0E00               	movlw	0
  9603  007A96  ECCC  F043         	call	_SPI_ExchangeByte
  9604  007A9A  0102               	movlb	2	; () banked
  9605  007A9C  6F1A               	movwf	(_rxPacketStatusVector+2)& (0+255),b
  9606                           
  9607                           ;encX24J600_driver.c: 289: ((char *) &rxPacketStatusVector)[3] = SPI_ExchangeByte(0);
  9608  007A9E  0E00               	movlw	0
  9609  007AA0  ECCC  F043         	call	_SPI_ExchangeByte
  9610  007AA4  0102               	movlb	2	; () banked
  9611  007AA6  6F1B               	movwf	(_rxPacketStatusVector+3)& (0+255),b
  9612                           
  9613                           ;encX24J600_driver.c: 290: ((char *) &rxPacketStatusVector)[4] = SPI_ExchangeByte(0);
  9614  007AA8  0E00               	movlw	0
  9615  007AAA  ECCC  F043         	call	_SPI_ExchangeByte
  9616  007AAE  0102               	movlb	2	; () banked
  9617  007AB0  6F1C               	movwf	(_rxPacketStatusVector+4)& (0+255),b
  9618                           
  9619                           ;encX24J600_driver.c: 291: ((char *) &rxPacketStatusVector)[5] = SPI_ExchangeByte(0);
  9620  007AB2  0E00               	movlw	0
  9621  007AB4  ECCC  F043         	call	_SPI_ExchangeByte
  9622  007AB8  0102               	movlb	2	; () banked
  9623  007ABA  6F1D               	movwf	(_rxPacketStatusVector+5)& (0+255),b
  9624                           
  9625                           ; BSR set to: 2
  9626  007ABC  868A               	bsf	3978,3,c	;volatile
  9627                           
  9628                           ; BSR set to: 2
  9629                           ;encX24J600_driver.c: 295: rxPacketStatusVector.ByteCount -= 4;
  9630  007ABE  0E04               	movlw	4
  9631  007AC0  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
  9632  007AC2  0E00               	movlw	0
  9633  007AC4  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  9634                           
  9635                           ; BSR set to: 2
  9636  007AC6  0C00               	retlw	0	;funcret
  9637  007AC8                     __end_of_ETH_NextPacketUpdate:
  9638                           	opt stack 0
  9639                           tosu	equ	0xFFF
  9640                           tosh	equ	0xFFE
  9641                           tosl	equ	0xFFD
  9642                           pclath	equ	0xFFA
  9643                           tblptru	equ	0xFF8
  9644                           tblptrh	equ	0xFF7
  9645                           tblptrl	equ	0xFF6
  9646                           tablat	equ	0xFF5
  9647                           prodh	equ	0xFF4
  9648                           prodl	equ	0xFF3
  9649                           intcon	equ	0xFF2
  9650                           intcon2	equ	0xFF1
  9651                           indf0	equ	0xFEF
  9652                           postinc0	equ	0xFEE
  9653                           fsr0h	equ	0xFEA
  9654                           fsr0l	equ	0xFE9
  9655                           wreg	equ	0xFE8
  9656                           postinc1	equ	0xFE6
  9657                           fsr1h	equ	0xFE2
  9658                           fsr1l	equ	0xFE1
  9659                           indf2	equ	0xFDF
  9660                           postinc2	equ	0xFDE
  9661                           postdec2	equ	0xFDD
  9662                           fsr2h	equ	0xFDA
  9663                           fsr2l	equ	0xFD9
  9664                           status	equ	0xFD8
  9665                           
  9666 ;; *************** function _ETH_SetRXptr *****************
  9667 ;; Defined at:
  9668 ;;		line 456 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;  address         2    2[COMRAM] unsigned int 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;		None
  9673 ;; Return value:  Size  Location     Type
  9674 ;;		None               void
  9675 ;; Registers used:
  9676 ;;		wreg, status,2, cstack
  9677 ;; Tracked objects:
  9678 ;;		On entry : F/1
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;Total ram usage:        2 bytes
  9687 ;; Hardware stack levels used:    1
  9688 ;; Hardware stack levels required when called:    4
  9689 ;; This function calls:
  9690 ;;		_SPI_ExchangeByte
  9691 ;; This function is called by:
  9692 ;;		_ETH_NextPacketUpdate
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696                           	psect	text45
  9697  0086EE                     __ptext45:
  9698                           	opt stack 0
  9699  0086EE                     _ETH_SetRXptr:
  9700                           	opt stack 23
  9701                           
  9702                           ; BSR set to: 1
  9703                           
  9704                           ; BSR set to: 2
  9705                           ;incstack = 0
  9706                           ;encX24j600_spi.c: 459: do{LATB3 = 0;} while(0);
  9707  0086EE  968A               	bcf	3978,3,c	;volatile
  9708                           
  9709                           ; BSR set to: 1
  9710                           ;encX24j600_spi.c: 460: SPI_ExchangeByte(wrxrdpt_inst);
  9711  0086F0  0E64               	movlw	100
  9712  0086F2  ECCC  F043         	call	_SPI_ExchangeByte
  9713                           
  9714                           ;encX24j600_spi.c: 461: SPI_ExchangeByte(((uint8_t*) &address)[0]);
  9715  0086F6  5003               	movf	ETH_SetRXptr@address,w,c
  9716  0086F8  ECCC  F043         	call	_SPI_ExchangeByte
  9717                           
  9718                           ;encX24j600_spi.c: 462: SPI_ExchangeByte(((uint8_t*) &address)[1]);
  9719  0086FC  5004               	movf	ETH_SetRXptr@address+1,w,c
  9720  0086FE  ECCC  F043         	call	_SPI_ExchangeByte
  9721  008702  868A               	bsf	3978,3,c	;volatile
  9722  008704  0012               	return		;funcret
  9723  008706                     __end_of_ETH_SetRXptr:
  9724                           	opt stack 0
  9725                           tosu	equ	0xFFF
  9726                           tosh	equ	0xFFE
  9727                           tosl	equ	0xFFD
  9728                           pclath	equ	0xFFA
  9729                           tblptru	equ	0xFF8
  9730                           tblptrh	equ	0xFF7
  9731                           tblptrl	equ	0xFF6
  9732                           tablat	equ	0xFF5
  9733                           prodh	equ	0xFF4
  9734                           prodl	equ	0xFF3
  9735                           intcon	equ	0xFF2
  9736                           intcon2	equ	0xFF1
  9737                           indf0	equ	0xFEF
  9738                           postinc0	equ	0xFEE
  9739                           fsr0h	equ	0xFEA
  9740                           fsr0l	equ	0xFE9
  9741                           wreg	equ	0xFE8
  9742                           postinc1	equ	0xFE6
  9743                           fsr1h	equ	0xFE2
  9744                           fsr1l	equ	0xFE1
  9745                           indf2	equ	0xFDF
  9746                           postinc2	equ	0xFDE
  9747                           postdec2	equ	0xFDD
  9748                           fsr2h	equ	0xFDA
  9749                           fsr2l	equ	0xFD9
  9750                           status	equ	0xFD8
  9751                           
  9752 ;; *************** function _ETH_Flush *****************
  9753 ;; Defined at:
  9754 ;;		line 341 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;		None
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;  newRXTail       2    8[COMRAM] unsigned int 
  9759 ;; Return value:  Size  Location     Type
  9760 ;;		None               void
  9761 ;; Registers used:
  9762 ;;		wreg, status,2, status,0, cstack
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/1
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9772 ;;Total ram usage:        2 bytes
  9773 ;; Hardware stack levels used:    1
  9774 ;; Hardware stack levels required when called:    6
  9775 ;; This function calls:
  9776 ;;		_ENCx24_Write
  9777 ;;		_ETH_SetPktDec
  9778 ;; This function is called by:
  9779 ;;		_Network_Read
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           	psect	text46
  9784  0082D4                     __ptext46:
  9785                           	opt stack 0
  9786  0082D4                     _ETH_Flush:
  9787                           	opt stack 22
  9788                           
  9789                           ;encX24J600_driver.c: 343: uint16_t newRXTail = nextPacketPointer - 2;
  9790                           
  9791                           ;incstack = 0
  9792  0082D4  0EFE               	movlw	254
  9793  0082D6  0101               	movlb	1	; () banked
  9794  0082D8  259E               	addwf	_nextPacketPointer& (0+255),w,b
  9795  0082DA  6E09               	movwf	ETH_Flush@newRXTail,c
  9796  0082DC  0EFF               	movlw	255
  9797  0082DE  219F               	addwfc	(_nextPacketPointer+1)& (0+255),w,b
  9798  0082E0  6E0A               	movwf	ETH_Flush@newRXTail+1,c
  9799                           
  9800                           ;encX24J600_driver.c: 346: if (nextPacketPointer == 0x1600ul)
  9801  0082E2  0E16               	movlw	22
  9802  0082E4  199F               	xorwf	(_nextPacketPointer+1)& (0+255),w,b
  9803  0082E6  119E               	iorwf	_nextPacketPointer& (0+255),w,b
  9804  0082E8  E104               	bnz	l9295
  9805                           
  9806                           ; BSR set to: 1
  9807                           ;encX24J600_driver.c: 347: newRXTail = 0x6000ul - 2;
  9808  0082EA  0E5F               	movlw	95
  9809  0082EC  6E0A               	movwf	ETH_Flush@newRXTail+1,c
  9810  0082EE  0EFE               	movlw	254
  9811  0082F0  6E09               	movwf	ETH_Flush@newRXTail,c
  9812  0082F2                     l9295:
  9813                           
  9814                           ; BSR set to: 1
  9815                           ;encX24J600_driver.c: 350: ETH_SetPktDec();
  9816  0082F2  ECD9  F043         	call	_ETH_SetPktDec	;wreg free
  9817                           
  9818                           ;encX24J600_driver.c: 351: ethData.pktReady = 0;
  9819  0082F6  0101               	movlb	1	; () banked
  9820  0082F8  9383               	bcf	_ethData& (0+255),1,b	;volatile
  9821                           
  9822                           ; BSR set to: 1
  9823                           ;encX24J600_driver.c: 354: ENCx24_Write(XJ600_ERXTAILL, newRXTail);
  9824  0082FA  C009  F005         	movff	ETH_Flush@newRXTail,ENCx24_Write@data
  9825  0082FE  C00A  F006         	movff	ETH_Flush@newRXTail+1,ENCx24_Write@data+1
  9826  008302  0E06               	movlw	6
  9827  008304  EF91  F040         	goto	_ENCx24_Write
  9828  008308                     __end_of_ETH_Flush:
  9829                           	opt stack 0
  9830                           tosu	equ	0xFFF
  9831                           tosh	equ	0xFFE
  9832                           tosl	equ	0xFFD
  9833                           pclath	equ	0xFFA
  9834                           tblptru	equ	0xFF8
  9835                           tblptrh	equ	0xFF7
  9836                           tblptrl	equ	0xFF6
  9837                           tablat	equ	0xFF5
  9838                           prodh	equ	0xFF4
  9839                           prodl	equ	0xFF3
  9840                           intcon	equ	0xFF2
  9841                           intcon2	equ	0xFF1
  9842                           indf0	equ	0xFEF
  9843                           postinc0	equ	0xFEE
  9844                           fsr0h	equ	0xFEA
  9845                           fsr0l	equ	0xFE9
  9846                           wreg	equ	0xFE8
  9847                           postinc1	equ	0xFE6
  9848                           fsr1h	equ	0xFE2
  9849                           fsr1l	equ	0xFE1
  9850                           indf2	equ	0xFDF
  9851                           postinc2	equ	0xFDE
  9852                           postdec2	equ	0xFDD
  9853                           fsr2h	equ	0xFDA
  9854                           fsr2l	equ	0xFD9
  9855                           status	equ	0xFD8
  9856                           
  9857 ;; *************** function _ETH_SetPktDec *****************
  9858 ;; Defined at:
  9859 ;;		line 445 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;		None
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;		None
  9864 ;; Return value:  Size  Location     Type
  9865 ;;		None               void
  9866 ;; Registers used:
  9867 ;;		wreg, status,2, cstack
  9868 ;; Tracked objects:
  9869 ;;		On entry : F/1
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;Total ram usage:        0 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    4
  9880 ;; This function calls:
  9881 ;;		_SPI_ExchangeByte
  9882 ;; This function is called by:
  9883 ;;		_ETH_Flush
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           	psect	text47
  9888  0087B2                     __ptext47:
  9889                           	opt stack 0
  9890  0087B2                     _ETH_SetPktDec:
  9891                           	opt stack 23
  9892                           
  9893                           ; BSR set to: 1
  9894                           
  9895                           ;incstack = 0
  9896                           ;encX24j600_spi.c: 448: do{LATB3 = 0;} while(0);
  9897  0087B2  968A               	bcf	3978,3,c	;volatile
  9898                           
  9899                           ; BSR set to: 1
  9900                           ;encX24j600_spi.c: 449: SPI_ExchangeByte(setpktdec_inst);
  9901  0087B4  0ECC               	movlw	204
  9902  0087B6  ECCC  F043         	call	_SPI_ExchangeByte
  9903  0087BA  868A               	bsf	3978,3,c	;volatile
  9904  0087BC  0012               	return		;funcret
  9905  0087BE                     __end_of_ETH_SetPktDec:
  9906                           	opt stack 0
  9907                           tosu	equ	0xFFF
  9908                           tosh	equ	0xFFE
  9909                           tosl	equ	0xFFD
  9910                           pclath	equ	0xFFA
  9911                           tblptru	equ	0xFF8
  9912                           tblptrh	equ	0xFF7
  9913                           tblptrl	equ	0xFF6
  9914                           tablat	equ	0xFF5
  9915                           prodh	equ	0xFF4
  9916                           prodl	equ	0xFF3
  9917                           intcon	equ	0xFF2
  9918                           intcon2	equ	0xFF1
  9919                           indf0	equ	0xFEF
  9920                           postinc0	equ	0xFEE
  9921                           fsr0h	equ	0xFEA
  9922                           fsr0l	equ	0xFE9
  9923                           wreg	equ	0xFE8
  9924                           postinc1	equ	0xFE6
  9925                           fsr1h	equ	0xFE2
  9926                           fsr1l	equ	0xFE1
  9927                           indf2	equ	0xFDF
  9928                           postinc2	equ	0xFDE
  9929                           postdec2	equ	0xFDD
  9930                           fsr2h	equ	0xFDA
  9931                           fsr2l	equ	0xFD9
  9932                           status	equ	0xFD8
  9933                           
  9934 ;; *************** function _ARPV4_Packet *****************
  9935 ;; Defined at:
  9936 ;;		line 97 in file "../../TCPIP Library/source/arpv4.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;		None
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;  x               1   53[COMRAM] unsigned char 
  9941 ;;  arpPtr          2   50[COMRAM] PTR struct .
  9942 ;;		 -> arpMap(104), 
  9943 ;;  x               1   52[COMRAM] unsigned char 
  9944 ;;  header         28   56[COMRAM] struct .
  9945 ;;  entryPointer    2   54[COMRAM] PTR struct .
  9946 ;;		 -> arpMap(104), 
  9947 ;;  length          2   46[COMRAM] unsigned int 
  9948 ;;  ret             1   49[COMRAM] enum E450
  9949 ;;  mergeFlag       1   48[COMRAM] unsigned char 
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  1    wreg      enum E450
  9952 ;; Registers used:
  9953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9954 ;; Tracked objects:
  9955 ;;		On entry : 0/1
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9960 ;;      Locals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9961 ;;      Temps:         32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9962 ;;      Totals:        70       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9963 ;;Total ram usage:       70 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; Hardware stack levels required when called:    7
  9966 ;; This function calls:
  9967 ;;		_ETH_GetMAC
  9968 ;;		_ETH_ReadBlock
  9969 ;;		_ETH_Send
  9970 ;;		_ETH_WriteBlock
  9971 ;;		_ETH_WriteStart
  9972 ;; This function is called by:
  9973 ;;		_Network_Read
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           	psect	text48
  9978  004B8A                     __ptext48:
  9979                           	opt stack 0
  9980  004B8A                     _ARPV4_Packet:
  9981                           	opt stack 21
  9982                           
  9983                           ;arpv4.c: 107: length = ETH_ReadBlock((char*)&header,sizeof(arpHeader_t));
  9984                           
  9985                           ;incstack = 0
  9986  004B8A  0E39               	movlw	low ARPV4_Packet@header
  9987  004B8C  6E03               	movwf	ETH_ReadBlock@data,c
  9988  004B8E  6A04               	clrf	ETH_ReadBlock@data+1,c
  9989  004B90  6A06               	clrf	ETH_ReadBlock@length+1,c
  9990  004B92  0E1C               	movlw	28
  9991  004B94  6E05               	movwf	ETH_ReadBlock@length,c
  9992  004B96  ECD9  F03A         	call	_ETH_ReadBlock	;wreg free
  9993  004B9A  C003  F02F         	movff	?_ETH_ReadBlock,ARPV4_Packet@length
  9994  004B9E  C004  F030         	movff	?_ETH_ReadBlock+1,ARPV4_Packet@length+1
  9995                           
  9996                           ; BSR set to: 1
  9997                           ;arpv4.c: 108: if(length == sizeof(arpHeader_t))
  9998  004BA2  0E1C               	movlw	28
  9999  004BA4  182F               	xorwf	ARPV4_Packet@length,w,c
 10000  004BA6  1030               	iorwf	ARPV4_Packet@length+1,w,c
 10001  004BA8  A4D8               	btfss	status,2,c
 10002  004BAA  0012               	return	
 10003                           
 10004                           ; BSR set to: 1
 10005                           ;arpv4.c: 109: {
 10006                           ;arpv4.c: 111: mergeFlag = 0;
 10007  004BAC  6A31               	clrf	ARPV4_Packet@mergeFlag,c
 10008                           
 10009                           ; BSR set to: 1
 10010                           ;arpv4.c: 112: entryPointer = arpMap;
 10011  004BAE  0E00               	movlw	low _arpMap
 10012  004BB0  6E37               	movwf	ARPV4_Packet@entryPointer,c
 10013  004BB2  0E03               	movlw	high _arpMap
 10014  004BB4  6E38               	movwf	ARPV4_Packet@entryPointer+1,c
 10015                           
 10016                           ; BSR set to: 1
 10017                           ;arpv4.c: 114: for(uint8_t x=8; x > 0; x--)
 10018  004BB6  0E08               	movlw	8
 10019  004BB8  6E35               	movwf	ARPV4_Packet@x,c
 10020  004BBA                     l9317:
 10021                           
 10022                           ; BSR set to: 1
 10023                           ;arpv4.c: 115: {
 10024                           ;arpv4.c: 116: if( (header.spa == entryPointer->ipAddress) && (header.ptype == entryPoin
      +                          ter->protocolType) )
 10025  004BBA  EE20 F006          	lfsr	2,6
 10026  004BBE  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10027  004BC0  26D9               	addwf	fsr2l,f,c
 10028  004BC2  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10029  004BC4  22DA               	addwfc	fsr2h,f,c
 10030  004BC6  50DE               	movf	postinc2,w,c
 10031  004BC8  1847               	xorwf	ARPV4_Packet@header+14,w,c
 10032  004BCA  E12A               	bnz	l9327
 10033  004BCC  50DE               	movf	postinc2,w,c
 10034  004BCE  1848               	xorwf	ARPV4_Packet@header+15,w,c
 10035  004BD0  E127               	bnz	l9327
 10036  004BD2  50DE               	movf	postinc2,w,c
 10037  004BD4  1849               	xorwf	ARPV4_Packet@header+16,w,c
 10038  004BD6  E124               	bnz	l9327
 10039  004BD8  50DE               	movf	postinc2,w,c
 10040  004BDA  184A               	xorwf	ARPV4_Packet@header+17,w,c
 10041  004BDC  E121               	bnz	l9327
 10042                           
 10043                           ; BSR set to: 1
 10044  004BDE  EE20 F00A          	lfsr	2,10
 10045  004BE2  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10046  004BE4  26D9               	addwf	fsr2l,f,c
 10047  004BE6  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10048  004BE8  22DA               	addwfc	fsr2h,f,c
 10049  004BEA  50DE               	movf	postinc2,w,c
 10050  004BEC  183B               	xorwf	ARPV4_Packet@header+2,w,c
 10051  004BEE  E118               	bnz	l9327
 10052  004BF0  50DE               	movf	postinc2,w,c
 10053  004BF2  183C               	xorwf	ARPV4_Packet@header+3,w,c
 10054  004BF4  E115               	bnz	l9327
 10055                           
 10056                           ; BSR set to: 1
 10057                           ;arpv4.c: 117: {
 10058                           ;arpv4.c: 118: entryPointer->age = 0;
 10059  004BF6  EE20 F00C          	lfsr	2,12
 10060  004BFA  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10061  004BFC  26D9               	addwf	fsr2l,f,c
 10062  004BFE  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10063  004C00  22DA               	addwfc	fsr2h,f,c
 10064  004C02  6ADF               	clrf	indf2,c
 10065                           
 10066                           ; BSR set to: 1
 10067                           ;arpv4.c: 119: entryPointer->macAddress.s = header.sha.s;
 10068  004C04  EE20  F041         	lfsr	2,ARPV4_Packet@header+8
 10069  004C08  C037  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 10070  004C0C  C038  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 10071  004C10  0E05               	movlw	5
 10072  004C12                     u14271:
 10073  004C12  CFDB FFE3          	movff	plusw2,plusw1
 10074  004C16  06E8               	decf	wreg,f,c
 10075  004C18  E2FC               	bc	u14271
 10076                           
 10077                           ; BSR set to: 1
 10078                           ;arpv4.c: 120: mergeFlag = 1;
 10079  004C1A  0E01               	movlw	1
 10080  004C1C  6E31               	movwf	ARPV4_Packet@mergeFlag,c
 10081                           
 10082                           ;arpv4.c: 121: break;
 10083  004C1E  D007               	goto	l9333
 10084  004C20                     l9327:
 10085                           
 10086                           ; BSR set to: 1
 10087                           ;arpv4.c: 122: }
 10088                           ;arpv4.c: 123: entryPointer++;
 10089  004C20  0E0D               	movlw	13
 10090  004C22  2637               	addwf	ARPV4_Packet@entryPointer,f,c
 10091  004C24  0E00               	movlw	0
 10092  004C26  2238               	addwfc	ARPV4_Packet@entryPointer+1,f,c
 10093                           
 10094                           ; BSR set to: 1
 10095  004C28  0635               	decf	ARPV4_Packet@x,f,c
 10096                           
 10097                           ; BSR set to: 1
 10098  004C2A  5035               	movf	ARPV4_Packet@x,w,c
 10099  004C2C  E1C6               	bnz	l9317
 10100  004C2E                     l9333:
 10101                           
 10102                           ; BSR set to: 1
 10103                           ;arpv4.c: 124: }
 10104                           ;arpv4.c: 126: if(ipv4Address && (ipv4Address == ((((uint32_t)header.tpa&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)header.tpa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.
      +                          tpa&(uint32_t)0x0000ff00) << 8) | (((uint32_t)header.tpa&(uint32_t)0x000000ff) << 24) ))
      +                          )
 10105  004C2E  518E               	movf	_ipv4Address& (0+255),w,b
 10106  004C30  118F               	iorwf	(_ipv4Address+1)& (0+255),w,b
 10107  004C32  1190               	iorwf	(_ipv4Address+2)& (0+255),w,b
 10108  004C34  1191               	iorwf	(_ipv4Address+3)& (0+255),w,b
 10109  004C36  B4D8               	btfsc	status,2,c
 10110  004C38  0012               	return	
 10111                           
 10112                           ; BSR set to: 1
 10113  004C3A  5051               	movf	ARPV4_Packet@header+24,w,c
 10114  004C3C  6E0F               	movwf	??_ARPV4_Packet& (0+255),c
 10115  004C3E  6A10               	clrf	(??_ARPV4_Packet+1)& (0+255),c
 10116  004C40  6A11               	clrf	(??_ARPV4_Packet+2)& (0+255),c
 10117  004C42  6A12               	clrf	(??_ARPV4_Packet+3)& (0+255),c
 10118  004C44  C00F  F012         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 10119  004C48  6A11               	clrf	??_ARPV4_Packet+2,c
 10120  004C4A  6A10               	clrf	??_ARPV4_Packet+1,c
 10121  004C4C  6A0F               	clrf	??_ARPV4_Packet,c
 10122  004C4E  EE20  F051         	lfsr	2,ARPV4_Packet@header+24
 10123  004C52  0E00               	movlw	0
 10124  004C54  14DE               	andwf	postinc2,w,c
 10125  004C56  6E13               	movwf	(??_ARPV4_Packet+4)& (0+255),c
 10126  004C58  0EFF               	movlw	255
 10127  004C5A  14DE               	andwf	postinc2,w,c
 10128  004C5C  6E14               	movwf	(??_ARPV4_Packet+5)& (0+255),c
 10129  004C5E  0E00               	movlw	0
 10130  004C60  14DE               	andwf	postinc2,w,c
 10131  004C62  6E15               	movwf	(??_ARPV4_Packet+6)& (0+255),c
 10132  004C64  0E00               	movlw	0
 10133  004C66  14DE               	andwf	postinc2,w,c
 10134  004C68  6E16               	movwf	(??_ARPV4_Packet+7)& (0+255),c
 10135  004C6A  C015  F016         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 10136  004C6E  C014  F015         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 10137  004C72  C013  F014         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 10138  004C76  6A13               	clrf	??_ARPV4_Packet+4,c
 10139  004C78  C051  F017         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+8
 10140  004C7C  C052  F018         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+9
 10141  004C80  C053  F019         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+10
 10142  004C84  C054  F01A         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+11
 10143  004C88  C018  F017         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 10144  004C8C  C019  F018         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 10145  004C90  C01A  F019         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 10146  004C94  6A1A               	clrf	??_ARPV4_Packet+11,c
 10147  004C96  6A1B               	clrf	(??_ARPV4_Packet+12)& (0+255),c
 10148  004C98  5018               	movf	??_ARPV4_Packet+9,w,c
 10149  004C9A  6E1C               	movwf	(??_ARPV4_Packet+13)& (0+255),c
 10150  004C9C  0E00               	movlw	0
 10151  004C9E  6A1D               	clrf	(??_ARPV4_Packet+14)& (0+255),c
 10152  004CA0  6A1E               	clrf	(??_ARPV4_Packet+15)& (0+255),c
 10153  004CA2  EE20  F051         	lfsr	2,ARPV4_Packet@header+24
 10154  004CA6  14DE               	andwf	postinc2,w,c
 10155  004CA8  6E1F               	movwf	(??_ARPV4_Packet+16)& (0+255),c
 10156  004CAA  0E00               	movlw	0
 10157  004CAC  14DE               	andwf	postinc2,w,c
 10158  004CAE  6E20               	movwf	(??_ARPV4_Packet+17)& (0+255),c
 10159  004CB0  0E00               	movlw	0
 10160  004CB2  14DE               	andwf	postinc2,w,c
 10161  004CB4  6E21               	movwf	(??_ARPV4_Packet+18)& (0+255),c
 10162  004CB6  0EFF               	movlw	255
 10163  004CB8  14DE               	andwf	postinc2,w,c
 10164  004CBA  6E22               	movwf	(??_ARPV4_Packet+19)& (0+255),c
 10165  004CBC  0E19               	movlw	25
 10166  004CBE  D005               	goto	u14300
 10167  004CC0                     u14305:
 10168  004CC0  90D8               	bcf	status,0,c
 10169  004CC2  3222               	rrcf	??_ARPV4_Packet+19,f,c
 10170  004CC4  3221               	rrcf	??_ARPV4_Packet+18,f,c
 10171  004CC6  3220               	rrcf	??_ARPV4_Packet+17,f,c
 10172  004CC8  321F               	rrcf	??_ARPV4_Packet+16,f,c
 10173  004CCA                     u14300:
 10174  004CCA  2EE8               	decfsz	wreg,f,c
 10175  004CCC  D7F9               	goto	u14305
 10176  004CCE  501B               	movf	??_ARPV4_Packet+12,w,c
 10177  004CD0  101F               	iorwf	??_ARPV4_Packet+16,w,c
 10178  004CD2  6E23               	movwf	(??_ARPV4_Packet+20)& (0+255),c
 10179  004CD4  501C               	movf	??_ARPV4_Packet+13,w,c
 10180  004CD6  1020               	iorwf	??_ARPV4_Packet+17,w,c
 10181  004CD8  6E24               	movwf	(??_ARPV4_Packet+21)& (0+255),c
 10182  004CDA  501D               	movf	??_ARPV4_Packet+14,w,c
 10183  004CDC  1021               	iorwf	??_ARPV4_Packet+18,w,c
 10184  004CDE  6E25               	movwf	(??_ARPV4_Packet+22)& (0+255),c
 10185  004CE0  501E               	movf	??_ARPV4_Packet+15,w,c
 10186  004CE2  1022               	iorwf	??_ARPV4_Packet+19,w,c
 10187  004CE4  6E26               	movwf	(??_ARPV4_Packet+23)& (0+255),c
 10188  004CE6  5013               	movf	??_ARPV4_Packet+4,w,c
 10189  004CE8  1023               	iorwf	??_ARPV4_Packet+20,w,c
 10190  004CEA  6E27               	movwf	(??_ARPV4_Packet+24)& (0+255),c
 10191  004CEC  5014               	movf	??_ARPV4_Packet+5,w,c
 10192  004CEE  1024               	iorwf	??_ARPV4_Packet+21,w,c
 10193  004CF0  6E28               	movwf	(??_ARPV4_Packet+25)& (0+255),c
 10194  004CF2  5015               	movf	??_ARPV4_Packet+6,w,c
 10195  004CF4  1025               	iorwf	??_ARPV4_Packet+22,w,c
 10196  004CF6  6E29               	movwf	(??_ARPV4_Packet+26)& (0+255),c
 10197  004CF8  5016               	movf	??_ARPV4_Packet+7,w,c
 10198  004CFA  1026               	iorwf	??_ARPV4_Packet+23,w,c
 10199  004CFC  6E2A               	movwf	(??_ARPV4_Packet+27)& (0+255),c
 10200  004CFE  500F               	movf	??_ARPV4_Packet,w,c
 10201  004D00  1027               	iorwf	??_ARPV4_Packet+24,w,c
 10202  004D02  6E2B               	movwf	(??_ARPV4_Packet+28)& (0+255),c
 10203  004D04  5010               	movf	??_ARPV4_Packet+1,w,c
 10204  004D06  1028               	iorwf	??_ARPV4_Packet+25,w,c
 10205  004D08  6E2C               	movwf	(??_ARPV4_Packet+29)& (0+255),c
 10206  004D0A  5011               	movf	??_ARPV4_Packet+2,w,c
 10207  004D0C  1029               	iorwf	??_ARPV4_Packet+26,w,c
 10208  004D0E  6E2D               	movwf	(??_ARPV4_Packet+30)& (0+255),c
 10209  004D10  5012               	movf	??_ARPV4_Packet+3,w,c
 10210  004D12  102A               	iorwf	??_ARPV4_Packet+27,w,c
 10211  004D14  6E2E               	movwf	(??_ARPV4_Packet+31)& (0+255),c
 10212  004D16  518E               	movf	_ipv4Address& (0+255),w,b
 10213  004D18  182B               	xorwf	??_ARPV4_Packet+28,w,c
 10214  004D1A  E109               	bnz	u14311
 10215  004D1C  518F               	movf	(_ipv4Address+1)& (0+255),w,b
 10216  004D1E  182C               	xorwf	??_ARPV4_Packet+29,w,c
 10217  004D20  E106               	bnz	u14311
 10218  004D22  5190               	movf	(_ipv4Address+2)& (0+255),w,b
 10219  004D24  182D               	xorwf	??_ARPV4_Packet+30,w,c
 10220  004D26  E103               	bnz	u14311
 10221  004D28  5191               	movf	(_ipv4Address+3)& (0+255),w,b
 10222  004D2A  182E               	xorwf	??_ARPV4_Packet+31,w,c
 10223  004D2C  A4D8               	btfss	status,2,c
 10224  004D2E                     u14311:
 10225  004D2E  0012               	return	
 10226                           
 10227                           ; BSR set to: 1
 10228                           ;arpv4.c: 127: {
 10229                           ;arpv4.c: 128: if(!mergeFlag)
 10230  004D30  5031               	movf	ARPV4_Packet@mergeFlag,w,c
 10231  004D32  E001 D0BC          	bnz	l9363
 10232                           
 10233                           ; BSR set to: 1
 10234                           ;arpv4.c: 129: {
 10235                           ;arpv4.c: 131: entryPointer = arpMap;
 10236  004D36  0E00               	movlw	low _arpMap
 10237  004D38  6E37               	movwf	ARPV4_Packet@entryPointer,c
 10238  004D3A  0E03               	movlw	high _arpMap
 10239  004D3C  6E38               	movwf	ARPV4_Packet@entryPointer+1,c
 10240                           
 10241                           ;arpv4.c: 132: arpMap_t *arpPtr = arpMap;
 10242  004D3E  0E00               	movlw	low _arpMap
 10243  004D40  6E33               	movwf	ARPV4_Packet@arpPtr,c
 10244  004D42  0E03               	movlw	high _arpMap
 10245  004D44  6E34               	movwf	ARPV4_Packet@arpPtr+1,c
 10246                           
 10247                           ; BSR set to: 1
 10248                           ;arpv4.c: 133: for(uint8_t x=8; x !=0; x--)
 10249  004D46  0E08               	movlw	8
 10250  004D48  6E36               	movwf	ARPV4_Packet@x_2060,c
 10251  004D4A                     l9347:
 10252                           
 10253                           ; BSR set to: 1
 10254                           ;arpv4.c: 134: {
 10255                           ;arpv4.c: 135: if(entryPointer->age < arpPtr->age)
 10256  004D4A  EE20 F00C          	lfsr	2,12
 10257  004D4E  5033               	movf	ARPV4_Packet@arpPtr,w,c
 10258  004D50  26D9               	addwf	fsr2l,f,c
 10259  004D52  5034               	movf	ARPV4_Packet@arpPtr+1,w,c
 10260  004D54  22DA               	addwfc	fsr2h,f,c
 10261  004D56  EE10 F00C          	lfsr	1,12
 10262  004D5A  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10263  004D5C  26E1               	addwf	fsr1l,f,c
 10264  004D5E  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10265  004D60  22E2               	addwfc	fsr1h,f,c
 10266  004D62  50DE               	movf	postinc2,w,c
 10267  004D64  5CE6               	subwf	postinc1,w,c
 10268  004D66  E204               	bc	l779
 10269                           
 10270                           ; BSR set to: 1
 10271                           ;arpv4.c: 136: {
 10272                           ;arpv4.c: 137: entryPointer = arpPtr;
 10273  004D68  C033  F037         	movff	ARPV4_Packet@arpPtr,ARPV4_Packet@entryPointer
 10274  004D6C  C034  F038         	movff	ARPV4_Packet@arpPtr+1,ARPV4_Packet@entryPointer+1
 10275  004D70                     l779:
 10276                           
 10277                           ; BSR set to: 1
 10278                           ;arpv4.c: 138: }
 10279                           ;arpv4.c: 140: arpPtr++;
 10280  004D70  0E0D               	movlw	13
 10281  004D72  2633               	addwf	ARPV4_Packet@arpPtr,f,c
 10282  004D74  0E00               	movlw	0
 10283  004D76  2234               	addwfc	ARPV4_Packet@arpPtr+1,f,c
 10284                           
 10285                           ; BSR set to: 1
 10286  004D78  0636               	decf	ARPV4_Packet@x_2060,f,c
 10287                           
 10288                           ; BSR set to: 1
 10289  004D7A  5036               	movf	ARPV4_Packet@x_2060,w,c
 10290  004D7C  E1E6               	bnz	l9347
 10291                           
 10292                           ; BSR set to: 1
 10293                           ;arpv4.c: 141: }
 10294                           ;arpv4.c: 144: entryPointer->age = 0;
 10295  004D7E  EE20 F00C          	lfsr	2,12
 10296  004D82  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10297  004D84  26D9               	addwf	fsr2l,f,c
 10298  004D86  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10299  004D88  22DA               	addwfc	fsr2h,f,c
 10300  004D8A  6ADF               	clrf	indf2,c
 10301                           
 10302                           ; BSR set to: 1
 10303                           ;arpv4.c: 145: entryPointer->macAddress.s = header.sha.s;
 10304  004D8C  EE20  F041         	lfsr	2,ARPV4_Packet@header+8
 10305  004D90  C037  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 10306  004D94  C038  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 10307  004D98  0E05               	movlw	5
 10308  004D9A                     u14351:
 10309  004D9A  CFDB FFE3          	movff	plusw2,plusw1
 10310  004D9E  06E8               	decf	wreg,f,c
 10311  004DA0  E2FC               	bc	u14351
 10312                           
 10313                           ; BSR set to: 1
 10314                           ;arpv4.c: 146: entryPointer->ipAddress = ((((uint32_t)header.spa&(uint32_t)0xff000000) >
      +                          > 24) | (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uin
      +                          t32_t)0x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) );
 10315  004DA2  5047               	movf	ARPV4_Packet@header+14,w,c
 10316  004DA4  6E0F               	movwf	??_ARPV4_Packet& (0+255),c
 10317  004DA6  6A10               	clrf	(??_ARPV4_Packet+1)& (0+255),c
 10318  004DA8  6A11               	clrf	(??_ARPV4_Packet+2)& (0+255),c
 10319  004DAA  6A12               	clrf	(??_ARPV4_Packet+3)& (0+255),c
 10320  004DAC  C00F  F012         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 10321  004DB0  6A11               	clrf	??_ARPV4_Packet+2,c
 10322  004DB2  6A10               	clrf	??_ARPV4_Packet+1,c
 10323  004DB4  6A0F               	clrf	??_ARPV4_Packet,c
 10324  004DB6  EE20  F047         	lfsr	2,ARPV4_Packet@header+14
 10325  004DBA  0E00               	movlw	0
 10326  004DBC  14DE               	andwf	postinc2,w,c
 10327  004DBE  6E13               	movwf	(??_ARPV4_Packet+4)& (0+255),c
 10328  004DC0  0EFF               	movlw	255
 10329  004DC2  14DE               	andwf	postinc2,w,c
 10330  004DC4  6E14               	movwf	(??_ARPV4_Packet+5)& (0+255),c
 10331  004DC6  0E00               	movlw	0
 10332  004DC8  14DE               	andwf	postinc2,w,c
 10333  004DCA  6E15               	movwf	(??_ARPV4_Packet+6)& (0+255),c
 10334  004DCC  0E00               	movlw	0
 10335  004DCE  14DE               	andwf	postinc2,w,c
 10336  004DD0  6E16               	movwf	(??_ARPV4_Packet+7)& (0+255),c
 10337  004DD2  C015  F016         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 10338  004DD6  C014  F015         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 10339  004DDA  C013  F014         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 10340  004DDE  6A13               	clrf	??_ARPV4_Packet+4,c
 10341  004DE0  C047  F017         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+8
 10342  004DE4  C048  F018         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+9
 10343  004DE8  C049  F019         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+10
 10344  004DEC  C04A  F01A         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+11
 10345  004DF0  C018  F017         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 10346  004DF4  C019  F018         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 10347  004DF8  C01A  F019         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 10348  004DFC  6A1A               	clrf	??_ARPV4_Packet+11,c
 10349  004DFE  6A1B               	clrf	(??_ARPV4_Packet+12)& (0+255),c
 10350  004E00  5018               	movf	??_ARPV4_Packet+9,w,c
 10351  004E02  6E1C               	movwf	(??_ARPV4_Packet+13)& (0+255),c
 10352  004E04  0E00               	movlw	0
 10353  004E06  6A1D               	clrf	(??_ARPV4_Packet+14)& (0+255),c
 10354  004E08  6A1E               	clrf	(??_ARPV4_Packet+15)& (0+255),c
 10355  004E0A  EE20  F047         	lfsr	2,ARPV4_Packet@header+14
 10356  004E0E  14DE               	andwf	postinc2,w,c
 10357  004E10  6E1F               	movwf	(??_ARPV4_Packet+16)& (0+255),c
 10358  004E12  0E00               	movlw	0
 10359  004E14  14DE               	andwf	postinc2,w,c
 10360  004E16  6E20               	movwf	(??_ARPV4_Packet+17)& (0+255),c
 10361  004E18  0E00               	movlw	0
 10362  004E1A  14DE               	andwf	postinc2,w,c
 10363  004E1C  6E21               	movwf	(??_ARPV4_Packet+18)& (0+255),c
 10364  004E1E  0EFF               	movlw	255
 10365  004E20  14DE               	andwf	postinc2,w,c
 10366  004E22  6E22               	movwf	(??_ARPV4_Packet+19)& (0+255),c
 10367  004E24  0E19               	movlw	25
 10368  004E26  D005               	goto	u14360
 10369  004E28                     u14365:
 10370  004E28  90D8               	bcf	status,0,c
 10371  004E2A  3222               	rrcf	??_ARPV4_Packet+19,f,c
 10372  004E2C  3221               	rrcf	??_ARPV4_Packet+18,f,c
 10373  004E2E  3220               	rrcf	??_ARPV4_Packet+17,f,c
 10374  004E30  321F               	rrcf	??_ARPV4_Packet+16,f,c
 10375  004E32                     u14360:
 10376  004E32  2EE8               	decfsz	wreg,f,c
 10377  004E34  D7F9               	goto	u14365
 10378  004E36  501B               	movf	??_ARPV4_Packet+12,w,c
 10379  004E38  101F               	iorwf	??_ARPV4_Packet+16,w,c
 10380  004E3A  6E23               	movwf	(??_ARPV4_Packet+20)& (0+255),c
 10381  004E3C  501C               	movf	??_ARPV4_Packet+13,w,c
 10382  004E3E  1020               	iorwf	??_ARPV4_Packet+17,w,c
 10383  004E40  6E24               	movwf	(??_ARPV4_Packet+21)& (0+255),c
 10384  004E42  501D               	movf	??_ARPV4_Packet+14,w,c
 10385  004E44  1021               	iorwf	??_ARPV4_Packet+18,w,c
 10386  004E46  6E25               	movwf	(??_ARPV4_Packet+22)& (0+255),c
 10387  004E48  501E               	movf	??_ARPV4_Packet+15,w,c
 10388  004E4A  1022               	iorwf	??_ARPV4_Packet+19,w,c
 10389  004E4C  6E26               	movwf	(??_ARPV4_Packet+23)& (0+255),c
 10390  004E4E  5013               	movf	??_ARPV4_Packet+4,w,c
 10391  004E50  1023               	iorwf	??_ARPV4_Packet+20,w,c
 10392  004E52  6E27               	movwf	(??_ARPV4_Packet+24)& (0+255),c
 10393  004E54  5014               	movf	??_ARPV4_Packet+5,w,c
 10394  004E56  1024               	iorwf	??_ARPV4_Packet+21,w,c
 10395  004E58  6E28               	movwf	(??_ARPV4_Packet+25)& (0+255),c
 10396  004E5A  5015               	movf	??_ARPV4_Packet+6,w,c
 10397  004E5C  1025               	iorwf	??_ARPV4_Packet+22,w,c
 10398  004E5E  6E29               	movwf	(??_ARPV4_Packet+26)& (0+255),c
 10399  004E60  5016               	movf	??_ARPV4_Packet+7,w,c
 10400  004E62  1026               	iorwf	??_ARPV4_Packet+23,w,c
 10401  004E64  6E2A               	movwf	(??_ARPV4_Packet+27)& (0+255),c
 10402  004E66  500F               	movf	??_ARPV4_Packet,w,c
 10403  004E68  1027               	iorwf	??_ARPV4_Packet+24,w,c
 10404  004E6A  6E2B               	movwf	(??_ARPV4_Packet+28)& (0+255),c
 10405  004E6C  5010               	movf	??_ARPV4_Packet+1,w,c
 10406  004E6E  1028               	iorwf	??_ARPV4_Packet+25,w,c
 10407  004E70  6E2C               	movwf	(??_ARPV4_Packet+29)& (0+255),c
 10408  004E72  5011               	movf	??_ARPV4_Packet+2,w,c
 10409  004E74  1029               	iorwf	??_ARPV4_Packet+26,w,c
 10410  004E76  6E2D               	movwf	(??_ARPV4_Packet+30)& (0+255),c
 10411  004E78  5012               	movf	??_ARPV4_Packet+3,w,c
 10412  004E7A  102A               	iorwf	??_ARPV4_Packet+27,w,c
 10413  004E7C  6E2E               	movwf	(??_ARPV4_Packet+31)& (0+255),c
 10414  004E7E  EE20 F006          	lfsr	2,6
 10415  004E82  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10416  004E84  26D9               	addwf	fsr2l,f,c
 10417  004E86  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10418  004E88  22DA               	addwfc	fsr2h,f,c
 10419  004E8A  C02B  FFDE         	movff	??_ARPV4_Packet+28,postinc2
 10420  004E8E  C02C  FFDE         	movff	??_ARPV4_Packet+29,postinc2
 10421  004E92  C02D  FFDE         	movff	??_ARPV4_Packet+30,postinc2
 10422  004E96  C02E  FFDE         	movff	??_ARPV4_Packet+31,postinc2
 10423                           
 10424                           ; BSR set to: 1
 10425                           ;arpv4.c: 147: entryPointer->protocolType = header.ptype;
 10426  004E9A  EE20 F00A          	lfsr	2,10
 10427  004E9E  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10428  004EA0  26D9               	addwf	fsr2l,f,c
 10429  004EA2  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10430  004EA4  22DA               	addwfc	fsr2h,f,c
 10431  004EA6  C03B  FFDE         	movff	ARPV4_Packet@header+2,postinc2
 10432  004EAA  C03C  FFDD         	movff	ARPV4_Packet@header+3,postdec2
 10433  004EAE                     l9363:
 10434                           
 10435                           ; BSR set to: 1
 10436                           ;arpv4.c: 148: }
 10437                           ;arpv4.c: 149: if(header.oper == ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)
      +                          1 & (uint16_t)0x00FF) << 8)))
 10438  004EAE  0440               	decf	ARPV4_Packet@header+7,w,c
 10439  004EB0  103F               	iorwf	ARPV4_Packet@header+6,w,c
 10440  004EB2  A4D8               	btfss	status,2,c
 10441  004EB4  0012               	return	
 10442                           
 10443                           ; BSR set to: 1
 10444                           ;arpv4.c: 150: {
 10445                           ;arpv4.c: 151: ret = ETH_WriteStart(&header.sha ,0x0806);
 10446  004EB6  0E41               	movlw	low (ARPV4_Packet@header+8)
 10447  004EB8  6E0B               	movwf	ETH_WriteStart@destMAC,c
 10448  004EBA  6A0C               	clrf	ETH_WriteStart@destMAC+1,c
 10449  004EBC  0E08               	movlw	8
 10450  004EBE  6E0E               	movwf	ETH_WriteStart@type+1,c
 10451  004EC0  0E06               	movlw	6
 10452  004EC2  6E0D               	movwf	ETH_WriteStart@type,c
 10453  004EC4  EC7F  F03E         	call	_ETH_WriteStart	;wreg free
 10454  004EC8  6E32               	movwf	ARPV4_Packet@ret,c
 10455                           
 10456                           ;arpv4.c: 152: if(ret == SUCCESS)
 10457  004ECA  0432               	decf	ARPV4_Packet@ret,w,c
 10458  004ECC  A4D8               	btfss	status,2,c
 10459  004ECE  0012               	return	
 10460                           
 10461                           ;arpv4.c: 153: {
 10462                           ;arpv4.c: 155: header.tha.s = header.sha.s;
 10463  004ED0  EE20  F041         	lfsr	2,ARPV4_Packet@header+8
 10464  004ED4  EE10  F04B         	lfsr	1,ARPV4_Packet@header+18
 10465  004ED8  0E05               	movlw	5
 10466  004EDA                     u14391:
 10467  004EDA  CFDB FFE3          	movff	plusw2,plusw1
 10468  004EDE  06E8               	decf	wreg,f,c
 10469  004EE0  E2FC               	bc	u14391
 10470                           
 10471                           ;arpv4.c: 156: ETH_GetMAC((char*)&header.sha.s);
 10472  004EE2  0E41               	movlw	low (ARPV4_Packet@header+8)
 10473  004EE4  6E08               	movwf	ETH_GetMAC@macAddr,c
 10474  004EE6  6A09               	clrf	ETH_GetMAC@macAddr+1,c
 10475  004EE8  ECB6  F03C         	call	_ETH_GetMAC	;wreg free
 10476                           
 10477                           ;arpv4.c: 157: header.tpa = header.spa;
 10478  004EEC  C047  F051         	movff	ARPV4_Packet@header+14,ARPV4_Packet@header+24
 10479  004EF0  C048  F052         	movff	ARPV4_Packet@header+15,ARPV4_Packet@header+25
 10480  004EF4  C049  F053         	movff	ARPV4_Packet@header+16,ARPV4_Packet@header+26
 10481  004EF8  C04A  F054         	movff	ARPV4_Packet@header+17,ARPV4_Packet@header+27
 10482                           
 10483                           ;arpv4.c: 158: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
 10484  004EFC  0101               	movlb	1	; () banked
 10485  004EFE  518E               	movf	_ipv4Address& (0+255),w,b
 10486  004F00  6E0F               	movwf	??_ARPV4_Packet& (0+255),c
 10487  004F02  6A10               	clrf	(??_ARPV4_Packet+1)& (0+255),c
 10488  004F04  6A11               	clrf	(??_ARPV4_Packet+2)& (0+255),c
 10489  004F06  6A12               	clrf	(??_ARPV4_Packet+3)& (0+255),c
 10490  004F08  C00F  F012         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 10491  004F0C  6A11               	clrf	??_ARPV4_Packet+2,c
 10492  004F0E  6A10               	clrf	??_ARPV4_Packet+1,c
 10493  004F10  6A0F               	clrf	??_ARPV4_Packet,c
 10494  004F12  6A13               	clrf	(??_ARPV4_Packet+4)& (0+255),c
 10495  004F14  518F               	movf	(_ipv4Address+1)& (0+255),w,b
 10496  004F16  6E14               	movwf	(??_ARPV4_Packet+5)& (0+255),c
 10497  004F18  6A15               	clrf	(??_ARPV4_Packet+6)& (0+255),c
 10498  004F1A  6A16               	clrf	(??_ARPV4_Packet+7)& (0+255),c
 10499  004F1C  C015  F016         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 10500  004F20  C014  F015         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 10501  004F24  C013  F014         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 10502  004F28  6A13               	clrf	??_ARPV4_Packet+4,c
 10503  004F2A  6A17               	clrf	(??_ARPV4_Packet+8)& (0+255),c
 10504  004F2C  5190               	movf	(_ipv4Address+2)& (0+255),w,b
 10505  004F2E  6E18               	movwf	(??_ARPV4_Packet+9)& (0+255),c
 10506  004F30  6A19               	clrf	(??_ARPV4_Packet+10)& (0+255),c
 10507  004F32  5017               	movf	??_ARPV4_Packet+8,w,c
 10508  004F34  6E1A               	movwf	(??_ARPV4_Packet+11)& (0+255),c
 10509  004F36  5018               	movf	??_ARPV4_Packet+9,w,c
 10510  004F38  6E1B               	movwf	(??_ARPV4_Packet+12)& (0+255),c
 10511  004F3A  5019               	movf	??_ARPV4_Packet+10,w,c
 10512  004F3C  6E1C               	movwf	(??_ARPV4_Packet+13)& (0+255),c
 10513  004F3E  6A1D               	clrf	(??_ARPV4_Packet+14)& (0+255),c
 10514  004F40  6A1E               	clrf	(??_ARPV4_Packet+15)& (0+255),c
 10515  004F42  6A1F               	clrf	(??_ARPV4_Packet+16)& (0+255),c
 10516  004F44  6A20               	clrf	(??_ARPV4_Packet+17)& (0+255),c
 10517  004F46  5191               	movf	(_ipv4Address+3)& (0+255),w,b
 10518  004F48  6E21               	movwf	(??_ARPV4_Packet+18)& (0+255),c
 10519  004F4A  0E19               	movlw	25
 10520  004F4C  D005               	goto	u14400
 10521  004F4E                     u14405:
 10522  004F4E  90D8               	bcf	status,0,c
 10523  004F50  3221               	rrcf	??_ARPV4_Packet+18,f,c
 10524  004F52  3220               	rrcf	??_ARPV4_Packet+17,f,c
 10525  004F54  321F               	rrcf	??_ARPV4_Packet+16,f,c
 10526  004F56  321E               	rrcf	??_ARPV4_Packet+15,f,c
 10527  004F58                     u14400:
 10528  004F58  2EE8               	decfsz	wreg,f,c
 10529  004F5A  D7F9               	goto	u14405
 10530  004F5C  501A               	movf	??_ARPV4_Packet+11,w,c
 10531  004F5E  101E               	iorwf	??_ARPV4_Packet+15,w,c
 10532  004F60  6E22               	movwf	(??_ARPV4_Packet+19)& (0+255),c
 10533  004F62  501B               	movf	??_ARPV4_Packet+12,w,c
 10534  004F64  101F               	iorwf	??_ARPV4_Packet+16,w,c
 10535  004F66  6E23               	movwf	(??_ARPV4_Packet+20)& (0+255),c
 10536  004F68  501C               	movf	??_ARPV4_Packet+13,w,c
 10537  004F6A  1020               	iorwf	??_ARPV4_Packet+17,w,c
 10538  004F6C  6E24               	movwf	(??_ARPV4_Packet+21)& (0+255),c
 10539  004F6E  501D               	movf	??_ARPV4_Packet+14,w,c
 10540  004F70  1021               	iorwf	??_ARPV4_Packet+18,w,c
 10541  004F72  6E25               	movwf	(??_ARPV4_Packet+22)& (0+255),c
 10542  004F74  5013               	movf	??_ARPV4_Packet+4,w,c
 10543  004F76  1022               	iorwf	??_ARPV4_Packet+19,w,c
 10544  004F78  6E26               	movwf	(??_ARPV4_Packet+23)& (0+255),c
 10545  004F7A  5014               	movf	??_ARPV4_Packet+5,w,c
 10546  004F7C  1023               	iorwf	??_ARPV4_Packet+20,w,c
 10547  004F7E  6E27               	movwf	(??_ARPV4_Packet+24)& (0+255),c
 10548  004F80  5015               	movf	??_ARPV4_Packet+6,w,c
 10549  004F82  1024               	iorwf	??_ARPV4_Packet+21,w,c
 10550  004F84  6E28               	movwf	(??_ARPV4_Packet+25)& (0+255),c
 10551  004F86  5016               	movf	??_ARPV4_Packet+7,w,c
 10552  004F88  1025               	iorwf	??_ARPV4_Packet+22,w,c
 10553  004F8A  6E29               	movwf	(??_ARPV4_Packet+26)& (0+255),c
 10554  004F8C  500F               	movf	??_ARPV4_Packet,w,c
 10555  004F8E  1026               	iorwf	??_ARPV4_Packet+23,w,c
 10556  004F90  6E47               	movwf	ARPV4_Packet@header+14,c
 10557  004F92  5010               	movf	??_ARPV4_Packet+1,w,c
 10558  004F94  1027               	iorwf	??_ARPV4_Packet+24,w,c
 10559  004F96  6E48               	movwf	ARPV4_Packet@header+15,c
 10560  004F98  5011               	movf	??_ARPV4_Packet+2,w,c
 10561  004F9A  1028               	iorwf	??_ARPV4_Packet+25,w,c
 10562  004F9C  6E49               	movwf	ARPV4_Packet@header+16,c
 10563  004F9E  5012               	movf	??_ARPV4_Packet+3,w,c
 10564  004FA0  1029               	iorwf	??_ARPV4_Packet+26,w,c
 10565  004FA2  6E4A               	movwf	ARPV4_Packet@header+17,c
 10566                           
 10567                           ; BSR set to: 1
 10568                           ;arpv4.c: 159: header.oper = ((((uint16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & 
      +                          (uint16_t)0x00FF) << 8));
 10569  004FA4  0E02               	movlw	2
 10570  004FA6  6E40               	movwf	ARPV4_Packet@header+7,c
 10571  004FA8  6A3F               	clrf	ARPV4_Packet@header+6,c
 10572                           
 10573                           ; BSR set to: 1
 10574                           ;arpv4.c: 160: ETH_WriteBlock((char*)&header,sizeof(header));
 10575  004FAA  0E39               	movlw	low ARPV4_Packet@header
 10576  004FAC  6E03               	movwf	ETH_WriteBlock@data,c
 10577  004FAE  6A04               	clrf	ETH_WriteBlock@data+1,c
 10578  004FB0  6A06               	clrf	ETH_WriteBlock@len+1,c
 10579  004FB2  0E1C               	movlw	28
 10580  004FB4  6E05               	movwf	ETH_WriteBlock@len,c
 10581  004FB6  ECFE  F03D         	call	_ETH_WriteBlock	;wreg free
 10582  004FBA  EFE5  F042         	goto	_ETH_Send	;wreg free
 10583  004FBE                     __end_of_ARPV4_Packet:
 10584                           	opt stack 0
 10585                           tosu	equ	0xFFF
 10586                           tosh	equ	0xFFE
 10587                           tosl	equ	0xFFD
 10588                           pclath	equ	0xFFA
 10589                           tblptru	equ	0xFF8
 10590                           tblptrh	equ	0xFF7
 10591                           tblptrl	equ	0xFF6
 10592                           tablat	equ	0xFF5
 10593                           prodh	equ	0xFF4
 10594                           prodl	equ	0xFF3
 10595                           intcon	equ	0xFF2
 10596                           intcon2	equ	0xFF1
 10597                           indf0	equ	0xFEF
 10598                           postinc0	equ	0xFEE
 10599                           fsr0h	equ	0xFEA
 10600                           fsr0l	equ	0xFE9
 10601                           wreg	equ	0xFE8
 10602                           postinc1	equ	0xFE6
 10603                           plusw1	equ	0xFE3
 10604                           fsr1h	equ	0xFE2
 10605                           fsr1l	equ	0xFE1
 10606                           indf2	equ	0xFDF
 10607                           postinc2	equ	0xFDE
 10608                           postdec2	equ	0xFDD
 10609                           plusw2	equ	0xFDB
 10610                           fsr2h	equ	0xFDA
 10611                           fsr2l	equ	0xFD9
 10612                           status	equ	0xFD8
 10613                           
 10614 ;; *************** function _ETH_EventHandler *****************
 10615 ;; Defined at:
 10616 ;;		line 215 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 10617 ;; Parameters:    Size  Location     Type
 10618 ;;		None
 10619 ;; Auto vars:     Size  Location     Type
 10620 ;;  eirVal          2   16[COMRAM] unsigned int 
 10621 ;;  estatVal        2   14[COMRAM] unsigned int 
 10622 ;;  macon2Val       2   12[COMRAM] unsigned int 
 10623 ;;  mabbipgVal      2   10[COMRAM] unsigned int 
 10624 ;; Return value:  Size  Location     Type
 10625 ;;		None               void
 10626 ;; Registers used:
 10627 ;;		wreg, status,2, status,0, cstack
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/1
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10634 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10636 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10637 ;;Total ram usage:        8 bytes
 10638 ;; Hardware stack levels used:    1
 10639 ;; Hardware stack levels required when called:    7
 10640 ;; This function calls:
 10641 ;;		_ENCx24_BFC
 10642 ;;		_ENCx24_Read
 10643 ;;		_ENCx24_Write
 10644 ;;		_ETH_ResetReceiver
 10645 ;; This function is called by:
 10646 ;;		_Network_Manage
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           	psect	text49
 10651  0073D0                     __ptext49:
 10652                           	opt stack 0
 10653  0073D0                     _ETH_EventHandler:
 10654                           	opt stack 22
 10655                           
 10656                           ;encX24J600_driver.c: 217: uint16_t eirVal,estatVal,mabbipgVal,macon2Val;
 10657                           ;encX24J600_driver.c: 219: estatVal = ENCx24_Read(XJ600_ESTATL);
 10658                           
 10659                           ;incstack = 0
 10660  0073D0  0EFA               	movlw	250
 10661  0073D2  ECDF  F03F         	call	_ENCx24_Read
 10662  0073D6  C005  F00F         	movff	?_ENCx24_Read,ETH_EventHandler@estatVal
 10663  0073DA  C006  F010         	movff	?_ENCx24_Read+1,ETH_EventHandler@estatVal+1
 10664                           
 10665                           ;encX24J600_driver.c: 222: eirVal = ENCx24_Read(XJ600_EIRL);
 10666  0073DE  0EFC               	movlw	252
 10667  0073E0  ECDF  F03F         	call	_ENCx24_Read
 10668  0073E4  C005  F011         	movff	?_ENCx24_Read,ETH_EventHandler@eirVal
 10669  0073E8  C006  F012         	movff	?_ENCx24_Read+1,ETH_EventHandler@eirVal+1
 10670                           
 10671                           ;encX24J600_driver.c: 224: if (eirVal !=0 )
 10672  0073EC  5011               	movf	ETH_EventHandler@eirVal,w,c
 10673  0073EE  1012               	iorwf	ETH_EventHandler@eirVal+1,w,c
 10674  0073F0  B4D8               	btfsc	status,2,c
 10675  0073F2  0012               	return	
 10676                           
 10677                           ;encX24J600_driver.c: 225: {
 10678                           ;encX24J600_driver.c: 226: if (eirVal & 0x0800)
 10679  0073F4  A612               	btfss	ETH_EventHandler@eirVal+1,3,c
 10680  0073F6  D029               	goto	l9653
 10681                           
 10682                           ;encX24J600_driver.c: 227: {
 10683                           ;encX24J600_driver.c: 228: ethData.linkChange = 1;
 10684  0073F8  0101               	movlb	1	; () banked
 10685  0073FA  8983               	bsf	_ethData& (0+255),4,b	;volatile
 10686                           
 10687                           ; BSR set to: 1
 10688                           ;encX24J600_driver.c: 229: macon2Val = ENCx24_Read(XJ600_MACON2L);
 10689  0073FC  0E42               	movlw	66
 10690  0073FE  ECDF  F03F         	call	_ENCx24_Read
 10691  007402  C005  F00D         	movff	?_ENCx24_Read,ETH_EventHandler@macon2Val
 10692  007406  C006  F00E         	movff	?_ENCx24_Read+1,ETH_EventHandler@macon2Val+1
 10693                           
 10694                           ;encX24J600_driver.c: 231: ethData.up = 0;
 10695  00740A  0101               	movlb	1	; () banked
 10696  00740C  9583               	bcf	_ethData& (0+255),2,b	;volatile
 10697                           
 10698                           ; BSR set to: 1
 10699                           ;encX24J600_driver.c: 232: if(estatVal & 0x0100)
 10700  00740E  B010               	btfsc	ETH_EventHandler@estatVal+1,0,c
 10701                           
 10702                           ; BSR set to: 1
 10703                           ;encX24J600_driver.c: 233: {
 10704                           ;encX24J600_driver.c: 234: ethData.up = 1;
 10705  007410  8583               	bsf	_ethData& (0+255),2,b	;volatile
 10706                           
 10707                           ; BSR set to: 1
 10708                           ;encX24J600_driver.c: 235: }
 10709                           ;encX24J600_driver.c: 238: if (estatVal & 0x0400)
 10710  007412  A410               	btfss	ETH_EventHandler@estatVal+1,2,c
 10711  007414  D005               	goto	l9645
 10712                           
 10713                           ; BSR set to: 1
 10714                           ;encX24J600_driver.c: 239: {
 10715                           ;encX24J600_driver.c: 241: mabbipgVal = 0x15;
 10716  007416  6A0C               	clrf	ETH_EventHandler@mabbipgVal+1,c
 10717  007418  0E15               	movlw	21
 10718  00741A  6E0B               	movwf	ETH_EventHandler@mabbipgVal,c
 10719                           
 10720                           ; BSR set to: 1
 10721                           ;encX24J600_driver.c: 242: macon2Val |= 0x0001;
 10722  00741C  800D               	bsf	ETH_EventHandler@macon2Val,0,c
 10723                           
 10724                           ;encX24J600_driver.c: 243: }
 10725  00741E  D007               	goto	l9649
 10726  007420                     l9645:
 10727                           
 10728                           ; BSR set to: 1
 10729                           ;encX24J600_driver.c: 244: else
 10730                           ;encX24J600_driver.c: 245: {
 10731                           ;encX24J600_driver.c: 247: mabbipgVal = 0x12;
 10732  007420  6A0C               	clrf	ETH_EventHandler@mabbipgVal+1,c
 10733  007422  0E12               	movlw	18
 10734  007424  6E0B               	movwf	ETH_EventHandler@mabbipgVal,c
 10735                           
 10736                           ; BSR set to: 1
 10737                           ;encX24J600_driver.c: 248: macon2Val |= 0xFFFE;
 10738  007426  0EFE               	movlw	254
 10739  007428  120D               	iorwf	ETH_EventHandler@macon2Val,f,c
 10740  00742A  0EFF               	movlw	255
 10741  00742C  120E               	iorwf	ETH_EventHandler@macon2Val+1,f,c
 10742  00742E                     l9649:
 10743                           
 10744                           ; BSR set to: 1
 10745                           ;encX24J600_driver.c: 249: }
 10746                           ;encX24J600_driver.c: 250: ENCx24_Write(XJ600_MABBIPGL,mabbipgVal);
 10747  00742E  C00B  F005         	movff	ETH_EventHandler@mabbipgVal,ENCx24_Write@data
 10748  007432  C00C  F006         	movff	ETH_EventHandler@mabbipgVal+1,ENCx24_Write@data+1
 10749  007436  0E44               	movlw	68
 10750  007438  EC91  F040         	call	_ENCx24_Write
 10751                           
 10752                           ;encX24J600_driver.c: 251: ENCx24_Write(XJ600_MACON2L, macon2Val);
 10753  00743C  C00D  F005         	movff	ETH_EventHandler@macon2Val,ENCx24_Write@data
 10754  007440  C00E  F006         	movff	ETH_EventHandler@macon2Val+1,ENCx24_Write@data+1
 10755  007444  0E42               	movlw	66
 10756  007446  EC91  F040         	call	_ENCx24_Write
 10757  00744A                     l9653:
 10758                           
 10759                           ;encX24J600_driver.c: 252: }
 10760                           ;encX24J600_driver.c: 253: if(eirVal & 0x0008)
 10761  00744A  A611               	btfss	ETH_EventHandler@eirVal,3,c
 10762  00744C  D002               	goto	l448
 10763                           
 10764                           ;encX24J600_driver.c: 254: {
 10765                           ;encX24J600_driver.c: 255: ethData.bufferBusy = 0;
 10766  00744E  0101               	movlb	1	; () banked
 10767  007450  9B83               	bcf	_ethData& (0+255),5,b	;volatile
 10768  007452                     l448:
 10769                           
 10770                           ;encX24J600_driver.c: 256: }
 10771                           ;encX24J600_driver.c: 257: if((eirVal & 0x0002 )|| (eirVal & 0x0001))
 10772  007452  A211               	btfss	ETH_EventHandler@eirVal,1,c
 10773  007454  B011               	btfsc	ETH_EventHandler@eirVal,0,c
 10774                           
 10775                           ;encX24J600_driver.c: 258: {
 10776                           ;encX24J600_driver.c: 259: ETH_ResetReceiver();
 10777  007456  ECD3  F03E         	call	_ETH_ResetReceiver	;wreg free
 10778                           
 10779                           ;encX24J600_driver.c: 260: }
 10780                           ;encX24J600_driver.c: 262: if(estatVal & 0x00FF || eirVal & 0x0040)
 10781  00745A  500F               	movf	ETH_EventHandler@estatVal,w,c
 10782  00745C  E102               	bnz	l454
 10783  00745E  AC11               	btfss	ETH_EventHandler@eirVal,6,c
 10784  007460  D003               	goto	l9667
 10785  007462                     l454:
 10786                           
 10787                           ;encX24J600_driver.c: 263: {
 10788                           ;encX24J600_driver.c: 264: if(ethData.pktReady == 0)
 10789  007462  0101               	movlb	1	; () banked
 10790  007464  A383               	btfss	_ethData& (0+255),1,b	;volatile
 10791                           
 10792                           ; BSR set to: 1
 10793                           ;encX24J600_driver.c: 265: {
 10794                           ;encX24J600_driver.c: 266: ethData.pktReady = 1;
 10795  007466  8383               	bsf	_ethData& (0+255),1,b	;volatile
 10796  007468                     l9667:
 10797                           
 10798                           ;encX24J600_driver.c: 267: }
 10799                           ;encX24J600_driver.c: 268: }
 10800                           ;encX24J600_driver.c: 269: ENCx24_BFC(XJ600_EIRL,eirVal);
 10801  007468  C011  F005         	movff	ETH_EventHandler@eirVal,ENCx24_BFC@bitMask
 10802  00746C  C012  F006         	movff	ETH_EventHandler@eirVal+1,ENCx24_BFC@bitMask+1
 10803  007470  0EFC               	movlw	252
 10804  007472  EFD2  F040         	goto	_ENCx24_BFC
 10805  007476                     __end_of_ETH_EventHandler:
 10806                           	opt stack 0
 10807                           tosu	equ	0xFFF
 10808                           tosh	equ	0xFFE
 10809                           tosl	equ	0xFFD
 10810                           pclath	equ	0xFFA
 10811                           tblptru	equ	0xFF8
 10812                           tblptrh	equ	0xFF7
 10813                           tblptrl	equ	0xFF6
 10814                           tablat	equ	0xFF5
 10815                           prodh	equ	0xFF4
 10816                           prodl	equ	0xFF3
 10817                           intcon	equ	0xFF2
 10818                           intcon2	equ	0xFF1
 10819                           indf0	equ	0xFEF
 10820                           postinc0	equ	0xFEE
 10821                           fsr0h	equ	0xFEA
 10822                           fsr0l	equ	0xFE9
 10823                           wreg	equ	0xFE8
 10824                           postinc1	equ	0xFE6
 10825                           plusw1	equ	0xFE3
 10826                           fsr1h	equ	0xFE2
 10827                           fsr1l	equ	0xFE1
 10828                           indf2	equ	0xFDF
 10829                           postinc2	equ	0xFDE
 10830                           postdec2	equ	0xFDD
 10831                           plusw2	equ	0xFDB
 10832                           fsr2h	equ	0xFDA
 10833                           fsr2l	equ	0xFD9
 10834                           status	equ	0xFD8
 10835                           
 10836 ;; *************** function _ETH_ResetReceiver *****************
 10837 ;; Defined at:
 10838 ;;		line 302 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 10839 ;; Parameters:    Size  Location     Type
 10840 ;;		None
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;		None
 10843 ;; Return value:  Size  Location     Type
 10844 ;;		None               void
 10845 ;; Registers used:
 10846 ;;		wreg, status,2, status,0, cstack
 10847 ;; Tracked objects:
 10848 ;;		On entry : 0/1
 10849 ;;		On exit  : 0/0
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10856 ;;Total ram usage:        0 bytes
 10857 ;; Hardware stack levels used:    1
 10858 ;; Hardware stack levels required when called:    6
 10859 ;; This function calls:
 10860 ;;		_ENCx24_BFC
 10861 ;;		_ENCx24_BFS
 10862 ;;		_ENCx24_Write
 10863 ;; This function is called by:
 10864 ;;		_ETH_EventHandler
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           	psect	text50
 10869  007DA6                     __ptext50:
 10870                           	opt stack 0
 10871  007DA6                     _ETH_ResetReceiver:
 10872                           	opt stack 22
 10873                           
 10874                           ;encX24J600_driver.c: 304: ENCx24_BFS(XJ600_ECON2L, 0x0020);
 10875                           
 10876                           ;incstack = 0
 10877  007DA6  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 10878  007DA8  0E20               	movlw	32
 10879  007DAA  6E05               	movwf	ENCx24_BFS@bitMask,c
 10880  007DAC  0E6E               	movlw	110
 10881  007DAE  ECB2  F040         	call	_ENCx24_BFS
 10882                           
 10883                           ;encX24J600_driver.c: 305: ENCx24_BFC(XJ600_ECON2L, 0x0020);
 10884  007DB2  6A06               	clrf	ENCx24_BFC@bitMask+1,c
 10885  007DB4  0E20               	movlw	32
 10886  007DB6  6E05               	movwf	ENCx24_BFC@bitMask,c
 10887  007DB8  0E6E               	movlw	110
 10888  007DBA  ECD2  F040         	call	_ENCx24_BFC
 10889                           
 10890                           ;encX24J600_driver.c: 307: ENCx24_BFC(XJ600_ECON1L, 0x0001);
 10891  007DBE  6A06               	clrf	ENCx24_BFC@bitMask+1,c
 10892  007DC0  0E01               	movlw	1
 10893  007DC2  6E05               	movwf	ENCx24_BFC@bitMask,c
 10894  007DC4  0EFE               	movlw	254
 10895  007DC6  ECD2  F040         	call	_ENCx24_BFC
 10896                           
 10897                           ;encX24J600_driver.c: 310: nextPacketPointer = 0x1600ul;
 10898  007DCA  0E16               	movlw	22
 10899  007DCC  0101               	movlb	1	; () banked
 10900  007DCE  6F9F               	movwf	(_nextPacketPointer+1)& (0+255),b
 10901  007DD0  6B9E               	clrf	_nextPacketPointer& (0+255),b
 10902                           
 10903                           ; BSR set to: 1
 10904                           ;encX24J600_driver.c: 313: ENCx24_Write(XJ600_ERXSTL, 0x1600ul);
 10905  007DD2  6E06               	movwf	ENCx24_Write@data+1,c
 10906  007DD4  6A05               	clrf	ENCx24_Write@data,c
 10907  007DD6  0E04               	movlw	4
 10908  007DD8  EC91  F040         	call	_ENCx24_Write
 10909                           
 10910                           ;encX24J600_driver.c: 314: ENCx24_Write(XJ600_ERXTAILL, 0x6000ul - 2);
 10911  007DDC  0E5F               	movlw	95
 10912  007DDE  6E06               	movwf	ENCx24_Write@data+1,c
 10913  007DE0  0EFE               	movlw	254
 10914  007DE2  6E05               	movwf	ENCx24_Write@data,c
 10915  007DE4  0E06               	movlw	6
 10916  007DE6  EC91  F040         	call	_ENCx24_Write
 10917                           
 10918                           ;encX24J600_driver.c: 317: ENCx24_BFS(XJ600_ECON1L, 0x0001);
 10919  007DEA  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 10920  007DEC  0E01               	movlw	1
 10921  007DEE  6E05               	movwf	ENCx24_BFS@bitMask,c
 10922  007DF0  0EFE               	movlw	254
 10923  007DF2  EFB2  F040         	goto	_ENCx24_BFS
 10924  007DF6                     __end_of_ETH_ResetReceiver:
 10925                           	opt stack 0
 10926                           tosu	equ	0xFFF
 10927                           tosh	equ	0xFFE
 10928                           tosl	equ	0xFFD
 10929                           pclath	equ	0xFFA
 10930                           tblptru	equ	0xFF8
 10931                           tblptrh	equ	0xFF7
 10932                           tblptrl	equ	0xFF6
 10933                           tablat	equ	0xFF5
 10934                           prodh	equ	0xFF4
 10935                           prodl	equ	0xFF3
 10936                           intcon	equ	0xFF2
 10937                           intcon2	equ	0xFF1
 10938                           indf0	equ	0xFEF
 10939                           postinc0	equ	0xFEE
 10940                           fsr0h	equ	0xFEA
 10941                           fsr0l	equ	0xFE9
 10942                           wreg	equ	0xFE8
 10943                           postinc1	equ	0xFE6
 10944                           plusw1	equ	0xFE3
 10945                           fsr1h	equ	0xFE2
 10946                           fsr1l	equ	0xFE1
 10947                           indf2	equ	0xFDF
 10948                           postinc2	equ	0xFDE
 10949                           postdec2	equ	0xFDD
 10950                           plusw2	equ	0xFDB
 10951                           fsr2h	equ	0xFDA
 10952                           fsr2l	equ	0xFD9
 10953                           status	equ	0xFD8
 10954                           
 10955 ;; *************** function _DHCP_Manage *****************
 10956 ;; Defined at:
 10957 ;;		line 130 in file "../../TCPIP Library/source/dhcp_client.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;		None
 10960 ;; Auto vars:     Size  Location     Type
 10961 ;;		None
 10962 ;; Return value:  Size  Location     Type
 10963 ;;		None               void
 10964 ;; Registers used:
 10965 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10966 ;; Tracked objects:
 10967 ;;		On entry : F/1
 10968 ;;		On exit  : E/0
 10969 ;;		Unchanged: 0/0
 10970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10975 ;;Total ram usage:        0 bytes
 10976 ;; Hardware stack levels used:    1
 10977 ;; Hardware stack levels required when called:   11
 10978 ;; This function calls:
 10979 ;;		_DHCP_Request
 10980 ;; This function is called by:
 10981 ;;		_Network_Manage
 10982 ;; This function uses a non-reentrant model
 10983 ;;
 10984                           
 10985                           	psect	text51
 10986  007648                     __ptext51:
 10987                           	opt stack 0
 10988  007648                     _DHCP_Manage:
 10989                           	opt stack 18
 10990                           
 10991                           ; BSR set to: 1
 10992                           ;dhcp_client.c: 132: if(ethData.linkChange)
 10993                           
 10994                           ;incstack = 0
 10995  007648  A983               	btfss	_ethData& (0+255),4,b	;volatile
 10996  00764A  D018               	goto	l9711
 10997                           
 10998                           ; BSR set to: 1
 10999                           ;dhcp_client.c: 133: {
 11000                           ;dhcp_client.c: 134: if (clientState == BOUND && dhcpLeaseTime)
 11001  00764C  0E05               	movlw	5
 11002  00764E  185D               	xorwf	_clientState,w,c
 11003  007650  E10E               	bnz	l9705
 11004                           
 11005                           ; BSR set to: 1
 11006  007652  518A               	movf	_dhcpLeaseTime& (0+255),w,b
 11007  007654  118B               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
 11008  007656  118C               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
 11009  007658  118D               	iorwf	(_dhcpLeaseTime+3)& (0+255),w,b
 11010  00765A  E009               	bz	l9705
 11011                           
 11012                           ; BSR set to: 1
 11013                           ;dhcp_client.c: 135: {
 11014                           ;dhcp_client.c: 136: dhcpServerId = 0xFFFFFFFF;
 11015  00765C  0102               	movlb	2	; () banked
 11016  00765E  6922               	setf	_dhcpServerId& (0+255),b
 11017  007660  6923               	setf	(_dhcpServerId+1)& (0+255),b
 11018  007662  6924               	setf	(_dhcpServerId+2)& (0+255),b
 11019  007664  6925               	setf	(_dhcpServerId+3)& (0+255),b
 11020                           
 11021                           ; BSR set to: 2
 11022                           ;dhcp_client.c: 137: DHCP_Request(DHCP_REQUEST);
 11023  007666  0E03               	movlw	3
 11024  007668  EC7B  F031         	call	_DHCP_Request
 11025                           
 11026                           ;dhcp_client.c: 138: }
 11027  00766C  D004               	goto	l9709
 11028  00766E                     l9705:
 11029                           
 11030                           ; BSR set to: 1
 11031                           ;dhcp_client.c: 139: else
 11032                           ;dhcp_client.c: 140: {
 11033                           ;dhcp_client.c: 141: clientState = INIT;
 11034  00766E  0E01               	movlw	1
 11035  007670  6E5D               	movwf	_clientState,c
 11036                           
 11037                           ; BSR set to: 1
 11038                           ;dhcp_client.c: 142: DHCP_Request(DHCP_DISCOVER);
 11039  007672  EC7B  F031         	call	_DHCP_Request
 11040  007676                     l9709:
 11041                           
 11042                           ; BSR set to: 0
 11043                           ;dhcp_client.c: 143: }
 11044                           ;dhcp_client.c: 144: ethData.linkChange=0;
 11045  007676  0101               	movlb	1	; () banked
 11046  007678  9983               	bcf	_ethData& (0+255),4,b	;volatile
 11047                           
 11048                           ;dhcp_client.c: 145: }
 11049  00767A  0012               	return	
 11050  00767C                     l9711:
 11051                           
 11052                           ; BSR set to: 1
 11053                           ;dhcp_client.c: 146: else if (clientState == INIT || clientState == INIT_REBOOT)
 11054  00767C  045D               	decf	_clientState,w,c
 11055  00767E  E003               	bz	l9715
 11056                           
 11057                           ; BSR set to: 1
 11058  007680  0E02               	movlw	2
 11059  007682  185D               	xorwf	_clientState,w,c
 11060  007684  E104               	bnz	l9719
 11061  007686                     l9715:
 11062                           
 11063                           ; BSR set to: 1
 11064                           ;dhcp_client.c: 147: {
 11065                           ;dhcp_client.c: 148: clientState = INIT;
 11066  007686  0E01               	movlw	1
 11067  007688  6E5D               	movwf	_clientState,c
 11068                           
 11069                           ; BSR set to: 1
 11070                           ;dhcp_client.c: 149: DHCP_Request(DHCP_DISCOVER);
 11071  00768A  EF7B  F031         	goto	_DHCP_Request
 11072  00768E                     l9719:
 11073                           
 11074                           ; BSR set to: 1
 11075                           ;dhcp_client.c: 151: else if ((dhcpLeaseTime < 100)&& clientState == BOUND)
 11076  00768E  518D               	movf	(_dhcpLeaseTime+3)& (0+255),w,b
 11077  007690  118C               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
 11078  007692  118B               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
 11079  007694  E109               	bnz	l9725
 11080  007696  0E64               	movlw	100
 11081  007698  5D8A               	subwf	_dhcpLeaseTime& (0+255),w,b
 11082  00769A  E206               	bc	l9725
 11083                           
 11084                           ; BSR set to: 1
 11085  00769C  0E05               	movlw	5
 11086  00769E  185D               	xorwf	_clientState,w,c
 11087  0076A0  E103               	bnz	l9725
 11088                           
 11089                           ; BSR set to: 1
 11090                           ;dhcp_client.c: 152: {
 11091                           ;dhcp_client.c: 153: DHCP_Request(DHCP_REQUEST);
 11092  0076A2  0E03               	movlw	3
 11093  0076A4  EF7B  F031         	goto	_DHCP_Request
 11094  0076A8                     l9725:
 11095                           
 11096                           ; BSR set to: 1
 11097                           ;dhcp_client.c: 155: else
 11098                           ;dhcp_client.c: 156: {
 11099                           ;dhcp_client.c: 157: if(clientState == BOUND && dhcpLeaseTime) dhcpLeaseTime --;
 11100  0076A8  0E05               	movlw	5
 11101  0076AA  185D               	xorwf	_clientState,w,c
 11102  0076AC  E10B               	bnz	l9731
 11103                           
 11104                           ; BSR set to: 1
 11105  0076AE  518A               	movf	_dhcpLeaseTime& (0+255),w,b
 11106  0076B0  118B               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
 11107  0076B2  118C               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
 11108  0076B4  118D               	iorwf	(_dhcpLeaseTime+3)& (0+255),w,b
 11109  0076B6  E006               	bz	l9731
 11110                           
 11111                           ; BSR set to: 1
 11112  0076B8  078A               	decf	_dhcpLeaseTime& (0+255),f,b
 11113  0076BA  0E00               	movlw	0
 11114  0076BC  5B8B               	subwfb	(_dhcpLeaseTime+1)& (0+255),f,b
 11115  0076BE  5B8C               	subwfb	(_dhcpLeaseTime+2)& (0+255),f,b
 11116  0076C0  5B8D               	subwfb	(_dhcpLeaseTime+3)& (0+255),f,b
 11117  0076C2  0C00               	retlw	0
 11118  0076C4                     l9731:
 11119                           
 11120                           ; BSR set to: 1
 11121                           ;dhcp_client.c: 158: else if (!dhcpLeaseTime) clientState = INIT_REBOOT;
 11122  0076C4  518A               	movf	_dhcpLeaseTime& (0+255),w,b
 11123  0076C6  118B               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
 11124  0076C8  118C               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
 11125  0076CA  118D               	iorwf	(_dhcpLeaseTime+3)& (0+255),w,b
 11126  0076CC  A4D8               	btfss	status,2,c
 11127  0076CE  0012               	return	
 11128                           
 11129                           ; BSR set to: 1
 11130  0076D0  0E02               	movlw	2
 11131  0076D2  6E5D               	movwf	_clientState,c
 11132  0076D4  0C02               	retlw	2
 11133  0076D6                     __end_of_DHCP_Manage:
 11134                           	opt stack 0
 11135                           tosu	equ	0xFFF
 11136                           tosh	equ	0xFFE
 11137                           tosl	equ	0xFFD
 11138                           pclath	equ	0xFFA
 11139                           tblptru	equ	0xFF8
 11140                           tblptrh	equ	0xFF7
 11141                           tblptrl	equ	0xFF6
 11142                           tablat	equ	0xFF5
 11143                           prodh	equ	0xFF4
 11144                           prodl	equ	0xFF3
 11145                           intcon	equ	0xFF2
 11146                           intcon2	equ	0xFF1
 11147                           indf0	equ	0xFEF
 11148                           postinc0	equ	0xFEE
 11149                           fsr0h	equ	0xFEA
 11150                           fsr0l	equ	0xFE9
 11151                           wreg	equ	0xFE8
 11152                           postinc1	equ	0xFE6
 11153                           plusw1	equ	0xFE3
 11154                           fsr1h	equ	0xFE2
 11155                           fsr1l	equ	0xFE1
 11156                           indf2	equ	0xFDF
 11157                           postinc2	equ	0xFDE
 11158                           postdec2	equ	0xFDD
 11159                           plusw2	equ	0xFDB
 11160                           fsr2h	equ	0xFDA
 11161                           fsr2l	equ	0xFD9
 11162                           status	equ	0xFD8
 11163                           
 11164 ;; *************** function _DHCP_Request *****************
 11165 ;; Defined at:
 11166 ;;		line 71 in file "../../TCPIP Library/source/dhcp_client.c"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;  type            1    wreg     enum E592
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;  type            1   16[BANK0 ] enum E592
 11171 ;;  ethMAC          6   17[BANK0 ] struct .
 11172 ;;  msglength       2    0        unsigned int 
 11173 ;;  started         1   15[BANK0 ] unsigned char 
 11174 ;; Return value:  Size  Location     Type
 11175 ;;		None               void
 11176 ;; Registers used:
 11177 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11178 ;; Tracked objects:
 11179 ;;		On entry : C/1
 11180 ;;		On exit  : F/0
 11181 ;;		Unchanged: 0/0
 11182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11184 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11186 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11187 ;;Total ram usage:        8 bytes
 11188 ;; Hardware stack levels used:    1
 11189 ;; Hardware stack levels required when called:   10
 11190 ;; This function calls:
 11191 ;;		_DHCP_WriteZeros
 11192 ;;		_ETH_GetMAC
 11193 ;;		_ETH_Write16
 11194 ;;		_ETH_Write32
 11195 ;;		_ETH_Write8
 11196 ;;		_ETH_WriteBlock
 11197 ;;		_UDP_Send
 11198 ;;		_UDP_Start
 11199 ;; This function is called by:
 11200 ;;		_DHCP_Manage
 11201 ;;		_DHCP_Handler
 11202 ;; This function uses a non-reentrant model
 11203 ;;
 11204                           
 11205                           	psect	text52
 11206  0062F6                     __ptext52:
 11207                           	opt stack 0
 11208  0062F6                     _DHCP_Request:
 11209                           	opt stack 15
 11210                           
 11211                           ;incstack = 0
 11212                           ;DHCP_Request@type stored from wreg
 11213  0062F6  0100               	movlb	0	; () banked
 11214  0062F8  6F70               	movwf	DHCP_Request@type& (0+255),b
 11215                           
 11216                           ;dhcp_client.c: 78: ETH_GetMAC((char*)&ethMAC);
 11217  0062FA  0E71               	movlw	low DHCP_Request@ethMAC
 11218  0062FC  6E08               	movwf	ETH_GetMAC@macAddr,c
 11219  0062FE  6A09               	clrf	ETH_GetMAC@macAddr+1,c
 11220  006300  ECB6  F03C         	call	_ETH_GetMAC	;wreg free
 11221                           
 11222                           ;dhcp_client.c: 83: }
 11223                           ;dhcp_client.c: 85: started = UDP_Start(0xFFFFFFFF,68,67);
 11224  006304  0100               	movlb	0	; () banked
 11225  006306  6967               	setf	UDP_Start@destIP& (0+255),b
 11226  006308  6968               	setf	(UDP_Start@destIP+1)& (0+255),b
 11227  00630A  6969               	setf	(UDP_Start@destIP+2)& (0+255),b
 11228  00630C  696A               	setf	(UDP_Start@destIP+3)& (0+255),b
 11229  00630E  6B6C               	clrf	(UDP_Start@srcPort+1)& (0+255),b
 11230  006310  0E44               	movlw	68
 11231  006312  6F6B               	movwf	UDP_Start@srcPort& (0+255),b
 11232  006314  6B6E               	clrf	(UDP_Start@dstPort+1)& (0+255),b
 11233  006316  0E43               	movlw	67
 11234  006318  6F6D               	movwf	UDP_Start@dstPort& (0+255),b
 11235  00631A  ECFB  F03E         	call	_UDP_Start	;wreg free
 11236  00631E  0100               	movlb	0	; () banked
 11237  006320  6F6F               	movwf	DHCP_Request@started& (0+255),b
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;dhcp_client.c: 87: if(started==SUCCESS)
 11241  006322  056F               	decf	DHCP_Request@started& (0+255),w,b
 11242  006324  A4D8               	btfss	status,2,c
 11243  006326  0012               	return	
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;dhcp_client.c: 88: {
 11247                           ;dhcp_client.c: 89: ETH_Write32(0x01010600);
 11248  006328  6A03               	clrf	ETH_Write32@data,c
 11249  00632A  0E06               	movlw	6
 11250  00632C  6E04               	movwf	ETH_Write32@data+1,c
 11251  00632E  0E01               	movlw	1
 11252  006330  6E05               	movwf	ETH_Write32@data+2,c
 11253  006332  6E06               	movwf	ETH_Write32@data+3,c
 11254  006334  ECCD  F041         	call	_ETH_Write32	;wreg free
 11255                           
 11256                           ;dhcp_client.c: 90: ETH_Write32(xidValue);
 11257  006338  0E50               	movlw	80
 11258  00633A  6E03               	movwf	ETH_Write32@data,c
 11259  00633C  0E48               	movlw	72
 11260  00633E  6E04               	movwf	ETH_Write32@data+1,c
 11261  006340  0E43               	movlw	67
 11262  006342  6E05               	movwf	ETH_Write32@data+2,c
 11263  006344  0E4D               	movlw	77
 11264  006346  6E06               	movwf	ETH_Write32@data+3,c
 11265  006348  ECCD  F041         	call	_ETH_Write32	;wreg free
 11266                           
 11267                           ;dhcp_client.c: 91: ETH_Write32(0x00008000);
 11268  00634C  6A03               	clrf	ETH_Write32@data,c
 11269  00634E  0E80               	movlw	128
 11270  006350  6E04               	movwf	ETH_Write32@data+1,c
 11271  006352  6A05               	clrf	ETH_Write32@data+2,c
 11272  006354  6A06               	clrf	ETH_Write32@data+3,c
 11273  006356  ECCD  F041         	call	_ETH_Write32	;wreg free
 11274                           
 11275                           ;dhcp_client.c: 92: if (type == DHCP_REQUEST)
 11276  00635A  0E03               	movlw	3
 11277  00635C  0100               	movlb	0	; () banked
 11278  00635E  1970               	xorwf	DHCP_Request@type& (0+255),w,b
 11279  006360  E107               	bnz	l8217
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;dhcp_client.c: 93: {
 11283                           ;dhcp_client.c: 94: ETH_Write32(0);
 11284  006362  6A03               	clrf	ETH_Write32@data,c
 11285  006364  6A04               	clrf	ETH_Write32@data+1,c
 11286  006366  6A05               	clrf	ETH_Write32@data+2,c
 11287  006368  6A06               	clrf	ETH_Write32@data+3,c
 11288  00636A  ECCD  F041         	call	_ETH_Write32	;wreg free
 11289                           
 11290                           ;dhcp_client.c: 95: }
 11291  00636E  D00A               	goto	l859
 11292  006370                     l8217:
 11293                           
 11294                           ; BSR set to: 0
 11295                           ;dhcp_client.c: 96: else
 11296                           ;dhcp_client.c: 97: {
 11297                           ;dhcp_client.c: 98: ETH_Write32(ipv4Address);
 11298  006370  C18E  F003         	movff	_ipv4Address,ETH_Write32@data
 11299  006374  C18F  F004         	movff	_ipv4Address+1,ETH_Write32@data+1
 11300  006378  C190  F005         	movff	_ipv4Address+2,ETH_Write32@data+2
 11301  00637C  C191  F006         	movff	_ipv4Address+3,ETH_Write32@data+3
 11302  006380  ECCD  F041         	call	_ETH_Write32	;wreg free
 11303  006384                     l859:
 11304                           
 11305                           ;dhcp_client.c: 99: }
 11306                           ;dhcp_client.c: 100: ETH_Write32(0);
 11307  006384  6A03               	clrf	ETH_Write32@data,c
 11308  006386  6A04               	clrf	ETH_Write32@data+1,c
 11309  006388  6A05               	clrf	ETH_Write32@data+2,c
 11310  00638A  6A06               	clrf	ETH_Write32@data+3,c
 11311  00638C  ECCD  F041         	call	_ETH_Write32	;wreg free
 11312                           
 11313                           ;dhcp_client.c: 101: ETH_Write32(0);
 11314  006390  6A03               	clrf	ETH_Write32@data,c
 11315  006392  6A04               	clrf	ETH_Write32@data+1,c
 11316  006394  6A05               	clrf	ETH_Write32@data+2,c
 11317  006396  6A06               	clrf	ETH_Write32@data+3,c
 11318  006398  ECCD  F041         	call	_ETH_Write32	;wreg free
 11319                           
 11320                           ;dhcp_client.c: 102: ETH_Write32(0);
 11321  00639C  6A03               	clrf	ETH_Write32@data,c
 11322  00639E  6A04               	clrf	ETH_Write32@data+1,c
 11323  0063A0  6A05               	clrf	ETH_Write32@data+2,c
 11324  0063A2  6A06               	clrf	ETH_Write32@data+3,c
 11325  0063A4  ECCD  F041         	call	_ETH_Write32	;wreg free
 11326                           
 11327                           ;dhcp_client.c: 103: ETH_WriteBlock((char *)&ethMAC,6);
 11328  0063A8  0E71               	movlw	low DHCP_Request@ethMAC
 11329  0063AA  6E03               	movwf	ETH_WriteBlock@data,c
 11330  0063AC  6A04               	clrf	ETH_WriteBlock@data+1,c
 11331  0063AE  6A06               	clrf	ETH_WriteBlock@len+1,c
 11332  0063B0  0E06               	movlw	6
 11333  0063B2  6E05               	movwf	ETH_WriteBlock@len,c
 11334  0063B4  ECFE  F03D         	call	_ETH_WriteBlock	;wreg free
 11335                           
 11336                           ;dhcp_client.c: 104: DHCP_WriteZeros(202);
 11337  0063B8  6A05               	clrf	DHCP_WriteZeros@length+1,c
 11338  0063BA  0ECA               	movlw	202
 11339  0063BC  6E04               	movwf	DHCP_WriteZeros@length,c
 11340  0063BE  EC83  F043         	call	_DHCP_WriteZeros	;wreg free
 11341                           
 11342                           ;dhcp_client.c: 105: ETH_Write32(0x63825363);
 11343  0063C2  0E63               	movlw	99
 11344  0063C4  6E03               	movwf	ETH_Write32@data,c
 11345  0063C6  0E53               	movlw	83
 11346  0063C8  6E04               	movwf	ETH_Write32@data+1,c
 11347  0063CA  0E82               	movlw	130
 11348  0063CC  6E05               	movwf	ETH_Write32@data+2,c
 11349  0063CE  0E63               	movlw	99
 11350  0063D0  6E06               	movwf	ETH_Write32@data+3,c
 11351  0063D2  ECCD  F041         	call	_ETH_Write32	;wreg free
 11352                           
 11353                           ;dhcp_client.c: 107: ETH_Write8(53);
 11354  0063D6  0E35               	movlw	53
 11355  0063D8  EC6A  F043         	call	_ETH_Write8
 11356                           
 11357                           ;dhcp_client.c: 108: ETH_Write8(1);
 11358  0063DC  0E01               	movlw	1
 11359  0063DE  EC6A  F043         	call	_ETH_Write8
 11360                           
 11361                           ;dhcp_client.c: 109: ETH_Write8(type);
 11362  0063E2  0100               	movlb	0	; () banked
 11363  0063E4  5170               	movf	DHCP_Request@type& (0+255),w,b
 11364  0063E6  EC6A  F043         	call	_ETH_Write8
 11365                           
 11366                           ;dhcp_client.c: 110: if(type == DHCP_REQUEST)
 11367  0063EA  0E03               	movlw	3
 11368  0063EC  0100               	movlb	0	; () banked
 11369  0063EE  1970               	xorwf	DHCP_Request@type& (0+255),w,b
 11370  0063F0  E120               	bnz	l860
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;dhcp_client.c: 111: {
 11374                           ;dhcp_client.c: 112: ETH_Write8(54);ETH_Write8(4);ETH_Write32(dhcpServerId);
 11375  0063F2  0E36               	movlw	54
 11376  0063F4  EC6A  F043         	call	_ETH_Write8
 11377  0063F8  0E04               	movlw	4
 11378  0063FA  EC6A  F043         	call	_ETH_Write8
 11379  0063FE  C222  F003         	movff	_dhcpServerId,ETH_Write32@data
 11380  006402  C223  F004         	movff	_dhcpServerId+1,ETH_Write32@data+1
 11381  006406  C224  F005         	movff	_dhcpServerId+2,ETH_Write32@data+2
 11382  00640A  C225  F006         	movff	_dhcpServerId+3,ETH_Write32@data+3
 11383  00640E  ECCD  F041         	call	_ETH_Write32	;wreg free
 11384                           
 11385                           ;dhcp_client.c: 113: ETH_Write8(50);ETH_Write8(4);ETH_Write32(ipv4Address);
 11386  006412  0E32               	movlw	50
 11387  006414  EC6A  F043         	call	_ETH_Write8
 11388  006418  0E04               	movlw	4
 11389  00641A  EC6A  F043         	call	_ETH_Write8
 11390  00641E  C18E  F003         	movff	_ipv4Address,ETH_Write32@data
 11391  006422  C18F  F004         	movff	_ipv4Address+1,ETH_Write32@data+1
 11392  006426  C190  F005         	movff	_ipv4Address+2,ETH_Write32@data+2
 11393  00642A  C191  F006         	movff	_ipv4Address+3,ETH_Write32@data+3
 11394  00642E  ECCD  F041         	call	_ETH_Write32	;wreg free
 11395  006432                     l860:
 11396                           
 11397                           ;dhcp_client.c: 114: }
 11398                           ;dhcp_client.c: 115: ETH_Write8(55); ETH_Write8(4); ETH_Write8(1); ETH_Write8(3); ETH_Wr
      +                          ite8(6); ETH_Write8(15);
 11399  006432  0E37               	movlw	55
 11400  006434  EC6A  F043         	call	_ETH_Write8
 11401  006438  0E04               	movlw	4
 11402  00643A  EC6A  F043         	call	_ETH_Write8
 11403  00643E  0E01               	movlw	1
 11404  006440  EC6A  F043         	call	_ETH_Write8
 11405  006444  0E03               	movlw	3
 11406  006446  EC6A  F043         	call	_ETH_Write8
 11407  00644A  0E06               	movlw	6
 11408  00644C  EC6A  F043         	call	_ETH_Write8
 11409  006450  0E0F               	movlw	15
 11410  006452  EC6A  F043         	call	_ETH_Write8
 11411                           
 11412                           ;dhcp_client.c: 116: ETH_Write8(57); ETH_Write8(2); ETH_Write16(512);
 11413  006456  0E39               	movlw	57
 11414  006458  EC6A  F043         	call	_ETH_Write8
 11415  00645C  0E02               	movlw	2
 11416  00645E  EC6A  F043         	call	_ETH_Write8
 11417  006462  0E02               	movlw	2
 11418  006464  6E04               	movwf	ETH_Write16@data+1,c
 11419  006466  6A03               	clrf	ETH_Write16@data,c
 11420  006468  ECD4  F042         	call	_ETH_Write16	;wreg free
 11421                           
 11422                           ;dhcp_client.c: 117: ETH_Write8(12); ETH_Write8(20); ETH_WriteBlock((char *)dhcpName,20)
      +                          ;
 11423  00646C  0E0C               	movlw	12
 11424  00646E  EC6A  F043         	call	_ETH_Write8
 11425  006472  0E14               	movlw	20
 11426  006474  EC6A  F043         	call	_ETH_Write8
 11427  006478  0E13               	movlw	low _dhcpName
 11428  00647A  6E03               	movwf	ETH_WriteBlock@data,c
 11429  00647C  5003               	movf	ETH_WriteBlock@data,w,c
 11430  00647E  A4D8               	btfss	status,2,c
 11431  006480  0E10               	movlw	high __smallconst
 11432  006482  6E04               	movwf	ETH_WriteBlock@data+1,c
 11433  006484  6A06               	clrf	ETH_WriteBlock@len+1,c
 11434  006486  0E14               	movlw	20
 11435  006488  6E05               	movwf	ETH_WriteBlock@len,c
 11436  00648A  ECFE  F03D         	call	_ETH_WriteBlock	;wreg free
 11437                           
 11438                           ;dhcp_client.c: 119: ETH_Write8(61); ETH_Write8(7); ETH_Write8(1); ETH_WriteBlock((char 
      +                          *)&ethMAC,6);
 11439  00648E  0E3D               	movlw	61
 11440  006490  EC6A  F043         	call	_ETH_Write8
 11441  006494  0E07               	movlw	7
 11442  006496  EC6A  F043         	call	_ETH_Write8
 11443  00649A  0E01               	movlw	1
 11444  00649C  EC6A  F043         	call	_ETH_Write8
 11445  0064A0  0E71               	movlw	low DHCP_Request@ethMAC
 11446  0064A2  6E03               	movwf	ETH_WriteBlock@data,c
 11447  0064A4  6A04               	clrf	ETH_WriteBlock@data+1,c
 11448  0064A6  6A06               	clrf	ETH_WriteBlock@len+1,c
 11449  0064A8  0E06               	movlw	6
 11450  0064AA  6E05               	movwf	ETH_WriteBlock@len,c
 11451  0064AC  ECFE  F03D         	call	_ETH_WriteBlock	;wreg free
 11452                           
 11453                           ;dhcp_client.c: 120: ETH_Write8(255);
 11454  0064B0  0EFF               	movlw	255
 11455  0064B2  EC6A  F043         	call	_ETH_Write8
 11456                           
 11457                           ;dhcp_client.c: 122: ETH_Write8(0);
 11458  0064B6  0E00               	movlw	0
 11459  0064B8  EC6A  F043         	call	_ETH_Write8
 11460                           
 11461                           ;dhcp_client.c: 124: UDP_Send();
 11462  0064BC  EC94  F039         	call	_UDP_Send	;wreg free
 11463                           
 11464                           ; BSR set to: 1
 11465                           ;dhcp_client.c: 125: if (type == DHCP_DISCOVER)
 11466  0064C0  0100               	movlb	0	; () banked
 11467  0064C2  0570               	decf	DHCP_Request@type& (0+255),w,b
 11468  0064C4  A4D8               	btfss	status,2,c
 11469  0064C6  0012               	return	
 11470                           
 11471                           ; BSR set to: 0
 11472                           ;dhcp_client.c: 126: clientState=SELECTING;
 11473  0064C8  0E03               	movlw	3
 11474  0064CA  6E5D               	movwf	_clientState,c
 11475                           
 11476                           ; BSR set to: 0
 11477  0064CC  0C03               	retlw	3	;funcret
 11478  0064CE                     __end_of_DHCP_Request:
 11479                           	opt stack 0
 11480                           tosu	equ	0xFFF
 11481                           tosh	equ	0xFFE
 11482                           tosl	equ	0xFFD
 11483                           pclath	equ	0xFFA
 11484                           tblptru	equ	0xFF8
 11485                           tblptrh	equ	0xFF7
 11486                           tblptrl	equ	0xFF6
 11487                           tablat	equ	0xFF5
 11488                           prodh	equ	0xFF4
 11489                           prodl	equ	0xFF3
 11490                           intcon	equ	0xFF2
 11491                           intcon2	equ	0xFF1
 11492                           indf0	equ	0xFEF
 11493                           postinc0	equ	0xFEE
 11494                           fsr0h	equ	0xFEA
 11495                           fsr0l	equ	0xFE9
 11496                           wreg	equ	0xFE8
 11497                           postinc1	equ	0xFE6
 11498                           plusw1	equ	0xFE3
 11499                           fsr1h	equ	0xFE2
 11500                           fsr1l	equ	0xFE1
 11501                           indf2	equ	0xFDF
 11502                           postinc2	equ	0xFDE
 11503                           postdec2	equ	0xFDD
 11504                           plusw2	equ	0xFDB
 11505                           fsr2h	equ	0xFDA
 11506                           fsr2l	equ	0xFD9
 11507                           status	equ	0xFD8
 11508                           
 11509 ;; *************** function _UDP_Start *****************
 11510 ;; Defined at:
 11511 ;;		line 71 in file "../../TCPIP Library/source/udpv4.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;  destIP          4    7[BANK0 ] unsigned long 
 11514 ;;  srcPort         2   11[BANK0 ] unsigned int 
 11515 ;;  dstPort         2   13[BANK0 ] unsigned int 
 11516 ;; Auto vars:     Size  Location     Type
 11517 ;;  ret             1   87[COMRAM] enum E367
 11518 ;; Return value:  Size  Location     Type
 11519 ;;                  1    wreg      enum E449
 11520 ;; Registers used:
 11521 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11522 ;; Tracked objects:
 11523 ;;		On entry : F/0
 11524 ;;		On exit  : 0/0
 11525 ;;		Unchanged: 0/0
 11526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11527 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11531 ;;Total ram usage:        9 bytes
 11532 ;; Hardware stack levels used:    1
 11533 ;; Hardware stack levels required when called:    9
 11534 ;; This function calls:
 11535 ;;		_ETH_ResetByteCount
 11536 ;;		_ETH_Write16
 11537 ;;		_IPv4_Start
 11538 ;; This function is called by:
 11539 ;;		_DHCP_Request
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           	psect	text53
 11544  007DF6                     __ptext53:
 11545                           	opt stack 0
 11546  007DF6                     _UDP_Start:
 11547                           	opt stack 15
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;udpv4.c: 77: ret = IPv4_Start(destIP,UDP);
 11551                           
 11552                           ; BSR set to: 0
 11553                           
 11554                           ; BSR set to: 0
 11555                           ;incstack = 0
 11556  007DF6  C067  F04B         	movff	UDP_Start@destIP,IPv4_Start@destAddress
 11557  007DFA  C068  F04C         	movff	UDP_Start@destIP+1,IPv4_Start@destAddress+1
 11558  007DFE  C069  F04D         	movff	UDP_Start@destIP+2,IPv4_Start@destAddress+2
 11559  007E02  C06A  F04E         	movff	UDP_Start@destIP+3,IPv4_Start@destAddress+3
 11560  007E06  0E11               	movlw	17
 11561  007E08  6E4F               	movwf	IPv4_Start@protocol,c
 11562  007E0A  EC0F  F034         	call	_IPv4_Start	;wreg free
 11563  007E0E  6E58               	movwf	UDP_Start@ret,c
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;udpv4.c: 78: if(ret == SUCCESS)
 11567  007E10  0458               	decf	UDP_Start@ret,w,c
 11568  007E12  E116               	bnz	l8027
 11569                           
 11570                           ; BSR set to: 0
 11571                           ;udpv4.c: 79: {
 11572                           ;udpv4.c: 81: ETH_ResetByteCount();
 11573  007E14  ECB6  F043         	call	_ETH_ResetByteCount	;wreg free
 11574                           
 11575                           ;udpv4.c: 84: ETH_Write16(srcPort);
 11576  007E18  C06B  F003         	movff	UDP_Start@srcPort,ETH_Write16@data
 11577  007E1C  C06C  F004         	movff	UDP_Start@srcPort+1,ETH_Write16@data+1
 11578  007E20  ECD4  F042         	call	_ETH_Write16	;wreg free
 11579                           
 11580                           ;udpv4.c: 87: ETH_Write16(dstPort);
 11581  007E24  C06D  F003         	movff	UDP_Start@dstPort,ETH_Write16@data
 11582  007E28  C06E  F004         	movff	UDP_Start@dstPort+1,ETH_Write16@data+1
 11583  007E2C  ECD4  F042         	call	_ETH_Write16	;wreg free
 11584                           
 11585                           ;udpv4.c: 90: ETH_Write16(0);
 11586  007E30  6A04               	clrf	ETH_Write16@data+1,c
 11587  007E32  6A03               	clrf	ETH_Write16@data,c
 11588  007E34  ECD4  F042         	call	_ETH_Write16	;wreg free
 11589                           
 11590                           ;udpv4.c: 93: ETH_Write16(0);
 11591  007E38  6A04               	clrf	ETH_Write16@data+1,c
 11592  007E3A  6A03               	clrf	ETH_Write16@data,c
 11593  007E3C  ECD4  F042         	call	_ETH_Write16	;wreg free
 11594  007E40                     l8027:
 11595                           
 11596                           ;udpv4.c: 95: }
 11597                           ;udpv4.c: 96: return ret;
 11598  007E40  5058               	movf	UDP_Start@ret,w,c
 11599  007E42  0012               	return		;funcret
 11600  007E44                     __end_of_UDP_Start:
 11601                           	opt stack 0
 11602                           tosu	equ	0xFFF
 11603                           tosh	equ	0xFFE
 11604                           tosl	equ	0xFFD
 11605                           pclath	equ	0xFFA
 11606                           tblptru	equ	0xFF8
 11607                           tblptrh	equ	0xFF7
 11608                           tblptrl	equ	0xFF6
 11609                           tablat	equ	0xFF5
 11610                           prodh	equ	0xFF4
 11611                           prodl	equ	0xFF3
 11612                           intcon	equ	0xFF2
 11613                           intcon2	equ	0xFF1
 11614                           indf0	equ	0xFEF
 11615                           postinc0	equ	0xFEE
 11616                           fsr0h	equ	0xFEA
 11617                           fsr0l	equ	0xFE9
 11618                           wreg	equ	0xFE8
 11619                           postinc1	equ	0xFE6
 11620                           plusw1	equ	0xFE3
 11621                           fsr1h	equ	0xFE2
 11622                           fsr1l	equ	0xFE1
 11623                           indf2	equ	0xFDF
 11624                           postinc2	equ	0xFDE
 11625                           postdec2	equ	0xFDD
 11626                           plusw2	equ	0xFDB
 11627                           fsr2h	equ	0xFDA
 11628                           fsr2l	equ	0xFD9
 11629                           status	equ	0xFD8
 11630                           
 11631 ;; *************** function _ETH_ResetByteCount *****************
 11632 ;; Defined at:
 11633 ;;		line 597 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;		None
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;		None
 11638 ;; Return value:  Size  Location     Type
 11639 ;;		None               void
 11640 ;; Registers used:
 11641 ;;		wreg, status,2, status,0, cstack
 11642 ;; Tracked objects:
 11643 ;;		On entry : F/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11651 ;;Total ram usage:        0 bytes
 11652 ;; Hardware stack levels used:    1
 11653 ;; Hardware stack levels required when called:    6
 11654 ;; This function calls:
 11655 ;;		_ENCx24_Read
 11656 ;; This function is called by:
 11657 ;;		_UDP_Start
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           	psect	text54
 11662  00876C                     __ptext54:
 11663                           	opt stack 0
 11664  00876C                     _ETH_ResetByteCount:
 11665                           	opt stack 17
 11666                           
 11667                           ; BSR set to: 0
 11668                           ;encX24J600_driver.c: 599: ethData.saveWRPT = ENCx24_Read(XJ600_EGPWRPTL);
 11669                           
 11670                           ;incstack = 0
 11671  00876C  0E88               	movlw	136
 11672  00876E  ECDF  F03F         	call	_ENCx24_Read
 11673  008772  C005  F188         	movff	?_ENCx24_Read,_ethData+5	;volatile
 11674  008776  C006  F189         	movff	?_ENCx24_Read+1,_ethData+6	;volatile
 11675  00877A  0012               	return		;funcret
 11676  00877C                     __end_of_ETH_ResetByteCount:
 11677                           	opt stack 0
 11678                           tosu	equ	0xFFF
 11679                           tosh	equ	0xFFE
 11680                           tosl	equ	0xFFD
 11681                           pclath	equ	0xFFA
 11682                           tblptru	equ	0xFF8
 11683                           tblptrh	equ	0xFF7
 11684                           tblptrl	equ	0xFF6
 11685                           tablat	equ	0xFF5
 11686                           prodh	equ	0xFF4
 11687                           prodl	equ	0xFF3
 11688                           intcon	equ	0xFF2
 11689                           intcon2	equ	0xFF1
 11690                           indf0	equ	0xFEF
 11691                           postinc0	equ	0xFEE
 11692                           fsr0h	equ	0xFEA
 11693                           fsr0l	equ	0xFE9
 11694                           wreg	equ	0xFE8
 11695                           postinc1	equ	0xFE6
 11696                           plusw1	equ	0xFE3
 11697                           fsr1h	equ	0xFE2
 11698                           fsr1l	equ	0xFE1
 11699                           indf2	equ	0xFDF
 11700                           postinc2	equ	0xFDE
 11701                           postdec2	equ	0xFDD
 11702                           plusw2	equ	0xFDB
 11703                           fsr2h	equ	0xFDA
 11704                           fsr2l	equ	0xFD9
 11705                           status	equ	0xFD8
 11706                           
 11707 ;; *************** function _UDP_Send *****************
 11708 ;; Defined at:
 11709 ;;		line 99 in file "../../TCPIP Library/source/udpv4.c"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;		None
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;  udpLength       2   46[COMRAM] unsigned int 
 11714 ;;  cksm            2   44[COMRAM] unsigned int 
 11715 ;;  ret             1    0        enum E367
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  1    wreg      enum E449
 11718 ;; Registers used:
 11719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11720 ;; Tracked objects:
 11721 ;;		On entry : 0/0
 11722 ;;		On exit  : F/1
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11727 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;Total ram usage:        9 bytes
 11730 ;; Hardware stack levels used:    1
 11731 ;; Hardware stack levels required when called:    9
 11732 ;; This function calls:
 11733 ;;		_ETH_GetByteCount
 11734 ;;		_ETH_Insert
 11735 ;;		_ETH_TxComputeChecksum
 11736 ;;		_IPV4_Send
 11737 ;; This function is called by:
 11738 ;;		_DHCP_Request
 11739 ;; This function uses a non-reentrant model
 11740 ;;
 11741                           
 11742                           	psect	text55
 11743  007328                     __ptext55:
 11744                           	opt stack 0
 11745  007328                     _UDP_Send:
 11746                           	opt stack 15
 11747                           
 11748                           ;udpv4.c: 105: udpLength = ETH_GetByteCount();
 11749                           
 11750                           ;incstack = 0
 11751  007328  EC26  F043         	call	_ETH_GetByteCount	;wreg free
 11752  00732C  C00B  F02F         	movff	?_ETH_GetByteCount,UDP_Send@udpLength
 11753  007330  C00C  F030         	movff	?_ETH_GetByteCount+1,UDP_Send@udpLength+1
 11754                           
 11755                           ; BSR set to: 1
 11756                           ;udpv4.c: 106: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 11757  007334  502F               	movf	UDP_Send@udpLength,w,c
 11758  007336  6E29               	movwf	(??_UDP_Send+1)& (0+255),c
 11759  007338  6A28               	clrf	??_UDP_Send& (0+255),c
 11760  00733A  5030               	movf	UDP_Send@udpLength+1,w,c
 11761  00733C  6E2A               	movwf	(??_UDP_Send+2)& (0+255),c
 11762  00733E  6A2B               	clrf	(??_UDP_Send+3)& (0+255),c
 11763  007340  5028               	movf	??_UDP_Send,w,c
 11764  007342  102A               	iorwf	??_UDP_Send+2,w,c
 11765  007344  6E2F               	movwf	UDP_Send@udpLength,c
 11766  007346  5029               	movf	??_UDP_Send+1,w,c
 11767  007348  102B               	iorwf	??_UDP_Send+3,w,c
 11768  00734A  6E30               	movwf	UDP_Send@udpLength+1,c
 11769                           
 11770                           ; BSR set to: 1
 11771                           ;udpv4.c: 107: ETH_Insert((char *)&udpLength, 2, sizeof(ethernetFrame_t) + sizeof(ipv4He
      +                          ader_t) + (int)(((char*)&((udpHeader_t *)1)->length)-1));
 11772  00734C  6A0C               	clrf	ETH_Insert@len+1,c
 11773  00734E  0E02               	movlw	2
 11774  007350  6E0B               	movwf	ETH_Insert@len,c
 11775  007352  6A0E               	clrf	ETH_Insert@offset+1,c
 11776  007354  0E26               	movlw	38
 11777  007356  6E0D               	movwf	ETH_Insert@offset,c
 11778  007358  0E2F               	movlw	UDP_Send@udpLength& (0+255)
 11779  00735A  ECA9  F03E         	call	_ETH_Insert
 11780                           
 11781                           ;udpv4.c: 108: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 11782  00735E  502F               	movf	UDP_Send@udpLength,w,c
 11783  007360  6E29               	movwf	(??_UDP_Send+1)& (0+255),c
 11784  007362  6A28               	clrf	??_UDP_Send& (0+255),c
 11785  007364  5030               	movf	UDP_Send@udpLength+1,w,c
 11786  007366  6E2A               	movwf	(??_UDP_Send+2)& (0+255),c
 11787  007368  6A2B               	clrf	(??_UDP_Send+3)& (0+255),c
 11788  00736A  5028               	movf	??_UDP_Send,w,c
 11789  00736C  102A               	iorwf	??_UDP_Send+2,w,c
 11790  00736E  6E2F               	movwf	UDP_Send@udpLength,c
 11791  007370  5029               	movf	??_UDP_Send+1,w,c
 11792  007372  102B               	iorwf	??_UDP_Send+3,w,c
 11793  007374  6E30               	movwf	UDP_Send@udpLength+1,c
 11794                           
 11795                           ;udpv4.c: 111: cksm = udpLength + UDP;
 11796  007376  0E11               	movlw	17
 11797  007378  242F               	addwf	UDP_Send@udpLength,w,c
 11798  00737A  6E2D               	movwf	UDP_Send@cksm,c
 11799  00737C  0E00               	movlw	0
 11800  00737E  2030               	addwfc	UDP_Send@udpLength+1,w,c
 11801  007380  6E2E               	movwf	UDP_Send@cksm+1,c
 11802                           
 11803                           ;udpv4.c: 112: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, udpLength + 8, cksm);
 11804  007382  6A0E               	clrf	ETH_TxComputeChecksum@position+1,c
 11805  007384  0E1A               	movlw	26
 11806  007386  6E0D               	movwf	ETH_TxComputeChecksum@position,c
 11807  007388  0E08               	movlw	8
 11808  00738A  242F               	addwf	UDP_Send@udpLength,w,c
 11809  00738C  6E0F               	movwf	ETH_TxComputeChecksum@length,c
 11810  00738E  0E00               	movlw	0
 11811  007390  2030               	addwfc	UDP_Send@udpLength+1,w,c
 11812  007392  6E10               	movwf	ETH_TxComputeChecksum@length+1,c
 11813  007394  C02D  F011         	movff	UDP_Send@cksm,ETH_TxComputeChecksum@seed
 11814  007398  C02E  F012         	movff	UDP_Send@cksm+1,ETH_TxComputeChecksum@seed+1
 11815  00739C  EC92  F038         	call	_ETH_TxComputeChecksum	;wreg free
 11816  0073A0  C00D  F02D         	movff	?_ETH_TxComputeChecksum,UDP_Send@cksm
 11817  0073A4  C00E  F02E         	movff	?_ETH_TxComputeChecksum+1,UDP_Send@cksm+1
 11818                           
 11819                           ;udpv4.c: 115: if (cksm == 0){
 11820  0073A8  502D               	movf	UDP_Send@cksm,w,c
 11821  0073AA  102E               	iorwf	UDP_Send@cksm+1,w,c
 11822  0073AC  E102               	bnz	l8055
 11823                           
 11824                           ;udpv4.c: 116: cksm = 0xffff;
 11825  0073AE  682D               	setf	UDP_Send@cksm,c
 11826  0073B0  682E               	setf	UDP_Send@cksm+1,c
 11827  0073B2                     l8055:
 11828                           
 11829                           ;udpv4.c: 117: }
 11830                           ;udpv4.c: 119: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (int)(((char*)&((udpHeader_t *)1)->checksum)-1));
 11831  0073B2  6A0C               	clrf	ETH_Insert@len+1,c
 11832  0073B4  0E02               	movlw	2
 11833  0073B6  6E0B               	movwf	ETH_Insert@len,c
 11834  0073B8  6A0E               	clrf	ETH_Insert@offset+1,c
 11835  0073BA  0E28               	movlw	40
 11836  0073BC  6E0D               	movwf	ETH_Insert@offset,c
 11837  0073BE  0E2D               	movlw	UDP_Send@cksm& (0+255)
 11838  0073C0  ECA9  F03E         	call	_ETH_Insert
 11839  0073C4  C02F  F01D         	movff	UDP_Send@udpLength,IPV4_Send@payloadLength
 11840  0073C8  C030  F01E         	movff	UDP_Send@udpLength+1,IPV4_Send@payloadLength+1
 11841  0073CC  EF64  F03D         	goto	_IPV4_Send	;wreg free
 11842  0073D0                     __end_of_UDP_Send:
 11843                           	opt stack 0
 11844                           tosu	equ	0xFFF
 11845                           tosh	equ	0xFFE
 11846                           tosl	equ	0xFFD
 11847                           pclath	equ	0xFFA
 11848                           tblptru	equ	0xFF8
 11849                           tblptrh	equ	0xFF7
 11850                           tblptrl	equ	0xFF6
 11851                           tablat	equ	0xFF5
 11852                           prodh	equ	0xFF4
 11853                           prodl	equ	0xFF3
 11854                           intcon	equ	0xFF2
 11855                           intcon2	equ	0xFF1
 11856                           indf0	equ	0xFEF
 11857                           postinc0	equ	0xFEE
 11858                           fsr0h	equ	0xFEA
 11859                           fsr0l	equ	0xFE9
 11860                           wreg	equ	0xFE8
 11861                           postinc1	equ	0xFE6
 11862                           plusw1	equ	0xFE3
 11863                           fsr1h	equ	0xFE2
 11864                           fsr1l	equ	0xFE1
 11865                           indf2	equ	0xFDF
 11866                           postinc2	equ	0xFDE
 11867                           postdec2	equ	0xFDD
 11868                           plusw2	equ	0xFDB
 11869                           fsr2h	equ	0xFDA
 11870                           fsr2l	equ	0xFD9
 11871                           status	equ	0xFD8
 11872                           
 11873 ;; *************** function _ETH_GetByteCount *****************
 11874 ;; Defined at:
 11875 ;;		line 602 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 11876 ;; Parameters:    Size  Location     Type
 11877 ;;		None
 11878 ;; Auto vars:     Size  Location     Type
 11879 ;;  wPtr            2   12[COMRAM] unsigned int 
 11880 ;; Return value:  Size  Location     Type
 11881 ;;                  2   10[COMRAM] unsigned int 
 11882 ;; Registers used:
 11883 ;;		wreg, status,2, status,0, cstack
 11884 ;; Tracked objects:
 11885 ;;		On entry : 0/0
 11886 ;;		On exit  : F/1
 11887 ;;		Unchanged: 0/0
 11888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11892 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11893 ;;Total ram usage:        4 bytes
 11894 ;; Hardware stack levels used:    1
 11895 ;; Hardware stack levels required when called:    6
 11896 ;; This function calls:
 11897 ;;		_ENCx24_Read
 11898 ;; This function is called by:
 11899 ;;		_UDP_Send
 11900 ;; This function uses a non-reentrant model
 11901 ;;
 11902                           
 11903                           	psect	text56
 11904  00864C                     __ptext56:
 11905                           	opt stack 0
 11906  00864C                     _ETH_GetByteCount:
 11907                           	opt stack 17
 11908                           
 11909                           ;encX24J600_driver.c: 604: uint16_t wPtr;
 11910                           ;encX24J600_driver.c: 606: wPtr = ENCx24_Read(XJ600_EGPWRPTL);
 11911                           
 11912                           ; BSR set to: 1
 11913                           ;incstack = 0
 11914  00864C  0E88               	movlw	136
 11915  00864E  ECDF  F03F         	call	_ENCx24_Read
 11916  008652  C005  F00D         	movff	?_ENCx24_Read,ETH_GetByteCount@wPtr
 11917  008656  C006  F00E         	movff	?_ENCx24_Read+1,ETH_GetByteCount@wPtr+1
 11918                           
 11919                           ;encX24J600_driver.c: 608: return (wPtr - ethData.saveWRPT);
 11920  00865A  0101               	movlb	1	; () banked
 11921  00865C  5188               	movf	(_ethData+5)& (0+255),w,b	;volatile
 11922  00865E  5C0D               	subwf	ETH_GetByteCount@wPtr,w,c
 11923  008660  6E0B               	movwf	?_ETH_GetByteCount,c
 11924  008662  5189               	movf	(_ethData+6)& (0+255),w,b	;volatile
 11925  008664  580E               	subwfb	ETH_GetByteCount@wPtr+1,w,c
 11926  008666  6E0C               	movwf	?_ETH_GetByteCount+1,c
 11927                           
 11928                           ; BSR set to: 1
 11929  008668  0012               	return		;funcret
 11930  00866A                     __end_of_ETH_GetByteCount:
 11931                           	opt stack 0
 11932                           tosu	equ	0xFFF
 11933                           tosh	equ	0xFFE
 11934                           tosl	equ	0xFFD
 11935                           pclath	equ	0xFFA
 11936                           tblptru	equ	0xFF8
 11937                           tblptrh	equ	0xFF7
 11938                           tblptrl	equ	0xFF6
 11939                           tablat	equ	0xFF5
 11940                           prodh	equ	0xFF4
 11941                           prodl	equ	0xFF3
 11942                           intcon	equ	0xFF2
 11943                           intcon2	equ	0xFF1
 11944                           indf0	equ	0xFEF
 11945                           postinc0	equ	0xFEE
 11946                           fsr0h	equ	0xFEA
 11947                           fsr0l	equ	0xFE9
 11948                           wreg	equ	0xFE8
 11949                           postinc1	equ	0xFE6
 11950                           plusw1	equ	0xFE3
 11951                           fsr1h	equ	0xFE2
 11952                           fsr1l	equ	0xFE1
 11953                           indf2	equ	0xFDF
 11954                           postinc2	equ	0xFDE
 11955                           postdec2	equ	0xFDD
 11956                           plusw2	equ	0xFDB
 11957                           fsr2h	equ	0xFDA
 11958                           fsr2l	equ	0xFD9
 11959                           status	equ	0xFD8
 11960                           
 11961 ;; *************** function _DHCP_WriteZeros *****************
 11962 ;; Defined at:
 11963 ;;		line 277 in file "../../TCPIP Library/source/dhcp_client.c"
 11964 ;; Parameters:    Size  Location     Type
 11965 ;;  length          2    3[COMRAM] unsigned int 
 11966 ;; Auto vars:     Size  Location     Type
 11967 ;;		None
 11968 ;; Return value:  Size  Location     Type
 11969 ;;		None               void
 11970 ;; Registers used:
 11971 ;;		wreg, status,2, status,0, cstack
 11972 ;; Tracked objects:
 11973 ;;		On entry : 0/0
 11974 ;;		On exit  : 0/0
 11975 ;;		Unchanged: 0/0
 11976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11981 ;;Total ram usage:        2 bytes
 11982 ;; Hardware stack levels used:    1
 11983 ;; Hardware stack levels required when called:    5
 11984 ;; This function calls:
 11985 ;;		_ETH_Write8
 11986 ;; This function is called by:
 11987 ;;		_DHCP_Request
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text57
 11992  008706                     __ptext57:
 11993                           	opt stack 0
 11994  008706                     _DHCP_WriteZeros:
 11995                           	opt stack 19
 11996                           
 11997                           ;dhcp_client.c: 279: while(length--)
 11998                           
 11999                           ; BSR set to: 1
 12000                           ;incstack = 0
 12001  008706  D003               	goto	l8035
 12002  008708                     l8033:
 12003                           
 12004                           ;dhcp_client.c: 280: {
 12005                           ;dhcp_client.c: 281: ETH_Write8(0);
 12006  008708  0E00               	movlw	0
 12007  00870A  EC6A  F043         	call	_ETH_Write8
 12008  00870E                     l8035:
 12009  00870E  0604               	decf	DHCP_WriteZeros@length,f,c
 12010  008710  A0D8               	btfss	status,0,c
 12011  008712  0605               	decf	DHCP_WriteZeros@length+1,f,c
 12012  008714  2804               	incf	DHCP_WriteZeros@length,w,c
 12013  008716  E1F8               	bnz	l8033
 12014  008718  2805               	incf	DHCP_WriteZeros@length+1,w,c
 12015  00871A  E1F6               	bnz	l8033
 12016  00871C  0012               	return		;funcret
 12017  00871E                     __end_of_DHCP_WriteZeros:
 12018                           	opt stack 0
 12019                           tosu	equ	0xFFF
 12020                           tosh	equ	0xFFE
 12021                           tosl	equ	0xFFD
 12022                           pclath	equ	0xFFA
 12023                           tblptru	equ	0xFF8
 12024                           tblptrh	equ	0xFF7
 12025                           tblptrl	equ	0xFF6
 12026                           tablat	equ	0xFF5
 12027                           prodh	equ	0xFF4
 12028                           prodl	equ	0xFF3
 12029                           intcon	equ	0xFF2
 12030                           intcon2	equ	0xFF1
 12031                           indf0	equ	0xFEF
 12032                           postinc0	equ	0xFEE
 12033                           fsr0h	equ	0xFEA
 12034                           fsr0l	equ	0xFE9
 12035                           wreg	equ	0xFE8
 12036                           postinc1	equ	0xFE6
 12037                           plusw1	equ	0xFE3
 12038                           fsr1h	equ	0xFE2
 12039                           fsr1l	equ	0xFE1
 12040                           indf2	equ	0xFDF
 12041                           postinc2	equ	0xFDE
 12042                           postdec2	equ	0xFDD
 12043                           plusw2	equ	0xFDB
 12044                           fsr2h	equ	0xFDA
 12045                           fsr2l	equ	0xFD9
 12046                           status	equ	0xFD8
 12047                           
 12048 ;; *************** function _ARPV4_Update *****************
 12049 ;; Defined at:
 12050 ;;		line 179 in file "../../TCPIP Library/source/arpv4.c"
 12051 ;; Parameters:    Size  Location     Type
 12052 ;;		None
 12053 ;; Auto vars:     Size  Location     Type
 12054 ;;  x               1    3[COMRAM] unsigned char 
 12055 ;;  entryPointer    2    1[COMRAM] PTR struct .
 12056 ;;		 -> arpMap(104), 
 12057 ;; Return value:  Size  Location     Type
 12058 ;;		None               void
 12059 ;; Registers used:
 12060 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12061 ;; Tracked objects:
 12062 ;;		On entry : F/1
 12063 ;;		On exit  : F/1
 12064 ;;		Unchanged: F/0
 12065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12067 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12069 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12070 ;;Total ram usage:        3 bytes
 12071 ;; Hardware stack levels used:    1
 12072 ;; Hardware stack levels required when called:    3
 12073 ;; This function calls:
 12074 ;;		Nothing
 12075 ;; This function is called by:
 12076 ;;		_Network_Manage
 12077 ;; This function uses a non-reentrant model
 12078 ;;
 12079                           
 12080                           	psect	text58
 12081  008476                     __ptext58:
 12082                           	opt stack 0
 12083  008476                     _ARPV4_Update:
 12084                           	opt stack 26
 12085                           
 12086                           ; BSR set to: 1
 12087                           ;arpv4.c: 181: arpMap_t *entryPointer = arpMap;
 12088                           
 12089                           ;incstack = 0
 12090  008476  0E00               	movlw	low _arpMap
 12091  008478  6E02               	movwf	ARPV4_Update@entryPointer,c
 12092  00847A  0E03               	movlw	high _arpMap
 12093  00847C  6E03               	movwf	ARPV4_Update@entryPointer+1,c
 12094                           
 12095                           ; BSR set to: 1
 12096                           ;arpv4.c: 182: for(uint8_t x=0; x < 8; x++)
 12097  00847E  6A04               	clrf	ARPV4_Update@x,c
 12098  008480                     l9687:
 12099                           
 12100                           ; BSR set to: 1
 12101                           ;arpv4.c: 183: {
 12102                           ;arpv4.c: 184: entryPointer->age ++;
 12103  008480  EE20 F00C          	lfsr	2,12
 12104  008484  5002               	movf	ARPV4_Update@entryPointer,w,c
 12105  008486  26D9               	addwf	fsr2l,f,c
 12106  008488  5003               	movf	ARPV4_Update@entryPointer+1,w,c
 12107  00848A  22DA               	addwfc	fsr2h,f,c
 12108  00848C  2ADF               	incf	indf2,f,c
 12109                           
 12110                           ; BSR set to: 1
 12111                           ;arpv4.c: 185: entryPointer ++;
 12112  00848E  0E0D               	movlw	13
 12113  008490  2602               	addwf	ARPV4_Update@entryPointer,f,c
 12114  008492  0E00               	movlw	0
 12115  008494  2203               	addwfc	ARPV4_Update@entryPointer+1,f,c
 12116                           
 12117                           ; BSR set to: 1
 12118  008496  2A04               	incf	ARPV4_Update@x,f,c
 12119                           
 12120                           ; BSR set to: 1
 12121  008498  0E07               	movlw	7
 12122  00849A  6404               	cpfsgt	ARPV4_Update@x,c
 12123  00849C  D7F1               	goto	l9687
 12124  00849E  0C07               	retlw	7
 12125  0084A0                     __end_of_ARPV4_Update:
 12126                           	opt stack 0
 12127                           tosu	equ	0xFFF
 12128                           tosh	equ	0xFFE
 12129                           tosl	equ	0xFFD
 12130                           pclath	equ	0xFFA
 12131                           tblptru	equ	0xFF8
 12132                           tblptrh	equ	0xFF7
 12133                           tblptrl	equ	0xFF6
 12134                           tablat	equ	0xFF5
 12135                           prodh	equ	0xFF4
 12136                           prodl	equ	0xFF3
 12137                           intcon	equ	0xFF2
 12138                           intcon2	equ	0xFF1
 12139                           indf0	equ	0xFEF
 12140                           postinc0	equ	0xFEE
 12141                           fsr0h	equ	0xFEA
 12142                           fsr0l	equ	0xFE9
 12143                           wreg	equ	0xFE8
 12144                           postinc1	equ	0xFE6
 12145                           plusw1	equ	0xFE3
 12146                           fsr1h	equ	0xFE2
 12147                           fsr1l	equ	0xFE1
 12148                           indf2	equ	0xFDF
 12149                           postinc2	equ	0xFDE
 12150                           postdec2	equ	0xFDD
 12151                           plusw2	equ	0xFDB
 12152                           fsr2h	equ	0xFDA
 12153                           fsr2l	equ	0xFD9
 12154                           status	equ	0xFD8
 12155                           
 12156 ;; *************** function _Network_Init *****************
 12157 ;; Defined at:
 12158 ;;		line 65 in file "../../TCPIP Library/source/network.c"
 12159 ;; Parameters:    Size  Location     Type
 12160 ;;		None
 12161 ;; Auto vars:     Size  Location     Type
 12162 ;;		None
 12163 ;; Return value:  Size  Location     Type
 12164 ;;		None               void
 12165 ;; Registers used:
 12166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12167 ;; Tracked objects:
 12168 ;;		On entry : 0/2
 12169 ;;		On exit  : F/1
 12170 ;;		Unchanged: 0/0
 12171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12176 ;;Total ram usage:        0 bytes
 12177 ;; Hardware stack levels used:    1
 12178 ;; Hardware stack levels required when called:    9
 12179 ;; This function calls:
 12180 ;;		_ARPV4_Init
 12181 ;;		_ETH_Init
 12182 ;;		_IPV4_Init
 12183 ;;		_TCP_Init
 12184 ;;		_time
 12185 ;; This function is called by:
 12186 ;;		_main
 12187 ;; This function uses a non-reentrant model
 12188 ;;
 12189                           
 12190                           	psect	text59
 12191  0083F4                     __ptext59:
 12192                           	opt stack 0
 12193  0083F4                     _Network_Init:
 12194                           	opt stack 21
 12195                           
 12196                           ;network.c: 67: ETH_Init();
 12197                           
 12198                           ; BSR set to: 1
 12199                           ;incstack = 0
 12200  0083F4  EC64  F035         	call	_ETH_Init	;wreg free
 12201                           
 12202                           ;network.c: 68: ARPV4_Init();
 12203  0083F8  EC5D  F043         	call	_ARPV4_Init	;wreg free
 12204                           
 12205                           ;network.c: 69: IPV4_Init();
 12206  0083FC  ECDF  F043         	call	_IPV4_Init	;wreg free
 12207                           
 12208                           ; BSR set to: 1
 12209                           ;network.c: 70: TCP_Init();
 12210  008400  EC50  F043         	call	_TCP_Init	;wreg free
 12211                           
 12212                           ; BSR set to: 2
 12213                           ;network.c: 72: time(&arpTimer);
 12214  008404  0ED0               	movlw	low _arpTimer
 12215  008406  6E02               	movwf	time@t,c
 12216  008408  0E01               	movlw	high _arpTimer
 12217  00840A  6E03               	movwf	time@t+1,c
 12218  00840C  EC55  F03E         	call	_time	;wreg free
 12219                           
 12220                           ;network.c: 73: arpTimer += 10;
 12221  008410  0E0A               	movlw	10
 12222  008412  0101               	movlb	1	; () banked
 12223  008414  27D0               	addwf	_arpTimer& (0+255),f,b
 12224  008416  0E00               	movlw	0
 12225  008418  23D1               	addwfc	(_arpTimer+1)& (0+255),f,b
 12226  00841A  23D2               	addwfc	(_arpTimer+2)& (0+255),f,b
 12227  00841C  23D3               	addwfc	(_arpTimer+3)& (0+255),f,b
 12228                           
 12229                           ; BSR set to: 1
 12230  00841E  0C00               	retlw	0	;funcret
 12231  008420                     __end_of_Network_Init:
 12232                           	opt stack 0
 12233                           tosu	equ	0xFFF
 12234                           tosh	equ	0xFFE
 12235                           tosl	equ	0xFFD
 12236                           pclath	equ	0xFFA
 12237                           tblptru	equ	0xFF8
 12238                           tblptrh	equ	0xFF7
 12239                           tblptrl	equ	0xFF6
 12240                           tablat	equ	0xFF5
 12241                           prodh	equ	0xFF4
 12242                           prodl	equ	0xFF3
 12243                           intcon	equ	0xFF2
 12244                           intcon2	equ	0xFF1
 12245                           indf0	equ	0xFEF
 12246                           postinc0	equ	0xFEE
 12247                           fsr0h	equ	0xFEA
 12248                           fsr0l	equ	0xFE9
 12249                           wreg	equ	0xFE8
 12250                           postinc1	equ	0xFE6
 12251                           plusw1	equ	0xFE3
 12252                           fsr1h	equ	0xFE2
 12253                           fsr1l	equ	0xFE1
 12254                           indf2	equ	0xFDF
 12255                           postinc2	equ	0xFDE
 12256                           postdec2	equ	0xFDD
 12257                           plusw2	equ	0xFDB
 12258                           fsr2h	equ	0xFDA
 12259                           fsr2l	equ	0xFD9
 12260                           status	equ	0xFD8
 12261                           
 12262 ;; *************** function _time *****************
 12263 ;; Defined at:
 12264 ;;		line 198 in file "../board_support_package/picdem2_net/rtcc.c"
 12265 ;; Parameters:    Size  Location     Type
 12266 ;;  t               2    1[COMRAM] PTR long 
 12267 ;;		 -> main@t(4), Network_Manage@now(4), arpTimer(4), NULL(0), 
 12268 ;; Auto vars:     Size  Location     Type
 12269 ;;  the_time        4    6[COMRAM] long 
 12270 ;;  gie_val         1    5[COMRAM] unsigned char 
 12271 ;; Return value:  Size  Location     Type
 12272 ;;                  4    1[COMRAM] long 
 12273 ;; Registers used:
 12274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12275 ;; Tracked objects:
 12276 ;;		On entry : 0/1
 12277 ;;		On exit  : 0/0
 12278 ;;		Unchanged: 0/0
 12279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12280 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12281 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12283 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12284 ;;Total ram usage:        9 bytes
 12285 ;; Hardware stack levels used:    1
 12286 ;; Hardware stack levels required when called:    3
 12287 ;; This function calls:
 12288 ;;		Nothing
 12289 ;; This function is called by:
 12290 ;;		_Network_Init
 12291 ;;		_Network_Manage
 12292 ;;		_SYSLOG_Init
 12293 ;;		_SYSLOG_Write
 12294 ;;		_main
 12295 ;; This function uses a non-reentrant model
 12296 ;;
 12297                           
 12298                           	psect	text60
 12299  007CAA                     __ptext60:
 12300                           	opt stack 0
 12301  007CAA                     _time:
 12302                           	opt stack 27
 12303                           
 12304                           ;rtcc.c: 200: bool gie_val;
 12305                           ;rtcc.c: 201: time_t the_time;
 12306                           ;rtcc.c: 203: gie_val = GIE;
 12307                           
 12308                           ; BSR set to: 1
 12309                           ;incstack = 0
 12310  007CAA  0E00               	movlw	0
 12311  007CAC  BEF2               	btfsc	intcon,7,c	;volatile
 12312  007CAE  0E01               	movlw	1
 12313  007CB0  6E06               	movwf	time@gie_val,c
 12314                           
 12315                           ;rtcc.c: 204: GIE = 0;
 12316  007CB2  9EF2               	bcf	intcon,7,c	;volatile
 12317                           
 12318                           ;rtcc.c: 205: the_time = deviceTime;
 12319  007CB4  C2CC  F007         	movff	_deviceTime,time@the_time	;volatile
 12320  007CB8  C2CD  F008         	movff	_deviceTime+1,time@the_time+1	;volatile
 12321  007CBC  C2CE  F009         	movff	_deviceTime+2,time@the_time+2	;volatile
 12322  007CC0  C2CF  F00A         	movff	_deviceTime+3,time@the_time+3	;volatile
 12323                           
 12324                           ;rtcc.c: 206: GIE = gie_val;
 12325  007CC4  A006               	btfss	time@gie_val,0,c
 12326  007CC6  D002               	goto	u14550
 12327  007CC8  8EF2               	bsf	intcon,7,c	;volatile
 12328  007CCA  D001               	goto	l9559
 12329  007CCC                     u14550:
 12330  007CCC  9EF2               	bcf	intcon,7,c	;volatile
 12331  007CCE                     l9559:
 12332                           
 12333                           ;rtcc.c: 208: if(t)
 12334  007CCE  5002               	movf	time@t,w,c
 12335  007CD0  1003               	iorwf	time@t+1,w,c
 12336  007CD2  E00C               	bz	l9563
 12337                           
 12338                           ;rtcc.c: 209: {
 12339                           ;rtcc.c: 210: *t = the_time;
 12340  007CD4  C002  FFD9         	movff	time@t,fsr2l
 12341  007CD8  C003  FFDA         	movff	time@t+1,fsr2h
 12342  007CDC  C007  FFDE         	movff	time@the_time,postinc2
 12343  007CE0  C008  FFDE         	movff	time@the_time+1,postinc2
 12344  007CE4  C009  FFDE         	movff	time@the_time+2,postinc2
 12345  007CE8  C00A  FFDE         	movff	time@the_time+3,postinc2
 12346  007CEC                     l9563:
 12347                           
 12348                           ;rtcc.c: 211: }
 12349                           ;rtcc.c: 213: return (the_time);
 12350  007CEC  C007  F002         	movff	time@the_time,?_time
 12351  007CF0  C008  F003         	movff	time@the_time+1,?_time+1
 12352  007CF4  C009  F004         	movff	time@the_time+2,?_time+2
 12353  007CF8  C00A  F005         	movff	time@the_time+3,?_time+3
 12354  007CFC  0012               	return		;funcret
 12355  007CFE                     __end_of_time:
 12356                           	opt stack 0
 12357                           tosu	equ	0xFFF
 12358                           tosh	equ	0xFFE
 12359                           tosl	equ	0xFFD
 12360                           pclath	equ	0xFFA
 12361                           tblptru	equ	0xFF8
 12362                           tblptrh	equ	0xFF7
 12363                           tblptrl	equ	0xFF6
 12364                           tablat	equ	0xFF5
 12365                           prodh	equ	0xFF4
 12366                           prodl	equ	0xFF3
 12367                           intcon	equ	0xFF2
 12368                           intcon2	equ	0xFF1
 12369                           indf0	equ	0xFEF
 12370                           postinc0	equ	0xFEE
 12371                           fsr0h	equ	0xFEA
 12372                           fsr0l	equ	0xFE9
 12373                           wreg	equ	0xFE8
 12374                           postinc1	equ	0xFE6
 12375                           plusw1	equ	0xFE3
 12376                           fsr1h	equ	0xFE2
 12377                           fsr1l	equ	0xFE1
 12378                           indf2	equ	0xFDF
 12379                           postinc2	equ	0xFDE
 12380                           postdec2	equ	0xFDD
 12381                           plusw2	equ	0xFDB
 12382                           fsr2h	equ	0xFDA
 12383                           fsr2l	equ	0xFD9
 12384                           status	equ	0xFD8
 12385                           
 12386 ;; *************** function _TCP_Init *****************
 12387 ;; Defined at:
 12388 ;;		line 1173 in file "../../TCPIP Library/source/tcpv4.c"
 12389 ;; Parameters:    Size  Location     Type
 12390 ;;		None
 12391 ;; Auto vars:     Size  Location     Type
 12392 ;;		None
 12393 ;; Return value:  Size  Location     Type
 12394 ;;		None               void
 12395 ;; Registers used:
 12396 ;;		wreg, status,2
 12397 ;; Tracked objects:
 12398 ;;		On entry : F/1
 12399 ;;		On exit  : F/2
 12400 ;;		Unchanged: 0/0
 12401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12406 ;;Total ram usage:        0 bytes
 12407 ;; Hardware stack levels used:    1
 12408 ;; Hardware stack levels required when called:    3
 12409 ;; This function calls:
 12410 ;;		Nothing
 12411 ;; This function is called by:
 12412 ;;		_Network_Init
 12413 ;; This function uses a non-reentrant model
 12414 ;;
 12415                           
 12416                           	psect	text61
 12417  0086A0                     __ptext61:
 12418                           	opt stack 0
 12419  0086A0                     _TCP_Init:
 12420                           	opt stack 26
 12421                           
 12422                           ; BSR set to: 1
 12423                           ;tcpv4.c: 1175: tcbList = (0);
 12424                           
 12425                           ;incstack = 0
 12426  0086A0  6BA2               	clrf	_tcbList& (0+255),b
 12427  0086A2  6BA3               	clrf	(_tcbList+1)& (0+255),b
 12428                           
 12429                           ;tcpv4.c: 1176: tcbListSize = 0;
 12430  0086A4  6BA7               	clrf	_tcbListSize& (0+255),b
 12431                           
 12432                           ; BSR set to: 1
 12433                           ;tcpv4.c: 1177: nextAvailablePort = (1024u);
 12434  0086A6  0E04               	movlw	4
 12435  0086A8  6F9D               	movwf	(_nextAvailablePort+1)& (0+255),b
 12436  0086AA  0E00               	movlw	0
 12437  0086AC  6B9C               	clrf	_nextAvailablePort& (0+255),b
 12438                           
 12439                           ; BSR set to: 1
 12440                           ;tcpv4.c: 1178: nextSequenceNumber = 0;
 12441  0086AE  0102               	movlb	2	; () banked
 12442  0086B0  6B2A               	clrf	_nextSequenceNumber& (0+255),b
 12443  0086B2  6B2B               	clrf	(_nextSequenceNumber+1)& (0+255),b
 12444  0086B4  6B2C               	clrf	(_nextSequenceNumber+2)& (0+255),b
 12445  0086B6  6B2D               	clrf	(_nextSequenceNumber+3)& (0+255),b
 12446                           
 12447                           ; BSR set to: 2
 12448  0086B8  0012               	return		;funcret
 12449  0086BA                     __end_of_TCP_Init:
 12450                           	opt stack 0
 12451                           tosu	equ	0xFFF
 12452                           tosh	equ	0xFFE
 12453                           tosl	equ	0xFFD
 12454                           pclath	equ	0xFFA
 12455                           tblptru	equ	0xFF8
 12456                           tblptrh	equ	0xFF7
 12457                           tblptrl	equ	0xFF6
 12458                           tablat	equ	0xFF5
 12459                           prodh	equ	0xFF4
 12460                           prodl	equ	0xFF3
 12461                           intcon	equ	0xFF2
 12462                           intcon2	equ	0xFF1
 12463                           indf0	equ	0xFEF
 12464                           postinc0	equ	0xFEE
 12465                           fsr0h	equ	0xFEA
 12466                           fsr0l	equ	0xFE9
 12467                           wreg	equ	0xFE8
 12468                           postinc1	equ	0xFE6
 12469                           plusw1	equ	0xFE3
 12470                           fsr1h	equ	0xFE2
 12471                           fsr1l	equ	0xFE1
 12472                           indf2	equ	0xFDF
 12473                           postinc2	equ	0xFDE
 12474                           postdec2	equ	0xFDD
 12475                           plusw2	equ	0xFDB
 12476                           fsr2h	equ	0xFDA
 12477                           fsr2l	equ	0xFD9
 12478                           status	equ	0xFD8
 12479                           
 12480 ;; *************** function _IPV4_Init *****************
 12481 ;; Defined at:
 12482 ;;		line 78 in file "../../TCPIP Library/source/ipv4.c"
 12483 ;; Parameters:    Size  Location     Type
 12484 ;;		None
 12485 ;; Auto vars:     Size  Location     Type
 12486 ;;		None
 12487 ;; Return value:  Size  Location     Type
 12488 ;;		None               void
 12489 ;; Registers used:
 12490 ;;		None
 12491 ;; Tracked objects:
 12492 ;;		On entry : 0/2
 12493 ;;		On exit  : F/1
 12494 ;;		Unchanged: 0/0
 12495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12500 ;;Total ram usage:        0 bytes
 12501 ;; Hardware stack levels used:    1
 12502 ;; Hardware stack levels required when called:    3
 12503 ;; This function calls:
 12504 ;;		Nothing
 12505 ;; This function is called by:
 12506 ;;		_Network_Init
 12507 ;; This function uses a non-reentrant model
 12508 ;;
 12509                           
 12510                           	psect	text62
 12511  0087BE                     __ptext62:
 12512                           	opt stack 0
 12513  0087BE                     _IPV4_Init:
 12514                           	opt stack 26
 12515                           
 12516                           ;ipv4.c: 80: ipv4Address = 0;
 12517                           
 12518                           ; BSR set to: 2
 12519                           ;incstack = 0
 12520  0087BE  0101               	movlb	1	; () banked
 12521  0087C0  6B8E               	clrf	_ipv4Address& (0+255),b
 12522  0087C2  6B8F               	clrf	(_ipv4Address+1)& (0+255),b
 12523  0087C4  6B90               	clrf	(_ipv4Address+2)& (0+255),b
 12524  0087C6  6B91               	clrf	(_ipv4Address+3)& (0+255),b
 12525                           
 12526                           ; BSR set to: 1
 12527  0087C8  0012               	return		;funcret
 12528  0087CA                     __end_of_IPV4_Init:
 12529                           	opt stack 0
 12530                           tosu	equ	0xFFF
 12531                           tosh	equ	0xFFE
 12532                           tosl	equ	0xFFD
 12533                           pclath	equ	0xFFA
 12534                           tblptru	equ	0xFF8
 12535                           tblptrh	equ	0xFF7
 12536                           tblptrl	equ	0xFF6
 12537                           tablat	equ	0xFF5
 12538                           prodh	equ	0xFF4
 12539                           prodl	equ	0xFF3
 12540                           intcon	equ	0xFF2
 12541                           intcon2	equ	0xFF1
 12542                           indf0	equ	0xFEF
 12543                           postinc0	equ	0xFEE
 12544                           fsr0h	equ	0xFEA
 12545                           fsr0l	equ	0xFE9
 12546                           wreg	equ	0xFE8
 12547                           postinc1	equ	0xFE6
 12548                           plusw1	equ	0xFE3
 12549                           fsr1h	equ	0xFE2
 12550                           fsr1l	equ	0xFE1
 12551                           indf2	equ	0xFDF
 12552                           postinc2	equ	0xFDE
 12553                           postdec2	equ	0xFDD
 12554                           plusw2	equ	0xFDB
 12555                           fsr2h	equ	0xFDA
 12556                           fsr2l	equ	0xFD9
 12557                           status	equ	0xFD8
 12558                           
 12559 ;; *************** function _ETH_Init *****************
 12560 ;; Defined at:
 12561 ;;		line 94 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 12562 ;; Parameters:    Size  Location     Type
 12563 ;;		None
 12564 ;; Auto vars:     Size  Location     Type
 12565 ;;  phcon1_val      2   21[COMRAM] unsigned int 
 12566 ;; Return value:  Size  Location     Type
 12567 ;;		None               void
 12568 ;; Registers used:
 12569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12570 ;; Tracked objects:
 12571 ;;		On entry : 0/2
 12572 ;;		On exit  : 0/0
 12573 ;;		Unchanged: 0/0
 12574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12579 ;;Total ram usage:        4 bytes
 12580 ;; Hardware stack levels used:    1
 12581 ;; Hardware stack levels required when called:    8
 12582 ;; This function calls:
 12583 ;;		_ENCx24_BFS
 12584 ;;		_ENCx24_PHYWrite
 12585 ;;		_ENCx24_PhyRead
 12586 ;;		_ENCx24_Read
 12587 ;;		_ENCx24_Write
 12588 ;;		_ETH_CheckLinkUp
 12589 ;;		_ETH_GetMAC
 12590 ;;		_ETH_SendSystemReset
 12591 ;;		_SPI_ExchangeByte
 12592 ;; This function is called by:
 12593 ;;		_Network_Init
 12594 ;; This function uses a non-reentrant model
 12595 ;;
 12596                           
 12597                           	psect	text63
 12598  006AC8                     __ptext63:
 12599                           	opt stack 0
 12600  006AC8                     _ETH_Init:
 12601                           	opt stack 21
 12602                           
 12603                           ;encX24J600_driver.c: 96: uint16_t phcon1_val;
 12604                           ;encX24J600_driver.c: 99: LATBbits.LATB5 = 0;
 12605                           
 12606                           ; BSR set to: 1
 12607                           ;incstack = 0
 12608  006AC8  9A8A               	bcf	3978,5,c	;volatile
 12609                           
 12610                           ;encX24J600_driver.c: 100: TRISBbits.TRISB5 = 0;
 12611  006ACA  9A93               	bcf	3987,5,c	;volatile
 12612                           
 12613                           ;encX24J600_driver.c: 101: _delay((unsigned long)((10)*(41666667UL/4000.0)));
 12614  006ACC  0E88               	movlw	136
 12615  006ACE  6E14               	movwf	??_ETH_Init& (0+255),c
 12616  006AD0  0E46               	movlw	70
 12617  006AD2                     u15407:
 12618  006AD2  2EE8               	decfsz	wreg,f,c
 12619  006AD4  D7FE               	goto	u15407
 12620  006AD6  2E14               	decfsz	??_ETH_Init& (0+255),f,c
 12621  006AD8  D7FC               	goto	u15407
 12622  006ADA  D000               	nop2	
 12623                           
 12624                           ;encX24J600_driver.c: 105: PORTBbits.RB2 = 1;
 12625  006ADC  8481               	bsf	3969,2,c	;volatile
 12626                           
 12627                           ;encX24J600_driver.c: 106: TRISBbits.TRISB2 = 0;
 12628  006ADE  9493               	bcf	3987,2,c	;volatile
 12629                           
 12630                           ;encX24J600_driver.c: 109: LATBbits.LATB5 = 1;
 12631  006AE0  8A8A               	bsf	3978,5,c	;volatile
 12632                           
 12633                           ;encX24J600_driver.c: 110: _delay((unsigned long)((400)*(41666667UL/4000000.0)));
 12634  006AE2  0E06               	movlw	6
 12635  006AE4  6E14               	movwf	??_ETH_Init& (0+255),c
 12636  006AE6  0E68               	movlw	104
 12637  006AE8                     u15417:
 12638  006AE8  2EE8               	decfsz	wreg,f,c
 12639  006AEA  D7FE               	goto	u15417
 12640  006AEC  2E14               	decfsz	??_ETH_Init& (0+255),f,c
 12641  006AEE  D7FC               	goto	u15417
 12642                           
 12643                           ;encX24J600_driver.c: 113: TRISBbits.TRISB2 = 1;
 12644  006AF0  8493               	bsf	3987,2,c	;volatile
 12645  006AF2  868A               	bsf	3978,3,c	;volatile
 12646                           
 12647                           ;encX24J600_driver.c: 117: ethData.error = 0;
 12648  006AF4  0101               	movlb	1	; () banked
 12649  006AF6  9183               	bcf	_ethData& (0+255),0,b	;volatile
 12650                           
 12651                           ; BSR set to: 1
 12652                           ;encX24J600_driver.c: 118: ethData.up = 0;
 12653  006AF8  9583               	bcf	_ethData& (0+255),2,b	;volatile
 12654                           
 12655                           ; BSR set to: 1
 12656                           ;encX24J600_driver.c: 119: ethData.linkChange = 0;
 12657  006AFA  9983               	bcf	_ethData& (0+255),4,b	;volatile
 12658                           
 12659                           ; BSR set to: 1
 12660                           ;encX24J600_driver.c: 120: ethData.bufferBusy = 0;
 12661  006AFC  9B83               	bcf	_ethData& (0+255),5,b	;volatile
 12662                           
 12663                           ; BSR set to: 1
 12664                           ;encX24J600_driver.c: 121: ethData.saveRDPT = 0;
 12665  006AFE  6B86               	clrf	(_ethData+3)& (0+255),b	;volatile
 12666  006B00  6B87               	clrf	(_ethData+4)& (0+255),b	;volatile
 12667                           
 12668                           ; BSR set to: 1
 12669                           ;encX24J600_driver.c: 123: ETH_SendSystemReset();
 12670  006B02  ECF3  F03C         	call	_ETH_SendSystemReset	;wreg free
 12671                           
 12672                           ;encX24J600_driver.c: 126: nextPacketPointer = 0x1600ul;
 12673  006B06  0E16               	movlw	22
 12674  006B08  0101               	movlb	1	; () banked
 12675  006B0A  6F9F               	movwf	(_nextPacketPointer+1)& (0+255),b
 12676  006B0C  6B9E               	clrf	_nextPacketPointer& (0+255),b
 12677                           
 12678                           ; BSR set to: 1
 12679                           ;encX24J600_driver.c: 129: ENCx24_Write(XJ600_ETXSTL, 0x0000ul);
 12680  006B0E  0E00               	movlw	0
 12681  006B10  6A06               	clrf	ENCx24_Write@data+1,c
 12682  006B12  6A05               	clrf	ENCx24_Write@data,c
 12683  006B14  EC91  F040         	call	_ENCx24_Write
 12684                           
 12685                           ;encX24J600_driver.c: 130: ENCx24_Write(XJ600_ERXSTL, 0x1600ul);
 12686  006B18  0E16               	movlw	22
 12687  006B1A  6E06               	movwf	ENCx24_Write@data+1,c
 12688  006B1C  6A05               	clrf	ENCx24_Write@data,c
 12689  006B1E  0E04               	movlw	4
 12690  006B20  EC91  F040         	call	_ENCx24_Write
 12691                           
 12692                           ;encX24J600_driver.c: 131: ENCx24_Write(XJ600_ERXTAILL, 0x6000ul - 2);
 12693  006B24  0E5F               	movlw	95
 12694  006B26  6E06               	movwf	ENCx24_Write@data+1,c
 12695  006B28  0EFE               	movlw	254
 12696  006B2A  6E05               	movwf	ENCx24_Write@data,c
 12697  006B2C  0E06               	movlw	6
 12698  006B2E  EC91  F040         	call	_ENCx24_Write
 12699                           
 12700                           ;encX24J600_driver.c: 132: ENCx24_Write(XJ600_EUDASTL,0x15FFul + 1);
 12701  006B32  0E16               	movlw	22
 12702  006B34  6E06               	movwf	ENCx24_Write@data+1,c
 12703  006B36  6A05               	clrf	ENCx24_Write@data,c
 12704  006B38  0EF6               	movlw	246
 12705  006B3A  EC91  F040         	call	_ENCx24_Write
 12706                           
 12707                           ;encX24J600_driver.c: 133: ENCx24_Write(XJ600_EUDANDL,0x15FFul + 1);
 12708  006B3E  0E16               	movlw	22
 12709  006B40  6E06               	movwf	ENCx24_Write@data+1,c
 12710  006B42  6A05               	clrf	ENCx24_Write@data,c
 12711  006B44  0EF8               	movlw	248
 12712  006B46  EC91  F040         	call	_ENCx24_Write
 12713                           
 12714                           ;encX24J600_driver.c: 135: phcon1_val = ENCx24_PhyRead(PHCON1);
 12715  006B4A  0E00               	movlw	0
 12716  006B4C  EC6F  F040         	call	_ENCx24_PhyRead
 12717  006B50  C00B  F016         	movff	?_ENCx24_PhyRead,ETH_Init@phcon1_val
 12718  006B54  C00C  F017         	movff	?_ENCx24_PhyRead+1,ETH_Init@phcon1_val+1
 12719                           
 12720                           ;encX24J600_driver.c: 136: phcon1_val &= 0xF7FF;
 12721  006B58  9617               	bcf	ETH_Init@phcon1_val+1,3,c
 12722                           
 12723                           ;encX24J600_driver.c: 137: ENCx24_PHYWrite(PHCON1, phcon1_val);
 12724  006B5A  C016  F00B         	movff	ETH_Init@phcon1_val,ENCx24_PHYWrite@data
 12725  006B5E  C017  F00C         	movff	ETH_Init@phcon1_val+1,ENCx24_PHYWrite@data+1
 12726  006B62  0E00               	movlw	0
 12727  006B64  EC10  F042         	call	_ENCx24_PHYWrite
 12728                           
 12729                           ;encX24J600_driver.c: 144: ENCx24_PHYWrite(PHANA,0x05E1);
 12730  006B68  0E05               	movlw	5
 12731  006B6A  6E0C               	movwf	ENCx24_PHYWrite@data+1,c
 12732  006B6C  0EE1               	movlw	225
 12733  006B6E  6E0B               	movwf	ENCx24_PHYWrite@data,c
 12734  006B70  0E04               	movlw	4
 12735  006B72  EC10  F042         	call	_ENCx24_PHYWrite
 12736                           
 12737                           ;encX24J600_driver.c: 147: while((ENCx24_Read(XJ600_ESTATL)&0X1100)!=0x1100)
 12738  006B76  D008               	goto	l9615
 12739  006B78                     l9613:
 12740                           
 12741                           ;encX24J600_driver.c: 148: {
 12742                           ;encX24J600_driver.c: 149: _delay((unsigned long)((256)*(41666667UL/4000000.0)));
 12743  006B78  0E04               	movlw	4
 12744  006B7A  6E14               	movwf	??_ETH_Init& (0+255),c
 12745  006B7C  0E75               	movlw	117
 12746  006B7E                     u15427:
 12747  006B7E  2EE8               	decfsz	wreg,f,c
 12748  006B80  D7FE               	goto	u15427
 12749  006B82  2E14               	decfsz	??_ETH_Init& (0+255),f,c
 12750  006B84  D7FC               	goto	u15427
 12751  006B86  F000               	nop	
 12752  006B88                     l9615:
 12753  006B88  6A14               	clrf	??_ETH_Init& (0+255),c
 12754  006B8A  0E11               	movlw	17
 12755  006B8C  6E15               	movwf	(??_ETH_Init+1)& (0+255),c
 12756  006B8E  0EFA               	movlw	250
 12757  006B90  ECDF  F03F         	call	_ENCx24_Read
 12758  006B94  5014               	movf	??_ETH_Init,w,c
 12759  006B96  1605               	andwf	?_ENCx24_Read,f,c
 12760  006B98  5015               	movf	??_ETH_Init+1,w,c
 12761  006B9A  1606               	andwf	?_ENCx24_Read+1,f,c
 12762  006B9C  0E11               	movlw	17
 12763  006B9E  1806               	xorwf	?_ENCx24_Read+1,w,c
 12764  006BA0  1005               	iorwf	?_ENCx24_Read,w,c
 12765  006BA2  E1EA               	bnz	l9613
 12766                           
 12767                           ;encX24J600_driver.c: 150: }
 12768                           ;encX24J600_driver.c: 163: ENCx24_Write(XJ600_ERXFCONL, 0x0059);
 12769  006BA4  6A06               	clrf	ENCx24_Write@data+1,c
 12770  006BA6  0E59               	movlw	89
 12771  006BA8  6E05               	movwf	ENCx24_Write@data,c
 12772  006BAA  0E34               	movlw	52
 12773  006BAC  EC91  F040         	call	_ENCx24_Write
 12774                           
 12775                           ;encX24J600_driver.c: 173: ENCx24_Write(XJ600_EIEL,0x884B);
 12776  006BB0  0E88               	movlw	136
 12777  006BB2  6E06               	movwf	ENCx24_Write@data+1,c
 12778  006BB4  0E4B               	movlw	75
 12779  006BB6  6E05               	movwf	ENCx24_Write@data,c
 12780  006BB8  0E72               	movlw	114
 12781  006BBA  EC91  F040         	call	_ENCx24_Write
 12782                           
 12783                           ;encX24J600_driver.c: 176: ENCx24_BFS(XJ600_ECON1L,0x0001);
 12784  006BBE  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 12785  006BC0  0E01               	movlw	1
 12786  006BC2  6E05               	movwf	ENCx24_BFS@bitMask,c
 12787  006BC4  0EFE               	movlw	254
 12788  006BC6  ECB2  F040         	call	_ENCx24_BFS
 12789                           
 12790                           ;encX24J600_driver.c: 180: SPI_ExchangeByte(b0sel_inst);
 12791  006BCA  0EC0               	movlw	192
 12792  006BCC  ECCC  F043         	call	_SPI_ExchangeByte
 12793                           
 12794                           ;encX24J600_driver.c: 182: ETH_GetMAC((uint8_t *)&ethMAC);
 12795  006BD0  0E99               	movlw	low _ethMAC
 12796  006BD2  6E08               	movwf	ETH_GetMAC@macAddr,c
 12797  006BD4  0E02               	movlw	high _ethMAC
 12798  006BD6  6E09               	movwf	ETH_GetMAC@macAddr+1,c
 12799  006BD8  ECB6  F03C         	call	_ETH_GetMAC	;wreg free
 12800                           
 12801                           ;encX24J600_driver.c: 185: ETH_CheckLinkUp();
 12802  006BDC  EF84  F041         	goto	_ETH_CheckLinkUp	;wreg free
 12803  006BE0                     __end_of_ETH_Init:
 12804                           	opt stack 0
 12805                           tosu	equ	0xFFF
 12806                           tosh	equ	0xFFE
 12807                           tosl	equ	0xFFD
 12808                           pclath	equ	0xFFA
 12809                           tblptru	equ	0xFF8
 12810                           tblptrh	equ	0xFF7
 12811                           tblptrl	equ	0xFF6
 12812                           tablat	equ	0xFF5
 12813                           prodh	equ	0xFF4
 12814                           prodl	equ	0xFF3
 12815                           intcon	equ	0xFF2
 12816                           intcon2	equ	0xFF1
 12817                           indf0	equ	0xFEF
 12818                           postinc0	equ	0xFEE
 12819                           fsr0h	equ	0xFEA
 12820                           fsr0l	equ	0xFE9
 12821                           wreg	equ	0xFE8
 12822                           postinc1	equ	0xFE6
 12823                           plusw1	equ	0xFE3
 12824                           fsr1h	equ	0xFE2
 12825                           fsr1l	equ	0xFE1
 12826                           indf2	equ	0xFDF
 12827                           postinc2	equ	0xFDE
 12828                           postdec2	equ	0xFDD
 12829                           plusw2	equ	0xFDB
 12830                           fsr2h	equ	0xFDA
 12831                           fsr2l	equ	0xFD9
 12832                           status	equ	0xFD8
 12833                           
 12834 ;; *************** function _ETH_SendSystemReset *****************
 12835 ;; Defined at:
 12836 ;;		line 67 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 12837 ;; Parameters:    Size  Location     Type
 12838 ;;		None
 12839 ;; Auto vars:     Size  Location     Type
 12840 ;;		None
 12841 ;; Return value:  Size  Location     Type
 12842 ;;		None               void
 12843 ;; Registers used:
 12844 ;;		wreg, status,2, status,0, cstack
 12845 ;; Tracked objects:
 12846 ;;		On entry : F/1
 12847 ;;		On exit  : 0/0
 12848 ;;		Unchanged: 0/0
 12849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;Total ram usage:        2 bytes
 12855 ;; Hardware stack levels used:    1
 12856 ;; Hardware stack levels required when called:    6
 12857 ;; This function calls:
 12858 ;;		_ENCx24_BFS
 12859 ;;		_ENCx24_Read
 12860 ;;		_ENCx24_Write
 12861 ;; This function is called by:
 12862 ;;		_ETH_Init
 12863 ;; This function uses a non-reentrant model
 12864 ;;
 12865                           
 12866                           	psect	text64
 12867  0079E6                     __ptext64:
 12868                           	opt stack 0
 12869  0079E6                     _ETH_SendSystemReset:
 12870                           	opt stack 22
 12871  0079E6                     l9237:
 12872                           
 12873                           ;encX24J600_driver.c: 73: {
 12874                           ;encX24J600_driver.c: 74: ENCx24_Write( XJ600_EUDASTL , 0x1234 );
 12875  0079E6  0E12               	movlw	18
 12876  0079E8  6E06               	movwf	ENCx24_Write@data+1,c
 12877  0079EA  0E34               	movlw	52
 12878  0079EC  6E05               	movwf	ENCx24_Write@data,c
 12879  0079EE  0EF6               	movlw	246
 12880  0079F0  EC91  F040         	call	_ENCx24_Write
 12881                           
 12882                           ;encX24J600_driver.c: 75: } while(0x1234 != ENCx24_Read(XJ600_EUDASTL));
 12883  0079F4  0EF6               	movlw	246
 12884  0079F6  ECDF  F03F         	call	_ENCx24_Read
 12885  0079FA  0E34               	movlw	52
 12886  0079FC  1805               	xorwf	?_ENCx24_Read,w,c
 12887  0079FE  E1F3               	bnz	l9237
 12888  007A00  0E12               	movlw	18
 12889  007A02  1806               	xorwf	?_ENCx24_Read+1,w,c
 12890  007A04  E1F0               	bnz	l9237
 12891                           
 12892                           ;encX24J600_driver.c: 78: ENCx24_BFS(XJ600_ECON2L, 0x0010);
 12893  007A06  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 12894  007A08  0E10               	movlw	16
 12895  007A0A  6E05               	movwf	ENCx24_BFS@bitMask,c
 12896  007A0C  0E6E               	movlw	110
 12897  007A0E  ECB2  F040         	call	_ENCx24_BFS
 12898  007A12                     l9241:
 12899  007A12  6A0B               	clrf	??_ETH_SendSystemReset& (0+255),c
 12900  007A14  0E1A               	movlw	26
 12901  007A16  6E0C               	movwf	(??_ETH_SendSystemReset+1)& (0+255),c
 12902  007A18  0EFA               	movlw	250
 12903  007A1A  ECDF  F03F         	call	_ENCx24_Read
 12904  007A1E  500B               	movf	??_ETH_SendSystemReset,w,c
 12905  007A20  1605               	andwf	?_ENCx24_Read,f,c
 12906  007A22  500C               	movf	??_ETH_SendSystemReset+1,w,c
 12907  007A24  1606               	andwf	?_ENCx24_Read+1,f,c
 12908  007A26  0E1A               	movlw	26
 12909  007A28  1806               	xorwf	?_ENCx24_Read+1,w,c
 12910  007A2A  1005               	iorwf	?_ENCx24_Read,w,c
 12911  007A2C  E1F2               	bnz	l9241
 12912                           
 12913                           ;encX24J600_driver.c: 81: _delay((unsigned long)((1)*(41666667UL/4000.0)));
 12914  007A2E  0E0E               	movlw	14
 12915  007A30  6E0B               	movwf	??_ETH_SendSystemReset& (0+255),c
 12916  007A32  0E86               	movlw	134
 12917  007A34                     u15437:
 12918  007A34  2EE8               	decfsz	wreg,f,c
 12919  007A36  D7FE               	goto	u15437
 12920  007A38  2E0B               	decfsz	??_ETH_SendSystemReset& (0+255),f,c
 12921  007A3A  D7FC               	goto	u15437
 12922                           
 12923                           ;encX24J600_driver.c: 83: }while(0x0 != ENCx24_Read(XJ600_EUDASTL));
 12924  007A3C  0EF6               	movlw	246
 12925  007A3E  ECDF  F03F         	call	_ENCx24_Read
 12926  007A42  5005               	movf	?_ENCx24_Read,w,c
 12927  007A44  1006               	iorwf	?_ENCx24_Read+1,w,c
 12928  007A46  E1CF               	bnz	l9237
 12929                           
 12930                           ;encX24J600_driver.c: 85: _delay((unsigned long)((1)*(41666667UL/4000.0)));
 12931  007A48  0E0E               	movlw	14
 12932  007A4A  6E0B               	movwf	??_ETH_SendSystemReset& (0+255),c
 12933  007A4C  0E86               	movlw	134
 12934  007A4E                     u15447:
 12935  007A4E  2EE8               	decfsz	wreg,f,c
 12936  007A50  D7FE               	goto	u15447
 12937  007A52  2E0B               	decfsz	??_ETH_SendSystemReset& (0+255),f,c
 12938  007A54  D7FC               	goto	u15447
 12939  007A56  0012               	return		;funcret
 12940  007A58                     __end_of_ETH_SendSystemReset:
 12941                           	opt stack 0
 12942                           tosu	equ	0xFFF
 12943                           tosh	equ	0xFFE
 12944                           tosl	equ	0xFFD
 12945                           pclath	equ	0xFFA
 12946                           tblptru	equ	0xFF8
 12947                           tblptrh	equ	0xFF7
 12948                           tblptrl	equ	0xFF6
 12949                           tablat	equ	0xFF5
 12950                           prodh	equ	0xFF4
 12951                           prodl	equ	0xFF3
 12952                           intcon	equ	0xFF2
 12953                           intcon2	equ	0xFF1
 12954                           indf0	equ	0xFEF
 12955                           postinc0	equ	0xFEE
 12956                           fsr0h	equ	0xFEA
 12957                           fsr0l	equ	0xFE9
 12958                           wreg	equ	0xFE8
 12959                           postinc1	equ	0xFE6
 12960                           plusw1	equ	0xFE3
 12961                           fsr1h	equ	0xFE2
 12962                           fsr1l	equ	0xFE1
 12963                           indf2	equ	0xFDF
 12964                           postinc2	equ	0xFDE
 12965                           postdec2	equ	0xFDD
 12966                           plusw2	equ	0xFDB
 12967                           fsr2h	equ	0xFDA
 12968                           fsr2l	equ	0xFD9
 12969                           status	equ	0xFD8
 12970                           
 12971 ;; *************** function _ETH_CheckLinkUp *****************
 12972 ;; Defined at:
 12973 ;;		line 198 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 12974 ;; Parameters:    Size  Location     Type
 12975 ;;		None
 12976 ;; Auto vars:     Size  Location     Type
 12977 ;;  value           4   14[COMRAM] unsigned long 
 12978 ;;  ret             1   18[COMRAM] unsigned char 
 12979 ;; Return value:  Size  Location     Type
 12980 ;;                  1    wreg      unsigned char 
 12981 ;; Registers used:
 12982 ;;		wreg, status,2, status,0, cstack
 12983 ;; Tracked objects:
 12984 ;;		On entry : 0/1
 12985 ;;		On exit  : 0/0
 12986 ;;		Unchanged: 0/0
 12987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12989 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12991 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12992 ;;Total ram usage:        5 bytes
 12993 ;; Hardware stack levels used:    1
 12994 ;; Hardware stack levels required when called:    7
 12995 ;; This function calls:
 12996 ;;		_ETH_readLinkStatus
 12997 ;; This function is called by:
 12998 ;;		_ETH_Init
 12999 ;;		_Network_WaitForLink
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003                           	psect	text65
 13004  008308                     __ptext65:
 13005                           	opt stack 0
 13006  008308                     _ETH_CheckLinkUp:
 13007                           	opt stack 22
 13008                           
 13009                           ;encX24J600_driver.c: 200: uint32_t value;
 13010                           ;encX24J600_driver.c: 201: bool ret = 0;
 13011                           
 13012                           ;incstack = 0
 13013  008308  6A13               	clrf	ETH_CheckLinkUp@ret,c
 13014  00830A                     i5L__ptext66:
 13015                           	opt stack 0
 13016  00830A                     i5L_ETH_readLinkStatus:
 13017                           	opt stack 0
 13018  00830A                     i5Ll8875:
 13019                           	opt stack 22
 13020                           
 13021                           ;encX24J600_driver.c: 195: return (ENCx24_Read(XJ600_ESTATL));
 13022  00830A  0EFA               	movlw	250
 13023  00830C  ECDF  F03F         	call	_ENCx24_Read
 13024  008310  C005  F00B         	movff	?_ENCx24_Read,?_ETH_readLinkStatus
 13025  008314  C006  F00C         	movff	?_ENCx24_Read+1,?_ETH_readLinkStatus+1
 13026  008318  6A0D               	clrf	?_ETH_readLinkStatus+2,c
 13027  00831A  6A0E               	clrf	?_ETH_readLinkStatus+3,c
 13028  00831C                     i5Ll436:
 13029                           	opt stack 22
 13030  00831C  C00B  F00F         	movff	?_ETH_readLinkStatus,ETH_CheckLinkUp@value
 13031  008320  C00C  F010         	movff	?_ETH_readLinkStatus+1,ETH_CheckLinkUp@value+1
 13032  008324  C00D  F011         	movff	?_ETH_readLinkStatus+2,ETH_CheckLinkUp@value+2
 13033  008328  C00E  F012         	movff	?_ETH_readLinkStatus+3,ETH_CheckLinkUp@value+3
 13034                           
 13035                           ;encX24J600_driver.c: 204: if(value & 0x0100)
 13036  00832C  A010               	btfss	ETH_CheckLinkUp@value+1,0,c
 13037  00832E  D004               	goto	l439
 13038                           
 13039                           ;encX24J600_driver.c: 205: {
 13040                           ;encX24J600_driver.c: 206: ethData.up = 1;
 13041  008330  0101               	movlb	1	; () banked
 13042  008332  8583               	bsf	_ethData& (0+255),2,b	;volatile
 13043                           
 13044                           ; BSR set to: 1
 13045                           ;encX24J600_driver.c: 207: ret = 1;
 13046  008334  0E01               	movlw	1
 13047  008336  6E13               	movwf	ETH_CheckLinkUp@ret,c
 13048  008338                     l439:
 13049                           
 13050                           ;encX24J600_driver.c: 208: }
 13051                           ;encX24J600_driver.c: 209: return ret;
 13052  008338  5013               	movf	ETH_CheckLinkUp@ret,w,c
 13053  00833A  0012               	return		;funcret
 13054  00833C                     __end_of_ETH_CheckLinkUp:
 13055                           	opt stack 0
 13056                           tosu	equ	0xFFF
 13057                           tosh	equ	0xFFE
 13058                           tosl	equ	0xFFD
 13059                           pclath	equ	0xFFA
 13060                           tblptru	equ	0xFF8
 13061                           tblptrh	equ	0xFF7
 13062                           tblptrl	equ	0xFF6
 13063                           tablat	equ	0xFF5
 13064                           prodh	equ	0xFF4
 13065                           prodl	equ	0xFF3
 13066                           intcon	equ	0xFF2
 13067                           intcon2	equ	0xFF1
 13068                           indf0	equ	0xFEF
 13069                           postinc0	equ	0xFEE
 13070                           fsr0h	equ	0xFEA
 13071                           fsr0l	equ	0xFE9
 13072                           wreg	equ	0xFE8
 13073                           postinc1	equ	0xFE6
 13074                           plusw1	equ	0xFE3
 13075                           fsr1h	equ	0xFE2
 13076                           fsr1l	equ	0xFE1
 13077                           indf2	equ	0xFDF
 13078                           postinc2	equ	0xFDE
 13079                           postdec2	equ	0xFDD
 13080                           plusw2	equ	0xFDB
 13081                           fsr2h	equ	0xFDA
 13082                           fsr2l	equ	0xFD9
 13083                           status	equ	0xFD8
 13084                           
 13085 ;; *************** function _ETH_readLinkStatus *****************
 13086 ;; Defined at:
 13087 ;;		line 193 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 13088 ;; Parameters:    Size  Location     Type
 13089 ;;		None
 13090 ;; Auto vars:     Size  Location     Type
 13091 ;;		None
 13092 ;; Return value:  Size  Location     Type
 13093 ;;                  4   10[COMRAM] unsigned long 
 13094 ;; Registers used:
 13095 ;;		wreg, status,2, status,0, cstack
 13096 ;; Tracked objects:
 13097 ;;		On entry : 0/1
 13098 ;;		On exit  : 0/0
 13099 ;;		Unchanged: 0/0
 13100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13104 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13105 ;;Total ram usage:        4 bytes
 13106 ;; Hardware stack levels used:    1
 13107 ;; Hardware stack levels required when called:    6
 13108 ;; This function calls:
 13109 ;;		_ENCx24_Read
 13110 ;; This function is called by:
 13111 ;;		_ETH_CheckLinkUp
 13112 ;; This function uses a non-reentrant model
 13113 ;;
 13114                           
 13115                           	psect	text66
 13116  000000                     __ptext66:
 13117                           	opt stack 0
 13118  000000                     _ETH_readLinkStatus:
 13119                           	opt stack 0
 13120  000000                     __end_of_ETH_readLinkStatus:
 13121                           	opt stack 0
 13122                           tosu	equ	0xFFF
 13123                           tosh	equ	0xFFE
 13124                           tosl	equ	0xFFD
 13125                           pclath	equ	0xFFA
 13126                           tblptru	equ	0xFF8
 13127                           tblptrh	equ	0xFF7
 13128                           tblptrl	equ	0xFF6
 13129                           tablat	equ	0xFF5
 13130                           prodh	equ	0xFF4
 13131                           prodl	equ	0xFF3
 13132                           intcon	equ	0xFF2
 13133                           intcon2	equ	0xFF1
 13134                           indf0	equ	0xFEF
 13135                           postinc0	equ	0xFEE
 13136                           fsr0h	equ	0xFEA
 13137                           fsr0l	equ	0xFE9
 13138                           wreg	equ	0xFE8
 13139                           postinc1	equ	0xFE6
 13140                           plusw1	equ	0xFE3
 13141                           fsr1h	equ	0xFE2
 13142                           fsr1l	equ	0xFE1
 13143                           indf2	equ	0xFDF
 13144                           postinc2	equ	0xFDE
 13145                           postdec2	equ	0xFDD
 13146                           plusw2	equ	0xFDB
 13147                           fsr2h	equ	0xFDA
 13148                           fsr2l	equ	0xFD9
 13149                           status	equ	0xFD8
 13150                           
 13151 ;; *************** function _ENCx24_PhyRead *****************
 13152 ;; Defined at:
 13153 ;;		line 203 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 13154 ;; Parameters:    Size  Location     Type
 13155 ;;  a               1    wreg     enum E6676
 13156 ;; Auto vars:     Size  Location     Type
 13157 ;;  a               1   12[COMRAM] enum E6676
 13158 ;; Return value:  Size  Location     Type
 13159 ;;                  2   10[COMRAM] unsigned int 
 13160 ;; Registers used:
 13161 ;;		wreg, status,2, status,0, cstack
 13162 ;; Tracked objects:
 13163 ;;		On entry : 0/1
 13164 ;;		On exit  : 0/0
 13165 ;;		Unchanged: 0/0
 13166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13170 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13171 ;;Total ram usage:        3 bytes
 13172 ;; Hardware stack levels used:    1
 13173 ;; Hardware stack levels required when called:    6
 13174 ;; This function calls:
 13175 ;;		_ENCx24_BFC
 13176 ;;		_ENCx24_BFS
 13177 ;;		_ENCx24_Read
 13178 ;;		_ENCx24_Write
 13179 ;; This function is called by:
 13180 ;;		_ETH_Init
 13181 ;; This function uses a non-reentrant model
 13182 ;;
 13183                           
 13184                           	psect	text67
 13185  0080DE                     __ptext67:
 13186                           	opt stack 0
 13187  0080DE                     _ENCx24_PhyRead:
 13188                           	opt stack 22
 13189                           
 13190                           ;incstack = 0
 13191                           ;ENCx24_PhyRead@a stored from wreg
 13192  0080DE  6E0D               	movwf	ENCx24_PhyRead@a,c
 13193                           
 13194                           ;encX24j600_spi.c: 205: ENCx24_Write(XJ600_MIREGADRL,0x0100|a);
 13195  0080E0  0E00               	movlw	0
 13196  0080E2  100D               	iorwf	ENCx24_PhyRead@a,w,c
 13197  0080E4  6E05               	movwf	ENCx24_Write@data,c
 13198  0080E6  0E01               	movlw	1
 13199  0080E8  6E06               	movwf	ENCx24_Write@data+1,c
 13200  0080EA  0E54               	movlw	84
 13201  0080EC  EC91  F040         	call	_ENCx24_Write
 13202                           
 13203                           ;encX24j600_spi.c: 206: ENCx24_BFS(XJ600_MICMDL,0x0001);
 13204  0080F0  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 13205  0080F2  0E01               	movlw	1
 13206  0080F4  6E05               	movwf	ENCx24_BFS@bitMask,c
 13207  0080F6  0E52               	movlw	82
 13208  0080F8  ECB2  F040         	call	_ENCx24_BFS
 13209  0080FC                     l9251:
 13210  0080FC  0E6A               	movlw	106
 13211  0080FE  ECDF  F03F         	call	_ENCx24_Read
 13212  008102  B005               	btfsc	?_ENCx24_Read,0,c
 13213  008104  D7FB               	goto	l9251
 13214                           
 13215                           ;encX24j600_spi.c: 208: ENCx24_BFC(XJ600_MICMDL,0x0001);
 13216  008106  6A06               	clrf	ENCx24_BFC@bitMask+1,c
 13217  008108  0E01               	movlw	1
 13218  00810A  6E05               	movwf	ENCx24_BFC@bitMask,c
 13219  00810C  0E52               	movlw	82
 13220  00810E  ECD2  F040         	call	_ENCx24_BFC
 13221                           
 13222                           ;encX24j600_spi.c: 209: return ENCx24_Read(XJ600_MIRDL);
 13223  008112  0E68               	movlw	104
 13224  008114  ECDF  F03F         	call	_ENCx24_Read
 13225  008118  C005  F00B         	movff	?_ENCx24_Read,?_ENCx24_PhyRead
 13226  00811C  C006  F00C         	movff	?_ENCx24_Read+1,?_ENCx24_PhyRead+1
 13227  008120  0012               	return		;funcret
 13228  008122                     __end_of_ENCx24_PhyRead:
 13229                           	opt stack 0
 13230                           tosu	equ	0xFFF
 13231                           tosh	equ	0xFFE
 13232                           tosl	equ	0xFFD
 13233                           pclath	equ	0xFFA
 13234                           tblptru	equ	0xFF8
 13235                           tblptrh	equ	0xFF7
 13236                           tblptrl	equ	0xFF6
 13237                           tablat	equ	0xFF5
 13238                           prodh	equ	0xFF4
 13239                           prodl	equ	0xFF3
 13240                           intcon	equ	0xFF2
 13241                           intcon2	equ	0xFF1
 13242                           indf0	equ	0xFEF
 13243                           postinc0	equ	0xFEE
 13244                           fsr0h	equ	0xFEA
 13245                           fsr0l	equ	0xFE9
 13246                           wreg	equ	0xFE8
 13247                           postinc1	equ	0xFE6
 13248                           plusw1	equ	0xFE3
 13249                           fsr1h	equ	0xFE2
 13250                           fsr1l	equ	0xFE1
 13251                           indf2	equ	0xFDF
 13252                           postinc2	equ	0xFDE
 13253                           postdec2	equ	0xFDD
 13254                           plusw2	equ	0xFDB
 13255                           fsr2h	equ	0xFDA
 13256                           fsr2l	equ	0xFD9
 13257                           status	equ	0xFD8
 13258                           
 13259 ;; *************** function _ENCx24_PHYWrite *****************
 13260 ;; Defined at:
 13261 ;;		line 217 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 13262 ;; Parameters:    Size  Location     Type
 13263 ;;  a               1    wreg     enum E6676
 13264 ;;  data            2   10[COMRAM] unsigned int 
 13265 ;; Auto vars:     Size  Location     Type
 13266 ;;  a               1   12[COMRAM] enum E6676
 13267 ;; Return value:  Size  Location     Type
 13268 ;;		None               void
 13269 ;; Registers used:
 13270 ;;		wreg, status,2, status,0, cstack
 13271 ;; Tracked objects:
 13272 ;;		On entry : 0/1
 13273 ;;		On exit  : 0/0
 13274 ;;		Unchanged: 0/0
 13275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13279 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13280 ;;Total ram usage:        3 bytes
 13281 ;; Hardware stack levels used:    1
 13282 ;; Hardware stack levels required when called:    6
 13283 ;; This function calls:
 13284 ;;		_ENCx24_Read
 13285 ;;		_ENCx24_Write
 13286 ;; This function is called by:
 13287 ;;		_ETH_Init
 13288 ;; This function uses a non-reentrant model
 13289 ;;
 13290                           
 13291                           	psect	text68
 13292  008420                     __ptext68:
 13293                           	opt stack 0
 13294  008420                     _ENCx24_PHYWrite:
 13295                           	opt stack 22
 13296                           
 13297                           ;incstack = 0
 13298                           ;ENCx24_PHYWrite@a stored from wreg
 13299  008420  6E0D               	movwf	ENCx24_PHYWrite@a,c
 13300                           
 13301                           ;encX24j600_spi.c: 219: ENCx24_Write(XJ600_MIREGADRL, 0x0100|a);
 13302  008422  0E00               	movlw	0
 13303  008424  100D               	iorwf	ENCx24_PHYWrite@a,w,c
 13304  008426  6E05               	movwf	ENCx24_Write@data,c
 13305  008428  0E01               	movlw	1
 13306  00842A  6E06               	movwf	ENCx24_Write@data+1,c
 13307  00842C  0E54               	movlw	84
 13308  00842E  EC91  F040         	call	_ENCx24_Write
 13309                           
 13310                           ;encX24j600_spi.c: 220: ENCx24_Write(XJ600_MIWRL, data);
 13311  008432  C00B  F005         	movff	ENCx24_PHYWrite@data,ENCx24_Write@data
 13312  008436  C00C  F006         	movff	ENCx24_PHYWrite@data+1,ENCx24_Write@data+1
 13313  00843A  0E66               	movlw	102
 13314  00843C  EC91  F040         	call	_ENCx24_Write
 13315  008440                     l9259:
 13316  008440  0E6A               	movlw	106
 13317  008442  ECDF  F03F         	call	_ENCx24_Read
 13318  008446  A005               	btfss	?_ENCx24_Read,0,c
 13319  008448  0012               	return		;funcret
 13320  00844A  D7FA               	goto	l9259
 13321  00844C                     __end_of_ENCx24_PHYWrite:
 13322                           	opt stack 0
 13323                           tosu	equ	0xFFF
 13324                           tosh	equ	0xFFE
 13325                           tosl	equ	0xFFD
 13326                           pclath	equ	0xFFA
 13327                           tblptru	equ	0xFF8
 13328                           tblptrh	equ	0xFF7
 13329                           tblptrl	equ	0xFF6
 13330                           tablat	equ	0xFF5
 13331                           prodh	equ	0xFF4
 13332                           prodl	equ	0xFF3
 13333                           intcon	equ	0xFF2
 13334                           intcon2	equ	0xFF1
 13335                           indf0	equ	0xFEF
 13336                           postinc0	equ	0xFEE
 13337                           fsr0h	equ	0xFEA
 13338                           fsr0l	equ	0xFE9
 13339                           wreg	equ	0xFE8
 13340                           postinc1	equ	0xFE6
 13341                           plusw1	equ	0xFE3
 13342                           fsr1h	equ	0xFE2
 13343                           fsr1l	equ	0xFE1
 13344                           indf2	equ	0xFDF
 13345                           postinc2	equ	0xFDE
 13346                           postdec2	equ	0xFDD
 13347                           plusw2	equ	0xFDB
 13348                           fsr2h	equ	0xFDA
 13349                           fsr2l	equ	0xFD9
 13350                           status	equ	0xFD8
 13351                           
 13352 ;; *************** function _ARPV4_Init *****************
 13353 ;; Defined at:
 13354 ;;		line 86 in file "../../TCPIP Library/source/arpv4.c"
 13355 ;; Parameters:    Size  Location     Type
 13356 ;;		None
 13357 ;; Auto vars:     Size  Location     Type
 13358 ;;  x               1    1[COMRAM] unsigned char 
 13359 ;; Return value:  Size  Location     Type
 13360 ;;		None               void
 13361 ;; Registers used:
 13362 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13363 ;; Tracked objects:
 13364 ;;		On entry : 0/2
 13365 ;;		On exit  : 0/0
 13366 ;;		Unchanged: 0/0
 13367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13369 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13371 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13372 ;;Total ram usage:        1 bytes
 13373 ;; Hardware stack levels used:    1
 13374 ;; Hardware stack levels required when called:    3
 13375 ;; This function calls:
 13376 ;;		Nothing
 13377 ;; This function is called by:
 13378 ;;		_Network_Init
 13379 ;; This function uses a non-reentrant model
 13380 ;;
 13381                           
 13382                           	psect	text69
 13383  0086BA                     __ptext69:
 13384                           	opt stack 0
 13385  0086BA                     _ARPV4_Init:
 13386                           	opt stack 26
 13387                           
 13388                           ;arpv4.c: 88: for(uint8_t x= 0 ; x < sizeof(arpMap); x++)
 13389                           
 13390                           ;incstack = 0
 13391  0086BA  6A02               	clrf	ARPV4_Init@x,c
 13392  0086BC                     l9675:
 13393                           
 13394                           ;arpv4.c: 89: ((char *)arpMap)[x] = 0;
 13395  0086BC  0E00               	movlw	low _arpMap
 13396  0086BE  2402               	addwf	ARPV4_Init@x,w,c
 13397  0086C0  6ED9               	movwf	fsr2l,c
 13398  0086C2  6ADA               	clrf	fsr2h,c
 13399  0086C4  0E03               	movlw	high _arpMap
 13400  0086C6  22DA               	addwfc	fsr2h,f,c
 13401  0086C8  6ADF               	clrf	indf2,c
 13402  0086CA  2A02               	incf	ARPV4_Init@x,f,c
 13403  0086CC  0E67               	movlw	103
 13404  0086CE  6402               	cpfsgt	ARPV4_Init@x,c
 13405  0086D0  D7F5               	goto	l9675
 13406  0086D2  0C67               	retlw	103
 13407  0086D4                     __end_of_ARPV4_Init:
 13408                           	opt stack 0
 13409                           tosu	equ	0xFFF
 13410                           tosh	equ	0xFFE
 13411                           tosl	equ	0xFFD
 13412                           pclath	equ	0xFFA
 13413                           tblptru	equ	0xFF8
 13414                           tblptrh	equ	0xFF7
 13415                           tblptrl	equ	0xFF6
 13416                           tablat	equ	0xFF5
 13417                           prodh	equ	0xFF4
 13418                           prodl	equ	0xFF3
 13419                           intcon	equ	0xFF2
 13420                           intcon2	equ	0xFF1
 13421                           indf0	equ	0xFEF
 13422                           postinc0	equ	0xFEE
 13423                           fsr0h	equ	0xFEA
 13424                           fsr0l	equ	0xFE9
 13425                           wreg	equ	0xFE8
 13426                           postinc1	equ	0xFE6
 13427                           plusw1	equ	0xFE3
 13428                           fsr1h	equ	0xFE2
 13429                           fsr1l	equ	0xFE1
 13430                           indf2	equ	0xFDF
 13431                           postinc2	equ	0xFDE
 13432                           postdec2	equ	0xFDD
 13433                           plusw2	equ	0xFDB
 13434                           fsr2h	equ	0xFDA
 13435                           fsr2l	equ	0xFD9
 13436                           status	equ	0xFD8
 13437                           
 13438 ;; *************** function _IPV4_GetMyIP *****************
 13439 ;; Defined at:
 13440 ;;		line 288 in file "../../TCPIP Library/source/ipv4.c"
 13441 ;; Parameters:    Size  Location     Type
 13442 ;;		None
 13443 ;; Auto vars:     Size  Location     Type
 13444 ;;		None
 13445 ;; Return value:  Size  Location     Type
 13446 ;;                  4    1[COMRAM] unsigned long 
 13447 ;; Registers used:
 13448 ;;		None
 13449 ;; Tracked objects:
 13450 ;;		On entry : 0/1
 13451 ;;		On exit  : 0/0
 13452 ;;		Unchanged: 0/0
 13453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13454 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13457 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13458 ;;Total ram usage:        4 bytes
 13459 ;; Hardware stack levels used:    1
 13460 ;; Hardware stack levels required when called:    3
 13461 ;; This function calls:
 13462 ;;		Nothing
 13463 ;; This function is called by:
 13464 ;;		_main
 13465 ;; This function uses a non-reentrant model
 13466 ;;
 13467                           
 13468                           	psect	text70
 13469  00874A                     __ptext70:
 13470                           	opt stack 0
 13471  00874A                     _IPV4_GetMyIP:
 13472                           	opt stack 27
 13473                           
 13474                           ;ipv4.c: 290: return(ipv4Address);
 13475                           
 13476                           ;incstack = 0
 13477  00874A  C18E  F002         	movff	_ipv4Address,?_IPV4_GetMyIP
 13478  00874E  C18F  F003         	movff	_ipv4Address+1,?_IPV4_GetMyIP+1
 13479  008752  C190  F004         	movff	_ipv4Address+2,?_IPV4_GetMyIP+2
 13480  008756  C191  F005         	movff	_ipv4Address+3,?_IPV4_GetMyIP+3
 13481  00875A  0012               	return		;funcret
 13482  00875C                     __end_of_IPV4_GetMyIP:
 13483                           	opt stack 0
 13484                           tosu	equ	0xFFF
 13485                           tosh	equ	0xFFE
 13486                           tosl	equ	0xFFD
 13487                           pclath	equ	0xFFA
 13488                           tblptru	equ	0xFF8
 13489                           tblptrh	equ	0xFF7
 13490                           tblptrl	equ	0xFF6
 13491                           tablat	equ	0xFF5
 13492                           prodh	equ	0xFF4
 13493                           prodl	equ	0xFF3
 13494                           intcon	equ	0xFF2
 13495                           intcon2	equ	0xFF1
 13496                           indf0	equ	0xFEF
 13497                           postinc0	equ	0xFEE
 13498                           fsr0h	equ	0xFEA
 13499                           fsr0l	equ	0xFE9
 13500                           wreg	equ	0xFE8
 13501                           postinc1	equ	0xFE6
 13502                           plusw1	equ	0xFE3
 13503                           fsr1h	equ	0xFE2
 13504                           fsr1l	equ	0xFE1
 13505                           indf2	equ	0xFDF
 13506                           postinc2	equ	0xFDE
 13507                           postdec2	equ	0xFDD
 13508                           plusw2	equ	0xFDB
 13509                           fsr2h	equ	0xFDA
 13510                           fsr2l	equ	0xFD9
 13511                           status	equ	0xFD8
 13512                           
 13513 ;; *************** function _DEMO_TCP_EchoServer *****************
 13514 ;; Defined at:
 13515 ;;		line 76 in file "main.c"
 13516 ;; Parameters:    Size  Location     Type
 13517 ;;		None
 13518 ;; Auto vars:     Size  Location     Type
 13519 ;;  i               2  125[BANK0 ] unsigned int 
 13520 ;;  rxLen           2  123[BANK0 ] unsigned int 
 13521 ;;  txLen           2  120[BANK0 ] unsigned int 
 13522 ;;  socket_state    1  122[BANK0 ] enum E7343
 13523 ;; Return value:  Size  Location     Type
 13524 ;;		None               void
 13525 ;; Registers used:
 13526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13527 ;; Tracked objects:
 13528 ;;		On entry : F/2
 13529 ;;		On exit  : 0/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13533 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13535 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13536 ;;Total ram usage:        7 bytes
 13537 ;; Hardware stack levels used:    1
 13538 ;; Hardware stack levels required when called:   13
 13539 ;; This function calls:
 13540 ;;		_TCP_Bind
 13541 ;;		_TCP_GetReceivedData
 13542 ;;		_TCP_GetRxLength
 13543 ;;		_TCP_InsertRxBuffer
 13544 ;;		_TCP_Listen
 13545 ;;		_TCP_Send
 13546 ;;		_TCP_SendDone
 13547 ;;		_TCP_SocketInit
 13548 ;;		_TCP_SocketPoll
 13549 ;; This function is called by:
 13550 ;;		_main
 13551 ;; This function uses a non-reentrant model
 13552 ;;
 13553                           
 13554                           	psect	text71
 13555  0069AC                     __ptext71:
 13556                           	opt stack 0
 13557  0069AC                     _DEMO_TCP_EchoServer:
 13558                           	opt stack 17
 13559                           
 13560                           ; BSR set to: 2
 13561                           ;main.c: 79: static tcpTCB_t port7TCB;
 13562                           ;main.c: 82: static uint8_t rxdataPort7[20];
 13563                           ;main.c: 83: static uint8_t txdataPort7[20];
 13564                           ;main.c: 85: uint16_t rxLen, txLen, i;
 13565                           ;main.c: 86: socketState_t socket_state;
 13566                           ;main.c: 88: socket_state = TCP_SocketPoll(&port7TCB);
 13567                           
 13568                           ;incstack = 0
 13569  0069AC  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13570  0069AE  6E0A               	movwf	TCP_SocketPoll@socket_ptr,c
 13571  0069B0  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13572  0069B2  6E0B               	movwf	TCP_SocketPoll@socket_ptr+1,c
 13573  0069B4  EC8C  F042         	call	_TCP_SocketPoll	;wreg free
 13574  0069B8  0100               	movlb	0	; () banked
 13575  0069BA  6FDA               	movwf	DEMO_TCP_EchoServer@socket_state& (0+255),b
 13576                           
 13577                           ;main.c: 90: switch(socket_state)
 13578  0069BC  D07E               	goto	l10089
 13579  0069BE                     l10059:
 13580                           
 13581                           ; BSR set to: 0
 13582                           ;main.c: 94: TCP_SocketInit(&port7TCB);
 13583  0069BE  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13584  0069C0  6E0A               	movwf	TCP_SocketInit@tcbPtr,c
 13585  0069C2  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13586  0069C4  6E0B               	movwf	TCP_SocketInit@tcbPtr+1,c
 13587  0069C6  EF69  F037         	goto	_TCP_SocketInit	;wreg free
 13588  0069CA                     l10061:
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;main.c: 98: TCP_Bind(&port7TCB, 7);
 13592  0069CA  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13593  0069CC  6E0A               	movwf	TCP_Bind@tcbPtr,c
 13594  0069CE  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13595  0069D0  6E0B               	movwf	TCP_Bind@tcbPtr+1,c
 13596  0069D2  6A0D               	clrf	TCP_Bind@port+1,c
 13597  0069D4  0E07               	movlw	7
 13598  0069D6  6E0C               	movwf	TCP_Bind@port,c
 13599  0069D8  ECB1  F042         	call	_TCP_Bind	;wreg free
 13600                           
 13601                           ;main.c: 100: TCP_InsertRxBuffer(&port7TCB, rxdataPort7, sizeof(rxdataPort7));
 13602  0069DC  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13603  0069DE  6E0A               	movwf	TCP_InsertRxBuffer@tcbPtr,c
 13604  0069E0  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13605  0069E2  6E0B               	movwf	TCP_InsertRxBuffer@tcbPtr+1,c
 13606  0069E4  0E69               	movlw	low DEMO_TCP_EchoServer@rxdataPort7
 13607  0069E6  6E0C               	movwf	TCP_InsertRxBuffer@data,c
 13608  0069E8  0E02               	movlw	high DEMO_TCP_EchoServer@rxdataPort7
 13609  0069EA  6E0D               	movwf	TCP_InsertRxBuffer@data+1,c
 13610  0069EC  6A0F               	clrf	TCP_InsertRxBuffer@data_len+1,c
 13611  0069EE  0E14               	movlw	20
 13612  0069F0  6E0E               	movwf	TCP_InsertRxBuffer@data_len,c
 13613  0069F2  EC6B  F03B         	call	_TCP_InsertRxBuffer	;wreg free
 13614                           
 13615                           ;main.c: 102: TCP_Listen(&port7TCB);
 13616  0069F6  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13617  0069F8  0100               	movlb	0	; () banked
 13618  0069FA  6FD4               	movwf	TCP_Listen@tcbPtr& (0+255),b
 13619  0069FC  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13620  0069FE  6FD5               	movwf	(TCP_Listen@tcbPtr+1)& (0+255),b
 13621  006A00  EF34  F03C         	goto	_TCP_Listen	;wreg free
 13622  006A04                     l10067:
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;main.c: 106: if(TCP_SendDone(&port7TCB))
 13626  006A04  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13627  006A06  6E0A               	movwf	TCP_SendDone@tcbPtr,c
 13628  006A08  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13629  006A0A  6E0B               	movwf	TCP_SendDone@tcbPtr+1,c
 13630  006A0C  EC50  F042         	call	_TCP_SendDone	;wreg free
 13631  006A10  0900               	iorlw	0
 13632  006A12  B4D8               	btfsc	status,2,c
 13633  006A14  0012               	return	
 13634                           
 13635                           ;main.c: 107: {
 13636                           ;main.c: 109: rxLen = TCP_GetRxLength(&port7TCB);
 13637  006A16  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13638  006A18  6E0A               	movwf	TCP_GetRxLength@tcbPtr,c
 13639  006A1A  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13640  006A1C  6E0B               	movwf	TCP_GetRxLength@tcbPtr+1,c
 13641  006A1E  ECCD  F03D         	call	_TCP_GetRxLength	;wreg free
 13642  006A22  C00A  F0DB         	movff	?_TCP_GetRxLength,DEMO_TCP_EchoServer@rxLen
 13643  006A26  C00B  F0DC         	movff	?_TCP_GetRxLength+1,DEMO_TCP_EchoServer@rxLen+1
 13644                           
 13645                           ;main.c: 110: if(rxLen > 0)
 13646  006A2A  0100               	movlb	0	; () banked
 13647  006A2C  51DB               	movf	DEMO_TCP_EchoServer@rxLen& (0+255),w,b
 13648  006A2E  11DC               	iorwf	(DEMO_TCP_EchoServer@rxLen+1)& (0+255),w,b
 13649  006A30  B4D8               	btfsc	status,2,c
 13650  006A32  0012               	return	
 13651                           
 13652                           ; BSR set to: 0
 13653                           ;main.c: 111: {
 13654                           ;main.c: 112: rxLen = TCP_GetReceivedData(&port7TCB);
 13655  006A34  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13656  006A36  6E0A               	movwf	TCP_GetReceivedData@tcbPtr,c
 13657  006A38  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13658  006A3A  6E0B               	movwf	TCP_GetReceivedData@tcbPtr+1,c
 13659  006A3C  ECAE  F03B         	call	_TCP_GetReceivedData	;wreg free
 13660  006A40  C00A  F0DB         	movff	?_TCP_GetReceivedData,DEMO_TCP_EchoServer@rxLen
 13661  006A44  C00B  F0DC         	movff	?_TCP_GetReceivedData+1,DEMO_TCP_EchoServer@rxLen+1
 13662                           
 13663                           ;main.c: 115: for(i = 0; i < rxLen; i++)
 13664  006A48  0100               	movlb	0	; () banked
 13665  006A4A  6BDD               	clrf	DEMO_TCP_EchoServer@i& (0+255),b
 13666  006A4C  6BDE               	clrf	(DEMO_TCP_EchoServer@i+1)& (0+255),b
 13667  006A4E  D010               	goto	l10081
 13668  006A50                     l10077:
 13669                           
 13670                           ; BSR set to: 0
 13671                           ;main.c: 116: {
 13672                           ;main.c: 117: txdataPort7[i] = rxdataPort7[i];
 13673  006A50  0E69               	movlw	low DEMO_TCP_EchoServer@rxdataPort7
 13674  006A52  25DD               	addwf	DEMO_TCP_EchoServer@i& (0+255),w,b
 13675  006A54  6ED9               	movwf	fsr2l,c
 13676  006A56  0E02               	movlw	high DEMO_TCP_EchoServer@rxdataPort7
 13677  006A58  21DE               	addwfc	(DEMO_TCP_EchoServer@i+1)& (0+255),w,b
 13678  006A5A  6EDA               	movwf	fsr2h,c
 13679  006A5C  0E7D               	movlw	low DEMO_TCP_EchoServer@txdataPort7
 13680  006A5E  25DD               	addwf	DEMO_TCP_EchoServer@i& (0+255),w,b
 13681  006A60  6EE1               	movwf	fsr1l,c
 13682  006A62  0E02               	movlw	high DEMO_TCP_EchoServer@txdataPort7
 13683  006A64  21DE               	addwfc	(DEMO_TCP_EchoServer@i+1)& (0+255),w,b
 13684  006A66  6EE2               	movwf	fsr1h,c
 13685  006A68  CFDF FFE7          	movff	indf2,indf1
 13686                           
 13687                           ; BSR set to: 0
 13688  006A6C  4BDD               	infsnz	DEMO_TCP_EchoServer@i& (0+255),f,b
 13689  006A6E  2BDE               	incf	(DEMO_TCP_EchoServer@i+1)& (0+255),f,b
 13690  006A70                     l10081:
 13691                           
 13692                           ; BSR set to: 0
 13693  006A70  51DB               	movf	DEMO_TCP_EchoServer@rxLen& (0+255),w,b
 13694  006A72  5DDD               	subwf	DEMO_TCP_EchoServer@i& (0+255),w,b
 13695  006A74  51DC               	movf	(DEMO_TCP_EchoServer@rxLen+1)& (0+255),w,b
 13696  006A76  59DE               	subwfb	(DEMO_TCP_EchoServer@i+1)& (0+255),w,b
 13697  006A78  E3EB               	bnc	l10077
 13698                           
 13699                           ; BSR set to: 0
 13700                           ;main.c: 118: }
 13701                           ;main.c: 121: TCP_InsertRxBuffer(&port7TCB, rxdataPort7, sizeof(rxdataPort7));
 13702  006A7A  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13703  006A7C  6E0A               	movwf	TCP_InsertRxBuffer@tcbPtr,c
 13704  006A7E  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13705  006A80  6E0B               	movwf	TCP_InsertRxBuffer@tcbPtr+1,c
 13706  006A82  0E69               	movlw	low DEMO_TCP_EchoServer@rxdataPort7
 13707  006A84  6E0C               	movwf	TCP_InsertRxBuffer@data,c
 13708  006A86  0E02               	movlw	high DEMO_TCP_EchoServer@rxdataPort7
 13709  006A88  6E0D               	movwf	TCP_InsertRxBuffer@data+1,c
 13710  006A8A  6A0F               	clrf	TCP_InsertRxBuffer@data_len+1,c
 13711  006A8C  0E14               	movlw	20
 13712  006A8E  6E0E               	movwf	TCP_InsertRxBuffer@data_len,c
 13713  006A90  EC6B  F03B         	call	_TCP_InsertRxBuffer	;wreg free
 13714                           
 13715                           ;main.c: 122: txLen = rxLen;
 13716  006A94  C0DB  F0D8         	movff	DEMO_TCP_EchoServer@rxLen,DEMO_TCP_EchoServer@txLen
 13717  006A98  C0DC  F0D9         	movff	DEMO_TCP_EchoServer@rxLen+1,DEMO_TCP_EchoServer@txLen+1
 13718                           
 13719                           ;main.c: 124: TCP_Send(&port7TCB, txdataPort7, txLen);
 13720  006A9C  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13721  006A9E  0100               	movlb	0	; () banked
 13722  006AA0  6FB4               	movwf	TCP_Send@tcbPtr& (0+255),b
 13723  006AA2  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13724  006AA4  6FB5               	movwf	(TCP_Send@tcbPtr+1)& (0+255),b
 13725  006AA6  0E7D               	movlw	low DEMO_TCP_EchoServer@txdataPort7
 13726  006AA8  6FB6               	movwf	TCP_Send@data& (0+255),b
 13727  006AAA  0E02               	movlw	high DEMO_TCP_EchoServer@txdataPort7
 13728  006AAC  6FB7               	movwf	(TCP_Send@data+1)& (0+255),b
 13729  006AAE  C0D8  F0B8         	movff	DEMO_TCP_EchoServer@txLen,TCP_Send@dataLen
 13730  006AB2  C0D9  F0B9         	movff	DEMO_TCP_EchoServer@txLen+1,TCP_Send@dataLen+1
 13731  006AB6  EF30  F038         	goto	_TCP_Send	;wreg free
 13732  006ABA                     l10089:
 13733                           
 13734                           ; BSR set to: 0
 13735  006ABA  51DA               	movf	DEMO_TCP_EchoServer@socket_state& (0+255),w,b
 13736                           
 13737                           ; Switch size 1, requested type "speed"
 13738                           ; Number of cases is 3, Range of values is 0 to 3
 13739                           ; switch strategies available:
 13740                           ; Name         Instructions Cycles
 13741                           ; simple_byte           10     6 (average)
 13742                           ;	Chosen strategy is simple_byte
 13743  006ABC  E080               	bz	l10059
 13744  006ABE  0A01               	xorlw	1	; case 1
 13745  006AC0  E084               	bz	l10061
 13746  006AC2  0A02               	xorlw	2	; case 3
 13747  006AC4  E09F               	bz	l10067
 13748  006AC6  0012               	return		;funcret
 13749  006AC8                     __end_of_DEMO_TCP_EchoServer:
 13750                           	opt stack 0
 13751                           tosu	equ	0xFFF
 13752                           tosh	equ	0xFFE
 13753                           tosl	equ	0xFFD
 13754                           pclath	equ	0xFFA
 13755                           tblptru	equ	0xFF8
 13756                           tblptrh	equ	0xFF7
 13757                           tblptrl	equ	0xFF6
 13758                           tablat	equ	0xFF5
 13759                           prodh	equ	0xFF4
 13760                           prodl	equ	0xFF3
 13761                           intcon	equ	0xFF2
 13762                           intcon2	equ	0xFF1
 13763                           indf0	equ	0xFEF
 13764                           postinc0	equ	0xFEE
 13765                           fsr0h	equ	0xFEA
 13766                           fsr0l	equ	0xFE9
 13767                           wreg	equ	0xFE8
 13768                           indf1	equ	0xFE7
 13769                           postinc1	equ	0xFE6
 13770                           plusw1	equ	0xFE3
 13771                           fsr1h	equ	0xFE2
 13772                           fsr1l	equ	0xFE1
 13773                           indf2	equ	0xFDF
 13774                           postinc2	equ	0xFDE
 13775                           postdec2	equ	0xFDD
 13776                           plusw2	equ	0xFDB
 13777                           fsr2h	equ	0xFDA
 13778                           fsr2l	equ	0xFD9
 13779                           status	equ	0xFD8
 13780                           
 13781 ;; *************** function _TCP_SocketInit *****************
 13782 ;; Defined at:
 13783 ;;		line 1181 in file "../../TCPIP Library/source/tcpv4.c"
 13784 ;; Parameters:    Size  Location     Type
 13785 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 13786 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 13787 ;; Auto vars:     Size  Location     Type
 13788 ;;  ret             1    0        enum E177
 13789 ;; Return value:  Size  Location     Type
 13790 ;;                  1    wreg      enum E177
 13791 ;; Registers used:
 13792 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13793 ;; Tracked objects:
 13794 ;;		On entry : D/0
 13795 ;;		On exit  : 0/0
 13796 ;;		Unchanged: 0/0
 13797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13801 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13802 ;;Total ram usage:        3 bytes
 13803 ;; Hardware stack levels used:    1
 13804 ;; Hardware stack levels required when called:    4
 13805 ;; This function calls:
 13806 ;;		_TCB_Check
 13807 ;;		_TCB_Insert
 13808 ;;		_TCB_Reset
 13809 ;; This function is called by:
 13810 ;;		_DEMO_TCP_EchoServer
 13811 ;; This function uses a non-reentrant model
 13812 ;;
 13813                           
 13814                           	psect	text72
 13815  006ED2                     __ptext72:
 13816                           	opt stack 0
 13817  006ED2                     _TCP_SocketInit:
 13818                           	opt stack 25
 13819                           
 13820                           ;tcpv4.c: 1186: if(TCB_Check(tcbPtr) == 0)
 13821                           
 13822                           ;incstack = 0
 13823  006ED2  C00A  F002         	movff	TCP_SocketInit@tcbPtr,TCB_Check@ptr
 13824  006ED6  C00B  F003         	movff	TCP_SocketInit@tcbPtr+1,TCB_Check@ptr+1
 13825  006EDA  ECF1  F03B         	call	_TCB_Check	;wreg free
 13826  006EDE  0900               	iorlw	0
 13827  006EE0  A4D8               	btfss	status,2,c
 13828  006EE2  0012               	return	
 13829                           
 13830                           ;tcpv4.c: 1187: {
 13831                           ;tcpv4.c: 1188: TCB_Reset(tcbPtr);
 13832  006EE4  C00A  F002         	movff	TCP_SocketInit@tcbPtr,TCB_Reset@tcbPtr
 13833  006EE8  C00B  F003         	movff	TCP_SocketInit@tcbPtr+1,TCB_Reset@tcbPtr+1
 13834  006EEC  ECE2  F02E         	call	_TCB_Reset	;wreg free
 13835                           
 13836                           ;tcpv4.c: 1190: tcbPtr->localWnd = 0;
 13837  006EF0  EE20 F01A          	lfsr	2,26
 13838  006EF4  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13839  006EF6  26D9               	addwf	fsr2l,f,c
 13840  006EF8  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13841  006EFA  22DA               	addwfc	fsr2h,f,c
 13842  006EFC  6ADE               	clrf	postinc2,c
 13843  006EFE  6ADD               	clrf	postdec2,c
 13844                           
 13845                           ;tcpv4.c: 1191: tcbPtr->mss = 1460u;
 13846  006F00  EE20 F01C          	lfsr	2,28
 13847  006F04  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13848  006F06  26D9               	addwf	fsr2l,f,c
 13849  006F08  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13850  006F0A  22DA               	addwfc	fsr2h,f,c
 13851  006F0C  0EB4               	movlw	180
 13852  006F0E  6EDE               	movwf	postinc2,c
 13853  006F10  0E05               	movlw	5
 13854  006F12  6EDD               	movwf	postdec2,c
 13855                           
 13856                           ;tcpv4.c: 1192: tcbPtr->fsmState = CLOSED;
 13857  006F14  EE20 F02A          	lfsr	2,42
 13858  006F18  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13859  006F1A  26D9               	addwf	fsr2l,f,c
 13860  006F1C  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13861  006F1E  22DA               	addwfc	fsr2h,f,c
 13862  006F20  6ADF               	clrf	indf2,c
 13863                           
 13864                           ;tcpv4.c: 1193: tcbPtr->connectionEvent = NOP;
 13865  006F22  EE20 F02B          	lfsr	2,43
 13866  006F26  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13867  006F28  26D9               	addwf	fsr2l,f,c
 13868  006F2A  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13869  006F2C  22DA               	addwfc	fsr2h,f,c
 13870  006F2E  0E0D               	movlw	13
 13871  006F30  6EDF               	movwf	indf2,c
 13872                           
 13873                           ;tcpv4.c: 1194: tcbPtr->rxBufferStart = (0);
 13874  006F32  EE20 F01E          	lfsr	2,30
 13875  006F36  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13876  006F38  26D9               	addwf	fsr2l,f,c
 13877  006F3A  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13878  006F3C  22DA               	addwfc	fsr2h,f,c
 13879  006F3E  6ADE               	clrf	postinc2,c
 13880  006F40  6ADD               	clrf	postdec2,c
 13881                           
 13882                           ;tcpv4.c: 1195: tcbPtr->rxBufState = NO_BUFF;
 13883  006F42  EE20 F022          	lfsr	2,34
 13884  006F46  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13885  006F48  26D9               	addwf	fsr2l,f,c
 13886  006F4A  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13887  006F4C  22DA               	addwfc	fsr2h,f,c
 13888  006F4E  6ADF               	clrf	indf2,c
 13889                           
 13890                           ;tcpv4.c: 1196: tcbPtr->txBufferStart = (0);
 13891  006F50  EE20 F023          	lfsr	2,35
 13892  006F54  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13893  006F56  26D9               	addwf	fsr2l,f,c
 13894  006F58  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13895  006F5A  22DA               	addwfc	fsr2h,f,c
 13896  006F5C  6ADE               	clrf	postinc2,c
 13897  006F5E  6ADD               	clrf	postdec2,c
 13898                           
 13899                           ;tcpv4.c: 1197: tcbPtr->txBufferPtr = (0);
 13900  006F60  EE20 F025          	lfsr	2,37
 13901  006F64  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13902  006F66  26D9               	addwf	fsr2l,f,c
 13903  006F68  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13904  006F6A  22DA               	addwfc	fsr2h,f,c
 13905  006F6C  6ADE               	clrf	postinc2,c
 13906  006F6E  6ADD               	clrf	postdec2,c
 13907                           
 13908                           ;tcpv4.c: 1198: tcbPtr->bytesToSend = 0;
 13909  006F70  EE20 F027          	lfsr	2,39
 13910  006F74  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13911  006F76  26D9               	addwf	fsr2l,f,c
 13912  006F78  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13913  006F7A  22DA               	addwfc	fsr2h,f,c
 13914  006F7C  6ADE               	clrf	postinc2,c
 13915  006F7E  6ADD               	clrf	postdec2,c
 13916                           
 13917                           ;tcpv4.c: 1199: tcbPtr->txBufState = NO_BUFF;
 13918  006F80  EE20 F029          	lfsr	2,41
 13919  006F84  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13920  006F86  26D9               	addwf	fsr2l,f,c
 13921  006F88  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13922  006F8A  22DA               	addwfc	fsr2h,f,c
 13923  006F8C  6ADF               	clrf	indf2,c
 13924                           
 13925                           ;tcpv4.c: 1201: TCB_Insert(tcbPtr);
 13926  006F8E  C00A  F002         	movff	TCP_SocketInit@tcbPtr,TCB_Insert@ptr
 13927  006F92  C00B  F003         	movff	TCP_SocketInit@tcbPtr+1,TCB_Insert@ptr+1
 13928  006F96  EF6F  F03F         	goto	_TCB_Insert	;wreg free
 13929  006F9A                     __end_of_TCP_SocketInit:
 13930                           	opt stack 0
 13931                           tosu	equ	0xFFF
 13932                           tosh	equ	0xFFE
 13933                           tosl	equ	0xFFD
 13934                           pclath	equ	0xFFA
 13935                           tblptru	equ	0xFF8
 13936                           tblptrh	equ	0xFF7
 13937                           tblptrl	equ	0xFF6
 13938                           tablat	equ	0xFF5
 13939                           prodh	equ	0xFF4
 13940                           prodl	equ	0xFF3
 13941                           intcon	equ	0xFF2
 13942                           intcon2	equ	0xFF1
 13943                           indf0	equ	0xFEF
 13944                           postinc0	equ	0xFEE
 13945                           fsr0h	equ	0xFEA
 13946                           fsr0l	equ	0xFE9
 13947                           wreg	equ	0xFE8
 13948                           indf1	equ	0xFE7
 13949                           postinc1	equ	0xFE6
 13950                           plusw1	equ	0xFE3
 13951                           fsr1h	equ	0xFE2
 13952                           fsr1l	equ	0xFE1
 13953                           indf2	equ	0xFDF
 13954                           postinc2	equ	0xFDE
 13955                           postdec2	equ	0xFDD
 13956                           plusw2	equ	0xFDB
 13957                           fsr2h	equ	0xFDA
 13958                           fsr2l	equ	0xFD9
 13959                           status	equ	0xFD8
 13960                           
 13961 ;; *************** function _TCB_Insert *****************
 13962 ;; Defined at:
 13963 ;;		line 80 in file "../../TCPIP Library/source/tcpv4.c"
 13964 ;; Parameters:    Size  Location     Type
 13965 ;;  ptr             2    1[COMRAM] PTR struct .
 13966 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 13967 ;; Auto vars:     Size  Location     Type
 13968 ;;		None
 13969 ;; Return value:  Size  Location     Type
 13970 ;;		None               void
 13971 ;; Registers used:
 13972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13973 ;; Tracked objects:
 13974 ;;		On entry : 0/0
 13975 ;;		On exit  : F/1
 13976 ;;		Unchanged: 0/0
 13977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13982 ;;Total ram usage:        2 bytes
 13983 ;; Hardware stack levels used:    1
 13984 ;; Hardware stack levels required when called:    3
 13985 ;; This function calls:
 13986 ;;		Nothing
 13987 ;; This function is called by:
 13988 ;;		_TCP_SocketInit
 13989 ;; This function uses a non-reentrant model
 13990 ;;
 13991                           
 13992                           	psect	text73
 13993  007EDE                     __ptext73:
 13994                           	opt stack 0
 13995  007EDE                     _TCB_Insert:
 13996                           	opt stack 25
 13997                           
 13998                           ;tcpv4.c: 84: if(tcbList != (0))
 13999                           
 14000                           ;incstack = 0
 14001  007EDE  0101               	movlb	1	; () banked
 14002  007EE0  51A2               	movf	_tcbList& (0+255),w,b
 14003  007EE2  11A3               	iorwf	(_tcbList+1)& (0+255),w,b
 14004  007EE4  E00A               	bz	l1185
 14005                           
 14006                           ; BSR set to: 1
 14007                           ;tcpv4.c: 85: {
 14008                           ;tcpv4.c: 87: tcbList->prevTCB = ptr;
 14009  007EE6  EE20 F02E          	lfsr	2,46
 14010  007EEA  51A2               	movf	_tcbList& (0+255),w,b
 14011  007EEC  26D9               	addwf	fsr2l,f,c
 14012  007EEE  51A3               	movf	(_tcbList+1)& (0+255),w,b
 14013  007EF0  22DA               	addwfc	fsr2h,f,c
 14014  007EF2  C002  FFDE         	movff	TCB_Insert@ptr,postinc2
 14015  007EF6  C003  FFDD         	movff	TCB_Insert@ptr+1,postdec2
 14016  007EFA                     l1185:
 14017                           
 14018                           ; BSR set to: 1
 14019                           ;tcpv4.c: 88: }
 14020                           ;tcpv4.c: 89: ptr->nextTCB = tcbList;
 14021  007EFA  EE20 F02C          	lfsr	2,44
 14022  007EFE  5002               	movf	TCB_Insert@ptr,w,c
 14023  007F00  26D9               	addwf	fsr2l,f,c
 14024  007F02  5003               	movf	TCB_Insert@ptr+1,w,c
 14025  007F04  22DA               	addwfc	fsr2h,f,c
 14026  007F06  C1A2  FFDE         	movff	_tcbList,postinc2
 14027  007F0A  C1A3  FFDD         	movff	_tcbList+1,postdec2
 14028                           
 14029                           ; BSR set to: 1
 14030                           ;tcpv4.c: 90: tcbList = ptr;
 14031  007F0E  C002  F1A2         	movff	TCB_Insert@ptr,_tcbList
 14032  007F12  C003  F1A3         	movff	TCB_Insert@ptr+1,_tcbList+1
 14033                           
 14034                           ; BSR set to: 1
 14035                           ;tcpv4.c: 91: ptr->prevTCB = (0);
 14036  007F16  EE20 F02E          	lfsr	2,46
 14037  007F1A  5002               	movf	TCB_Insert@ptr,w,c
 14038  007F1C  26D9               	addwf	fsr2l,f,c
 14039  007F1E  5003               	movf	TCB_Insert@ptr+1,w,c
 14040  007F20  22DA               	addwfc	fsr2h,f,c
 14041  007F22  6ADE               	clrf	postinc2,c
 14042  007F24  6ADD               	clrf	postdec2,c
 14043                           
 14044                           ; BSR set to: 1
 14045                           ;tcpv4.c: 92: tcbListSize ++;
 14046  007F26  2BA7               	incf	_tcbListSize& (0+255),f,b
 14047                           
 14048                           ; BSR set to: 1
 14049  007F28  0C00               	retlw	0	;funcret
 14050  007F2A                     __end_of_TCB_Insert:
 14051                           	opt stack 0
 14052                           tosu	equ	0xFFF
 14053                           tosh	equ	0xFFE
 14054                           tosl	equ	0xFFD
 14055                           pclath	equ	0xFFA
 14056                           tblptru	equ	0xFF8
 14057                           tblptrh	equ	0xFF7
 14058                           tblptrl	equ	0xFF6
 14059                           tablat	equ	0xFF5
 14060                           prodh	equ	0xFF4
 14061                           prodl	equ	0xFF3
 14062                           intcon	equ	0xFF2
 14063                           intcon2	equ	0xFF1
 14064                           indf0	equ	0xFEF
 14065                           postinc0	equ	0xFEE
 14066                           fsr0h	equ	0xFEA
 14067                           fsr0l	equ	0xFE9
 14068                           wreg	equ	0xFE8
 14069                           indf1	equ	0xFE7
 14070                           postinc1	equ	0xFE6
 14071                           plusw1	equ	0xFE3
 14072                           fsr1h	equ	0xFE2
 14073                           fsr1l	equ	0xFE1
 14074                           indf2	equ	0xFDF
 14075                           postinc2	equ	0xFDE
 14076                           postdec2	equ	0xFDD
 14077                           plusw2	equ	0xFDB
 14078                           fsr2h	equ	0xFDA
 14079                           fsr2l	equ	0xFD9
 14080                           status	equ	0xFD8
 14081                           
 14082 ;; *************** function _TCP_SendDone *****************
 14083 ;; Defined at:
 14084 ;;		line 1347 in file "../../TCPIP Library/source/tcpv4.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 14087 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14088 ;; Auto vars:     Size  Location     Type
 14089 ;;  ret             1   11[COMRAM] unsigned char 
 14090 ;; Return value:  Size  Location     Type
 14091 ;;                  1    wreg      unsigned char 
 14092 ;; Registers used:
 14093 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14094 ;; Tracked objects:
 14095 ;;		On entry : D/0
 14096 ;;		On exit  : 0/0
 14097 ;;		Unchanged: 0/0
 14098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14102 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14103 ;;Total ram usage:        3 bytes
 14104 ;; Hardware stack levels used:    1
 14105 ;; Hardware stack levels required when called:    4
 14106 ;; This function calls:
 14107 ;;		_TCB_Check
 14108 ;; This function is called by:
 14109 ;;		_DEMO_TCP_EchoServer
 14110 ;; This function uses a non-reentrant model
 14111 ;;
 14112                           
 14113                           	psect	text74
 14114  0084A0                     __ptext74:
 14115                           	opt stack 0
 14116  0084A0                     _TCP_SendDone:
 14117                           	opt stack 25
 14118                           
 14119                           ;tcpv4.c: 1349: bool ret = 0;
 14120                           
 14121                           ; BSR set to: 1
 14122                           ;incstack = 0
 14123  0084A0  6A0C               	clrf	TCP_SendDone@ret,c
 14124                           
 14125                           ;tcpv4.c: 1351: if(TCB_Check(tcbPtr))
 14126  0084A2  C00A  F002         	movff	TCP_SendDone@tcbPtr,TCB_Check@ptr
 14127  0084A6  C00B  F003         	movff	TCP_SendDone@tcbPtr+1,TCB_Check@ptr+1
 14128  0084AA  ECF1  F03B         	call	_TCB_Check	;wreg free
 14129  0084AE  0900               	iorlw	0
 14130  0084B0  E00A               	bz	l1455
 14131                           
 14132                           ;tcpv4.c: 1352: {
 14133                           ;tcpv4.c: 1353: if (tcbPtr->txBufState == NO_BUFF)
 14134  0084B2  EE20 F029          	lfsr	2,41
 14135  0084B6  500A               	movf	TCP_SendDone@tcbPtr,w,c
 14136  0084B8  26D9               	addwf	fsr2l,f,c
 14137  0084BA  500B               	movf	TCP_SendDone@tcbPtr+1,w,c
 14138  0084BC  22DA               	addwfc	fsr2h,f,c
 14139  0084BE  50DF               	movf	indf2,w,c
 14140  0084C0  E102               	bnz	l1455
 14141                           
 14142                           ;tcpv4.c: 1354: {
 14143                           ;tcpv4.c: 1355: ret = 1;
 14144  0084C2  0E01               	movlw	1
 14145  0084C4  6E0C               	movwf	TCP_SendDone@ret,c
 14146  0084C6                     l1455:
 14147                           
 14148                           ;tcpv4.c: 1356: }
 14149                           ;tcpv4.c: 1357: }
 14150                           ;tcpv4.c: 1358: return ret;
 14151  0084C6  500C               	movf	TCP_SendDone@ret,w,c
 14152  0084C8  0012               	return		;funcret
 14153  0084CA                     __end_of_TCP_SendDone:
 14154                           	opt stack 0
 14155                           tosu	equ	0xFFF
 14156                           tosh	equ	0xFFE
 14157                           tosl	equ	0xFFD
 14158                           pclath	equ	0xFFA
 14159                           tblptru	equ	0xFF8
 14160                           tblptrh	equ	0xFF7
 14161                           tblptrl	equ	0xFF6
 14162                           tablat	equ	0xFF5
 14163                           prodh	equ	0xFF4
 14164                           prodl	equ	0xFF3
 14165                           intcon	equ	0xFF2
 14166                           intcon2	equ	0xFF1
 14167                           indf0	equ	0xFEF
 14168                           postinc0	equ	0xFEE
 14169                           fsr0h	equ	0xFEA
 14170                           fsr0l	equ	0xFE9
 14171                           wreg	equ	0xFE8
 14172                           indf1	equ	0xFE7
 14173                           postinc1	equ	0xFE6
 14174                           plusw1	equ	0xFE3
 14175                           fsr1h	equ	0xFE2
 14176                           fsr1l	equ	0xFE1
 14177                           indf2	equ	0xFDF
 14178                           postinc2	equ	0xFDE
 14179                           postdec2	equ	0xFDD
 14180                           plusw2	equ	0xFDB
 14181                           fsr2h	equ	0xFDA
 14182                           fsr2l	equ	0xFD9
 14183                           status	equ	0xFD8
 14184                           
 14185 ;; *************** function _TCP_Send *****************
 14186 ;; Defined at:
 14187 ;;		line 1318 in file "../../TCPIP Library/source/tcpv4.c"
 14188 ;; Parameters:    Size  Location     Type
 14189 ;;  tcbPtr          2   84[BANK0 ] PTR struct .
 14190 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14191 ;;  data            2   86[BANK0 ] PTR unsigned char 
 14192 ;;		 -> DEMO_TCP_EchoServer@txdataPort7(20), 
 14193 ;;  dataLen         2   88[BANK0 ] unsigned int 
 14194 ;; Auto vars:     Size  Location     Type
 14195 ;;  ret             1    0        unsigned char 
 14196 ;; Return value:  Size  Location     Type
 14197 ;;                  1    wreg      unsigned char 
 14198 ;; Registers used:
 14199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14200 ;; Tracked objects:
 14201 ;;		On entry : F/0
 14202 ;;		On exit  : 0/0
 14203 ;;		Unchanged: 0/0
 14204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14205 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14208 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14209 ;;Total ram usage:        7 bytes
 14210 ;; Hardware stack levels used:    1
 14211 ;; Hardware stack levels required when called:   10
 14212 ;; This function calls:
 14213 ;;		_TCP_Snd
 14214 ;;		_TCP_SocketPoll
 14215 ;; This function is called by:
 14216 ;;		_DEMO_TCP_EchoServer
 14217 ;; This function uses a non-reentrant model
 14218 ;;
 14219                           
 14220                           	psect	text75
 14221  007060                     __ptext75:
 14222                           	opt stack 0
 14223  007060                     _TCP_Send:
 14224                           	opt stack 19
 14225                           
 14226                           ; BSR set to: 0
 14227                           ;tcpv4.c: 1322: if (TCP_SocketPoll(tcbPtr) == SOCKET_CONNECTED)
 14228                           
 14229                           ; BSR set to: 0
 14230                           
 14231                           ;incstack = 0
 14232  007060  C0B4  F00A         	movff	TCP_Send@tcbPtr,TCP_SocketPoll@socket_ptr
 14233  007064  C0B5  F00B         	movff	TCP_Send@tcbPtr+1,TCP_SocketPoll@socket_ptr+1
 14234  007068  EC8C  F042         	call	_TCP_SocketPoll	;wreg free
 14235  00706C  0A03               	xorlw	3
 14236  00706E  A4D8               	btfss	status,2,c
 14237  007070  0012               	return	
 14238                           
 14239                           ;tcpv4.c: 1323: {
 14240                           ;tcpv4.c: 1324: if (tcbPtr->txBufState == NO_BUFF)
 14241  007072  0100               	movlb	0	; () banked
 14242  007074  EE20 F029          	lfsr	2,41
 14243  007078  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14244  00707A  26D9               	addwf	fsr2l,f,c
 14245  00707C  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14246  00707E  22DA               	addwfc	fsr2h,f,c
 14247  007080  50DF               	movf	indf2,w,c
 14248  007082  A4D8               	btfss	status,2,c
 14249  007084  0012               	return	
 14250                           
 14251                           ; BSR set to: 0
 14252                           ;tcpv4.c: 1325: {
 14253                           ;tcpv4.c: 1326: if (data != (0))
 14254  007086  51B6               	movf	TCP_Send@data& (0+255),w,b
 14255  007088  11B7               	iorwf	(TCP_Send@data+1)& (0+255),w,b
 14256  00708A  B4D8               	btfsc	status,2,c
 14257  00708C  0012               	return	
 14258                           
 14259                           ; BSR set to: 0
 14260                           ;tcpv4.c: 1327: {
 14261                           ;tcpv4.c: 1328: tcbPtr->txBufferStart = data;
 14262  00708E  EE20 F023          	lfsr	2,35
 14263  007092  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14264  007094  26D9               	addwf	fsr2l,f,c
 14265  007096  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14266  007098  22DA               	addwfc	fsr2h,f,c
 14267  00709A  C0B6  FFDE         	movff	TCP_Send@data,postinc2
 14268  00709E  C0B7  FFDD         	movff	TCP_Send@data+1,postdec2
 14269                           
 14270                           ; BSR set to: 0
 14271                           ;tcpv4.c: 1329: tcbPtr->txBufferPtr = tcbPtr->txBufferStart;
 14272  0070A2  EE20 F023          	lfsr	2,35
 14273  0070A6  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14274  0070A8  26D9               	addwf	fsr2l,f,c
 14275  0070AA  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14276  0070AC  22DA               	addwfc	fsr2h,f,c
 14277  0070AE  EE10 F025          	lfsr	1,37
 14278  0070B2  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14279  0070B4  26E1               	addwf	fsr1l,f,c
 14280  0070B6  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14281  0070B8  22E2               	addwfc	fsr1h,f,c
 14282  0070BA  CFDE FFE6          	movff	postinc2,postinc1
 14283  0070BE  CFDD FFE5          	movff	postdec2,postdec1
 14284                           
 14285                           ; BSR set to: 0
 14286                           ;tcpv4.c: 1330: tcbPtr->bytesToSend = dataLen;
 14287  0070C2  EE20 F027          	lfsr	2,39
 14288  0070C6  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14289  0070C8  26D9               	addwf	fsr2l,f,c
 14290  0070CA  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14291  0070CC  22DA               	addwfc	fsr2h,f,c
 14292  0070CE  C0B8  FFDE         	movff	TCP_Send@dataLen,postinc2
 14293  0070D2  C0B9  FFDD         	movff	TCP_Send@dataLen+1,postdec2
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;tcpv4.c: 1331: tcbPtr->txBufState = TX_BUFF_IN_USE;
 14297  0070D6  EE20 F029          	lfsr	2,41
 14298  0070DA  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14299  0070DC  26D9               	addwf	fsr2l,f,c
 14300  0070DE  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14301  0070E0  22DA               	addwfc	fsr2h,f,c
 14302  0070E2  0E02               	movlw	2
 14303  0070E4  6EDF               	movwf	indf2,c
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;tcpv4.c: 1333: tcbPtr->timeoutReloadValue = ((unsigned long)1*2);
 14307  0070E6  EE20 F032          	lfsr	2,50
 14308  0070EA  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14309  0070EC  26D9               	addwf	fsr2l,f,c
 14310  0070EE  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14311  0070F0  22DA               	addwfc	fsr2h,f,c
 14312  0070F2  0E02               	movlw	2
 14313  0070F4  6EDE               	movwf	postinc2,c
 14314  0070F6  6ADD               	clrf	postdec2,c
 14315                           
 14316                           ; BSR set to: 0
 14317                           ;tcpv4.c: 1334: tcbPtr->timeoutsCount = (5u);
 14318  0070F8  EE20 F034          	lfsr	2,52
 14319  0070FC  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14320  0070FE  26D9               	addwf	fsr2l,f,c
 14321  007100  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14322  007102  22DA               	addwfc	fsr2h,f,c
 14323  007104  0E05               	movlw	5
 14324  007106  6EDF               	movwf	indf2,c
 14325                           
 14326                           ; BSR set to: 0
 14327                           ;tcpv4.c: 1336: tcbPtr->flags = 0x10U;
 14328  007108  EE20 F035          	lfsr	2,53
 14329  00710C  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14330  00710E  26D9               	addwf	fsr2l,f,c
 14331  007110  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14332  007112  22DA               	addwfc	fsr2h,f,c
 14333  007114  0E10               	movlw	16
 14334  007116  6EDF               	movwf	indf2,c
 14335                           
 14336                           ; BSR set to: 0
 14337                           ;tcpv4.c: 1338: TCP_Snd(tcbPtr);
 14338  007118  C0B4  F058         	movff	TCP_Send@tcbPtr,TCP_Snd@tcbPtr
 14339  00711C  C0B5  F059         	movff	TCP_Send@tcbPtr+1,TCP_Snd@tcbPtr+1
 14340  007120  EF11  F01D         	goto	_TCP_Snd	;wreg free
 14341  007124                     __end_of_TCP_Send:
 14342                           	opt stack 0
 14343                           tosu	equ	0xFFF
 14344                           tosh	equ	0xFFE
 14345                           tosl	equ	0xFFD
 14346                           pclath	equ	0xFFA
 14347                           tblptru	equ	0xFF8
 14348                           tblptrh	equ	0xFF7
 14349                           tblptrl	equ	0xFF6
 14350                           tablat	equ	0xFF5
 14351                           prodh	equ	0xFF4
 14352                           prodl	equ	0xFF3
 14353                           intcon	equ	0xFF2
 14354                           intcon2	equ	0xFF1
 14355                           indf0	equ	0xFEF
 14356                           postinc0	equ	0xFEE
 14357                           fsr0h	equ	0xFEA
 14358                           fsr0l	equ	0xFE9
 14359                           wreg	equ	0xFE8
 14360                           indf1	equ	0xFE7
 14361                           postinc1	equ	0xFE6
 14362                           postdec1	equ	0xFE5
 14363                           plusw1	equ	0xFE3
 14364                           fsr1h	equ	0xFE2
 14365                           fsr1l	equ	0xFE1
 14366                           indf2	equ	0xFDF
 14367                           postinc2	equ	0xFDE
 14368                           postdec2	equ	0xFDD
 14369                           plusw2	equ	0xFDB
 14370                           fsr2h	equ	0xFDA
 14371                           fsr2l	equ	0xFD9
 14372                           status	equ	0xFD8
 14373                           
 14374 ;; *************** function _TCP_SocketPoll *****************
 14375 ;; Defined at:
 14376 ;;		line 1220 in file "../../TCPIP Library/source/tcpv4.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;  socket_ptr      2    9[COMRAM] PTR struct .
 14379 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14380 ;; Auto vars:     Size  Location     Type
 14381 ;;  tmpSocketSta    1   11[COMRAM] enum E667
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  1    wreg      enum E667
 14384 ;; Registers used:
 14385 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14386 ;; Tracked objects:
 14387 ;;		On entry : D/2
 14388 ;;		On exit  : 0/0
 14389 ;;		Unchanged: 0/0
 14390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14394 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14395 ;;Total ram usage:        3 bytes
 14396 ;; Hardware stack levels used:    1
 14397 ;; Hardware stack levels required when called:    4
 14398 ;; This function calls:
 14399 ;;		_TCB_Check
 14400 ;; This function is called by:
 14401 ;;		_TCP_Send
 14402 ;;		_DEMO_TCP_EchoServer
 14403 ;; This function uses a non-reentrant model
 14404 ;;
 14405                           
 14406                           	psect	text76
 14407  008518                     __ptext76:
 14408                           	opt stack 0
 14409  008518                     _TCP_SocketPoll:
 14410                           	opt stack 25
 14411                           
 14412                           ;tcpv4.c: 1222: socketState_t tmpSocketState;
 14413                           ;tcpv4.c: 1224: tmpSocketState = NOT_A_SOCKET;
 14414                           
 14415                           ;incstack = 0
 14416  008518  6A0C               	clrf	TCP_SocketPoll@tmpSocketState,c
 14417                           
 14418                           ;tcpv4.c: 1226: if(TCB_Check(socket_ptr))
 14419  00851A  C00A  F002         	movff	TCP_SocketPoll@socket_ptr,TCB_Check@ptr
 14420  00851E  C00B  F003         	movff	TCP_SocketPoll@socket_ptr+1,TCB_Check@ptr+1
 14421  008522  ECF1  F03B         	call	_TCB_Check	;wreg free
 14422  008526  0900               	iorlw	0
 14423  008528  E008               	bz	l9477
 14424                           
 14425                           ;tcpv4.c: 1227: {
 14426                           ;tcpv4.c: 1228: tmpSocketState = socket_ptr->socketState;
 14427  00852A  EE20 F036          	lfsr	2,54
 14428  00852E  500A               	movf	TCP_SocketPoll@socket_ptr,w,c
 14429  008530  26D9               	addwf	fsr2l,f,c
 14430  008532  500B               	movf	TCP_SocketPoll@socket_ptr+1,w,c
 14431  008534  22DA               	addwfc	fsr2h,f,c
 14432  008536  50DF               	movf	indf2,w,c
 14433  008538  6E0C               	movwf	TCP_SocketPoll@tmpSocketState,c
 14434  00853A                     l9477:
 14435                           
 14436                           ;tcpv4.c: 1229: }
 14437                           ;tcpv4.c: 1231: return tmpSocketState;
 14438  00853A  500C               	movf	TCP_SocketPoll@tmpSocketState,w,c
 14439  00853C  0012               	return		;funcret
 14440  00853E                     __end_of_TCP_SocketPoll:
 14441                           	opt stack 0
 14442                           tosu	equ	0xFFF
 14443                           tosh	equ	0xFFE
 14444                           tosl	equ	0xFFD
 14445                           pclath	equ	0xFFA
 14446                           tblptru	equ	0xFF8
 14447                           tblptrh	equ	0xFF7
 14448                           tblptrl	equ	0xFF6
 14449                           tablat	equ	0xFF5
 14450                           prodh	equ	0xFF4
 14451                           prodl	equ	0xFF3
 14452                           intcon	equ	0xFF2
 14453                           intcon2	equ	0xFF1
 14454                           indf0	equ	0xFEF
 14455                           postinc0	equ	0xFEE
 14456                           fsr0h	equ	0xFEA
 14457                           fsr0l	equ	0xFE9
 14458                           wreg	equ	0xFE8
 14459                           indf1	equ	0xFE7
 14460                           postinc1	equ	0xFE6
 14461                           postdec1	equ	0xFE5
 14462                           plusw1	equ	0xFE3
 14463                           fsr1h	equ	0xFE2
 14464                           fsr1l	equ	0xFE1
 14465                           indf2	equ	0xFDF
 14466                           postinc2	equ	0xFDE
 14467                           postdec2	equ	0xFDD
 14468                           plusw2	equ	0xFDB
 14469                           fsr2h	equ	0xFDA
 14470                           fsr2l	equ	0xFD9
 14471                           status	equ	0xFD8
 14472                           
 14473 ;; *************** function _TCP_Listen *****************
 14474 ;; Defined at:
 14475 ;;		line 1250 in file "../../TCPIP Library/source/tcpv4.c"
 14476 ;; Parameters:    Size  Location     Type
 14477 ;;  tcbPtr          2  116[BANK0 ] PTR struct .
 14478 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14479 ;; Auto vars:     Size  Location     Type
 14480 ;;  ret             1    0        unsigned char 
 14481 ;; Return value:  Size  Location     Type
 14482 ;;                  1    wreg      unsigned char 
 14483 ;; Registers used:
 14484 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14485 ;; Tracked objects:
 14486 ;;		On entry : F/0
 14487 ;;		On exit  : 0/0
 14488 ;;		Unchanged: 0/0
 14489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14492 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14493 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14494 ;;Total ram usage:        5 bytes
 14495 ;; Hardware stack levels used:    1
 14496 ;; Hardware stack levels required when called:   12
 14497 ;; This function calls:
 14498 ;;		_TCB_Check
 14499 ;;		_TCP_FiniteStateMachine
 14500 ;; This function is called by:
 14501 ;;		_DEMO_TCP_EchoServer
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505                           	psect	text77
 14506  007868                     __ptext77:
 14507                           	opt stack 0
 14508  007868                     _TCP_Listen:
 14509                           	opt stack 17
 14510                           
 14511                           ; BSR set to: 0
 14512                           ;tcpv4.c: 1254: ;
 14513                           ;tcpv4.c: 1256: if (TCB_Check(tcbPtr))
 14514                           
 14515                           ; BSR set to: 0
 14516                           
 14517                           ;incstack = 0
 14518  007868  C0D4  F002         	movff	TCP_Listen@tcbPtr,TCB_Check@ptr
 14519  00786C  C0D5  F003         	movff	TCP_Listen@tcbPtr+1,TCB_Check@ptr+1
 14520  007870  ECF1  F03B         	call	_TCB_Check	;wreg free
 14521  007874  0900               	iorlw	0
 14522  007876  B4D8               	btfsc	status,2,c
 14523  007878  0012               	return	
 14524                           
 14525                           ;tcpv4.c: 1257: {
 14526                           ;tcpv4.c: 1258: tcbPtr->connectionEvent = PASIVE_OPEN;
 14527  00787A  0100               	movlb	0	; () banked
 14528  00787C  EE20 F02B          	lfsr	2,43
 14529  007880  51D4               	movf	TCP_Listen@tcbPtr& (0+255),w,b
 14530  007882  26D9               	addwf	fsr2l,f,c
 14531  007884  51D5               	movf	(TCP_Listen@tcbPtr+1)& (0+255),w,b
 14532  007886  22DA               	addwfc	fsr2h,f,c
 14533  007888  0E02               	movlw	2
 14534  00788A  6EDF               	movwf	indf2,c
 14535                           
 14536                           ;tcpv4.c: 1259: tcbPtr->socketState = SOCKET_IN_PROGRESS;
 14537  00788C  EE20 F036          	lfsr	2,54
 14538  007890  51D4               	movf	TCP_Listen@tcbPtr& (0+255),w,b
 14539  007892  26D9               	addwf	fsr2l,f,c
 14540  007894  51D5               	movf	(TCP_Listen@tcbPtr+1)& (0+255),w,b
 14541  007896  22DA               	addwfc	fsr2h,f,c
 14542  007898  0E02               	movlw	2
 14543  00789A  6EDF               	movwf	indf2,c
 14544                           
 14545                           ;tcpv4.c: 1260: tcbPtr->localSeqno = nextSequenceNumber;
 14546  00789C  EE20 F010          	lfsr	2,16
 14547  0078A0  51D4               	movf	TCP_Listen@tcbPtr& (0+255),w,b
 14548  0078A2  26D9               	addwf	fsr2l,f,c
 14549  0078A4  51D5               	movf	(TCP_Listen@tcbPtr+1)& (0+255),w,b
 14550  0078A6  22DA               	addwfc	fsr2h,f,c
 14551  0078A8  C22A  FFDE         	movff	_nextSequenceNumber,postinc2
 14552  0078AC  C22B  FFDE         	movff	_nextSequenceNumber+1,postinc2
 14553  0078B0  C22C  FFDE         	movff	_nextSequenceNumber+2,postinc2
 14554  0078B4  C22D  FFDE         	movff	_nextSequenceNumber+3,postinc2
 14555                           
 14556                           ; BSR set to: 0
 14557                           ;tcpv4.c: 1261: currentTCB = tcbPtr;
 14558  0078B8  C0D4  F0FE         	movff	TCP_Listen@tcbPtr,_currentTCB
 14559  0078BC  C0D5  F0FF         	movff	TCP_Listen@tcbPtr+1,_currentTCB+1
 14560                           
 14561                           ; BSR set to: 0
 14562                           ;tcpv4.c: 1262: if (tcbPtr->localPort == 0)
 14563  0078C0  C0D4  FFD9         	movff	TCP_Listen@tcbPtr,fsr2l
 14564  0078C4  C0D5  FFDA         	movff	TCP_Listen@tcbPtr+1,fsr2h
 14565  0078C8  50DE               	movf	postinc2,w,c
 14566  0078CA  10DE               	iorwf	postinc2,w,c
 14567  0078CC  E002 EF55  F008    	bnz	_TCP_FiniteStateMachine
 14568                           
 14569                           ; BSR set to: 0
 14570                           ;tcpv4.c: 1263: {
 14571                           ;tcpv4.c: 1264: tcbPtr->localPort = nextAvailablePort++;
 14572  0078D2  C0D4  FFD9         	movff	TCP_Listen@tcbPtr,fsr2l
 14573  0078D6  C0D5  FFDA         	movff	TCP_Listen@tcbPtr+1,fsr2h
 14574  0078DA  C19C  FFDE         	movff	_nextAvailablePort,postinc2
 14575  0078DE  C19D  FFDD         	movff	_nextAvailablePort+1,postdec2
 14576                           
 14577                           ; BSR set to: 0
 14578  0078E2  0101               	movlb	1	; () banked
 14579  0078E4  4B9C               	infsnz	_nextAvailablePort& (0+255),f,b
 14580  0078E6  2B9D               	incf	(_nextAvailablePort+1)& (0+255),f,b
 14581  0078E8  EF55  F008         	goto	_TCP_FiniteStateMachine	;wreg free
 14582  0078EC                     __end_of_TCP_Listen:
 14583                           	opt stack 0
 14584                           tosu	equ	0xFFF
 14585                           tosh	equ	0xFFE
 14586                           tosl	equ	0xFFD
 14587                           pclath	equ	0xFFA
 14588                           tblptru	equ	0xFF8
 14589                           tblptrh	equ	0xFF7
 14590                           tblptrl	equ	0xFF6
 14591                           tablat	equ	0xFF5
 14592                           prodh	equ	0xFF4
 14593                           prodl	equ	0xFF3
 14594                           intcon	equ	0xFF2
 14595                           intcon2	equ	0xFF1
 14596                           indf0	equ	0xFEF
 14597                           postinc0	equ	0xFEE
 14598                           fsr0h	equ	0xFEA
 14599                           fsr0l	equ	0xFE9
 14600                           wreg	equ	0xFE8
 14601                           indf1	equ	0xFE7
 14602                           postinc1	equ	0xFE6
 14603                           postdec1	equ	0xFE5
 14604                           plusw1	equ	0xFE3
 14605                           fsr1h	equ	0xFE2
 14606                           fsr1l	equ	0xFE1
 14607                           indf2	equ	0xFDF
 14608                           postinc2	equ	0xFDE
 14609                           postdec2	equ	0xFDD
 14610                           plusw2	equ	0xFDB
 14611                           fsr2h	equ	0xFDA
 14612                           fsr2l	equ	0xFD9
 14613                           status	equ	0xFD8
 14614                           
 14615 ;; *************** function _TCP_FiniteStateMachine *****************
 14616 ;; Defined at:
 14617 ;;		line 602 in file "../../TCPIP Library/source/tcpv4.c"
 14618 ;; Parameters:    Size  Location     Type
 14619 ;;		None
 14620 ;; Auto vars:     Size  Location     Type
 14621 ;;  notAckBytes     2  112[BANK0 ] unsigned int 
 14622 ;;  nextState       1  115[BANK0 ] enum E638
 14623 ;;  event           1  114[BANK0 ] enum E651
 14624 ;;  ret             1  111[BANK0 ] unsigned char 
 14625 ;; Return value:  Size  Location     Type
 14626 ;;                  1    wreg      unsigned char 
 14627 ;; Registers used:
 14628 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14629 ;; Tracked objects:
 14630 ;;		On entry : 0/0
 14631 ;;		On exit  : F/0
 14632 ;;		Unchanged: 0/0
 14633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14635 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14636 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14637 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14638 ;;Total ram usage:       17 bytes
 14639 ;; Hardware stack levels used:    1
 14640 ;; Hardware stack levels required when called:   11
 14641 ;; This function calls:
 14642 ;;		_TCB_Reset
 14643 ;;		_TCP_PayloadSave
 14644 ;;		_TCP_Snd
 14645 ;; This function is called by:
 14646 ;;		_TCP_Recv
 14647 ;;		_TCP_Listen
 14648 ;;		_TCP_Update
 14649 ;; This function uses a non-reentrant model
 14650 ;;
 14651                           
 14652                           	psect	text78
 14653  0010AA                     __ptext78:
 14654                           	opt stack 0
 14655  0010AA                     _TCP_FiniteStateMachine:
 14656                           	opt stack 17
 14657                           
 14658                           ;tcpv4.c: 604: uint16_t notAckBytes;
 14659                           ;tcpv4.c: 605: bool ret = 0;
 14660                           
 14661                           ;incstack = 0
 14662  0010AA  0100               	movlb	0	; () banked
 14663  0010AC  6BCF               	clrf	TCP_FiniteStateMachine@ret& (0+255),b
 14664                           
 14665                           ; BSR set to: 0
 14666                           ;tcpv4.c: 607: tcp_fsm_states_t nextState = currentTCB->fsmState;
 14667  0010AE  0E2A               	movlw	42
 14668  0010B0  25FE               	addwf	_currentTCB& (0+255),w,b
 14669  0010B2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14670  0010B4  0E00               	movlw	0
 14671  0010B6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14672  0010B8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14673  0010BA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14674  0010BE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14675  0010C2  0E00               	movlw	low (__smallconst shr (0+16))
 14676  0010C4  6EF8               	movwf	tblptru,c
 14677  0010C6  0E0F               	movlw	(high __ramtop+-1)
 14678  0010C8  64F7               	cpfsgt	tblptrh,c
 14679  0010CA  D003               	bra	u11657
 14680  0010CC  0008               	tblrd		*
 14681  0010CE  50F5               	movf	tablat,w,c
 14682  0010D0  D005               	bra	u11650
 14683  0010D2                     u11657:
 14684  0010D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 14685  0010D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 14686  0010DA  50EF               	movf	indf0,w,c
 14687  0010DC                     u11650:
 14688  0010DC  0100               	movlb	0	; () banked
 14689  0010DE  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14690                           
 14691                           ;tcpv4.c: 608: tcpEvent_t event = currentTCB->connectionEvent;
 14692  0010E0  0E2B               	movlw	43
 14693  0010E2  25FE               	addwf	_currentTCB& (0+255),w,b
 14694  0010E4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14695  0010E6  0E00               	movlw	0
 14696  0010E8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14697  0010EA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14698  0010EC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14699  0010F0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14700  0010F4  0E00               	movlw	low (__smallconst shr (0+16))
 14701  0010F6  6EF8               	movwf	tblptru,c
 14702  0010F8  0E0F               	movlw	(high __ramtop+-1)
 14703  0010FA  64F7               	cpfsgt	tblptrh,c
 14704  0010FC  D003               	bra	u11667
 14705  0010FE  0008               	tblrd		*
 14706  001100  50F5               	movf	tablat,w,c
 14707  001102  D005               	bra	u11660
 14708  001104                     u11667:
 14709  001104  CFF6 FFE9          	movff	tblptrl,fsr0l
 14710  001108  CFF7 FFEA          	movff	tblptrh,fsr0h
 14711  00110C  50EF               	movf	indf0,w,c
 14712  00110E                     u11660:
 14713  00110E  0100               	movlb	0	; () banked
 14714  001110  6FD2               	movwf	TCP_FiniteStateMachine@event& (0+255),b
 14715                           
 14716                           ;tcpv4.c: 610: switch (currentTCB->fsmState)
 14717  001112  EFA0  F01C         	goto	l8829
 14718  001116                     l8491:
 14719                           
 14720                           ; BSR set to: 0
 14721                           ;tcpv4.c: 616: ;
 14722                           ;tcpv4.c: 619: currentTCB->destIP = receivedRemoteAddress;
 14723  001116  0E02               	movlw	2
 14724  001118  25FE               	addwf	_currentTCB& (0+255),w,b
 14725  00111A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14726  00111C  0E00               	movlw	0
 14727  00111E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14728  001120  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14729  001122  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14730  001126  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14731  00112A  0E00               	movlw	low (__smallconst shr (0+16))
 14732  00112C  6EF8               	movwf	tblptru,c
 14733  00112E  0E0F               	movlw	(high __ramtop+-1)
 14734  001130  64F7               	cpfsgt	tblptrh,c
 14735  001132  D00D               	bra	u11677
 14736  001134  C196  FFF5         	movff	_receivedRemoteAddress,tablat
 14737  001138  000D               	tblwt		*+
 14738  00113A  C197  FFF5         	movff	_receivedRemoteAddress+1,tablat
 14739  00113E  000D               	tblwt		*+
 14740  001140  C198  FFF5         	movff	_receivedRemoteAddress+2,tablat
 14741  001144  000D               	tblwt		*+
 14742  001146  C199  FFF5         	movff	_receivedRemoteAddress+3,tablat
 14743  00114A  000C               	tblwt		*
 14744  00114C  D00C               	bra	u11670
 14745  00114E                     u11677:
 14746  00114E  CFF6 FFE9          	movff	tblptrl,fsr0l
 14747  001152  CFF7 FFEA          	movff	tblptrh,fsr0h
 14748  001156  C196  FFEE         	movff	_receivedRemoteAddress,postinc0
 14749  00115A  C197  FFEE         	movff	_receivedRemoteAddress+1,postinc0
 14750  00115E  C198  FFEE         	movff	_receivedRemoteAddress+2,postinc0
 14751  001162  C199  FFEF         	movff	_receivedRemoteAddress+3,indf0
 14752  001166                     u11670:
 14753                           
 14754                           ;tcpv4.c: 620: currentTCB->destPort = tcpHeader.sourcePort;
 14755  001166  0E06               	movlw	6
 14756  001168  0100               	movlb	0	; () banked
 14757  00116A  25FE               	addwf	_currentTCB& (0+255),w,b
 14758  00116C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14759  00116E  0E00               	movlw	0
 14760  001170  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14761  001172  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14762  001174  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14763  001178  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14764  00117C  0E00               	movlw	low (__smallconst shr (0+16))
 14765  00117E  6EF8               	movwf	tblptru,c
 14766  001180  0E0F               	movlw	(high __ramtop+-1)
 14767  001182  64F7               	cpfsgt	tblptrh,c
 14768  001184  D007               	bra	u11687
 14769  001186  C1BC  FFF5         	movff	_tcpHeader,tablat
 14770  00118A  000D               	tblwt		*+
 14771  00118C  C1BD  FFF5         	movff	_tcpHeader+1,tablat
 14772  001190  000C               	tblwt		*
 14773  001192  D008               	bra	u11680
 14774  001194                     u11687:
 14775  001194  CFF6 FFE9          	movff	tblptrl,fsr0l
 14776  001198  CFF7 FFEA          	movff	tblptrh,fsr0h
 14777  00119C  C1BC  FFEE         	movff	_tcpHeader,postinc0
 14778  0011A0  C1BD  FFEF         	movff	_tcpHeader+1,indf0
 14779  0011A4                     u11680:
 14780                           
 14781                           ;tcpv4.c: 623: currentTCB->localLastAck = 0;
 14782  0011A4  0E14               	movlw	20
 14783  0011A6  0100               	movlb	0	; () banked
 14784  0011A8  25FE               	addwf	_currentTCB& (0+255),w,b
 14785  0011AA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14786  0011AC  0E00               	movlw	0
 14787  0011AE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14788  0011B0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14789  0011B2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14790  0011B6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14791  0011BA  0E00               	movlw	low (__smallconst shr (0+16))
 14792  0011BC  6EF8               	movwf	tblptru,c
 14793  0011BE  0E0F               	movlw	(high __ramtop+-1)
 14794  0011C0  64F7               	cpfsgt	tblptrh,c
 14795  0011C2  D009               	bra	u11697
 14796  0011C4  6AF5               	clrf	tablat,c
 14797  0011C6  000D               	tblwt		*+
 14798  0011C8  6AF5               	clrf	tablat,c
 14799  0011CA  000D               	tblwt		*+
 14800  0011CC  6AF5               	clrf	tablat,c
 14801  0011CE  000D               	tblwt		*+
 14802  0011D0  6AF5               	clrf	tablat,c
 14803  0011D2  000C               	tblwt		*
 14804  0011D4  D008               	bra	u11690
 14805  0011D6                     u11697:
 14806  0011D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 14807  0011DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 14808  0011DE  6AEE               	clrf	postinc0,c
 14809  0011E0  6AEE               	clrf	postinc0,c
 14810  0011E2  6AEE               	clrf	postinc0,c
 14811  0011E4  6AEF               	clrf	indf0,c
 14812  0011E6                     u11690:
 14813                           
 14814                           ;tcpv4.c: 625: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 14815  0011E6  0E08               	movlw	8
 14816  0011E8  0100               	movlb	0	; () banked
 14817  0011EA  25FE               	addwf	_currentTCB& (0+255),w,b
 14818  0011EC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14819  0011EE  0E00               	movlw	0
 14820  0011F0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14821  0011F2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14822  0011F4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14823  0011F8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14824  0011FC  0E00               	movlw	low (__smallconst shr (0+16))
 14825  0011FE  6EF8               	movwf	tblptru,c
 14826  001200  0E0F               	movlw	(high __ramtop+-1)
 14827  001202  64F7               	cpfsgt	tblptrh,c
 14828  001204  D00D               	bra	u11707
 14829  001206  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 14830  00120A  000D               	tblwt		*+
 14831  00120C  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 14832  001210  000D               	tblwt		*+
 14833  001212  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 14834  001216  000D               	tblwt		*+
 14835  001218  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 14836  00121C  000C               	tblwt		*
 14837  00121E  D00C               	bra	u11700
 14838  001220                     u11707:
 14839  001220  CFF6 FFE9          	movff	tblptrl,fsr0l
 14840  001224  CFF7 FFEA          	movff	tblptrh,fsr0h
 14841  001228  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 14842  00122C  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 14843  001230  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 14844  001234  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 14845  001238                     u11700:
 14846                           
 14847                           ;tcpv4.c: 626: currentTCB->remoteAck = currentTCB->remoteSeqno + 1;
 14848  001238  0E08               	movlw	8
 14849  00123A  0100               	movlb	0	; () banked
 14850  00123C  25FE               	addwf	_currentTCB& (0+255),w,b
 14851  00123E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14852  001240  0E00               	movlw	0
 14853  001242  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14854  001244  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14855  001246  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14856  00124A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14857  00124E  0E00               	movlw	low (__smallconst shr (0+16))
 14858  001250  6EF8               	movwf	tblptru,c
 14859  001252  0E0F               	movlw	(high __ramtop+-1)
 14860  001254  64F7               	cpfsgt	tblptrh,c
 14861  001256  D00D               	bra	u11717
 14862  001258  0009               	tblrd		*+
 14863  00125A  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 14864  00125E  0009               	tblrd		*+
 14865  001260  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 14866  001264  0009               	tblrd		*+
 14867  001266  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 14868  00126A  0009               	tblrd		*+
 14869  00126C  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 14870  001270  D00C               	bra	u11710
 14871  001272                     u11717:
 14872  001272  CFF6 FFE9          	movff	tblptrl,fsr0l
 14873  001276  CFF7 FFEA          	movff	tblptrh,fsr0h
 14874  00127A  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 14875  00127E  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 14876  001282  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 14877  001286  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 14878  00128A                     u11710:
 14879  00128A  0E01               	movlw	1
 14880  00128C  0100               	movlb	0	; () banked
 14881  00128E  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 14882  001290  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 14883  001292  0E00               	movlw	0
 14884  001294  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 14885  001296  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 14886  001298  0E00               	movlw	0
 14887  00129A  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 14888  00129C  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 14889  00129E  0E00               	movlw	0
 14890  0012A0  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 14891  0012A2  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 14892  0012A4  0E0C               	movlw	12
 14893  0012A6  25FE               	addwf	_currentTCB& (0+255),w,b
 14894  0012A8  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 14895  0012AA  0E00               	movlw	0
 14896  0012AC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14897  0012AE  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 14898  0012B0  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 14899  0012B4  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 14900  0012B8  0E00               	movlw	low (__smallconst shr (0+16))
 14901  0012BA  6EF8               	movwf	tblptru,c
 14902  0012BC  0E0F               	movlw	(high __ramtop+-1)
 14903  0012BE  64F7               	cpfsgt	tblptrh,c
 14904  0012C0  D00D               	bra	u11727
 14905  0012C2  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 14906  0012C6  000D               	tblwt		*+
 14907  0012C8  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 14908  0012CC  000D               	tblwt		*+
 14909  0012CE  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 14910  0012D2  000D               	tblwt		*+
 14911  0012D4  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 14912  0012D8  000C               	tblwt		*
 14913  0012DA  D00C               	bra	u11720
 14914  0012DC                     u11727:
 14915  0012DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 14916  0012E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 14917  0012E4  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 14918  0012E8  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 14919  0012EC  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 14920  0012F0  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 14921  0012F4                     u11720:
 14922                           
 14923                           ;tcpv4.c: 629: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 14924  0012F4  0101               	movlb	1	; () banked
 14925  0012F6  51CA               	movf	(_tcpHeader+14)& (0+255),w,b
 14926  0012F8  0100               	movlb	0	; () banked
 14927  0012FA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14928  0012FC  6BC3               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 14929  0012FE  EE21  F0CA         	lfsr	2,_tcpHeader+14
 14930  001302  CFDE F0C5          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14931  001306  CFDD F0C6          	movff	postdec2,??_TCP_FiniteStateMachine+3
 14932  00130A  C0C6  F0C5         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 14933  00130E  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 14934  001310  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 14935  001312  51C3               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 14936  001314  13C5               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 14937  001316  51C4               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14938  001318  13C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 14939  00131A  0E18               	movlw	24
 14940  00131C  25FE               	addwf	_currentTCB& (0+255),w,b
 14941  00131E  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 14942  001320  0E00               	movlw	0
 14943  001322  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14944  001324  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 14945  001326  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 14946  00132A  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 14947  00132E  0E00               	movlw	low (__smallconst shr (0+16))
 14948  001330  6EF8               	movwf	tblptru,c
 14949  001332  0E0F               	movlw	(high __ramtop+-1)
 14950  001334  64F7               	cpfsgt	tblptrh,c
 14951  001336  D007               	bra	u11737
 14952  001338  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 14953  00133C  000D               	tblwt		*+
 14954  00133E  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 14955  001342  000C               	tblwt		*
 14956  001344  D008               	bra	u11730
 14957  001346                     u11737:
 14958  001346  CFF6 FFE9          	movff	tblptrl,fsr0l
 14959  00134A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14960  00134E  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 14961  001352  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 14962  001356                     u11730:
 14963                           
 14964                           ;tcpv4.c: 630: currentTCB->mss = tcpMss;
 14965  001356  0E1C               	movlw	28
 14966  001358  0100               	movlb	0	; () banked
 14967  00135A  25FE               	addwf	_currentTCB& (0+255),w,b
 14968  00135C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14969  00135E  0E00               	movlw	0
 14970  001360  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14971  001362  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14972  001364  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14973  001368  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14974  00136C  0E00               	movlw	low (__smallconst shr (0+16))
 14975  00136E  6EF8               	movwf	tblptru,c
 14976  001370  0E0F               	movlw	(high __ramtop+-1)
 14977  001372  64F7               	cpfsgt	tblptrh,c
 14978  001374  D007               	bra	u11747
 14979  001376  C1A4  FFF5         	movff	_tcpMss,tablat
 14980  00137A  000D               	tblwt		*+
 14981  00137C  C1A5  FFF5         	movff	_tcpMss+1,tablat
 14982  001380  000C               	tblwt		*
 14983  001382  D008               	bra	u11740
 14984  001384                     u11747:
 14985  001384  CFF6 FFE9          	movff	tblptrl,fsr0l
 14986  001388  CFF7 FFEA          	movff	tblptrh,fsr0h
 14987  00138C  C1A4  FFEE         	movff	_tcpMss,postinc0
 14988  001390  C1A5  FFEF         	movff	_tcpMss+1,indf0
 14989  001394                     u11740:
 14990                           
 14991                           ;tcpv4.c: 633: currentTCB->flags = 0x02U | 0x10U;
 14992  001394  0E35               	movlw	53
 14993  001396  0100               	movlb	0	; () banked
 14994  001398  25FE               	addwf	_currentTCB& (0+255),w,b
 14995  00139A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14996  00139C  0E00               	movlw	0
 14997  00139E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14998  0013A0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14999  0013A2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15000  0013A6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15001  0013AA  0E00               	movlw	low (__smallconst shr (0+16))
 15002  0013AC  6EF8               	movwf	tblptru,c
 15003  0013AE  0E0F               	movlw	(high __ramtop+-1)
 15004  0013B0  64F7               	cpfsgt	tblptrh,c
 15005  0013B2  D004               	bra	u11757
 15006  0013B4  0E12               	movlw	18
 15007  0013B6  6EF5               	movwf	tablat,c
 15008  0013B8  000C               	tblwt		*
 15009  0013BA  D006               	bra	u11750
 15010  0013BC                     u11757:
 15011  0013BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 15012  0013C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15013  0013C4  0E12               	movlw	18
 15014  0013C6  6EEF               	movwf	indf0,c
 15015  0013C8                     u11750:
 15016                           
 15017                           ;tcpv4.c: 634: currentTCB->timeout = ((unsigned long)1*2);
 15018  0013C8  0E30               	movlw	48
 15019  0013CA  0100               	movlb	0	; () banked
 15020  0013CC  25FE               	addwf	_currentTCB& (0+255),w,b
 15021  0013CE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15022  0013D0  0E00               	movlw	0
 15023  0013D2  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15024  0013D4  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15025  0013D6  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15026  0013DA  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15027  0013DE  0E00               	movlw	low (__smallconst shr (0+16))
 15028  0013E0  6EF8               	movwf	tblptru,c
 15029  0013E2  0E0F               	movlw	(high __ramtop+-1)
 15030  0013E4  64F7               	cpfsgt	tblptrh,c
 15031  0013E6  D006               	bra	u11767
 15032  0013E8  0E02               	movlw	2
 15033  0013EA  6EF5               	movwf	tablat,c
 15034  0013EC  000D               	tblwt		*+
 15035  0013EE  6AF5               	clrf	tablat,c
 15036  0013F0  000C               	tblwt		*
 15037  0013F2  D007               	bra	u11760
 15038  0013F4                     u11767:
 15039  0013F4  CFF6 FFE9          	movff	tblptrl,fsr0l
 15040  0013F8  CFF7 FFEA          	movff	tblptrh,fsr0h
 15041  0013FC  0E02               	movlw	2
 15042  0013FE  6EEE               	movwf	postinc0,c
 15043  001400  6AEF               	clrf	indf0,c
 15044  001402                     u11760:
 15045                           
 15046                           ;tcpv4.c: 635: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 15047  001402  0E32               	movlw	50
 15048  001404  0100               	movlb	0	; () banked
 15049  001406  25FE               	addwf	_currentTCB& (0+255),w,b
 15050  001408  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15051  00140A  0E00               	movlw	0
 15052  00140C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15053  00140E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15054  001410  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15055  001414  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15056  001418  0E00               	movlw	low (__smallconst shr (0+16))
 15057  00141A  6EF8               	movwf	tblptru,c
 15058  00141C  0E0F               	movlw	(high __ramtop+-1)
 15059  00141E  64F7               	cpfsgt	tblptrh,c
 15060  001420  D006               	bra	u11777
 15061  001422  0E02               	movlw	2
 15062  001424  6EF5               	movwf	tablat,c
 15063  001426  000D               	tblwt		*+
 15064  001428  6AF5               	clrf	tablat,c
 15065  00142A  000C               	tblwt		*
 15066  00142C  D007               	bra	u11770
 15067  00142E                     u11777:
 15068  00142E  CFF6 FFE9          	movff	tblptrl,fsr0l
 15069  001432  CFF7 FFEA          	movff	tblptrh,fsr0h
 15070  001436  0E02               	movlw	2
 15071  001438  6EEE               	movwf	postinc0,c
 15072  00143A  6AEF               	clrf	indf0,c
 15073  00143C                     u11770:
 15074                           
 15075                           ;tcpv4.c: 636: currentTCB->timeoutsCount = (3u);
 15076  00143C  0E34               	movlw	52
 15077  00143E  0100               	movlb	0	; () banked
 15078  001440  25FE               	addwf	_currentTCB& (0+255),w,b
 15079  001442  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15080  001444  0E00               	movlw	0
 15081  001446  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15082  001448  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15083  00144A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15084  00144E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15085  001452  0E00               	movlw	low (__smallconst shr (0+16))
 15086  001454  6EF8               	movwf	tblptru,c
 15087  001456  0E0F               	movlw	(high __ramtop+-1)
 15088  001458  64F7               	cpfsgt	tblptrh,c
 15089  00145A  D004               	bra	u11787
 15090  00145C  0E03               	movlw	3
 15091  00145E  6EF5               	movwf	tablat,c
 15092  001460  000C               	tblwt		*
 15093  001462  D006               	bra	u11780
 15094  001464                     u11787:
 15095  001464  CFF6 FFE9          	movff	tblptrl,fsr0l
 15096  001468  CFF7 FFEA          	movff	tblptrh,fsr0h
 15097  00146C  0E03               	movlw	3
 15098  00146E  6EEF               	movwf	indf0,c
 15099  001470                     u11780:
 15100  001470                     l8505:
 15101                           
 15102                           ;tcpv4.c: 638: TCP_Snd(currentTCB);
 15103  001470  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 15104  001474  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15105  001478  EC11  F01D         	call	_TCP_Snd	;wreg free
 15106                           
 15107                           ; BSR set to: 0
 15108                           ;tcpv4.c: 639: nextState = SYN_RECEIVED;
 15109  00147C  0E03               	movlw	3
 15110  00147E  EF97  F01A         	goto	L14
 15111  001482                     l1293:
 15112                           
 15113                           ;tcpv4.c: 642: ;
 15114                           ;tcpv4.c: 643: nextState = CLOSE;
 15115  001482  0100               	movlb	0	; () banked
 15116  001484  6BD3               	clrf	TCP_FiniteStateMachine@nextState& (0+255),b
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;tcpv4.c: 644: TCB_Reset(currentTCB);
 15120  001486  C0FE  F002         	movff	_currentTCB,TCB_Reset@tcbPtr
 15121  00148A  C0FF  F003         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 15122  00148E  ECE2  F02E         	call	_TCB_Reset	;wreg free
 15123                           
 15124                           ;tcpv4.c: 645: break;
 15125  001492  EFDA  F01C         	goto	l8831
 15126  001496                     l8513:
 15127  001496  0100               	movlb	0	; () banked
 15128  001498  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 15129                           
 15130                           ; Switch size 1, requested type "speed"
 15131                           ; Number of cases is 2, Range of values is 0 to 3
 15132                           ; switch strategies available:
 15133                           ; Name         Instructions Cycles
 15134                           ; simple_byte            7     4 (average)
 15135                           ;	Chosen strategy is simple_byte
 15136  00149A  E0F3               	bz	l1293
 15137  00149C  0A03               	xorlw	3	; case 3
 15138  00149E  E101 D63A          	bz	l8491
 15139                           
 15140                           ;tcpv4.c: 650: break;
 15141  0014A2  EFDA  F01C         	goto	l8831
 15142  0014A6                     l8515:
 15143                           
 15144                           ; BSR set to: 0
 15145                           ;tcpv4.c: 655: ;
 15146                           ;tcpv4.c: 657: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 15147  0014A6  0E08               	movlw	8
 15148  0014A8  25FE               	addwf	_currentTCB& (0+255),w,b
 15149  0014AA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15150  0014AC  0E00               	movlw	0
 15151  0014AE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15152  0014B0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15153  0014B2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15154  0014B6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15155  0014BA  0E00               	movlw	low (__smallconst shr (0+16))
 15156  0014BC  6EF8               	movwf	tblptru,c
 15157  0014BE  0E0F               	movlw	(high __ramtop+-1)
 15158  0014C0  64F7               	cpfsgt	tblptrh,c
 15159  0014C2  D00D               	bra	u11797
 15160  0014C4  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 15161  0014C8  000D               	tblwt		*+
 15162  0014CA  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 15163  0014CE  000D               	tblwt		*+
 15164  0014D0  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 15165  0014D4  000D               	tblwt		*+
 15166  0014D6  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 15167  0014DA  000C               	tblwt		*
 15168  0014DC  D00C               	bra	u11790
 15169  0014DE                     u11797:
 15170  0014DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15171  0014E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 15172  0014E6  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 15173  0014EA  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 15174  0014EE  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 15175  0014F2  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 15176  0014F6                     u11790:
 15177                           
 15178                           ;tcpv4.c: 658: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 15179  0014F6  0E01               	movlw	1
 15180  0014F8  0101               	movlb	1	; () banked
 15181  0014FA  25C0               	addwf	(_tcpHeader+4)& (0+255),w,b
 15182  0014FC  0100               	movlb	0	; () banked
 15183  0014FE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15184  001500  0E00               	movlw	0
 15185  001502  0101               	movlb	1	; () banked
 15186  001504  21C1               	addwfc	(_tcpHeader+5)& (0+255),w,b
 15187  001506  0100               	movlb	0	; () banked
 15188  001508  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15189  00150A  0E00               	movlw	0
 15190  00150C  0101               	movlb	1	; () banked
 15191  00150E  21C2               	addwfc	(_tcpHeader+6)& (0+255),w,b
 15192  001510  0100               	movlb	0	; () banked
 15193  001512  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 15194  001514  0E00               	movlw	0
 15195  001516  0101               	movlb	1	; () banked
 15196  001518  21C3               	addwfc	(_tcpHeader+7)& (0+255),w,b
 15197  00151A  0100               	movlb	0	; () banked
 15198  00151C  6FC6               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15199  00151E  0E0C               	movlw	12
 15200  001520  25FE               	addwf	_currentTCB& (0+255),w,b
 15201  001522  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 15202  001524  0E00               	movlw	0
 15203  001526  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15204  001528  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 15205  00152A  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 15206  00152E  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 15207  001532  0E00               	movlw	low (__smallconst shr (0+16))
 15208  001534  6EF8               	movwf	tblptru,c
 15209  001536  0E0F               	movlw	(high __ramtop+-1)
 15210  001538  64F7               	cpfsgt	tblptrh,c
 15211  00153A  D00D               	bra	u11807
 15212  00153C  C0C3  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 15213  001540  000D               	tblwt		*+
 15214  001542  C0C4  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 15215  001546  000D               	tblwt		*+
 15216  001548  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 15217  00154C  000D               	tblwt		*+
 15218  00154E  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 15219  001552  000C               	tblwt		*
 15220  001554  D00C               	bra	u11800
 15221  001556                     u11807:
 15222  001556  CFF6 FFE9          	movff	tblptrl,fsr0l
 15223  00155A  CFF7 FFEA          	movff	tblptrh,fsr0h
 15224  00155E  C0C3  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 15225  001562  C0C4  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 15226  001566  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 15227  00156A  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 15228  00156E                     u11800:
 15229                           
 15230                           ;tcpv4.c: 661: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 15231  00156E  0101               	movlb	1	; () banked
 15232  001570  51CA               	movf	(_tcpHeader+14)& (0+255),w,b
 15233  001572  0100               	movlb	0	; () banked
 15234  001574  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15235  001576  6BC3               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 15236  001578  EE21  F0CA         	lfsr	2,_tcpHeader+14
 15237  00157C  CFDE F0C5          	movff	postinc2,??_TCP_FiniteStateMachine+2
 15238  001580  CFDD F0C6          	movff	postdec2,??_TCP_FiniteStateMachine+3
 15239  001584  C0C6  F0C5         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 15240  001588  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15241  00158A  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15242  00158C  51C3               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 15243  00158E  13C5               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 15244  001590  51C4               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 15245  001592  13C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 15246  001594  0E18               	movlw	24
 15247  001596  25FE               	addwf	_currentTCB& (0+255),w,b
 15248  001598  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 15249  00159A  0E00               	movlw	0
 15250  00159C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15251  00159E  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 15252  0015A0  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 15253  0015A4  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 15254  0015A8  0E00               	movlw	low (__smallconst shr (0+16))
 15255  0015AA  6EF8               	movwf	tblptru,c
 15256  0015AC  0E0F               	movlw	(high __ramtop+-1)
 15257  0015AE  64F7               	cpfsgt	tblptrh,c
 15258  0015B0  D007               	bra	u11817
 15259  0015B2  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 15260  0015B6  000D               	tblwt		*+
 15261  0015B8  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 15262  0015BC  000C               	tblwt		*
 15263  0015BE  D008               	bra	u11810
 15264  0015C0                     u11817:
 15265  0015C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 15266  0015C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 15267  0015C8  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 15268  0015CC  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 15269  0015D0                     u11810:
 15270                           
 15271                           ;tcpv4.c: 662: currentTCB->mss = tcpMss;
 15272  0015D0  0E1C               	movlw	28
 15273  0015D2  0100               	movlb	0	; () banked
 15274  0015D4  25FE               	addwf	_currentTCB& (0+255),w,b
 15275  0015D6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15276  0015D8  0E00               	movlw	0
 15277  0015DA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15278  0015DC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15279  0015DE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15280  0015E2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15281  0015E6  0E00               	movlw	low (__smallconst shr (0+16))
 15282  0015E8  6EF8               	movwf	tblptru,c
 15283  0015EA  0E0F               	movlw	(high __ramtop+-1)
 15284  0015EC  64F7               	cpfsgt	tblptrh,c
 15285  0015EE  D007               	bra	u11827
 15286  0015F0  C1A4  FFF5         	movff	_tcpMss,tablat
 15287  0015F4  000D               	tblwt		*+
 15288  0015F6  C1A5  FFF5         	movff	_tcpMss+1,tablat
 15289  0015FA  000C               	tblwt		*
 15290  0015FC  D008               	bra	u11820
 15291  0015FE                     u11827:
 15292  0015FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15293  001602  CFF7 FFEA          	movff	tblptrh,fsr0h
 15294  001606  C1A4  FFEE         	movff	_tcpMss,postinc0
 15295  00160A  C1A5  FFEF         	movff	_tcpMss+1,indf0
 15296  00160E                     u11820:
 15297                           
 15298                           ;tcpv4.c: 665: currentTCB->timeout = ((unsigned long)1*2);
 15299  00160E  0E30               	movlw	48
 15300  001610  0100               	movlb	0	; () banked
 15301  001612  25FE               	addwf	_currentTCB& (0+255),w,b
 15302  001614  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15303  001616  0E00               	movlw	0
 15304  001618  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15305  00161A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15306  00161C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15307  001620  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15308  001624  0E00               	movlw	low (__smallconst shr (0+16))
 15309  001626  6EF8               	movwf	tblptru,c
 15310  001628  0E0F               	movlw	(high __ramtop+-1)
 15311  00162A  64F7               	cpfsgt	tblptrh,c
 15312  00162C  D006               	bra	u11837
 15313  00162E  0E02               	movlw	2
 15314  001630  6EF5               	movwf	tablat,c
 15315  001632  000D               	tblwt		*+
 15316  001634  6AF5               	clrf	tablat,c
 15317  001636  000C               	tblwt		*
 15318  001638  D007               	bra	u11830
 15319  00163A                     u11837:
 15320  00163A  CFF6 FFE9          	movff	tblptrl,fsr0l
 15321  00163E  CFF7 FFEA          	movff	tblptrh,fsr0h
 15322  001642  0E02               	movlw	2
 15323  001644  6EEE               	movwf	postinc0,c
 15324  001646  6AEF               	clrf	indf0,c
 15325  001648                     u11830:
 15326                           
 15327                           ;tcpv4.c: 666: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 15328  001648  0E32               	movlw	50
 15329  00164A  0100               	movlb	0	; () banked
 15330  00164C  25FE               	addwf	_currentTCB& (0+255),w,b
 15331  00164E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15332  001650  0E00               	movlw	0
 15333  001652  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15334  001654  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15335  001656  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15336  00165A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15337  00165E  0E00               	movlw	low (__smallconst shr (0+16))
 15338  001660  6EF8               	movwf	tblptru,c
 15339  001662  0E0F               	movlw	(high __ramtop+-1)
 15340  001664  64F7               	cpfsgt	tblptrh,c
 15341  001666  D006               	bra	u11847
 15342  001668  0E02               	movlw	2
 15343  00166A  6EF5               	movwf	tablat,c
 15344  00166C  000D               	tblwt		*+
 15345  00166E  6AF5               	clrf	tablat,c
 15346  001670  000C               	tblwt		*
 15347  001672  D007               	bra	u11840
 15348  001674                     u11847:
 15349  001674  CFF6 FFE9          	movff	tblptrl,fsr0l
 15350  001678  CFF7 FFEA          	movff	tblptrh,fsr0h
 15351  00167C  0E02               	movlw	2
 15352  00167E  6EEE               	movwf	postinc0,c
 15353  001680  6AEF               	clrf	indf0,c
 15354  001682                     u11840:
 15355                           
 15356                           ;tcpv4.c: 667: currentTCB->timeoutsCount = (3u);
 15357  001682  0E34               	movlw	52
 15358  001684  0100               	movlb	0	; () banked
 15359  001686  25FE               	addwf	_currentTCB& (0+255),w,b
 15360  001688  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15361  00168A  0E00               	movlw	0
 15362  00168C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15363  00168E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15364  001690  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15365  001694  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15366  001698  0E00               	movlw	low (__smallconst shr (0+16))
 15367  00169A  6EF8               	movwf	tblptru,c
 15368  00169C  0E0F               	movlw	(high __ramtop+-1)
 15369  00169E  64F7               	cpfsgt	tblptrh,c
 15370  0016A0  D004               	bra	u11857
 15371  0016A2  0E03               	movlw	3
 15372  0016A4  6EF5               	movwf	tablat,c
 15373  0016A6  000C               	tblwt		*
 15374  0016A8  D006               	bra	u11850
 15375  0016AA                     u11857:
 15376  0016AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 15377  0016AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 15378  0016B2  0E03               	movlw	3
 15379  0016B4  6EEF               	movwf	indf0,c
 15380  0016B6                     u11850:
 15381                           
 15382                           ;tcpv4.c: 668: currentTCB->flags = 0x02U | 0x10U;
 15383  0016B6  0E35               	movlw	53
 15384  0016B8  0100               	movlb	0	; () banked
 15385  0016BA  25FE               	addwf	_currentTCB& (0+255),w,b
 15386  0016BC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15387  0016BE  0E00               	movlw	0
 15388  0016C0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15389  0016C2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15390  0016C4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15391  0016C8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15392  0016CC  0E00               	movlw	low (__smallconst shr (0+16))
 15393  0016CE  6EF8               	movwf	tblptru,c
 15394  0016D0  0E0F               	movlw	(high __ramtop+-1)
 15395  0016D2  64F7               	cpfsgt	tblptrh,c
 15396  0016D4  D004               	bra	u11867
 15397  0016D6  0E12               	movlw	18
 15398  0016D8  6EF5               	movwf	tablat,c
 15399  0016DA  000C               	tblwt		*
 15400  0016DC  D006               	bra	u11860
 15401  0016DE                     u11867:
 15402  0016DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15403  0016E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 15404  0016E6  0E12               	movlw	18
 15405  0016E8  6EEF               	movwf	indf0,c
 15406  0016EA                     u11860:
 15407  0016EA  D6C2               	goto	l8505
 15408  0016EC                     l8533:
 15409                           
 15410                           ; BSR set to: 0
 15411                           ;tcpv4.c: 676: ;
 15412                           ;tcpv4.c: 678: currentTCB->timeout = 0;
 15413  0016EC  0E30               	movlw	48
 15414  0016EE  25FE               	addwf	_currentTCB& (0+255),w,b
 15415  0016F0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15416  0016F2  0E00               	movlw	0
 15417  0016F4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15418  0016F6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15419  0016F8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15420  0016FC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15421  001700  0E00               	movlw	low (__smallconst shr (0+16))
 15422  001702  6EF8               	movwf	tblptru,c
 15423  001704  0E0F               	movlw	(high __ramtop+-1)
 15424  001706  64F7               	cpfsgt	tblptrh,c
 15425  001708  D005               	bra	u11877
 15426  00170A  6AF5               	clrf	tablat,c
 15427  00170C  000D               	tblwt		*+
 15428  00170E  6AF5               	clrf	tablat,c
 15429  001710  000C               	tblwt		*
 15430  001712  D006               	bra	u11870
 15431  001714                     u11877:
 15432  001714  CFF6 FFE9          	movff	tblptrl,fsr0l
 15433  001718  CFF7 FFEA          	movff	tblptrh,fsr0h
 15434  00171C  6AEE               	clrf	postinc0,c
 15435  00171E  6AEF               	clrf	indf0,c
 15436  001720                     u11870:
 15437                           
 15438                           ;tcpv4.c: 680: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 15439  001720  0E10               	movlw	16
 15440  001722  0100               	movlb	0	; () banked
 15441  001724  25FE               	addwf	_currentTCB& (0+255),w,b
 15442  001726  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15443  001728  0E00               	movlw	0
 15444  00172A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15445  00172C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15446  00172E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15447  001732  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15448  001736  0E00               	movlw	low (__smallconst shr (0+16))
 15449  001738  6EF8               	movwf	tblptru,c
 15450  00173A  0E0F               	movlw	(high __ramtop+-1)
 15451  00173C  64F7               	cpfsgt	tblptrh,c
 15452  00173E  D00D               	bra	u11887
 15453  001740  0009               	tblrd		*+
 15454  001742  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 15455  001746  0009               	tblrd		*+
 15456  001748  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 15457  00174C  0009               	tblrd		*+
 15458  00174E  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 15459  001752  0009               	tblrd		*+
 15460  001754  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 15461  001758  D00C               	bra	u11880
 15462  00175A                     u11887:
 15463  00175A  CFF6 FFE9          	movff	tblptrl,fsr0l
 15464  00175E  CFF7 FFEA          	movff	tblptrh,fsr0h
 15465  001762  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 15466  001766  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 15467  00176A  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 15468  00176E  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 15469  001772                     u11880:
 15470  001772  0E01               	movlw	1
 15471  001774  0100               	movlb	0	; () banked
 15472  001776  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 15473  001778  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 15474  00177A  0E00               	movlw	0
 15475  00177C  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 15476  00177E  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 15477  001780  0E00               	movlw	0
 15478  001782  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 15479  001784  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 15480  001786  0E00               	movlw	0
 15481  001788  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 15482  00178A  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 15483  00178C  0101               	movlb	1	; () banked
 15484  00178E  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 15485  001790  0100               	movlb	0	; () banked
 15486  001792  19C9               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 15487  001794  E10F               	bnz	u11891
 15488  001796  0101               	movlb	1	; () banked
 15489  001798  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 15490  00179A  0100               	movlb	0	; () banked
 15491  00179C  19CA               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 15492  00179E  E10A               	bnz	u11891
 15493  0017A0  0101               	movlb	1	; () banked
 15494  0017A2  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 15495  0017A4  0100               	movlb	0	; () banked
 15496  0017A6  19CB               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 15497  0017A8  E105               	bnz	u11891
 15498  0017AA  0101               	movlb	1	; () banked
 15499  0017AC  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 15500  0017AE  0100               	movlb	0	; () banked
 15501  0017B0  19CC               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 15502  0017B2  A4D8               	btfss	status,2,c
 15503  0017B4                     u11891:
 15504  0017B4  D14F               	goto	l8547
 15505                           
 15506                           ; BSR set to: 0
 15507                           ;tcpv4.c: 681: {
 15508                           ;tcpv4.c: 683: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 15509  0017B6  0E10               	movlw	16
 15510  0017B8  25FE               	addwf	_currentTCB& (0+255),w,b
 15511  0017BA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15512  0017BC  0E00               	movlw	0
 15513  0017BE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15514  0017C0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15515  0017C2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15516  0017C6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15517  0017CA  0E00               	movlw	low (__smallconst shr (0+16))
 15518  0017CC  6EF8               	movwf	tblptru,c
 15519  0017CE  0E0F               	movlw	(high __ramtop+-1)
 15520  0017D0  64F7               	cpfsgt	tblptrh,c
 15521  0017D2  D00D               	bra	u11907
 15522  0017D4  0009               	tblrd		*+
 15523  0017D6  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 15524  0017DA  0009               	tblrd		*+
 15525  0017DC  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 15526  0017E0  0009               	tblrd		*+
 15527  0017E2  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 15528  0017E6  0009               	tblrd		*+
 15529  0017E8  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 15530  0017EC  D00C               	bra	u11900
 15531  0017EE                     u11907:
 15532  0017EE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15533  0017F2  CFF7 FFEA          	movff	tblptrh,fsr0h
 15534  0017F6  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 15535  0017FA  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 15536  0017FE  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 15537  001802  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 15538  001806                     u11900:
 15539  001806  0E01               	movlw	1
 15540  001808  0100               	movlb	0	; () banked
 15541  00180A  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 15542  00180C  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 15543  00180E  0E00               	movlw	0
 15544  001810  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 15545  001812  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 15546  001814  0E00               	movlw	0
 15547  001816  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 15548  001818  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 15549  00181A  0E00               	movlw	0
 15550  00181C  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 15551  00181E  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 15552  001820  0E10               	movlw	16
 15553  001822  25FE               	addwf	_currentTCB& (0+255),w,b
 15554  001824  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 15555  001826  0E00               	movlw	0
 15556  001828  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15557  00182A  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 15558  00182C  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 15559  001830  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 15560  001834  0E00               	movlw	low (__smallconst shr (0+16))
 15561  001836  6EF8               	movwf	tblptru,c
 15562  001838  0E0F               	movlw	(high __ramtop+-1)
 15563  00183A  64F7               	cpfsgt	tblptrh,c
 15564  00183C  D00D               	bra	u11917
 15565  00183E  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 15566  001842  000D               	tblwt		*+
 15567  001844  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 15568  001848  000D               	tblwt		*+
 15569  00184A  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 15570  00184E  000D               	tblwt		*+
 15571  001850  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 15572  001854  000C               	tblwt		*
 15573  001856  D00C               	bra	u11910
 15574  001858                     u11917:
 15575  001858  CFF6 FFE9          	movff	tblptrl,fsr0l
 15576  00185C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15577  001860  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 15578  001864  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 15579  001868  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 15580  00186C  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 15581  001870                     u11910:
 15582                           
 15583                           ;tcpv4.c: 684: currentTCB->flags = 0x10U;
 15584  001870  0E35               	movlw	53
 15585  001872  0100               	movlb	0	; () banked
 15586  001874  25FE               	addwf	_currentTCB& (0+255),w,b
 15587  001876  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15588  001878  0E00               	movlw	0
 15589  00187A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15590  00187C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15591  00187E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15592  001882  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15593  001886  0E00               	movlw	low (__smallconst shr (0+16))
 15594  001888  6EF8               	movwf	tblptru,c
 15595  00188A  0E0F               	movlw	(high __ramtop+-1)
 15596  00188C  64F7               	cpfsgt	tblptrh,c
 15597  00188E  D004               	bra	u11927
 15598  001890  0E10               	movlw	16
 15599  001892  6EF5               	movwf	tablat,c
 15600  001894  000C               	tblwt		*
 15601  001896  D006               	bra	u11920
 15602  001898                     u11927:
 15603  001898  CFF6 FFE9          	movff	tblptrl,fsr0l
 15604  00189C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15605  0018A0  0E10               	movlw	16
 15606  0018A2  6EEF               	movwf	indf0,c
 15607  0018A4                     u11920:
 15608                           
 15609                           ;tcpv4.c: 687: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 15610  0018A4  0E08               	movlw	8
 15611  0018A6  0100               	movlb	0	; () banked
 15612  0018A8  25FE               	addwf	_currentTCB& (0+255),w,b
 15613  0018AA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15614  0018AC  0E00               	movlw	0
 15615  0018AE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15616  0018B0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15617  0018B2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15618  0018B6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15619  0018BA  0E00               	movlw	low (__smallconst shr (0+16))
 15620  0018BC  6EF8               	movwf	tblptru,c
 15621  0018BE  0E0F               	movlw	(high __ramtop+-1)
 15622  0018C0  64F7               	cpfsgt	tblptrh,c
 15623  0018C2  D00D               	bra	u11937
 15624  0018C4  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 15625  0018C8  000D               	tblwt		*+
 15626  0018CA  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 15627  0018CE  000D               	tblwt		*+
 15628  0018D0  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 15629  0018D4  000D               	tblwt		*+
 15630  0018D6  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 15631  0018DA  000C               	tblwt		*
 15632  0018DC  D00C               	bra	u11930
 15633  0018DE                     u11937:
 15634  0018DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15635  0018E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 15636  0018E6  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 15637  0018EA  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 15638  0018EE  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 15639  0018F2  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 15640  0018F6                     u11930:
 15641                           
 15642                           ;tcpv4.c: 689: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 15643  0018F6  0E01               	movlw	1
 15644  0018F8  0101               	movlb	1	; () banked
 15645  0018FA  25C0               	addwf	(_tcpHeader+4)& (0+255),w,b
 15646  0018FC  0100               	movlb	0	; () banked
 15647  0018FE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15648  001900  0E00               	movlw	0
 15649  001902  0101               	movlb	1	; () banked
 15650  001904  21C1               	addwfc	(_tcpHeader+5)& (0+255),w,b
 15651  001906  0100               	movlb	0	; () banked
 15652  001908  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15653  00190A  0E00               	movlw	0
 15654  00190C  0101               	movlb	1	; () banked
 15655  00190E  21C2               	addwfc	(_tcpHeader+6)& (0+255),w,b
 15656  001910  0100               	movlb	0	; () banked
 15657  001912  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 15658  001914  0E00               	movlw	0
 15659  001916  0101               	movlb	1	; () banked
 15660  001918  21C3               	addwfc	(_tcpHeader+7)& (0+255),w,b
 15661  00191A  0100               	movlb	0	; () banked
 15662  00191C  6FC6               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15663  00191E  0E0C               	movlw	12
 15664  001920  25FE               	addwf	_currentTCB& (0+255),w,b
 15665  001922  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 15666  001924  0E00               	movlw	0
 15667  001926  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15668  001928  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 15669  00192A  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 15670  00192E  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 15671  001932  0E00               	movlw	low (__smallconst shr (0+16))
 15672  001934  6EF8               	movwf	tblptru,c
 15673  001936  0E0F               	movlw	(high __ramtop+-1)
 15674  001938  64F7               	cpfsgt	tblptrh,c
 15675  00193A  D00D               	bra	u11947
 15676  00193C  C0C3  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 15677  001940  000D               	tblwt		*+
 15678  001942  C0C4  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 15679  001946  000D               	tblwt		*+
 15680  001948  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 15681  00194C  000D               	tblwt		*+
 15682  00194E  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 15683  001952  000C               	tblwt		*
 15684  001954  D00C               	bra	u11940
 15685  001956                     u11947:
 15686  001956  CFF6 FFE9          	movff	tblptrl,fsr0l
 15687  00195A  CFF7 FFEA          	movff	tblptrh,fsr0h
 15688  00195E  C0C3  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 15689  001962  C0C4  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 15690  001966  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 15691  00196A  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 15692  00196E                     u11940:
 15693                           
 15694                           ;tcpv4.c: 691: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 15695  00196E  0101               	movlb	1	; () banked
 15696  001970  51CA               	movf	(_tcpHeader+14)& (0+255),w,b
 15697  001972  0100               	movlb	0	; () banked
 15698  001974  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15699  001976  6BC3               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 15700  001978  EE21  F0CA         	lfsr	2,_tcpHeader+14
 15701  00197C  CFDE F0C5          	movff	postinc2,??_TCP_FiniteStateMachine+2
 15702  001980  CFDD F0C6          	movff	postdec2,??_TCP_FiniteStateMachine+3
 15703  001984  C0C6  F0C5         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 15704  001988  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15705  00198A  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15706  00198C  51C3               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 15707  00198E  13C5               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 15708  001990  51C4               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 15709  001992  13C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 15710  001994  0E18               	movlw	24
 15711  001996  25FE               	addwf	_currentTCB& (0+255),w,b
 15712  001998  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 15713  00199A  0E00               	movlw	0
 15714  00199C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15715  00199E  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 15716  0019A0  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 15717  0019A4  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 15718  0019A8  0E00               	movlw	low (__smallconst shr (0+16))
 15719  0019AA  6EF8               	movwf	tblptru,c
 15720  0019AC  0E0F               	movlw	(high __ramtop+-1)
 15721  0019AE  64F7               	cpfsgt	tblptrh,c
 15722  0019B0  D007               	bra	u11957
 15723  0019B2  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 15724  0019B6  000D               	tblwt		*+
 15725  0019B8  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 15726  0019BC  000C               	tblwt		*
 15727  0019BE  D008               	bra	u11950
 15728  0019C0                     u11957:
 15729  0019C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 15730  0019C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 15731  0019C8  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 15732  0019CC  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 15733  0019D0                     u11950:
 15734                           
 15735                           ;tcpv4.c: 692: currentTCB->mss = tcpMss;
 15736  0019D0  0E1C               	movlw	28
 15737  0019D2  0100               	movlb	0	; () banked
 15738  0019D4  25FE               	addwf	_currentTCB& (0+255),w,b
 15739  0019D6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15740  0019D8  0E00               	movlw	0
 15741  0019DA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15742  0019DC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15743  0019DE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15744  0019E2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15745  0019E6  0E00               	movlw	low (__smallconst shr (0+16))
 15746  0019E8  6EF8               	movwf	tblptru,c
 15747  0019EA  0E0F               	movlw	(high __ramtop+-1)
 15748  0019EC  64F7               	cpfsgt	tblptrh,c
 15749  0019EE  D007               	bra	u11967
 15750  0019F0  C1A4  FFF5         	movff	_tcpMss,tablat
 15751  0019F4  000D               	tblwt		*+
 15752  0019F6  C1A5  FFF5         	movff	_tcpMss+1,tablat
 15753  0019FA  000C               	tblwt		*
 15754  0019FC  D008               	bra	u11960
 15755  0019FE                     u11967:
 15756  0019FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15757  001A02  CFF7 FFEA          	movff	tblptrh,fsr0h
 15758  001A06  C1A4  FFEE         	movff	_tcpMss,postinc0
 15759  001A0A  C1A5  FFEF         	movff	_tcpMss+1,indf0
 15760  001A0E                     u11960:
 15761                           
 15762                           ;tcpv4.c: 694: if(TCP_Snd(currentTCB))
 15763  001A0E  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 15764  001A12  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15765  001A16  EC11  F01D         	call	_TCP_Snd	;wreg free
 15766  001A1A  0900               	iorlw	0
 15767  001A1C  E102 EFDA  F01C    	bz	l8831
 15768                           
 15769                           ; BSR set to: 0
 15770                           ;tcpv4.c: 695: {
 15771                           ;tcpv4.c: 696: nextState = ESTABLISHED;
 15772  001A22  0E04               	movlw	4
 15773  001A24  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15774                           
 15775                           ; BSR set to: 0
 15776                           ;tcpv4.c: 697: currentTCB->socketState = SOCKET_CONNECTED;
 15777  001A26  0E36               	movlw	54
 15778  001A28  25FE               	addwf	_currentTCB& (0+255),w,b
 15779  001A2A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15780  001A2C  0E00               	movlw	0
 15781  001A2E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15782  001A30  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15783  001A32  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15784  001A36  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15785  001A3A  0E00               	movlw	low (__smallconst shr (0+16))
 15786  001A3C  6EF8               	movwf	tblptru,c
 15787  001A3E  0E0F               	movlw	(high __ramtop+-1)
 15788  001A40  64F7               	cpfsgt	tblptrh,c
 15789  001A42  D004               	bra	u11987
 15790  001A44  0E03               	movlw	3
 15791  001A46  6EF5               	movwf	tablat,c
 15792  001A48  000C               	tblwt		*
 15793  001A4A  D002               	bra	u11980
 15794  001A4C                     u11987:
 15795  001A4C  EF9F  F012         	goto	u12477
 15796  001A50                     u11980:
 15797  001A50  EFDA  F01C         	goto	l8831
 15798  001A54                     l8547:
 15799                           
 15800                           ; BSR set to: 0
 15801                           ;tcpv4.c: 700: else
 15802                           ;tcpv4.c: 701: {
 15803                           ;tcpv4.c: 703: currentTCB->localSeqno = tcpHeader.ackNumber;
 15804  001A54  0E10               	movlw	16
 15805  001A56  25FE               	addwf	_currentTCB& (0+255),w,b
 15806  001A58  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15807  001A5A  0E00               	movlw	0
 15808  001A5C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15809  001A5E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15810  001A60  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15811  001A64  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15812  001A68  0E00               	movlw	low (__smallconst shr (0+16))
 15813  001A6A  6EF8               	movwf	tblptru,c
 15814  001A6C  0E0F               	movlw	(high __ramtop+-1)
 15815  001A6E  64F7               	cpfsgt	tblptrh,c
 15816  001A70  D00D               	bra	u11997
 15817  001A72  C1C4  FFF5         	movff	_tcpHeader+8,tablat
 15818  001A76  000D               	tblwt		*+
 15819  001A78  C1C5  FFF5         	movff	_tcpHeader+9,tablat
 15820  001A7C  000D               	tblwt		*+
 15821  001A7E  C1C6  FFF5         	movff	_tcpHeader+10,tablat
 15822  001A82  000D               	tblwt		*+
 15823  001A84  C1C7  FFF5         	movff	_tcpHeader+11,tablat
 15824  001A88  000C               	tblwt		*
 15825  001A8A  D00C               	bra	u11990
 15826  001A8C                     u11997:
 15827  001A8C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15828  001A90  CFF7 FFEA          	movff	tblptrh,fsr0h
 15829  001A94  C1C4  FFEE         	movff	_tcpHeader+8,postinc0
 15830  001A98  C1C5  FFEE         	movff	_tcpHeader+9,postinc0
 15831  001A9C  C1C6  FFEE         	movff	_tcpHeader+10,postinc0
 15832  001AA0  C1C7  FFEF         	movff	_tcpHeader+11,indf0
 15833  001AA4                     u11990:
 15834                           
 15835                           ;tcpv4.c: 704: currentTCB->flags = 0x04U | 0x10U;
 15836  001AA4  0E35               	movlw	53
 15837  001AA6  0100               	movlb	0	; () banked
 15838  001AA8  25FE               	addwf	_currentTCB& (0+255),w,b
 15839  001AAA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15840  001AAC  0E00               	movlw	0
 15841  001AAE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15842  001AB0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15843  001AB2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15844  001AB6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15845  001ABA  0E00               	movlw	low (__smallconst shr (0+16))
 15846  001ABC  6EF8               	movwf	tblptru,c
 15847  001ABE  0E0F               	movlw	(high __ramtop+-1)
 15848  001AC0  64F7               	cpfsgt	tblptrh,c
 15849  001AC2  D004               	bra	u12007
 15850  001AC4  0E14               	movlw	20
 15851  001AC6  6EF5               	movwf	tablat,c
 15852  001AC8  000C               	tblwt		*
 15853  001ACA  D006               	bra	u12000
 15854  001ACC                     u12007:
 15855  001ACC  CFF6 FFE9          	movff	tblptrl,fsr0l
 15856  001AD0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15857  001AD4  0E14               	movlw	20
 15858  001AD6  6EEF               	movwf	indf0,c
 15859  001AD8                     u12000:
 15860                           
 15861                           ;tcpv4.c: 705: if(TCP_Snd(currentTCB))
 15862  001AD8  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 15863  001ADC  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15864  001AE0  EC11  F01D         	call	_TCP_Snd	;wreg free
 15865  001AE4                     L10:
 15866  001AE4  0900               	iorlw	0
 15867  001AE6  E001 D4CC          	bnz	l1293
 15868  001AEA  EFDA  F01C         	goto	l8831
 15869  001AEE                     l8555:
 15870                           
 15871                           ; BSR set to: 0
 15872                           ;tcpv4.c: 713: ;
 15873                           ;tcpv4.c: 715: currentTCB->timeout = 0;
 15874  001AEE  0E30               	movlw	48
 15875  001AF0  25FE               	addwf	_currentTCB& (0+255),w,b
 15876  001AF2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15877  001AF4  0E00               	movlw	0
 15878  001AF6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15879  001AF8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15880  001AFA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15881  001AFE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15882  001B02  0E00               	movlw	low (__smallconst shr (0+16))
 15883  001B04  6EF8               	movwf	tblptru,c
 15884  001B06  0E0F               	movlw	(high __ramtop+-1)
 15885  001B08  64F7               	cpfsgt	tblptrh,c
 15886  001B0A  D005               	bra	u12027
 15887  001B0C  6AF5               	clrf	tablat,c
 15888  001B0E  000D               	tblwt		*+
 15889  001B10  6AF5               	clrf	tablat,c
 15890  001B12  000C               	tblwt		*
 15891  001B14  D006               	bra	u12020
 15892  001B16                     u12027:
 15893  001B16  CFF6 FFE9          	movff	tblptrl,fsr0l
 15894  001B1A  CFF7 FFEA          	movff	tblptrh,fsr0h
 15895  001B1E  6AEE               	clrf	postinc0,c
 15896  001B20  6AEF               	clrf	indf0,c
 15897  001B22                     u12020:
 15898                           
 15899                           ;tcpv4.c: 717: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 15900  001B22  0E10               	movlw	16
 15901  001B24  0100               	movlb	0	; () banked
 15902  001B26  25FE               	addwf	_currentTCB& (0+255),w,b
 15903  001B28  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15904  001B2A  0E00               	movlw	0
 15905  001B2C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15906  001B2E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15907  001B30  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15908  001B34  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15909  001B38  0E00               	movlw	low (__smallconst shr (0+16))
 15910  001B3A  6EF8               	movwf	tblptru,c
 15911  001B3C  0E0F               	movlw	(high __ramtop+-1)
 15912  001B3E  64F7               	cpfsgt	tblptrh,c
 15913  001B40  D00D               	bra	u12037
 15914  001B42  0009               	tblrd		*+
 15915  001B44  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 15916  001B48  0009               	tblrd		*+
 15917  001B4A  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 15918  001B4E  0009               	tblrd		*+
 15919  001B50  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 15920  001B54  0009               	tblrd		*+
 15921  001B56  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 15922  001B5A  D00C               	bra	u12030
 15923  001B5C                     u12037:
 15924  001B5C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15925  001B60  CFF7 FFEA          	movff	tblptrh,fsr0h
 15926  001B64  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 15927  001B68  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 15928  001B6C  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 15929  001B70  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 15930  001B74                     u12030:
 15931  001B74  0E01               	movlw	1
 15932  001B76  0100               	movlb	0	; () banked
 15933  001B78  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 15934  001B7A  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 15935  001B7C  0E00               	movlw	0
 15936  001B7E  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 15937  001B80  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 15938  001B82  0E00               	movlw	0
 15939  001B84  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 15940  001B86  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 15941  001B88  0E00               	movlw	0
 15942  001B8A  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 15943  001B8C  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 15944  001B8E  0101               	movlb	1	; () banked
 15945  001B90  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 15946  001B92  0100               	movlb	0	; () banked
 15947  001B94  19C9               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 15948  001B96  E10F               	bnz	u12041
 15949  001B98  0101               	movlb	1	; () banked
 15950  001B9A  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 15951  001B9C  0100               	movlb	0	; () banked
 15952  001B9E  19CA               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 15953  001BA0  E10A               	bnz	u12041
 15954  001BA2  0101               	movlb	1	; () banked
 15955  001BA4  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 15956  001BA6  0100               	movlb	0	; () banked
 15957  001BA8  19CB               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 15958  001BAA  E105               	bnz	u12041
 15959  001BAC  0101               	movlb	1	; () banked
 15960  001BAE  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 15961  001BB0  0100               	movlb	0	; () banked
 15962  001BB2  19CC               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 15963  001BB4  A4D8               	btfss	status,2,c
 15964  001BB6                     u12041:
 15965  001BB6  D145               	goto	l8567
 15966                           
 15967                           ; BSR set to: 0
 15968                           ;tcpv4.c: 718: {
 15969                           ;tcpv4.c: 720: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 15970  001BB8  0E10               	movlw	16
 15971  001BBA  25FE               	addwf	_currentTCB& (0+255),w,b
 15972  001BBC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15973  001BBE  0E00               	movlw	0
 15974  001BC0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15975  001BC2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15976  001BC4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15977  001BC8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15978  001BCC  0E00               	movlw	low (__smallconst shr (0+16))
 15979  001BCE  6EF8               	movwf	tblptru,c
 15980  001BD0  0E0F               	movlw	(high __ramtop+-1)
 15981  001BD2  64F7               	cpfsgt	tblptrh,c
 15982  001BD4  D00D               	bra	u12057
 15983  001BD6  0009               	tblrd		*+
 15984  001BD8  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 15985  001BDC  0009               	tblrd		*+
 15986  001BDE  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 15987  001BE2  0009               	tblrd		*+
 15988  001BE4  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 15989  001BE8  0009               	tblrd		*+
 15990  001BEA  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 15991  001BEE  D00C               	bra	u12050
 15992  001BF0                     u12057:
 15993  001BF0  CFF6 FFE9          	movff	tblptrl,fsr0l
 15994  001BF4  CFF7 FFEA          	movff	tblptrh,fsr0h
 15995  001BF8  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 15996  001BFC  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 15997  001C00  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 15998  001C04  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 15999  001C08                     u12050:
 16000  001C08  0E01               	movlw	1
 16001  001C0A  0100               	movlb	0	; () banked
 16002  001C0C  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16003  001C0E  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 16004  001C10  0E00               	movlw	0
 16005  001C12  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16006  001C14  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 16007  001C16  0E00               	movlw	0
 16008  001C18  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16009  001C1A  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 16010  001C1C  0E00               	movlw	0
 16011  001C1E  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16012  001C20  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 16013  001C22  0E10               	movlw	16
 16014  001C24  25FE               	addwf	_currentTCB& (0+255),w,b
 16015  001C26  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 16016  001C28  0E00               	movlw	0
 16017  001C2A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16018  001C2C  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 16019  001C2E  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 16020  001C32  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 16021  001C36  0E00               	movlw	low (__smallconst shr (0+16))
 16022  001C38  6EF8               	movwf	tblptru,c
 16023  001C3A  0E0F               	movlw	(high __ramtop+-1)
 16024  001C3C  64F7               	cpfsgt	tblptrh,c
 16025  001C3E  D00D               	bra	u12067
 16026  001C40  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 16027  001C44  000D               	tblwt		*+
 16028  001C46  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 16029  001C4A  000D               	tblwt		*+
 16030  001C4C  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 16031  001C50  000D               	tblwt		*+
 16032  001C52  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 16033  001C56  000C               	tblwt		*
 16034  001C58  D00C               	bra	u12060
 16035  001C5A                     u12067:
 16036  001C5A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16037  001C5E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16038  001C62  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 16039  001C66  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 16040  001C6A  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 16041  001C6E  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 16042  001C72                     u12060:
 16043                           
 16044                           ;tcpv4.c: 721: currentTCB->flags = 0x10U;
 16045  001C72  0E35               	movlw	53
 16046  001C74  0100               	movlb	0	; () banked
 16047  001C76  25FE               	addwf	_currentTCB& (0+255),w,b
 16048  001C78  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16049  001C7A  0E00               	movlw	0
 16050  001C7C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16051  001C7E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16052  001C80  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16053  001C84  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16054  001C88  0E00               	movlw	low (__smallconst shr (0+16))
 16055  001C8A  6EF8               	movwf	tblptru,c
 16056  001C8C  0E0F               	movlw	(high __ramtop+-1)
 16057  001C8E  64F7               	cpfsgt	tblptrh,c
 16058  001C90  D004               	bra	u12077
 16059  001C92  0E10               	movlw	16
 16060  001C94  6EF5               	movwf	tablat,c
 16061  001C96  000C               	tblwt		*
 16062  001C98  D006               	bra	u12070
 16063  001C9A                     u12077:
 16064  001C9A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16065  001C9E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16066  001CA2  0E10               	movlw	16
 16067  001CA4  6EEF               	movwf	indf0,c
 16068  001CA6                     u12070:
 16069                           
 16070                           ;tcpv4.c: 724: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 16071  001CA6  0E08               	movlw	8
 16072  001CA8  0100               	movlb	0	; () banked
 16073  001CAA  25FE               	addwf	_currentTCB& (0+255),w,b
 16074  001CAC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16075  001CAE  0E00               	movlw	0
 16076  001CB0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16077  001CB2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16078  001CB4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16079  001CB8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16080  001CBC  0E00               	movlw	low (__smallconst shr (0+16))
 16081  001CBE  6EF8               	movwf	tblptru,c
 16082  001CC0  0E0F               	movlw	(high __ramtop+-1)
 16083  001CC2  64F7               	cpfsgt	tblptrh,c
 16084  001CC4  D00D               	bra	u12087
 16085  001CC6  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 16086  001CCA  000D               	tblwt		*+
 16087  001CCC  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 16088  001CD0  000D               	tblwt		*+
 16089  001CD2  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 16090  001CD6  000D               	tblwt		*+
 16091  001CD8  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 16092  001CDC  000C               	tblwt		*
 16093  001CDE  D00C               	bra	u12080
 16094  001CE0                     u12087:
 16095  001CE0  CFF6 FFE9          	movff	tblptrl,fsr0l
 16096  001CE4  CFF7 FFEA          	movff	tblptrh,fsr0h
 16097  001CE8  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 16098  001CEC  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 16099  001CF0  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 16100  001CF4  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 16101  001CF8                     u12080:
 16102                           
 16103                           ;tcpv4.c: 725: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 16104  001CF8  0E01               	movlw	1
 16105  001CFA  0101               	movlb	1	; () banked
 16106  001CFC  25C0               	addwf	(_tcpHeader+4)& (0+255),w,b
 16107  001CFE  0100               	movlb	0	; () banked
 16108  001D00  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16109  001D02  0E00               	movlw	0
 16110  001D04  0101               	movlb	1	; () banked
 16111  001D06  21C1               	addwfc	(_tcpHeader+5)& (0+255),w,b
 16112  001D08  0100               	movlb	0	; () banked
 16113  001D0A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16114  001D0C  0E00               	movlw	0
 16115  001D0E  0101               	movlb	1	; () banked
 16116  001D10  21C2               	addwfc	(_tcpHeader+6)& (0+255),w,b
 16117  001D12  0100               	movlb	0	; () banked
 16118  001D14  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 16119  001D16  0E00               	movlw	0
 16120  001D18  0101               	movlb	1	; () banked
 16121  001D1A  21C3               	addwfc	(_tcpHeader+7)& (0+255),w,b
 16122  001D1C  0100               	movlb	0	; () banked
 16123  001D1E  6FC6               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 16124  001D20  0E0C               	movlw	12
 16125  001D22  25FE               	addwf	_currentTCB& (0+255),w,b
 16126  001D24  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 16127  001D26  0E00               	movlw	0
 16128  001D28  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16129  001D2A  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 16130  001D2C  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 16131  001D30  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 16132  001D34  0E00               	movlw	low (__smallconst shr (0+16))
 16133  001D36  6EF8               	movwf	tblptru,c
 16134  001D38  0E0F               	movlw	(high __ramtop+-1)
 16135  001D3A  64F7               	cpfsgt	tblptrh,c
 16136  001D3C  D00D               	bra	u12097
 16137  001D3E  C0C3  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 16138  001D42  000D               	tblwt		*+
 16139  001D44  C0C4  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 16140  001D48  000D               	tblwt		*+
 16141  001D4A  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 16142  001D4E  000D               	tblwt		*+
 16143  001D50  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 16144  001D54  000C               	tblwt		*
 16145  001D56  D00C               	bra	u12090
 16146  001D58                     u12097:
 16147  001D58  CFF6 FFE9          	movff	tblptrl,fsr0l
 16148  001D5C  CFF7 FFEA          	movff	tblptrh,fsr0h
 16149  001D60  C0C3  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 16150  001D64  C0C4  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 16151  001D68  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 16152  001D6C  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 16153  001D70                     u12090:
 16154                           
 16155                           ;tcpv4.c: 727: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 16156  001D70  0101               	movlb	1	; () banked
 16157  001D72  51CA               	movf	(_tcpHeader+14)& (0+255),w,b
 16158  001D74  0100               	movlb	0	; () banked
 16159  001D76  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16160  001D78  6BC3               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 16161  001D7A  EE21  F0CA         	lfsr	2,_tcpHeader+14
 16162  001D7E  CFDE F0C5          	movff	postinc2,??_TCP_FiniteStateMachine+2
 16163  001D82  CFDD F0C6          	movff	postdec2,??_TCP_FiniteStateMachine+3
 16164  001D86  C0C6  F0C5         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 16165  001D8A  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 16166  001D8C  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 16167  001D8E  51C3               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 16168  001D90  13C5               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 16169  001D92  51C4               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 16170  001D94  13C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 16171  001D96  0E18               	movlw	24
 16172  001D98  25FE               	addwf	_currentTCB& (0+255),w,b
 16173  001D9A  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 16174  001D9C  0E00               	movlw	0
 16175  001D9E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16176  001DA0  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 16177  001DA2  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 16178  001DA6  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 16179  001DAA  0E00               	movlw	low (__smallconst shr (0+16))
 16180  001DAC  6EF8               	movwf	tblptru,c
 16181  001DAE  0E0F               	movlw	(high __ramtop+-1)
 16182  001DB0  64F7               	cpfsgt	tblptrh,c
 16183  001DB2  D007               	bra	u12107
 16184  001DB4  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 16185  001DB8  000D               	tblwt		*+
 16186  001DBA  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 16187  001DBE  000C               	tblwt		*
 16188  001DC0  D008               	bra	u12100
 16189  001DC2                     u12107:
 16190  001DC2  CFF6 FFE9          	movff	tblptrl,fsr0l
 16191  001DC6  CFF7 FFEA          	movff	tblptrh,fsr0h
 16192  001DCA  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 16193  001DCE  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 16194  001DD2                     u12100:
 16195                           
 16196                           ;tcpv4.c: 728: currentTCB->mss = tcpMss;
 16197  001DD2  0E1C               	movlw	28
 16198  001DD4  0100               	movlb	0	; () banked
 16199  001DD6  25FE               	addwf	_currentTCB& (0+255),w,b
 16200  001DD8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16201  001DDA  0E00               	movlw	0
 16202  001DDC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16203  001DDE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16204  001DE0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16205  001DE4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16206  001DE8  0E00               	movlw	low (__smallconst shr (0+16))
 16207  001DEA  6EF8               	movwf	tblptru,c
 16208  001DEC  0E0F               	movlw	(high __ramtop+-1)
 16209  001DEE  64F7               	cpfsgt	tblptrh,c
 16210  001DF0  D007               	bra	u12117
 16211  001DF2  C1A4  FFF5         	movff	_tcpMss,tablat
 16212  001DF6  000D               	tblwt		*+
 16213  001DF8  C1A5  FFF5         	movff	_tcpMss+1,tablat
 16214  001DFC  000C               	tblwt		*
 16215  001DFE  D008               	bra	u12110
 16216  001E00                     u12117:
 16217  001E00  CFF6 FFE9          	movff	tblptrl,fsr0l
 16218  001E04  CFF7 FFEA          	movff	tblptrh,fsr0h
 16219  001E08  C1A4  FFEE         	movff	_tcpMss,postinc0
 16220  001E0C  C1A5  FFEF         	movff	_tcpMss+1,indf0
 16221  001E10                     u12110:
 16222                           
 16223                           ;tcpv4.c: 730: nextState = ESTABLISHED;
 16224  001E10  0E04               	movlw	4
 16225  001E12  0100               	movlb	0	; () banked
 16226  001E14  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16227                           
 16228                           ; BSR set to: 0
 16229                           ;tcpv4.c: 731: currentTCB->socketState = SOCKET_CONNECTED;
 16230  001E16  0E36               	movlw	54
 16231  001E18  25FE               	addwf	_currentTCB& (0+255),w,b
 16232  001E1A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16233  001E1C  0E00               	movlw	0
 16234  001E1E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16235  001E20  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16236  001E22  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16237  001E26  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16238  001E2A  0E00               	movlw	low (__smallconst shr (0+16))
 16239  001E2C  6EF8               	movwf	tblptru,c
 16240  001E2E  0E0F               	movlw	(high __ramtop+-1)
 16241  001E30  64F7               	cpfsgt	tblptrh,c
 16242  001E32  D004               	bra	u12127
 16243  001E34  0E03               	movlw	3
 16244  001E36  6EF5               	movwf	tablat,c
 16245  001E38  000C               	tblwt		*
 16246  001E3A  D001               	bra	u12120
 16247  001E3C                     u12127:
 16248  001E3C  D380               	goto	u12477
 16249  001E3E                     u12120:
 16250                           
 16251                           ;tcpv4.c: 732: }
 16252  001E3E  EFDA  F01C         	goto	l8831
 16253  001E42                     l8567:
 16254                           
 16255                           ; BSR set to: 0
 16256                           ;tcpv4.c: 733: else
 16257                           ;tcpv4.c: 734: {
 16258                           ;tcpv4.c: 736: currentTCB->localSeqno = tcpHeader.ackNumber;
 16259  001E42  0E10               	movlw	16
 16260  001E44  25FE               	addwf	_currentTCB& (0+255),w,b
 16261  001E46  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16262  001E48  0E00               	movlw	0
 16263  001E4A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16264  001E4C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16265  001E4E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16266  001E52  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16267  001E56  0E00               	movlw	low (__smallconst shr (0+16))
 16268  001E58  6EF8               	movwf	tblptru,c
 16269  001E5A  0E0F               	movlw	(high __ramtop+-1)
 16270  001E5C  64F7               	cpfsgt	tblptrh,c
 16271  001E5E  D00D               	bra	u12137
 16272  001E60  C1C4  FFF5         	movff	_tcpHeader+8,tablat
 16273  001E64  000D               	tblwt		*+
 16274  001E66  C1C5  FFF5         	movff	_tcpHeader+9,tablat
 16275  001E6A  000D               	tblwt		*+
 16276  001E6C  C1C6  FFF5         	movff	_tcpHeader+10,tablat
 16277  001E70  000D               	tblwt		*+
 16278  001E72  C1C7  FFF5         	movff	_tcpHeader+11,tablat
 16279  001E76  000C               	tblwt		*
 16280  001E78  D00C               	bra	u12130
 16281  001E7A                     u12137:
 16282  001E7A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16283  001E7E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16284  001E82  C1C4  FFEE         	movff	_tcpHeader+8,postinc0
 16285  001E86  C1C5  FFEE         	movff	_tcpHeader+9,postinc0
 16286  001E8A  C1C6  FFEE         	movff	_tcpHeader+10,postinc0
 16287  001E8E  C1C7  FFEF         	movff	_tcpHeader+11,indf0
 16288  001E92                     u12130:
 16289                           
 16290                           ;tcpv4.c: 737: currentTCB->flags = 0x04U;
 16291  001E92  0E35               	movlw	53
 16292  001E94  0100               	movlb	0	; () banked
 16293  001E96  25FE               	addwf	_currentTCB& (0+255),w,b
 16294  001E98  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16295  001E9A  0E00               	movlw	0
 16296  001E9C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16297  001E9E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16298  001EA0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16299  001EA4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16300  001EA8  0E00               	movlw	low (__smallconst shr (0+16))
 16301  001EAA  6EF8               	movwf	tblptru,c
 16302  001EAC  0E0F               	movlw	(high __ramtop+-1)
 16303  001EAE  64F7               	cpfsgt	tblptrh,c
 16304  001EB0  D004               	bra	u12147
 16305  001EB2  0E04               	movlw	4
 16306  001EB4  6EF5               	movwf	tablat,c
 16307  001EB6  000C               	tblwt		*
 16308  001EB8  D006               	bra	u12140
 16309  001EBA                     u12147:
 16310  001EBA  CFF6 FFE9          	movff	tblptrl,fsr0l
 16311  001EBE  CFF7 FFEA          	movff	tblptrh,fsr0h
 16312  001EC2  0E04               	movlw	4
 16313  001EC4  6EEF               	movwf	indf0,c
 16314  001EC6                     u12140:
 16315                           
 16316                           ;tcpv4.c: 738: if(TCP_Snd(currentTCB))
 16317  001EC6  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 16318  001ECA  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16319  001ECE  EC11  F01D         	call	_TCP_Snd	;wreg free
 16320  001ED2  D608               	goto	L10
 16321  001ED4                     l8577:
 16322                           
 16323                           ; BSR set to: 0
 16324                           ;tcpv4.c: 752: ;
 16325                           ;tcpv4.c: 755: if (currentTCB->timeoutsCount)
 16326  001ED4  0E34               	movlw	52
 16327  001ED6  25FE               	addwf	_currentTCB& (0+255),w,b
 16328  001ED8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16329  001EDA  0E00               	movlw	0
 16330  001EDC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16331  001EDE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16332  001EE0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16333  001EE4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16334  001EE8  0E00               	movlw	low (__smallconst shr (0+16))
 16335  001EEA  6EF8               	movwf	tblptru,c
 16336  001EEC  0E0F               	movlw	(high __ramtop+-1)
 16337  001EEE  64F7               	cpfsgt	tblptrh,c
 16338  001EF0  D003               	bra	u12167
 16339  001EF2  0008               	tblrd		*
 16340  001EF4  50F5               	movf	tablat,w,c
 16341  001EF6  D005               	bra	u12160
 16342  001EF8                     u12167:
 16343  001EF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 16344  001EFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 16345  001F00  50EF               	movf	indf0,w,c
 16346  001F02                     u12160:
 16347  001F02  0900               	iorlw	0
 16348  001F04  E05A               	bz	l8593
 16349                           
 16350                           ;tcpv4.c: 756: {
 16351                           ;tcpv4.c: 757: if(TCP_Snd(currentTCB))
 16352  001F06  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 16353  001F0A  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16354  001F0E  EC11  F01D         	call	_TCP_Snd	;wreg free
 16355  001F12  0900               	iorlw	0
 16356  001F14  E102 EFDA  F01C    	bz	l8831
 16357                           
 16358                           ; BSR set to: 0
 16359                           ;tcpv4.c: 758: {
 16360                           ;tcpv4.c: 759: if (currentTCB->flags & 0x04U)
 16361  001F1A  0E35               	movlw	53
 16362  001F1C  25FE               	addwf	_currentTCB& (0+255),w,b
 16363  001F1E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16364  001F20  0E00               	movlw	0
 16365  001F22  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16366  001F24  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16367  001F26  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16368  001F2A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16369  001F2E  0E00               	movlw	low (__smallconst shr (0+16))
 16370  001F30  6EF8               	movwf	tblptru,c
 16371  001F32  0E0F               	movlw	(high __ramtop+-1)
 16372  001F34  64F7               	cpfsgt	tblptrh,c
 16373  001F36  D003               	bra	u12197
 16374  001F38  0008               	tblrd		*
 16375  001F3A  50F5               	movf	tablat,w,c
 16376  001F3C  D005               	bra	u12190
 16377  001F3E                     u12197:
 16378  001F3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 16379  001F42  CFF7 FFEA          	movff	tblptrh,fsr0h
 16380  001F46  50EF               	movf	indf0,w,c
 16381  001F48                     u12190:
 16382  001F48  0100               	movlb	0	; () banked
 16383  001F4A  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 16384  001F4C  B5C5               	btfsc	(??_TCP_FiniteStateMachine+2)& (0+255),2,b
 16385  001F4E  EF41  F00A         	goto	l1293
 16386                           
 16387                           ; BSR set to: 0
 16388                           ;tcpv4.c: 764: if(currentTCB->flags & 0x10U)
 16389  001F52  0E35               	movlw	53
 16390  001F54  25FE               	addwf	_currentTCB& (0+255),w,b
 16391  001F56  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16392  001F58  0E00               	movlw	0
 16393  001F5A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16394  001F5C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16395  001F5E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16396  001F62  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16397  001F66  0E00               	movlw	low (__smallconst shr (0+16))
 16398  001F68  6EF8               	movwf	tblptru,c
 16399  001F6A  0E0F               	movlw	(high __ramtop+-1)
 16400  001F6C  64F7               	cpfsgt	tblptrh,c
 16401  001F6E  D003               	bra	u12217
 16402  001F70  0008               	tblrd		*
 16403  001F72  50F5               	movf	tablat,w,c
 16404  001F74  D005               	bra	u12210
 16405  001F76                     u12217:
 16406  001F76  CFF6 FFE9          	movff	tblptrl,fsr0l
 16407  001F7A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16408  001F7E  50EF               	movf	indf0,w,c
 16409  001F80                     u12210:
 16410  001F80  0100               	movlb	0	; () banked
 16411  001F82  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 16412  001F84  A9C5               	btfss	(??_TCP_FiniteStateMachine+2)& (0+255),4,b
 16413  001F86  EFDA  F01C         	goto	l8831
 16414                           
 16415                           ; BSR set to: 0
 16416                           ;tcpv4.c: 765: {
 16417                           ;tcpv4.c: 766: nextState = ESTABLISHED;
 16418  001F8A  0E04               	movlw	4
 16419  001F8C  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16420                           
 16421                           ; BSR set to: 0
 16422                           ;tcpv4.c: 767: currentTCB->socketState = SOCKET_CONNECTED;
 16423  001F8E  0E36               	movlw	54
 16424  001F90  25FE               	addwf	_currentTCB& (0+255),w,b
 16425  001F92  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16426  001F94  0E00               	movlw	0
 16427  001F96  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16428  001F98  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16429  001F9A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16430  001F9E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16431  001FA2  0E00               	movlw	low (__smallconst shr (0+16))
 16432  001FA4  6EF8               	movwf	tblptru,c
 16433  001FA6  0E0F               	movlw	(high __ramtop+-1)
 16434  001FA8  64F7               	cpfsgt	tblptrh,c
 16435  001FAA  D004               	bra	u12237
 16436  001FAC  0E03               	movlw	3
 16437  001FAE  6EF5               	movwf	tablat,c
 16438  001FB0  000C               	tblwt		*
 16439  001FB2  D001               	bra	u12230
 16440  001FB4                     u12237:
 16441  001FB4  D2C4               	goto	u12477
 16442  001FB6                     u12230:
 16443  001FB6  EFDA  F01C         	goto	l8831
 16444  001FBA                     l8593:
 16445                           
 16446                           ;tcpv4.c: 771: {
 16447                           ;tcpv4.c: 773: currentTCB->flags = 0x04U;
 16448  001FBA  0E35               	movlw	53
 16449  001FBC  0100               	movlb	0	; () banked
 16450  001FBE  25FE               	addwf	_currentTCB& (0+255),w,b
 16451  001FC0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16452  001FC2  0E00               	movlw	0
 16453  001FC4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16454  001FC6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16455  001FC8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16456  001FCC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16457  001FD0  0E00               	movlw	low (__smallconst shr (0+16))
 16458  001FD2  6EF8               	movwf	tblptru,c
 16459  001FD4  0E0F               	movlw	(high __ramtop+-1)
 16460  001FD6  64F7               	cpfsgt	tblptrh,c
 16461  001FD8  D004               	bra	u12247
 16462  001FDA  0E04               	movlw	4
 16463  001FDC  6EF5               	movwf	tablat,c
 16464  001FDE  000C               	tblwt		*
 16465  001FE0  D006               	bra	u12240
 16466  001FE2                     u12247:
 16467  001FE2  CFF6 FFE9          	movff	tblptrl,fsr0l
 16468  001FE6  CFF7 FFEA          	movff	tblptrh,fsr0h
 16469  001FEA  0E04               	movlw	4
 16470  001FEC  6EEF               	movwf	indf0,c
 16471  001FEE                     u12240:
 16472                           
 16473                           ;tcpv4.c: 774: if(TCP_Snd(currentTCB))
 16474  001FEE  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 16475  001FF2  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16476  001FF6  EC11  F01D         	call	_TCP_Snd	;wreg free
 16477  001FFA  D574               	goto	L10
 16478  001FFC                     l8605:
 16479  001FFC  0100               	movlb	0	; () banked
 16480  001FFE  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 16481                           
 16482                           ; Switch size 1, requested type "speed"
 16483                           ; Number of cases is 7, Range of values is 0 to 12
 16484                           ; switch strategies available:
 16485                           ; Name         Instructions Cycles
 16486                           ; simple_byte           22    12 (average)
 16487                           ;	Chosen strategy is simple_byte
 16488  002000  E102 EF41  F00A    	bz	l1293
 16489  002006  0A03               	xorlw	3	; case 3
 16490  002008  E102 EF53  F00A    	bz	l8515
 16491  00200E  0A07               	xorlw	7	; case 4
 16492  002010  E101 D56D          	bz	l8555
 16493  002014  0A01               	xorlw	1	; case 5
 16494  002016  E102 EF76  F00B    	bz	l8533
 16495  00201C  0A0C               	xorlw	12	; case 9
 16496  00201E  E102 EF41  F00A    	bz	l1293
 16497  002024  0A03               	xorlw	3	; case 10
 16498  002026  E102 EF41  F00A    	bz	l1293
 16499  00202C  0A06               	xorlw	6	; case 12
 16500  00202E  E101 D751          	bz	l8577
 16501  002032  EFDA  F01C         	goto	l8831
 16502  002036                     l8607:
 16503                           
 16504                           ; BSR set to: 0
 16505                           ;tcpv4.c: 796: ;
 16506                           ;tcpv4.c: 797: if (currentTCB->localPort == tcpHeader.destPort)
 16507  002036  C0FE  FFF6         	movff	_currentTCB,tblptrl
 16508  00203A  C0FF  FFF7         	movff	_currentTCB+1,tblptrh
 16509  00203E  0E00               	movlw	low (__smallconst shr (0+16))
 16510  002040  6EF8               	movwf	tblptru,c
 16511  002042  0E0F               	movlw	(high __ramtop+-1)
 16512  002044  64F7               	cpfsgt	tblptrh,c
 16513  002046  D007               	bra	u12267
 16514  002048  0009               	tblrd		*+
 16515  00204A  CFF5 F0C3          	movff	tablat,??_TCP_FiniteStateMachine
 16516  00204E  0009               	tblrd		*+
 16517  002050  CFF5 F0C4          	movff	tablat,??_TCP_FiniteStateMachine+1
 16518  002054  D008               	bra	u12260
 16519  002056                     u12267:
 16520  002056  CFF6 FFE9          	movff	tblptrl,fsr0l
 16521  00205A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16522  00205E  CFEE F0C3          	movff	postinc0,??_TCP_FiniteStateMachine
 16523  002062  CFEE F0C4          	movff	postinc0,??_TCP_FiniteStateMachine+1
 16524  002066                     u12260:
 16525  002066  0101               	movlb	1	; () banked
 16526  002068  51BE               	movf	(_tcpHeader+2)& (0+255),w,b
 16527  00206A  0100               	movlb	0	; () banked
 16528  00206C  19C3               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 16529  00206E  E105               	bnz	u12271
 16530  002070  0101               	movlb	1	; () banked
 16531  002072  51BF               	movf	(_tcpHeader+3)& (0+255),w,b
 16532  002074  0100               	movlb	0	; () banked
 16533  002076  19C4               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 16534  002078  A4D8               	btfss	status,2,c
 16535  00207A                     u12271:
 16536  00207A  EFDA  F01C         	goto	l8831
 16537                           
 16538                           ; BSR set to: 0
 16539                           ;tcpv4.c: 798: {
 16540                           ;tcpv4.c: 800: currentTCB->timeout = 0;
 16541  00207E  0E30               	movlw	48
 16542  002080  25FE               	addwf	_currentTCB& (0+255),w,b
 16543  002082  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16544  002084  0E00               	movlw	0
 16545  002086  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16546  002088  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16547  00208A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16548  00208E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16549  002092  0E00               	movlw	low (__smallconst shr (0+16))
 16550  002094  6EF8               	movwf	tblptru,c
 16551  002096  0E0F               	movlw	(high __ramtop+-1)
 16552  002098  64F7               	cpfsgt	tblptrh,c
 16553  00209A  D005               	bra	u12287
 16554  00209C  6AF5               	clrf	tablat,c
 16555  00209E  000D               	tblwt		*+
 16556  0020A0  6AF5               	clrf	tablat,c
 16557  0020A2  000C               	tblwt		*
 16558  0020A4  D006               	bra	u12280
 16559  0020A6                     u12287:
 16560  0020A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 16561  0020AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 16562  0020AE  6AEE               	clrf	postinc0,c
 16563  0020B0  6AEF               	clrf	indf0,c
 16564  0020B2                     u12280:
 16565                           
 16566                           ;tcpv4.c: 804: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 16567  0020B2  0E02               	movlw	2
 16568  0020B4  0100               	movlb	0	; () banked
 16569  0020B6  25FE               	addwf	_currentTCB& (0+255),w,b
 16570  0020B8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16571  0020BA  0E00               	movlw	0
 16572  0020BC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16573  0020BE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16574  0020C0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16575  0020C4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16576  0020C8  0E00               	movlw	low (__smallconst shr (0+16))
 16577  0020CA  6EF8               	movwf	tblptru,c
 16578  0020CC  0E0F               	movlw	(high __ramtop+-1)
 16579  0020CE  64F7               	cpfsgt	tblptrh,c
 16580  0020D0  D00D               	bra	u12297
 16581  0020D2  0009               	tblrd		*+
 16582  0020D4  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16583  0020D8  0009               	tblrd		*+
 16584  0020DA  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16585  0020DE  0009               	tblrd		*+
 16586  0020E0  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16587  0020E4  0009               	tblrd		*+
 16588  0020E6  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16589  0020EA  D00C               	bra	u12290
 16590  0020EC                     u12297:
 16591  0020EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 16592  0020F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 16593  0020F4  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16594  0020F8  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16595  0020FC  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 16596  002100  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 16597  002104                     u12290:
 16598  002104  0101               	movlb	1	; () banked
 16599  002106  5196               	movf	_receivedRemoteAddress& (0+255),w,b
 16600  002108  0100               	movlb	0	; () banked
 16601  00210A  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16602  00210C  E10F               	bnz	u12301
 16603  00210E  0101               	movlb	1	; () banked
 16604  002110  5197               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 16605  002112  0100               	movlb	0	; () banked
 16606  002114  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16607  002116  E17E               	bnz	l8617
 16608  002118  0101               	movlb	1	; () banked
 16609  00211A  5198               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 16610  00211C  0100               	movlb	0	; () banked
 16611  00211E  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16612  002120  E179               	bnz	l8617
 16613  002122  0101               	movlb	1	; () banked
 16614  002124  5199               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 16615  002126  0100               	movlb	0	; () banked
 16616  002128  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16617  00212A  A4D8               	btfss	status,2,c
 16618  00212C                     u12301:
 16619  00212C  D073               	goto	l8617
 16620                           
 16621                           ; BSR set to: 0
 16622  00212E  0E06               	movlw	6
 16623  002130  25FE               	addwf	_currentTCB& (0+255),w,b
 16624  002132  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16625  002134  0E00               	movlw	0
 16626  002136  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16627  002138  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16628  00213A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16629  00213E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16630  002142  0E00               	movlw	low (__smallconst shr (0+16))
 16631  002144  6EF8               	movwf	tblptru,c
 16632  002146  0E0F               	movlw	(high __ramtop+-1)
 16633  002148  64F7               	cpfsgt	tblptrh,c
 16634  00214A  D007               	bra	u12317
 16635  00214C  0009               	tblrd		*+
 16636  00214E  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16637  002152  0009               	tblrd		*+
 16638  002154  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16639  002158  D008               	bra	u12310
 16640  00215A                     u12317:
 16641  00215A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16642  00215E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16643  002162  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16644  002166  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16645  00216A                     u12310:
 16646  00216A  0101               	movlb	1	; () banked
 16647  00216C  51BC               	movf	_tcpHeader& (0+255),w,b
 16648  00216E  0100               	movlb	0	; () banked
 16649  002170  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16650  002172  E150               	bnz	l8617
 16651  002174  0101               	movlb	1	; () banked
 16652  002176  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
 16653  002178  0100               	movlb	0	; () banked
 16654  00217A  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16655  00217C  E14B               	bnz	l8617
 16656                           
 16657                           ; BSR set to: 0
 16658                           ;tcpv4.c: 805: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 16659  00217E  0E10               	movlw	16
 16660  002180  25FE               	addwf	_currentTCB& (0+255),w,b
 16661  002182  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16662  002184  0E00               	movlw	0
 16663  002186  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16664  002188  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16665  00218A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16666  00218E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16667  002192  0E00               	movlw	low (__smallconst shr (0+16))
 16668  002194  6EF8               	movwf	tblptru,c
 16669  002196  0E0F               	movlw	(high __ramtop+-1)
 16670  002198  64F7               	cpfsgt	tblptrh,c
 16671  00219A  D00D               	bra	u12337
 16672  00219C  0009               	tblrd		*+
 16673  00219E  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16674  0021A2  0009               	tblrd		*+
 16675  0021A4  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16676  0021A8  0009               	tblrd		*+
 16677  0021AA  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16678  0021AE  0009               	tblrd		*+
 16679  0021B0  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16680  0021B4  D00C               	bra	u12330
 16681  0021B6                     u12337:
 16682  0021B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 16683  0021BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 16684  0021BE  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16685  0021C2  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16686  0021C6  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 16687  0021CA  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 16688  0021CE                     u12330:
 16689  0021CE  0E01               	movlw	1
 16690  0021D0  0100               	movlb	0	; () banked
 16691  0021D2  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16692  0021D4  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 16693  0021D6  0E00               	movlw	0
 16694  0021D8  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16695  0021DA  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 16696  0021DC  0E00               	movlw	0
 16697  0021DE  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16698  0021E0  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 16699  0021E2  0E00               	movlw	0
 16700  0021E4  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16701  0021E6  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 16702  0021E8  0101               	movlb	1	; () banked
 16703  0021EA  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 16704  0021EC  0100               	movlb	0	; () banked
 16705  0021EE  19C9               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 16706  0021F0  E111               	bnz	l8617
 16707  0021F2  0101               	movlb	1	; () banked
 16708  0021F4  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 16709  0021F6  0100               	movlb	0	; () banked
 16710  0021F8  19CA               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 16711  0021FA  E10C               	bnz	l8617
 16712  0021FC  0101               	movlb	1	; () banked
 16713  0021FE  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 16714  002200  0100               	movlb	0	; () banked
 16715  002202  19CB               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 16716  002204  E107               	bnz	l8617
 16717  002206  0101               	movlb	1	; () banked
 16718  002208  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 16719  00220A  0100               	movlb	0	; () banked
 16720  00220C  19CC               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 16721  00220E  E102               	bnz	l8617
 16722                           
 16723                           ; BSR set to: 0
 16724                           ;tcpv4.c: 807: nextState = ESTABLISHED;
 16725  002210  0E04               	movlw	4
 16726  002212  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16727  002214                     l8617:
 16728                           
 16729                           ; BSR set to: 0
 16730                           ;tcpv4.c: 808: currentTCB->socketState = SOCKET_CONNECTED;
 16731  002214  0E36               	movlw	54
 16732  002216  25FE               	addwf	_currentTCB& (0+255),w,b
 16733  002218  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16734  00221A  0E00               	movlw	0
 16735  00221C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16736  00221E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16737  002220  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16738  002224  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16739  002228  0E00               	movlw	low (__smallconst shr (0+16))
 16740  00222A  6EF8               	movwf	tblptru,c
 16741  00222C  0E0F               	movlw	(high __ramtop+-1)
 16742  00222E  64F7               	cpfsgt	tblptrh,c
 16743  002230  D004               	bra	u12357
 16744  002232  0E03               	movlw	3
 16745  002234  6EF5               	movwf	tablat,c
 16746  002236  000C               	tblwt		*
 16747  002238  D001               	bra	u12350
 16748  00223A                     u12357:
 16749  00223A  D181               	goto	u12477
 16750  00223C                     u12350:
 16751  00223C  EFDA  F01C         	goto	l8831
 16752  002240                     l8619:
 16753                           
 16754                           ; BSR set to: 0
 16755                           ;tcpv4.c: 812: ;
 16756                           ;tcpv4.c: 816: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 16757  002240  0E02               	movlw	2
 16758  002242  25FE               	addwf	_currentTCB& (0+255),w,b
 16759  002244  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16760  002246  0E00               	movlw	0
 16761  002248  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16762  00224A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16763  00224C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16764  002250  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16765  002254  0E00               	movlw	low (__smallconst shr (0+16))
 16766  002256  6EF8               	movwf	tblptru,c
 16767  002258  0E0F               	movlw	(high __ramtop+-1)
 16768  00225A  64F7               	cpfsgt	tblptrh,c
 16769  00225C  D00D               	bra	u12367
 16770  00225E  0009               	tblrd		*+
 16771  002260  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16772  002264  0009               	tblrd		*+
 16773  002266  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16774  00226A  0009               	tblrd		*+
 16775  00226C  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16776  002270  0009               	tblrd		*+
 16777  002272  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16778  002276  D00C               	bra	u12360
 16779  002278                     u12367:
 16780  002278  CFF6 FFE9          	movff	tblptrl,fsr0l
 16781  00227C  CFF7 FFEA          	movff	tblptrh,fsr0h
 16782  002280  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16783  002284  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16784  002288  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 16785  00228C  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 16786  002290                     u12360:
 16787  002290  0101               	movlb	1	; () banked
 16788  002292  5196               	movf	_receivedRemoteAddress& (0+255),w,b
 16789  002294  0100               	movlb	0	; () banked
 16790  002296  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16791  002298  E10F               	bnz	u12371
 16792  00229A  0101               	movlb	1	; () banked
 16793  00229C  5197               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 16794  00229E  0100               	movlb	0	; () banked
 16795  0022A0  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16796  0022A2  E10A               	bnz	u12371
 16797  0022A4  0101               	movlb	1	; () banked
 16798  0022A6  5198               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 16799  0022A8  0100               	movlb	0	; () banked
 16800  0022AA  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16801  0022AC  E105               	bnz	u12371
 16802  0022AE  0101               	movlb	1	; () banked
 16803  0022B0  5199               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 16804  0022B2  0100               	movlb	0	; () banked
 16805  0022B4  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16806  0022B6  A4D8               	btfss	status,2,c
 16807  0022B8                     u12371:
 16808  0022B8  EFDA  F01C         	goto	l8831
 16809                           
 16810                           ; BSR set to: 0
 16811  0022BC  0E06               	movlw	6
 16812  0022BE  25FE               	addwf	_currentTCB& (0+255),w,b
 16813  0022C0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16814  0022C2  0E00               	movlw	0
 16815  0022C4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16816  0022C6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16817  0022C8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16818  0022CC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16819  0022D0  0E00               	movlw	low (__smallconst shr (0+16))
 16820  0022D2  6EF8               	movwf	tblptru,c
 16821  0022D4  0E0F               	movlw	(high __ramtop+-1)
 16822  0022D6  64F7               	cpfsgt	tblptrh,c
 16823  0022D8  D007               	bra	u12387
 16824  0022DA  0009               	tblrd		*+
 16825  0022DC  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16826  0022E0  0009               	tblrd		*+
 16827  0022E2  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16828  0022E6  D008               	bra	u12380
 16829  0022E8                     u12387:
 16830  0022E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 16831  0022EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 16832  0022F0  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16833  0022F4  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16834  0022F8                     u12380:
 16835  0022F8  0101               	movlb	1	; () banked
 16836  0022FA  51BC               	movf	_tcpHeader& (0+255),w,b
 16837  0022FC  0100               	movlb	0	; () banked
 16838  0022FE  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16839  002300  E105               	bnz	u12391
 16840  002302  0101               	movlb	1	; () banked
 16841  002304  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
 16842  002306  0100               	movlb	0	; () banked
 16843  002308  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16844  00230A  A4D8               	btfss	status,2,c
 16845  00230C                     u12391:
 16846  00230C  EFDA  F01C         	goto	l8831
 16847                           
 16848                           ; BSR set to: 0
 16849                           ;tcpv4.c: 817: {
 16850                           ;tcpv4.c: 820: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 16851  002310  0E0C               	movlw	12
 16852  002312  25FE               	addwf	_currentTCB& (0+255),w,b
 16853  002314  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16854  002316  0E00               	movlw	0
 16855  002318  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16856  00231A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16857  00231C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16858  002320  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16859  002324  0E00               	movlw	low (__smallconst shr (0+16))
 16860  002326  6EF8               	movwf	tblptru,c
 16861  002328  0E0F               	movlw	(high __ramtop+-1)
 16862  00232A  64F7               	cpfsgt	tblptrh,c
 16863  00232C  D00D               	bra	u12407
 16864  00232E  0009               	tblrd		*+
 16865  002330  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16866  002334  0009               	tblrd		*+
 16867  002336  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16868  00233A  0009               	tblrd		*+
 16869  00233C  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16870  002340  0009               	tblrd		*+
 16871  002342  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16872  002346  D00C               	bra	u12400
 16873  002348                     u12407:
 16874  002348  CFF6 FFE9          	movff	tblptrl,fsr0l
 16875  00234C  CFF7 FFEA          	movff	tblptrh,fsr0h
 16876  002350  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16877  002354  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16878  002358  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 16879  00235C  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 16880  002360                     u12400:
 16881  002360  0101               	movlb	1	; () banked
 16882  002362  51C0               	movf	(_tcpHeader+4)& (0+255),w,b
 16883  002364  0100               	movlb	0	; () banked
 16884  002366  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16885  002368  E10F               	bnz	u12411
 16886  00236A  0101               	movlb	1	; () banked
 16887  00236C  51C1               	movf	(_tcpHeader+5)& (0+255),w,b
 16888  00236E  0100               	movlb	0	; () banked
 16889  002370  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16890  002372  E10A               	bnz	u12411
 16891  002374  0101               	movlb	1	; () banked
 16892  002376  51C2               	movf	(_tcpHeader+6)& (0+255),w,b
 16893  002378  0100               	movlb	0	; () banked
 16894  00237A  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16895  00237C  E105               	bnz	u12411
 16896  00237E  0101               	movlb	1	; () banked
 16897  002380  51C3               	movf	(_tcpHeader+7)& (0+255),w,b
 16898  002382  0100               	movlb	0	; () banked
 16899  002384  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16900  002386  A4D8               	btfss	status,2,c
 16901  002388                     u12411:
 16902  002388  EFDA  F01C         	goto	l8831
 16903                           
 16904                           ; BSR set to: 0
 16905                           ;tcpv4.c: 821: {
 16906                           ;tcpv4.c: 823: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 16907  00238C  0E10               	movlw	16
 16908  00238E  25FE               	addwf	_currentTCB& (0+255),w,b
 16909  002390  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16910  002392  0E00               	movlw	0
 16911  002394  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16912  002396  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16913  002398  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16914  00239C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16915  0023A0  0E00               	movlw	low (__smallconst shr (0+16))
 16916  0023A2  6EF8               	movwf	tblptru,c
 16917  0023A4  0E0F               	movlw	(high __ramtop+-1)
 16918  0023A6  64F7               	cpfsgt	tblptrh,c
 16919  0023A8  D00D               	bra	u12427
 16920  0023AA  0009               	tblrd		*+
 16921  0023AC  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16922  0023B0  0009               	tblrd		*+
 16923  0023B2  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16924  0023B6  0009               	tblrd		*+
 16925  0023B8  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16926  0023BC  0009               	tblrd		*+
 16927  0023BE  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16928  0023C2  D00C               	bra	u12420
 16929  0023C4                     u12427:
 16930  0023C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 16931  0023C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 16932  0023CC  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16933  0023D0  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16934  0023D4  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 16935  0023D8  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 16936  0023DC                     u12420:
 16937  0023DC  0E01               	movlw	1
 16938  0023DE  0100               	movlb	0	; () banked
 16939  0023E0  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16940  0023E2  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 16941  0023E4  0E00               	movlw	0
 16942  0023E6  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16943  0023E8  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 16944  0023EA  0E00               	movlw	0
 16945  0023EC  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16946  0023EE  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 16947  0023F0  0E00               	movlw	0
 16948  0023F2  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16949  0023F4  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 16950  0023F6  0101               	movlb	1	; () banked
 16951  0023F8  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 16952  0023FA  0100               	movlb	0	; () banked
 16953  0023FC  19C9               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 16954  0023FE  E10F               	bnz	u12431
 16955  002400  0101               	movlb	1	; () banked
 16956  002402  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 16957  002404  0100               	movlb	0	; () banked
 16958  002406  19CA               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 16959  002408  E10A               	bnz	u12431
 16960  00240A  0101               	movlb	1	; () banked
 16961  00240C  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 16962  00240E  0100               	movlb	0	; () banked
 16963  002410  19CB               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 16964  002412  E105               	bnz	u12431
 16965  002414  0101               	movlb	1	; () banked
 16966  002416  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 16967  002418  0100               	movlb	0	; () banked
 16968  00241A  19CC               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 16969  00241C  A4D8               	btfss	status,2,c
 16970  00241E                     u12431:
 16971  00241E  EFDA  F01C         	goto	l8831
 16972                           
 16973                           ; BSR set to: 0
 16974                           ;tcpv4.c: 824: {
 16975                           ;tcpv4.c: 825: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 16976  002422  0E10               	movlw	16
 16977  002424  25FE               	addwf	_currentTCB& (0+255),w,b
 16978  002426  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16979  002428  0E00               	movlw	0
 16980  00242A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16981  00242C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16982  00242E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16983  002432  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16984  002436  0E00               	movlw	low (__smallconst shr (0+16))
 16985  002438  6EF8               	movwf	tblptru,c
 16986  00243A  0E0F               	movlw	(high __ramtop+-1)
 16987  00243C  64F7               	cpfsgt	tblptrh,c
 16988  00243E  D00D               	bra	u12447
 16989  002440  0009               	tblrd		*+
 16990  002442  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16991  002446  0009               	tblrd		*+
 16992  002448  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16993  00244C  0009               	tblrd		*+
 16994  00244E  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16995  002452  0009               	tblrd		*+
 16996  002454  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16997  002458  D00C               	bra	u12440
 16998  00245A                     u12447:
 16999  00245A  CFF6 FFE9          	movff	tblptrl,fsr0l
 17000  00245E  CFF7 FFEA          	movff	tblptrh,fsr0h
 17001  002462  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17002  002466  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17003  00246A  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 17004  00246E  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 17005  002472                     u12440:
 17006  002472  0E01               	movlw	1
 17007  002474  0100               	movlb	0	; () banked
 17008  002476  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17009  002478  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 17010  00247A  0E00               	movlw	0
 17011  00247C  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17012  00247E  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 17013  002480  0E00               	movlw	0
 17014  002482  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17015  002484  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 17016  002486  0E00               	movlw	0
 17017  002488  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17018  00248A  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 17019  00248C  0E10               	movlw	16
 17020  00248E  25FE               	addwf	_currentTCB& (0+255),w,b
 17021  002490  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 17022  002492  0E00               	movlw	0
 17023  002494  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17024  002496  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 17025  002498  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 17026  00249C  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 17027  0024A0  0E00               	movlw	low (__smallconst shr (0+16))
 17028  0024A2  6EF8               	movwf	tblptru,c
 17029  0024A4  0E0F               	movlw	(high __ramtop+-1)
 17030  0024A6  64F7               	cpfsgt	tblptrh,c
 17031  0024A8  D00D               	bra	u12457
 17032  0024AA  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 17033  0024AE  000D               	tblwt		*+
 17034  0024B0  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 17035  0024B4  000D               	tblwt		*+
 17036  0024B6  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 17037  0024BA  000D               	tblwt		*+
 17038  0024BC  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 17039  0024C0  000C               	tblwt		*
 17040  0024C2  D00C               	bra	u12450
 17041  0024C4                     u12457:
 17042  0024C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 17043  0024C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 17044  0024CC  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 17045  0024D0  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 17046  0024D4  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 17047  0024D8  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 17048  0024DC                     u12450:
 17049                           
 17050                           ;tcpv4.c: 827: currentTCB->timeout = 0;
 17051  0024DC  0E30               	movlw	48
 17052  0024DE  0100               	movlb	0	; () banked
 17053  0024E0  25FE               	addwf	_currentTCB& (0+255),w,b
 17054  0024E2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17055  0024E4  0E00               	movlw	0
 17056  0024E6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17057  0024E8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17058  0024EA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17059  0024EE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17060  0024F2  0E00               	movlw	low (__smallconst shr (0+16))
 17061  0024F4  6EF8               	movwf	tblptru,c
 17062  0024F6  0E0F               	movlw	(high __ramtop+-1)
 17063  0024F8  64F7               	cpfsgt	tblptrh,c
 17064  0024FA  D005               	bra	u12467
 17065  0024FC  6AF5               	clrf	tablat,c
 17066  0024FE  000D               	tblwt		*+
 17067  002500  6AF5               	clrf	tablat,c
 17068  002502  000C               	tblwt		*
 17069  002504  D006               	bra	u12460
 17070  002506                     u12467:
 17071  002506  CFF6 FFE9          	movff	tblptrl,fsr0l
 17072  00250A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17073  00250E  6AEE               	clrf	postinc0,c
 17074  002510  6AEF               	clrf	indf0,c
 17075  002512                     u12460:
 17076                           
 17077                           ;tcpv4.c: 829: nextState = ESTABLISHED;
 17078  002512  0E04               	movlw	4
 17079  002514  0100               	movlb	0	; () banked
 17080  002516  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 17081                           
 17082                           ; BSR set to: 0
 17083                           ;tcpv4.c: 830: currentTCB->socketState = SOCKET_CONNECTED;
 17084  002518  0E36               	movlw	54
 17085  00251A  25FE               	addwf	_currentTCB& (0+255),w,b
 17086  00251C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17087  00251E  0E00               	movlw	0
 17088  002520  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17089  002522  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17090  002524  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17091  002528  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17092  00252C  0E00               	movlw	low (__smallconst shr (0+16))
 17093  00252E  6EF8               	movwf	tblptru,c
 17094  002530  0E0F               	movlw	(high __ramtop+-1)
 17095  002532  64F7               	cpfsgt	tblptrh,c
 17096  002534  D004               	bra	u12477
 17097  002536  0E03               	movlw	3
 17098  002538  6EF5               	movwf	tablat,c
 17099  00253A  000C               	tblwt		*
 17100  00253C  D006               	bra	u12470
 17101  00253E                     u12477:
 17102  00253E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17103  002542  CFF7 FFEA          	movff	tblptrh,fsr0h
 17104  002546  0E03               	movlw	3
 17105  002548  6EEF               	movwf	indf0,c
 17106  00254A                     u12470:
 17107  00254A  EFDA  F01C         	goto	l8831
 17108  00254E                     l8633:
 17109                           
 17110                           ; BSR set to: 0
 17111                           ;tcpv4.c: 836: ;
 17112                           ;tcpv4.c: 838: currentTCB->timeout = 0;
 17113  00254E  0E30               	movlw	48
 17114  002550  25FE               	addwf	_currentTCB& (0+255),w,b
 17115  002552  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17116  002554  0E00               	movlw	0
 17117  002556  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17118  002558  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17119  00255A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17120  00255E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17121  002562  0E00               	movlw	low (__smallconst shr (0+16))
 17122  002564  6EF8               	movwf	tblptru,c
 17123  002566  0E0F               	movlw	(high __ramtop+-1)
 17124  002568  64F7               	cpfsgt	tblptrh,c
 17125  00256A  D005               	bra	u12487
 17126  00256C  6AF5               	clrf	tablat,c
 17127  00256E  000D               	tblwt		*+
 17128  002570  6AF5               	clrf	tablat,c
 17129  002572  000C               	tblwt		*
 17130  002574  D006               	bra	u12480
 17131  002576                     u12487:
 17132  002576  CFF6 FFE9          	movff	tblptrl,fsr0l
 17133  00257A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17134  00257E  6AEE               	clrf	postinc0,c
 17135  002580  6AEF               	clrf	indf0,c
 17136  002582                     u12480:
 17137                           
 17138                           ;tcpv4.c: 840: currentTCB->flags = 0x01U;
 17139  002582  0E35               	movlw	53
 17140  002584  0100               	movlb	0	; () banked
 17141  002586  25FE               	addwf	_currentTCB& (0+255),w,b
 17142  002588  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17143  00258A  0E00               	movlw	0
 17144  00258C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17145  00258E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17146  002590  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17147  002594  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17148  002598  0E00               	movlw	low (__smallconst shr (0+16))
 17149  00259A  6EF8               	movwf	tblptru,c
 17150  00259C  0E0F               	movlw	(high __ramtop+-1)
 17151  00259E  64F7               	cpfsgt	tblptrh,c
 17152  0025A0  D004               	bra	u12497
 17153  0025A2  0E01               	movlw	1
 17154  0025A4  6EF5               	movwf	tablat,c
 17155  0025A6  000C               	tblwt		*
 17156  0025A8  D006               	bra	u12490
 17157  0025AA                     u12497:
 17158  0025AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 17159  0025AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 17160  0025B2  0E01               	movlw	1
 17161  0025B4  6EEF               	movwf	indf0,c
 17162  0025B6                     u12490:
 17163                           
 17164                           ;tcpv4.c: 841: currentTCB->timeout = ((unsigned long)1*2);
 17165  0025B6  0E30               	movlw	48
 17166  0025B8  0100               	movlb	0	; () banked
 17167  0025BA  25FE               	addwf	_currentTCB& (0+255),w,b
 17168  0025BC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17169  0025BE  0E00               	movlw	0
 17170  0025C0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17171  0025C2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17172  0025C4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17173  0025C8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17174  0025CC  0E00               	movlw	low (__smallconst shr (0+16))
 17175  0025CE  6EF8               	movwf	tblptru,c
 17176  0025D0  0E0F               	movlw	(high __ramtop+-1)
 17177  0025D2  64F7               	cpfsgt	tblptrh,c
 17178  0025D4  D006               	bra	u12507
 17179  0025D6  0E02               	movlw	2
 17180  0025D8  6EF5               	movwf	tablat,c
 17181  0025DA  000D               	tblwt		*+
 17182  0025DC  6AF5               	clrf	tablat,c
 17183  0025DE  000C               	tblwt		*
 17184  0025E0  D007               	bra	u12500
 17185  0025E2                     u12507:
 17186  0025E2  CFF6 FFE9          	movff	tblptrl,fsr0l
 17187  0025E6  CFF7 FFEA          	movff	tblptrh,fsr0h
 17188  0025EA  0E02               	movlw	2
 17189  0025EC  6EEE               	movwf	postinc0,c
 17190  0025EE  6AEF               	clrf	indf0,c
 17191  0025F0                     u12500:
 17192                           
 17193                           ;tcpv4.c: 842: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 17194  0025F0  0E32               	movlw	50
 17195  0025F2  0100               	movlb	0	; () banked
 17196  0025F4  25FE               	addwf	_currentTCB& (0+255),w,b
 17197  0025F6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17198  0025F8  0E00               	movlw	0
 17199  0025FA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17200  0025FC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17201  0025FE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17202  002602  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17203  002606  0E00               	movlw	low (__smallconst shr (0+16))
 17204  002608  6EF8               	movwf	tblptru,c
 17205  00260A  0E0F               	movlw	(high __ramtop+-1)
 17206  00260C  64F7               	cpfsgt	tblptrh,c
 17207  00260E  D006               	bra	u12517
 17208  002610  0E02               	movlw	2
 17209  002612  6EF5               	movwf	tablat,c
 17210  002614  000D               	tblwt		*+
 17211  002616  6AF5               	clrf	tablat,c
 17212  002618  000C               	tblwt		*
 17213  00261A  D007               	bra	u12510
 17214  00261C                     u12517:
 17215  00261C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17216  002620  CFF7 FFEA          	movff	tblptrh,fsr0h
 17217  002624  0E02               	movlw	2
 17218  002626  6EEE               	movwf	postinc0,c
 17219  002628  6AEF               	clrf	indf0,c
 17220  00262A                     u12510:
 17221                           
 17222                           ;tcpv4.c: 843: currentTCB->timeoutsCount = (5u);
 17223  00262A  0E34               	movlw	52
 17224  00262C  0100               	movlb	0	; () banked
 17225  00262E  25FE               	addwf	_currentTCB& (0+255),w,b
 17226  002630  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17227  002632  0E00               	movlw	0
 17228  002634  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17229  002636  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17230  002638  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17231  00263C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17232  002640  0E00               	movlw	low (__smallconst shr (0+16))
 17233  002642  6EF8               	movwf	tblptru,c
 17234  002644  0E0F               	movlw	(high __ramtop+-1)
 17235  002646  64F7               	cpfsgt	tblptrh,c
 17236  002648  D004               	bra	u12527
 17237  00264A  0E05               	movlw	5
 17238  00264C  6EF5               	movwf	tablat,c
 17239  00264E  000C               	tblwt		*
 17240  002650  D006               	bra	u12520
 17241  002652                     u12527:
 17242  002652  CFF6 FFE9          	movff	tblptrl,fsr0l
 17243  002656  CFF7 FFEA          	movff	tblptrh,fsr0h
 17244  00265A  0E05               	movlw	5
 17245  00265C  6EEF               	movwf	indf0,c
 17246  00265E                     u12520:
 17247  00265E                     l8635:
 17248                           
 17249                           ;tcpv4.c: 845: nextState = FIN_WAIT_1;
 17250  00265E  0E05               	movlw	5
 17251  002660  0100               	movlb	0	; () banked
 17252  002662  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 17253  002664                     l8637:
 17254                           
 17255                           ;tcpv4.c: 846: TCP_Snd(currentTCB);
 17256  002664  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 17257  002668  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 17258  00266C  EC11  F01D         	call	_TCP_Snd	;wreg free
 17259                           
 17260                           ;tcpv4.c: 847: break;
 17261  002670  EFDA  F01C         	goto	l8831
 17262  002674                     l8639:
 17263                           
 17264                           ; BSR set to: 0
 17265                           ;tcpv4.c: 849: case RCV_RST:
 17266                           ;tcpv4.c: 851: ;
 17267                           ;tcpv4.c: 853: if (currentTCB->localPort == tcpHeader.destPort)
 17268  002674  C0FE  FFF6         	movff	_currentTCB,tblptrl
 17269  002678  C0FF  FFF7         	movff	_currentTCB+1,tblptrh
 17270  00267C  0E00               	movlw	low (__smallconst shr (0+16))
 17271  00267E  6EF8               	movwf	tblptru,c
 17272  002680  0E0F               	movlw	(high __ramtop+-1)
 17273  002682  64F7               	cpfsgt	tblptrh,c
 17274  002684  D007               	bra	u12537
 17275  002686  0009               	tblrd		*+
 17276  002688  CFF5 F0C3          	movff	tablat,??_TCP_FiniteStateMachine
 17277  00268C  0009               	tblrd		*+
 17278  00268E  CFF5 F0C4          	movff	tablat,??_TCP_FiniteStateMachine+1
 17279  002692  D008               	bra	u12530
 17280  002694                     u12537:
 17281  002694  CFF6 FFE9          	movff	tblptrl,fsr0l
 17282  002698  CFF7 FFEA          	movff	tblptrh,fsr0h
 17283  00269C  CFEE F0C3          	movff	postinc0,??_TCP_FiniteStateMachine
 17284  0026A0  CFEE F0C4          	movff	postinc0,??_TCP_FiniteStateMachine+1
 17285  0026A4                     u12530:
 17286  0026A4  0101               	movlb	1	; () banked
 17287  0026A6  51BE               	movf	(_tcpHeader+2)& (0+255),w,b
 17288  0026A8  0100               	movlb	0	; () banked
 17289  0026AA  19C3               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 17290  0026AC  E105               	bnz	u12541
 17291  0026AE  0101               	movlb	1	; () banked
 17292  0026B0  51BF               	movf	(_tcpHeader+3)& (0+255),w,b
 17293  0026B2  0100               	movlb	0	; () banked
 17294  0026B4  19C4               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 17295  0026B6  A4D8               	btfss	status,2,c
 17296  0026B8                     u12541:
 17297  0026B8  EFDA  F01C         	goto	l8831
 17298                           
 17299                           ; BSR set to: 0
 17300                           ;tcpv4.c: 854: {
 17301                           ;tcpv4.c: 855: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 17302  0026BC  0E0C               	movlw	12
 17303  0026BE  25FE               	addwf	_currentTCB& (0+255),w,b
 17304  0026C0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17305  0026C2  0E00               	movlw	0
 17306  0026C4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17307  0026C6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17308  0026C8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17309  0026CC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17310  0026D0  0E00               	movlw	low (__smallconst shr (0+16))
 17311  0026D2  6EF8               	movwf	tblptru,c
 17312  0026D4  0E0F               	movlw	(high __ramtop+-1)
 17313  0026D6  64F7               	cpfsgt	tblptrh,c
 17314  0026D8  D00D               	bra	u12557
 17315  0026DA  0009               	tblrd		*+
 17316  0026DC  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 17317  0026E0  0009               	tblrd		*+
 17318  0026E2  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 17319  0026E6  0009               	tblrd		*+
 17320  0026E8  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 17321  0026EC  0009               	tblrd		*+
 17322  0026EE  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 17323  0026F2  D00C               	bra	u12550
 17324  0026F4                     u12557:
 17325  0026F4  CFF6 FFE9          	movff	tblptrl,fsr0l
 17326  0026F8  CFF7 FFEA          	movff	tblptrh,fsr0h
 17327  0026FC  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17328  002700  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17329  002704  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 17330  002708  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 17331  00270C                     u12550:
 17332  00270C  0101               	movlb	1	; () banked
 17333  00270E  51C0               	movf	(_tcpHeader+4)& (0+255),w,b
 17334  002710  0100               	movlb	0	; () banked
 17335  002712  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17336  002714  E10F               	bnz	u12561
 17337  002716  0101               	movlb	1	; () banked
 17338  002718  51C1               	movf	(_tcpHeader+5)& (0+255),w,b
 17339  00271A  0100               	movlb	0	; () banked
 17340  00271C  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17341  00271E  E10A               	bnz	u12561
 17342  002720  0101               	movlb	1	; () banked
 17343  002722  51C2               	movf	(_tcpHeader+6)& (0+255),w,b
 17344  002724  0100               	movlb	0	; () banked
 17345  002726  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17346  002728  E105               	bnz	u12561
 17347  00272A  0101               	movlb	1	; () banked
 17348  00272C  51C3               	movf	(_tcpHeader+7)& (0+255),w,b
 17349  00272E  0100               	movlb	0	; () banked
 17350  002730  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17351  002732  A4D8               	btfss	status,2,c
 17352  002734                     u12561:
 17353  002734  EFDA  F01C         	goto	l8831
 17354                           
 17355                           ; BSR set to: 0
 17356                           ;tcpv4.c: 856: {
 17357                           ;tcpv4.c: 857: ;
 17358                           ;tcpv4.c: 858: currentTCB->destIP = 0;
 17359  002738  0E02               	movlw	2
 17360  00273A  25FE               	addwf	_currentTCB& (0+255),w,b
 17361  00273C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17362  00273E  0E00               	movlw	0
 17363  002740  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17364  002742  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17365  002744  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17366  002748  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17367  00274C  0E00               	movlw	low (__smallconst shr (0+16))
 17368  00274E  6EF8               	movwf	tblptru,c
 17369  002750  0E0F               	movlw	(high __ramtop+-1)
 17370  002752  64F7               	cpfsgt	tblptrh,c
 17371  002754  D009               	bra	u12577
 17372  002756  6AF5               	clrf	tablat,c
 17373  002758  000D               	tblwt		*+
 17374  00275A  6AF5               	clrf	tablat,c
 17375  00275C  000D               	tblwt		*+
 17376  00275E  6AF5               	clrf	tablat,c
 17377  002760  000D               	tblwt		*+
 17378  002762  6AF5               	clrf	tablat,c
 17379  002764  000C               	tblwt		*
 17380  002766  D008               	bra	u12570
 17381  002768                     u12577:
 17382  002768  CFF6 FFE9          	movff	tblptrl,fsr0l
 17383  00276C  CFF7 FFEA          	movff	tblptrh,fsr0h
 17384  002770  6AEE               	clrf	postinc0,c
 17385  002772  6AEE               	clrf	postinc0,c
 17386  002774  6AEE               	clrf	postinc0,c
 17387  002776  6AEF               	clrf	indf0,c
 17388  002778                     u12570:
 17389                           
 17390                           ;tcpv4.c: 859: currentTCB->destPort = 0;
 17391  002778  0E06               	movlw	6
 17392  00277A  0100               	movlb	0	; () banked
 17393  00277C  25FE               	addwf	_currentTCB& (0+255),w,b
 17394  00277E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17395  002780  0E00               	movlw	0
 17396  002782  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17397  002784  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17398  002786  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17399  00278A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17400  00278E  0E00               	movlw	low (__smallconst shr (0+16))
 17401  002790  6EF8               	movwf	tblptru,c
 17402  002792  0E0F               	movlw	(high __ramtop+-1)
 17403  002794  64F7               	cpfsgt	tblptrh,c
 17404  002796  D005               	bra	u12587
 17405  002798  6AF5               	clrf	tablat,c
 17406  00279A  000D               	tblwt		*+
 17407  00279C  6AF5               	clrf	tablat,c
 17408  00279E  000C               	tblwt		*
 17409  0027A0  D006               	bra	u12580
 17410  0027A2                     u12587:
 17411  0027A2  CFF6 FFE9          	movff	tblptrl,fsr0l
 17412  0027A6  CFF7 FFEA          	movff	tblptrh,fsr0h
 17413  0027AA  6AEE               	clrf	postinc0,c
 17414  0027AC  6AEF               	clrf	indf0,c
 17415  0027AE                     u12580:
 17416                           
 17417                           ;tcpv4.c: 860: currentTCB->localSeqno = 0;
 17418  0027AE  0E10               	movlw	16
 17419  0027B0  0100               	movlb	0	; () banked
 17420  0027B2  25FE               	addwf	_currentTCB& (0+255),w,b
 17421  0027B4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17422  0027B6  0E00               	movlw	0
 17423  0027B8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17424  0027BA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17425  0027BC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17426  0027C0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17427  0027C4  0E00               	movlw	low (__smallconst shr (0+16))
 17428  0027C6  6EF8               	movwf	tblptru,c
 17429  0027C8  0E0F               	movlw	(high __ramtop+-1)
 17430  0027CA  64F7               	cpfsgt	tblptrh,c
 17431  0027CC  D009               	bra	u12597
 17432  0027CE  6AF5               	clrf	tablat,c
 17433  0027D0  000D               	tblwt		*+
 17434  0027D2  6AF5               	clrf	tablat,c
 17435  0027D4  000D               	tblwt		*+
 17436  0027D6  6AF5               	clrf	tablat,c
 17437  0027D8  000D               	tblwt		*+
 17438  0027DA  6AF5               	clrf	tablat,c
 17439  0027DC  000C               	tblwt		*
 17440  0027DE  D008               	bra	u12590
 17441  0027E0                     u12597:
 17442  0027E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 17443  0027E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 17444  0027E8  6AEE               	clrf	postinc0,c
 17445  0027EA  6AEE               	clrf	postinc0,c
 17446  0027EC  6AEE               	clrf	postinc0,c
 17447  0027EE  6AEF               	clrf	indf0,c
 17448  0027F0                     u12590:
 17449                           
 17450                           ;tcpv4.c: 861: currentTCB->localLastAck = 0;
 17451  0027F0  0E14               	movlw	20
 17452  0027F2  0100               	movlb	0	; () banked
 17453  0027F4  25FE               	addwf	_currentTCB& (0+255),w,b
 17454  0027F6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17455  0027F8  0E00               	movlw	0
 17456  0027FA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17457  0027FC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17458  0027FE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17459  002802  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17460  002806  0E00               	movlw	low (__smallconst shr (0+16))
 17461  002808  6EF8               	movwf	tblptru,c
 17462  00280A  0E0F               	movlw	(high __ramtop+-1)
 17463  00280C  64F7               	cpfsgt	tblptrh,c
 17464  00280E  D009               	bra	u12607
 17465  002810  6AF5               	clrf	tablat,c
 17466  002812  000D               	tblwt		*+
 17467  002814  6AF5               	clrf	tablat,c
 17468  002816  000D               	tblwt		*+
 17469  002818  6AF5               	clrf	tablat,c
 17470  00281A  000D               	tblwt		*+
 17471  00281C  6AF5               	clrf	tablat,c
 17472  00281E  000C               	tblwt		*
 17473  002820  D008               	bra	u12600
 17474  002822                     u12607:
 17475  002822  CFF6 FFE9          	movff	tblptrl,fsr0l
 17476  002826  CFF7 FFEA          	movff	tblptrh,fsr0h
 17477  00282A  6AEE               	clrf	postinc0,c
 17478  00282C  6AEE               	clrf	postinc0,c
 17479  00282E  6AEE               	clrf	postinc0,c
 17480  002830  6AEF               	clrf	indf0,c
 17481  002832                     u12600:
 17482                           
 17483                           ;tcpv4.c: 862: currentTCB->remoteSeqno = 0;
 17484  002832  0E08               	movlw	8
 17485  002834  0100               	movlb	0	; () banked
 17486  002836  25FE               	addwf	_currentTCB& (0+255),w,b
 17487  002838  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17488  00283A  0E00               	movlw	0
 17489  00283C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17490  00283E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17491  002840  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17492  002844  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17493  002848  0E00               	movlw	low (__smallconst shr (0+16))
 17494  00284A  6EF8               	movwf	tblptru,c
 17495  00284C  0E0F               	movlw	(high __ramtop+-1)
 17496  00284E  64F7               	cpfsgt	tblptrh,c
 17497  002850  D009               	bra	u12617
 17498  002852  6AF5               	clrf	tablat,c
 17499  002854  000D               	tblwt		*+
 17500  002856  6AF5               	clrf	tablat,c
 17501  002858  000D               	tblwt		*+
 17502  00285A  6AF5               	clrf	tablat,c
 17503  00285C  000D               	tblwt		*+
 17504  00285E  6AF5               	clrf	tablat,c
 17505  002860  000C               	tblwt		*
 17506  002862  D008               	bra	u12610
 17507  002864                     u12617:
 17508  002864  CFF6 FFE9          	movff	tblptrl,fsr0l
 17509  002868  CFF7 FFEA          	movff	tblptrh,fsr0h
 17510  00286C  6AEE               	clrf	postinc0,c
 17511  00286E  6AEE               	clrf	postinc0,c
 17512  002870  6AEE               	clrf	postinc0,c
 17513  002872  6AEF               	clrf	indf0,c
 17514  002874                     u12610:
 17515                           
 17516                           ;tcpv4.c: 863: currentTCB->remoteAck = 0;
 17517  002874  0E0C               	movlw	12
 17518  002876  0100               	movlb	0	; () banked
 17519  002878  25FE               	addwf	_currentTCB& (0+255),w,b
 17520  00287A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17521  00287C  0E00               	movlw	0
 17522  00287E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17523  002880  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17524  002882  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17525  002886  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17526  00288A  0E00               	movlw	low (__smallconst shr (0+16))
 17527  00288C  6EF8               	movwf	tblptru,c
 17528  00288E  0E0F               	movlw	(high __ramtop+-1)
 17529  002890  64F7               	cpfsgt	tblptrh,c
 17530  002892  D009               	bra	u12627
 17531  002894  6AF5               	clrf	tablat,c
 17532  002896  000D               	tblwt		*+
 17533  002898  6AF5               	clrf	tablat,c
 17534  00289A  000D               	tblwt		*+
 17535  00289C  6AF5               	clrf	tablat,c
 17536  00289E  000D               	tblwt		*+
 17537  0028A0  6AF5               	clrf	tablat,c
 17538  0028A2  000C               	tblwt		*
 17539  0028A4  D008               	bra	u12620
 17540  0028A6                     u12627:
 17541  0028A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 17542  0028AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 17543  0028AE  6AEE               	clrf	postinc0,c
 17544  0028B0  6AEE               	clrf	postinc0,c
 17545  0028B2  6AEE               	clrf	postinc0,c
 17546  0028B4  6AEF               	clrf	indf0,c
 17547  0028B6                     u12620:
 17548                           
 17549                           ;tcpv4.c: 864: currentTCB->remoteWnd = 0;
 17550  0028B6  0E18               	movlw	24
 17551  0028B8  0100               	movlb	0	; () banked
 17552  0028BA  25FE               	addwf	_currentTCB& (0+255),w,b
 17553  0028BC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17554  0028BE  0E00               	movlw	0
 17555  0028C0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17556  0028C2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17557  0028C4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17558  0028C8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17559  0028CC  0E00               	movlw	low (__smallconst shr (0+16))
 17560  0028CE  6EF8               	movwf	tblptru,c
 17561  0028D0  0E0F               	movlw	(high __ramtop+-1)
 17562  0028D2  64F7               	cpfsgt	tblptrh,c
 17563  0028D4  D005               	bra	u12637
 17564  0028D6  6AF5               	clrf	tablat,c
 17565  0028D8  000D               	tblwt		*+
 17566  0028DA  6AF5               	clrf	tablat,c
 17567  0028DC  000C               	tblwt		*
 17568  0028DE  D006               	bra	u12630
 17569  0028E0                     u12637:
 17570  0028E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 17571  0028E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 17572  0028E8  6AEE               	clrf	postinc0,c
 17573  0028EA  6AEF               	clrf	indf0,c
 17574  0028EC                     u12630:
 17575                           
 17576                           ;tcpv4.c: 865: currentTCB->mss = 0;
 17577  0028EC  0E1C               	movlw	28
 17578  0028EE  0100               	movlb	0	; () banked
 17579  0028F0  25FE               	addwf	_currentTCB& (0+255),w,b
 17580  0028F2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17581  0028F4  0E00               	movlw	0
 17582  0028F6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17583  0028F8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17584  0028FA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17585  0028FE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17586  002902  0E00               	movlw	low (__smallconst shr (0+16))
 17587  002904  6EF8               	movwf	tblptru,c
 17588  002906  0E0F               	movlw	(high __ramtop+-1)
 17589  002908  64F7               	cpfsgt	tblptrh,c
 17590  00290A  D005               	bra	u12647
 17591  00290C  6AF5               	clrf	tablat,c
 17592  00290E  000D               	tblwt		*+
 17593  002910  6AF5               	clrf	tablat,c
 17594  002912  000C               	tblwt		*
 17595  002914  D006               	bra	u12640
 17596  002916                     u12647:
 17597  002916  CFF6 FFE9          	movff	tblptrl,fsr0l
 17598  00291A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17599  00291E  6AEE               	clrf	postinc0,c
 17600  002920  6AEF               	clrf	indf0,c
 17601  002922                     u12640:
 17602  002922                     l8645:
 17603                           
 17604                           ;tcpv4.c: 867: nextState = LISTEN;
 17605  002922  0E01               	movlw	1
 17606  002924  0100               	movlb	0	; () banked
 17607  002926  EF97  F01A         	goto	L14
 17608  00292A                     l8647:
 17609                           
 17610                           ; BSR set to: 0
 17611                           ;tcpv4.c: 872: ;
 17612                           ;tcpv4.c: 873: if (currentTCB->timeoutsCount)
 17613  00292A  0E34               	movlw	52
 17614  00292C  25FE               	addwf	_currentTCB& (0+255),w,b
 17615  00292E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17616  002930  0E00               	movlw	0
 17617  002932  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17618  002934  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17619  002936  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17620  00293A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17621  00293E  0E00               	movlw	low (__smallconst shr (0+16))
 17622  002940  6EF8               	movwf	tblptru,c
 17623  002942  0E0F               	movlw	(high __ramtop+-1)
 17624  002944  64F7               	cpfsgt	tblptrh,c
 17625  002946  D003               	bra	u12657
 17626  002948  0008               	tblrd		*
 17627  00294A  50F5               	movf	tablat,w,c
 17628  00294C  D005               	bra	u12650
 17629  00294E                     u12657:
 17630  00294E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17631  002952  CFF7 FFEA          	movff	tblptrh,fsr0h
 17632  002956  50EF               	movf	indf0,w,c
 17633  002958                     u12650:
 17634  002958  0900               	iorlw	0
 17635  00295A  E001 D683          	bnz	l8637
 17636                           
 17637                           ;tcpv4.c: 877: else
 17638                           ;tcpv4.c: 878: {
 17639                           ;tcpv4.c: 880: currentTCB->flags = 0x04U;
 17640  00295E  0E35               	movlw	53
 17641  002960  0100               	movlb	0	; () banked
 17642  002962  25FE               	addwf	_currentTCB& (0+255),w,b
 17643  002964  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17644  002966  0E00               	movlw	0
 17645  002968  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17646  00296A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17647  00296C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17648  002970  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17649  002974  0E00               	movlw	low (__smallconst shr (0+16))
 17650  002976  6EF8               	movwf	tblptru,c
 17651  002978  0E0F               	movlw	(high __ramtop+-1)
 17652  00297A  64F7               	cpfsgt	tblptrh,c
 17653  00297C  D004               	bra	u12677
 17654  00297E  0E04               	movlw	4
 17655  002980  6EF5               	movwf	tablat,c
 17656  002982  000C               	tblwt		*
 17657  002984  D006               	bra	u12670
 17658  002986                     u12677:
 17659  002986  CFF6 FFE9          	movff	tblptrl,fsr0l
 17660  00298A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17661  00298E  0E04               	movlw	4
 17662  002990  6EEF               	movwf	indf0,c
 17663  002992                     u12670:
 17664                           
 17665                           ;tcpv4.c: 881: if(TCP_Snd(currentTCB))
 17666  002992  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 17667  002996  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 17668  00299A  EC11  F01D         	call	_TCP_Snd	;wreg free
 17669  00299E  0900               	iorlw	0
 17670  0029A0  E102 EFDA  F01C    	bz	l8831
 17671                           
 17672                           ; BSR set to: 0
 17673                           ;tcpv4.c: 882: {
 17674                           ;tcpv4.c: 883: currentTCB->destIP = 0;
 17675  0029A6  0E02               	movlw	2
 17676  0029A8  25FE               	addwf	_currentTCB& (0+255),w,b
 17677  0029AA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17678  0029AC  0E00               	movlw	0
 17679  0029AE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17680  0029B0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17681  0029B2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17682  0029B6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17683  0029BA  0E00               	movlw	low (__smallconst shr (0+16))
 17684  0029BC  6EF8               	movwf	tblptru,c
 17685  0029BE  0E0F               	movlw	(high __ramtop+-1)
 17686  0029C0  64F7               	cpfsgt	tblptrh,c
 17687  0029C2  D009               	bra	u12697
 17688  0029C4  6AF5               	clrf	tablat,c
 17689  0029C6  000D               	tblwt		*+
 17690  0029C8  6AF5               	clrf	tablat,c
 17691  0029CA  000D               	tblwt		*+
 17692  0029CC  6AF5               	clrf	tablat,c
 17693  0029CE  000D               	tblwt		*+
 17694  0029D0  6AF5               	clrf	tablat,c
 17695  0029D2  000C               	tblwt		*
 17696  0029D4  D008               	bra	u12690
 17697  0029D6                     u12697:
 17698  0029D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 17699  0029DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 17700  0029DE  6AEE               	clrf	postinc0,c
 17701  0029E0  6AEE               	clrf	postinc0,c
 17702  0029E2  6AEE               	clrf	postinc0,c
 17703  0029E4  6AEF               	clrf	indf0,c
 17704  0029E6                     u12690:
 17705                           
 17706                           ;tcpv4.c: 884: currentTCB->destPort = 0;
 17707  0029E6  0E06               	movlw	6
 17708  0029E8  0100               	movlb	0	; () banked
 17709  0029EA  25FE               	addwf	_currentTCB& (0+255),w,b
 17710  0029EC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17711  0029EE  0E00               	movlw	0
 17712  0029F0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17713  0029F2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17714  0029F4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17715  0029F8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17716  0029FC  0E00               	movlw	low (__smallconst shr (0+16))
 17717  0029FE  6EF8               	movwf	tblptru,c
 17718  002A00  0E0F               	movlw	(high __ramtop+-1)
 17719  002A02  64F7               	cpfsgt	tblptrh,c
 17720  002A04  D005               	bra	u12707
 17721  002A06  6AF5               	clrf	tablat,c
 17722  002A08  000D               	tblwt		*+
 17723  002A0A  6AF5               	clrf	tablat,c
 17724  002A0C  000C               	tblwt		*
 17725  002A0E  D006               	bra	u12700
 17726  002A10                     u12707:
 17727  002A10  CFF6 FFE9          	movff	tblptrl,fsr0l
 17728  002A14  CFF7 FFEA          	movff	tblptrh,fsr0h
 17729  002A18  6AEE               	clrf	postinc0,c
 17730  002A1A  6AEF               	clrf	indf0,c
 17731  002A1C                     u12700:
 17732                           
 17733                           ;tcpv4.c: 885: currentTCB->localSeqno = 0;
 17734  002A1C  0E10               	movlw	16
 17735  002A1E  0100               	movlb	0	; () banked
 17736  002A20  25FE               	addwf	_currentTCB& (0+255),w,b
 17737  002A22  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17738  002A24  0E00               	movlw	0
 17739  002A26  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17740  002A28  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17741  002A2A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17742  002A2E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17743  002A32  0E00               	movlw	low (__smallconst shr (0+16))
 17744  002A34  6EF8               	movwf	tblptru,c
 17745  002A36  0E0F               	movlw	(high __ramtop+-1)
 17746  002A38  64F7               	cpfsgt	tblptrh,c
 17747  002A3A  D009               	bra	u12717
 17748  002A3C  6AF5               	clrf	tablat,c
 17749  002A3E  000D               	tblwt		*+
 17750  002A40  6AF5               	clrf	tablat,c
 17751  002A42  000D               	tblwt		*+
 17752  002A44  6AF5               	clrf	tablat,c
 17753  002A46  000D               	tblwt		*+
 17754  002A48  6AF5               	clrf	tablat,c
 17755  002A4A  000C               	tblwt		*
 17756  002A4C  D008               	bra	u12710
 17757  002A4E                     u12717:
 17758  002A4E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17759  002A52  CFF7 FFEA          	movff	tblptrh,fsr0h
 17760  002A56  6AEE               	clrf	postinc0,c
 17761  002A58  6AEE               	clrf	postinc0,c
 17762  002A5A  6AEE               	clrf	postinc0,c
 17763  002A5C  6AEF               	clrf	indf0,c
 17764  002A5E                     u12710:
 17765                           
 17766                           ;tcpv4.c: 886: currentTCB->localLastAck = 0;
 17767  002A5E  0E14               	movlw	20
 17768  002A60  0100               	movlb	0	; () banked
 17769  002A62  25FE               	addwf	_currentTCB& (0+255),w,b
 17770  002A64  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17771  002A66  0E00               	movlw	0
 17772  002A68  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17773  002A6A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17774  002A6C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17775  002A70  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17776  002A74  0E00               	movlw	low (__smallconst shr (0+16))
 17777  002A76  6EF8               	movwf	tblptru,c
 17778  002A78  0E0F               	movlw	(high __ramtop+-1)
 17779  002A7A  64F7               	cpfsgt	tblptrh,c
 17780  002A7C  D009               	bra	u12727
 17781  002A7E  6AF5               	clrf	tablat,c
 17782  002A80  000D               	tblwt		*+
 17783  002A82  6AF5               	clrf	tablat,c
 17784  002A84  000D               	tblwt		*+
 17785  002A86  6AF5               	clrf	tablat,c
 17786  002A88  000D               	tblwt		*+
 17787  002A8A  6AF5               	clrf	tablat,c
 17788  002A8C  000C               	tblwt		*
 17789  002A8E  D008               	bra	u12720
 17790  002A90                     u12727:
 17791  002A90  CFF6 FFE9          	movff	tblptrl,fsr0l
 17792  002A94  CFF7 FFEA          	movff	tblptrh,fsr0h
 17793  002A98  6AEE               	clrf	postinc0,c
 17794  002A9A  6AEE               	clrf	postinc0,c
 17795  002A9C  6AEE               	clrf	postinc0,c
 17796  002A9E  6AEF               	clrf	indf0,c
 17797  002AA0                     u12720:
 17798                           
 17799                           ;tcpv4.c: 887: currentTCB->remoteSeqno = 0;
 17800  002AA0  0E08               	movlw	8
 17801  002AA2  0100               	movlb	0	; () banked
 17802  002AA4  25FE               	addwf	_currentTCB& (0+255),w,b
 17803  002AA6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17804  002AA8  0E00               	movlw	0
 17805  002AAA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17806  002AAC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17807  002AAE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17808  002AB2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17809  002AB6  0E00               	movlw	low (__smallconst shr (0+16))
 17810  002AB8  6EF8               	movwf	tblptru,c
 17811  002ABA  0E0F               	movlw	(high __ramtop+-1)
 17812  002ABC  64F7               	cpfsgt	tblptrh,c
 17813  002ABE  D009               	bra	u12737
 17814  002AC0  6AF5               	clrf	tablat,c
 17815  002AC2  000D               	tblwt		*+
 17816  002AC4  6AF5               	clrf	tablat,c
 17817  002AC6  000D               	tblwt		*+
 17818  002AC8  6AF5               	clrf	tablat,c
 17819  002ACA  000D               	tblwt		*+
 17820  002ACC  6AF5               	clrf	tablat,c
 17821  002ACE  000C               	tblwt		*
 17822  002AD0  D008               	bra	u12730
 17823  002AD2                     u12737:
 17824  002AD2  CFF6 FFE9          	movff	tblptrl,fsr0l
 17825  002AD6  CFF7 FFEA          	movff	tblptrh,fsr0h
 17826  002ADA  6AEE               	clrf	postinc0,c
 17827  002ADC  6AEE               	clrf	postinc0,c
 17828  002ADE  6AEE               	clrf	postinc0,c
 17829  002AE0  6AEF               	clrf	indf0,c
 17830  002AE2                     u12730:
 17831                           
 17832                           ;tcpv4.c: 888: currentTCB->remoteAck = 0;
 17833  002AE2  0E0C               	movlw	12
 17834  002AE4  0100               	movlb	0	; () banked
 17835  002AE6  25FE               	addwf	_currentTCB& (0+255),w,b
 17836  002AE8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17837  002AEA  0E00               	movlw	0
 17838  002AEC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17839  002AEE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17840  002AF0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17841  002AF4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17842  002AF8  0E00               	movlw	low (__smallconst shr (0+16))
 17843  002AFA  6EF8               	movwf	tblptru,c
 17844  002AFC  0E0F               	movlw	(high __ramtop+-1)
 17845  002AFE  64F7               	cpfsgt	tblptrh,c
 17846  002B00  D009               	bra	u12747
 17847  002B02  6AF5               	clrf	tablat,c
 17848  002B04  000D               	tblwt		*+
 17849  002B06  6AF5               	clrf	tablat,c
 17850  002B08  000D               	tblwt		*+
 17851  002B0A  6AF5               	clrf	tablat,c
 17852  002B0C  000D               	tblwt		*+
 17853  002B0E  6AF5               	clrf	tablat,c
 17854  002B10  000C               	tblwt		*
 17855  002B12  D008               	bra	u12740
 17856  002B14                     u12747:
 17857  002B14  CFF6 FFE9          	movff	tblptrl,fsr0l
 17858  002B18  CFF7 FFEA          	movff	tblptrh,fsr0h
 17859  002B1C  6AEE               	clrf	postinc0,c
 17860  002B1E  6AEE               	clrf	postinc0,c
 17861  002B20  6AEE               	clrf	postinc0,c
 17862  002B22  6AEF               	clrf	indf0,c
 17863  002B24                     u12740:
 17864                           
 17865                           ;tcpv4.c: 889: currentTCB->remoteWnd = 0;
 17866  002B24  0E18               	movlw	24
 17867  002B26  0100               	movlb	0	; () banked
 17868  002B28  25FE               	addwf	_currentTCB& (0+255),w,b
 17869  002B2A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17870  002B2C  0E00               	movlw	0
 17871  002B2E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17872  002B30  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17873  002B32  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17874  002B36  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17875  002B3A  0E00               	movlw	low (__smallconst shr (0+16))
 17876  002B3C  6EF8               	movwf	tblptru,c
 17877  002B3E  0E0F               	movlw	(high __ramtop+-1)
 17878  002B40  64F7               	cpfsgt	tblptrh,c
 17879  002B42  D005               	bra	u12757
 17880  002B44  6AF5               	clrf	tablat,c
 17881  002B46  000D               	tblwt		*+
 17882  002B48  6AF5               	clrf	tablat,c
 17883  002B4A  000C               	tblwt		*
 17884  002B4C  D006               	bra	u12750
 17885  002B4E                     u12757:
 17886  002B4E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17887  002B52  CFF7 FFEA          	movff	tblptrh,fsr0h
 17888  002B56  6AEE               	clrf	postinc0,c
 17889  002B58  6AEF               	clrf	indf0,c
 17890  002B5A                     u12750:
 17891                           
 17892                           ;tcpv4.c: 890: currentTCB->mss = 0;
 17893  002B5A  0E1C               	movlw	28
 17894  002B5C  0100               	movlb	0	; () banked
 17895  002B5E  25FE               	addwf	_currentTCB& (0+255),w,b
 17896  002B60  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17897  002B62  0E00               	movlw	0
 17898  002B64  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17899  002B66  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17900  002B68  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17901  002B6C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17902  002B70  0E00               	movlw	low (__smallconst shr (0+16))
 17903  002B72  6EF8               	movwf	tblptru,c
 17904  002B74  0E0F               	movlw	(high __ramtop+-1)
 17905  002B76  64F7               	cpfsgt	tblptrh,c
 17906  002B78  D005               	bra	u12767
 17907  002B7A  6AF5               	clrf	tablat,c
 17908  002B7C  000D               	tblwt		*+
 17909  002B7E  6AF5               	clrf	tablat,c
 17910  002B80  000C               	tblwt		*
 17911  002B82  D006               	bra	u12760
 17912  002B84                     u12767:
 17913  002B84  CFF6 FFE9          	movff	tblptrl,fsr0l
 17914  002B88  CFF7 FFEA          	movff	tblptrh,fsr0h
 17915  002B8C  6AEE               	clrf	postinc0,c
 17916  002B8E  6AEF               	clrf	indf0,c
 17917  002B90                     u12760:
 17918  002B90  D6C8               	goto	l8645
 17919  002B92                     l8661:
 17920  002B92  0100               	movlb	0	; () banked
 17921  002B94  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 17922                           
 17923                           ; Switch size 1, requested type "speed"
 17924                           ; Number of cases is 6, Range of values is 0 to 12
 17925                           ; switch strategies available:
 17926                           ; Name         Instructions Cycles
 17927                           ; simple_byte           19    10 (average)
 17928                           ;	Chosen strategy is simple_byte
 17929  002B96  E101 D4DA          	bz	l8633
 17930  002B9A  0A04               	xorlw	4	; case 4
 17931  002B9C  E102 EF20  F011    	bz	l8619
 17932  002BA2  0A01               	xorlw	1	; case 5
 17933  002BA4  E102 EF1B  F010    	bz	l8607
 17934  002BAA  0A0C               	xorlw	12	; case 9
 17935  002BAC  E101 D562          	bz	l8639
 17936  002BB0  0A03               	xorlw	3	; case 10
 17937  002BB2  E101 D55F          	bz	l8639
 17938  002BB6  0A06               	xorlw	6	; case 12
 17939  002BB8  E101 D6B7          	bz	l8647
 17940  002BBC  EFDA  F01C         	goto	l8831
 17941  002BC0                     l8663:
 17942                           
 17943                           ; BSR set to: 0
 17944                           ;tcpv4.c: 904: ;
 17945                           ;tcpv4.c: 905: if (currentTCB->destIP == receivedRemoteAddress)
 17946  002BC0  0E02               	movlw	2
 17947  002BC2  25FE               	addwf	_currentTCB& (0+255),w,b
 17948  002BC4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17949  002BC6  0E00               	movlw	0
 17950  002BC8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17951  002BCA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17952  002BCC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17953  002BD0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17954  002BD4  0E00               	movlw	low (__smallconst shr (0+16))
 17955  002BD6  6EF8               	movwf	tblptru,c
 17956  002BD8  0E0F               	movlw	(high __ramtop+-1)
 17957  002BDA  64F7               	cpfsgt	tblptrh,c
 17958  002BDC  D00D               	bra	u12777
 17959  002BDE  0009               	tblrd		*+
 17960  002BE0  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 17961  002BE4  0009               	tblrd		*+
 17962  002BE6  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 17963  002BEA  0009               	tblrd		*+
 17964  002BEC  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 17965  002BF0  0009               	tblrd		*+
 17966  002BF2  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 17967  002BF6  D00C               	bra	u12770
 17968  002BF8                     u12777:
 17969  002BF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 17970  002BFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 17971  002C00  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17972  002C04  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17973  002C08  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 17974  002C0C  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 17975  002C10                     u12770:
 17976  002C10  0101               	movlb	1	; () banked
 17977  002C12  5196               	movf	_receivedRemoteAddress& (0+255),w,b
 17978  002C14  0100               	movlb	0	; () banked
 17979  002C16  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17980  002C18  E10F               	bnz	u12781
 17981  002C1A  0101               	movlb	1	; () banked
 17982  002C1C  5197               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 17983  002C1E  0100               	movlb	0	; () banked
 17984  002C20  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17985  002C22  E10A               	bnz	u12781
 17986  002C24  0101               	movlb	1	; () banked
 17987  002C26  5198               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 17988  002C28  0100               	movlb	0	; () banked
 17989  002C2A  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17990  002C2C  E105               	bnz	u12781
 17991  002C2E  0101               	movlb	1	; () banked
 17992  002C30  5199               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 17993  002C32  0100               	movlb	0	; () banked
 17994  002C34  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17995  002C36  A4D8               	btfss	status,2,c
 17996  002C38                     u12781:
 17997  002C38  EFDA  F01C         	goto	l8831
 17998                           
 17999                           ; BSR set to: 0
 18000                           ;tcpv4.c: 906: {
 18001                           ;tcpv4.c: 910: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 18002  002C3C  0E0C               	movlw	12
 18003  002C3E  25FE               	addwf	_currentTCB& (0+255),w,b
 18004  002C40  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18005  002C42  0E00               	movlw	0
 18006  002C44  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18007  002C46  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18008  002C48  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18009  002C4C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18010  002C50  0E00               	movlw	low (__smallconst shr (0+16))
 18011  002C52  6EF8               	movwf	tblptru,c
 18012  002C54  0E0F               	movlw	(high __ramtop+-1)
 18013  002C56  64F7               	cpfsgt	tblptrh,c
 18014  002C58  D00D               	bra	u12797
 18015  002C5A  0009               	tblrd		*+
 18016  002C5C  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18017  002C60  0009               	tblrd		*+
 18018  002C62  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18019  002C66  0009               	tblrd		*+
 18020  002C68  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18021  002C6C  0009               	tblrd		*+
 18022  002C6E  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18023  002C72  D00C               	bra	u12790
 18024  002C74                     u12797:
 18025  002C74  CFF6 FFE9          	movff	tblptrl,fsr0l
 18026  002C78  CFF7 FFEA          	movff	tblptrh,fsr0h
 18027  002C7C  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18028  002C80  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18029  002C84  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18030  002C88  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18031  002C8C                     u12790:
 18032  002C8C  0101               	movlb	1	; () banked
 18033  002C8E  51C0               	movf	(_tcpHeader+4)& (0+255),w,b
 18034  002C90  0100               	movlb	0	; () banked
 18035  002C92  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18036  002C94  E10F               	bnz	u12801
 18037  002C96  0101               	movlb	1	; () banked
 18038  002C98  51C1               	movf	(_tcpHeader+5)& (0+255),w,b
 18039  002C9A  0100               	movlb	0	; () banked
 18040  002C9C  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18041  002C9E  E10A               	bnz	u12801
 18042  002CA0  0101               	movlb	1	; () banked
 18043  002CA2  51C2               	movf	(_tcpHeader+6)& (0+255),w,b
 18044  002CA4  0100               	movlb	0	; () banked
 18045  002CA6  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18046  002CA8  E105               	bnz	u12801
 18047  002CAA  0101               	movlb	1	; () banked
 18048  002CAC  51C3               	movf	(_tcpHeader+7)& (0+255),w,b
 18049  002CAE  0100               	movlb	0	; () banked
 18050  002CB0  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18051  002CB2  A4D8               	btfss	status,2,c
 18052  002CB4                     u12801:
 18053  002CB4  EFDA  F01C         	goto	l8831
 18054                           
 18055                           ; BSR set to: 0
 18056                           ;tcpv4.c: 911: {
 18057                           ;tcpv4.c: 915: if (currentTCB->localLastAck < tcpHeader.ackNumber)
 18058  002CB8  0E14               	movlw	20
 18059  002CBA  25FE               	addwf	_currentTCB& (0+255),w,b
 18060  002CBC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18061  002CBE  0E00               	movlw	0
 18062  002CC0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18063  002CC2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18064  002CC4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18065  002CC8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18066  002CCC  0E00               	movlw	low (__smallconst shr (0+16))
 18067  002CCE  6EF8               	movwf	tblptru,c
 18068  002CD0  0E0F               	movlw	(high __ramtop+-1)
 18069  002CD2  64F7               	cpfsgt	tblptrh,c
 18070  002CD4  D00D               	bra	u12817
 18071  002CD6  0009               	tblrd		*+
 18072  002CD8  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18073  002CDC  0009               	tblrd		*+
 18074  002CDE  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18075  002CE2  0009               	tblrd		*+
 18076  002CE4  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18077  002CE8  0009               	tblrd		*+
 18078  002CEA  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18079  002CEE  D00C               	bra	u12810
 18080  002CF0                     u12817:
 18081  002CF0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18082  002CF4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18083  002CF8  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18084  002CFC  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18085  002D00  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18086  002D04  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18087  002D08                     u12810:
 18088  002D08  0101               	movlb	1	; () banked
 18089  002D0A  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 18090  002D0C  0100               	movlb	0	; () banked
 18091  002D0E  5DC5               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18092  002D10  0101               	movlb	1	; () banked
 18093  002D12  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 18094  002D14  0100               	movlb	0	; () banked
 18095  002D16  59C6               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18096  002D18  0101               	movlb	1	; () banked
 18097  002D1A  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 18098  002D1C  0100               	movlb	0	; () banked
 18099  002D1E  59C7               	subwfb	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18100  002D20  0101               	movlb	1	; () banked
 18101  002D22  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 18102  002D24  0100               	movlb	0	; () banked
 18103  002D26  59C8               	subwfb	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18104  002D28  E302 EFDA  F01C    	bc	l8831
 18105                           
 18106                           ; BSR set to: 0
 18107                           ;tcpv4.c: 916: {
 18108                           ;tcpv4.c: 918: if ((currentTCB->localSeqno + 1) >= tcpHeader.ackNumber)
 18109  002D2E  0E10               	movlw	16
 18110  002D30  25FE               	addwf	_currentTCB& (0+255),w,b
 18111  002D32  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18112  002D34  0E00               	movlw	0
 18113  002D36  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18114  002D38  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18115  002D3A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18116  002D3E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18117  002D42  0E00               	movlw	low (__smallconst shr (0+16))
 18118  002D44  6EF8               	movwf	tblptru,c
 18119  002D46  0E0F               	movlw	(high __ramtop+-1)
 18120  002D48  64F7               	cpfsgt	tblptrh,c
 18121  002D4A  D00D               	bra	u12837
 18122  002D4C  0009               	tblrd		*+
 18123  002D4E  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18124  002D52  0009               	tblrd		*+
 18125  002D54  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18126  002D58  0009               	tblrd		*+
 18127  002D5A  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18128  002D5E  0009               	tblrd		*+
 18129  002D60  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18130  002D64  D00C               	bra	u12830
 18131  002D66                     u12837:
 18132  002D66  CFF6 FFE9          	movff	tblptrl,fsr0l
 18133  002D6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 18134  002D6E  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18135  002D72  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18136  002D76  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18137  002D7A  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18138  002D7E                     u12830:
 18139  002D7E  0E01               	movlw	1
 18140  002D80  0100               	movlb	0	; () banked
 18141  002D82  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18142  002D84  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 18143  002D86  0E00               	movlw	0
 18144  002D88  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18145  002D8A  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 18146  002D8C  0E00               	movlw	0
 18147  002D8E  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18148  002D90  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 18149  002D92  0E00               	movlw	0
 18150  002D94  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18151  002D96  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 18152  002D98  0101               	movlb	1	; () banked
 18153  002D9A  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 18154  002D9C  0100               	movlb	0	; () banked
 18155  002D9E  5DC9               	subwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 18156  002DA0  0101               	movlb	1	; () banked
 18157  002DA2  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 18158  002DA4  0100               	movlb	0	; () banked
 18159  002DA6  59CA               	subwfb	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 18160  002DA8  0101               	movlb	1	; () banked
 18161  002DAA  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 18162  002DAC  0100               	movlb	0	; () banked
 18163  002DAE  59CB               	subwfb	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 18164  002DB0  0101               	movlb	1	; () banked
 18165  002DB2  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 18166  002DB4  0100               	movlb	0	; () banked
 18167  002DB6  59CC               	subwfb	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 18168  002DB8  E201 D196          	bnc	l8687
 18169                           
 18170                           ; BSR set to: 0
 18171                           ;tcpv4.c: 919: {
 18172                           ;tcpv4.c: 920: notAckBytes = currentTCB->localSeqno - tcpHeader.ackNumber;
 18173  002DBC  0E10               	movlw	16
 18174  002DBE  25FE               	addwf	_currentTCB& (0+255),w,b
 18175  002DC0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18176  002DC2  0E00               	movlw	0
 18177  002DC4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18178  002DC6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18179  002DC8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18180  002DCC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18181  002DD0  0E00               	movlw	low (__smallconst shr (0+16))
 18182  002DD2  6EF8               	movwf	tblptru,c
 18183  002DD4  0E0F               	movlw	(high __ramtop+-1)
 18184  002DD6  64F7               	cpfsgt	tblptrh,c
 18185  002DD8  D007               	bra	u12857
 18186  002DDA  0009               	tblrd		*+
 18187  002DDC  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18188  002DE0  0009               	tblrd		*+
 18189  002DE2  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18190  002DE6  D008               	bra	u12850
 18191  002DE8                     u12857:
 18192  002DE8  CFF6 FFE9          	movff	tblptrl,fsr0l
 18193  002DEC  CFF7 FFEA          	movff	tblptrh,fsr0h
 18194  002DF0  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18195  002DF4  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18196  002DF8                     u12850:
 18197  002DF8  0101               	movlb	1	; () banked
 18198  002DFA  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 18199  002DFC  0100               	movlb	0	; () banked
 18200  002DFE  5DC5               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18201  002E00  6FD0               	movwf	TCP_FiniteStateMachine@notAckBytes& (0+255),b
 18202  002E02  0101               	movlb	1	; () banked
 18203  002E04  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 18204  002E06  0100               	movlb	0	; () banked
 18205  002E08  59C6               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18206  002E0A  6FD1               	movwf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),b
 18207                           
 18208                           ;tcpv4.c: 923: currentTCB->txBufferPtr = currentTCB->txBufferPtr - notAckBytes;
 18209  002E0C  0E25               	movlw	37
 18210  002E0E  25FE               	addwf	_currentTCB& (0+255),w,b
 18211  002E10  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18212  002E12  0E00               	movlw	0
 18213  002E14  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18214  002E16  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18215  002E18  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18216  002E1C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18217  002E20  0E00               	movlw	low (__smallconst shr (0+16))
 18218  002E22  6EF8               	movwf	tblptru,c
 18219  002E24  0E0F               	movlw	(high __ramtop+-1)
 18220  002E26  64F7               	cpfsgt	tblptrh,c
 18221  002E28  D007               	bra	u12867
 18222  002E2A  0009               	tblrd		*+
 18223  002E2C  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18224  002E30  0009               	tblrd		*+
 18225  002E32  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18226  002E36  D008               	bra	u12860
 18227  002E38                     u12867:
 18228  002E38  CFF6 FFE9          	movff	tblptrl,fsr0l
 18229  002E3C  CFF7 FFEA          	movff	tblptrh,fsr0h
 18230  002E40  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18231  002E44  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18232  002E48                     u12860:
 18233  002E48  0100               	movlb	0	; () banked
 18234  002E4A  51D0               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 18235  002E4C  5FC5               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 18236  002E4E  51D1               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 18237  002E50  5BC6               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 18238  002E52  0E25               	movlw	37
 18239  002E54  25FE               	addwf	_currentTCB& (0+255),w,b
 18240  002E56  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 18241  002E58  0E00               	movlw	0
 18242  002E5A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18243  002E5C  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 18244  002E5E  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 18245  002E62  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 18246  002E66  0E00               	movlw	low (__smallconst shr (0+16))
 18247  002E68  6EF8               	movwf	tblptru,c
 18248  002E6A  0E0F               	movlw	(high __ramtop+-1)
 18249  002E6C  64F7               	cpfsgt	tblptrh,c
 18250  002E6E  D007               	bra	u12877
 18251  002E70  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 18252  002E74  000D               	tblwt		*+
 18253  002E76  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 18254  002E7A  000C               	tblwt		*
 18255  002E7C  D008               	bra	u12870
 18256  002E7E                     u12877:
 18257  002E7E  CFF6 FFE9          	movff	tblptrl,fsr0l
 18258  002E82  CFF7 FFEA          	movff	tblptrh,fsr0h
 18259  002E86  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 18260  002E8A  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 18261  002E8E                     u12870:
 18262                           
 18263                           ;tcpv4.c: 924: currentTCB->bytesToSend = currentTCB->bytesToSend + notAckBytes;
 18264  002E8E  0E27               	movlw	39
 18265  002E90  0100               	movlb	0	; () banked
 18266  002E92  25FE               	addwf	_currentTCB& (0+255),w,b
 18267  002E94  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18268  002E96  0E00               	movlw	0
 18269  002E98  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18270  002E9A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18271  002E9C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18272  002EA0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18273  002EA4  0E00               	movlw	low (__smallconst shr (0+16))
 18274  002EA6  6EF8               	movwf	tblptru,c
 18275  002EA8  0E0F               	movlw	(high __ramtop+-1)
 18276  002EAA  64F7               	cpfsgt	tblptrh,c
 18277  002EAC  D007               	bra	u12887
 18278  002EAE  0009               	tblrd		*+
 18279  002EB0  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18280  002EB4  0009               	tblrd		*+
 18281  002EB6  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18282  002EBA  D008               	bra	u12880
 18283  002EBC                     u12887:
 18284  002EBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 18285  002EC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 18286  002EC4  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18287  002EC8  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18288  002ECC                     u12880:
 18289  002ECC  0100               	movlb	0	; () banked
 18290  002ECE  51D0               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 18291  002ED0  27C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 18292  002ED2  51D1               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 18293  002ED4  23C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 18294  002ED6  0E27               	movlw	39
 18295  002ED8  25FE               	addwf	_currentTCB& (0+255),w,b
 18296  002EDA  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 18297  002EDC  0E00               	movlw	0
 18298  002EDE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18299  002EE0  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 18300  002EE2  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 18301  002EE6  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 18302  002EEA  0E00               	movlw	low (__smallconst shr (0+16))
 18303  002EEC  6EF8               	movwf	tblptru,c
 18304  002EEE  0E0F               	movlw	(high __ramtop+-1)
 18305  002EF0  64F7               	cpfsgt	tblptrh,c
 18306  002EF2  D007               	bra	u12897
 18307  002EF4  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 18308  002EF8  000D               	tblwt		*+
 18309  002EFA  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 18310  002EFE  000C               	tblwt		*
 18311  002F00  D008               	bra	u12890
 18312  002F02                     u12897:
 18313  002F02  CFF6 FFE9          	movff	tblptrl,fsr0l
 18314  002F06  CFF7 FFEA          	movff	tblptrh,fsr0h
 18315  002F0A  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 18316  002F0E  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 18317  002F12                     u12890:
 18318                           
 18319                           ;tcpv4.c: 927: if(currentTCB->bytesToSend == 0)
 18320  002F12  0E27               	movlw	39
 18321  002F14  0100               	movlb	0	; () banked
 18322  002F16  25FE               	addwf	_currentTCB& (0+255),w,b
 18323  002F18  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18324  002F1A  0E00               	movlw	0
 18325  002F1C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18326  002F1E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18327  002F20  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18328  002F24  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18329  002F28  0E00               	movlw	low (__smallconst shr (0+16))
 18330  002F2A  6EF8               	movwf	tblptru,c
 18331  002F2C  0E0F               	movlw	(high __ramtop+-1)
 18332  002F2E  64F7               	cpfsgt	tblptrh,c
 18333  002F30  D007               	bra	u12907
 18334  002F32  0009               	tblrd		*+
 18335  002F34  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18336  002F38  0009               	tblrd		*+
 18337  002F3A  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18338  002F3E  D008               	bra	u12900
 18339  002F40                     u12907:
 18340  002F40  CFF6 FFE9          	movff	tblptrl,fsr0l
 18341  002F44  CFF7 FFEA          	movff	tblptrh,fsr0h
 18342  002F48  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18343  002F4C  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18344  002F50                     u12900:
 18345  002F50  0100               	movlb	0	; () banked
 18346  002F52  51C5               	movf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18347  002F54  11C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18348  002F56  E131               	bnz	l8677
 18349                           
 18350                           ; BSR set to: 0
 18351                           ;tcpv4.c: 928: {
 18352                           ;tcpv4.c: 929: if (currentTCB->txBufState == TX_BUFF_IN_USE)
 18353  002F58  0E29               	movlw	41
 18354  002F5A  25FE               	addwf	_currentTCB& (0+255),w,b
 18355  002F5C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18356  002F5E  0E00               	movlw	0
 18357  002F60  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18358  002F62  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18359  002F64  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18360  002F68  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18361  002F6C  0E00               	movlw	low (__smallconst shr (0+16))
 18362  002F6E  6EF8               	movwf	tblptru,c
 18363  002F70  0E0F               	movlw	(high __ramtop+-1)
 18364  002F72  64F7               	cpfsgt	tblptrh,c
 18365  002F74  D003               	bra	u12927
 18366  002F76  0008               	tblrd		*
 18367  002F78  50F5               	movf	tablat,w,c
 18368  002F7A  D005               	bra	u12920
 18369  002F7C                     u12927:
 18370  002F7C  CFF6 FFE9          	movff	tblptrl,fsr0l
 18371  002F80  CFF7 FFEA          	movff	tblptrh,fsr0h
 18372  002F84  50EF               	movf	indf0,w,c
 18373  002F86                     u12920:
 18374  002F86  0A02               	xorlw	2
 18375  002F88  E118               	bnz	l8677
 18376                           
 18377                           ;tcpv4.c: 930: {
 18378                           ;tcpv4.c: 931: currentTCB->txBufState = NO_BUFF;
 18379  002F8A  0E29               	movlw	41
 18380  002F8C  0100               	movlb	0	; () banked
 18381  002F8E  25FE               	addwf	_currentTCB& (0+255),w,b
 18382  002F90  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18383  002F92  0E00               	movlw	0
 18384  002F94  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18385  002F96  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18386  002F98  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18387  002F9C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18388  002FA0  0E00               	movlw	low (__smallconst shr (0+16))
 18389  002FA2  6EF8               	movwf	tblptru,c
 18390  002FA4  0E0F               	movlw	(high __ramtop+-1)
 18391  002FA6  64F7               	cpfsgt	tblptrh,c
 18392  002FA8  D003               	bra	u12947
 18393  002FAA  6AF5               	clrf	tablat,c
 18394  002FAC  000C               	tblwt		*
 18395  002FAE  D005               	bra	u12940
 18396  002FB0                     u12947:
 18397  002FB0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18398  002FB4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18399  002FB8  6AEF               	clrf	indf0,c
 18400  002FBA                     u12940:
 18401  002FBA                     l8677:
 18402                           
 18403                           ;tcpv4.c: 932: }
 18404                           ;tcpv4.c: 933: }
 18405                           ;tcpv4.c: 935: currentTCB->localLastAck = tcpHeader.ackNumber - 1;
 18406  002FBA  EE21  F0C4         	lfsr	2,_tcpHeader+8
 18407  002FBE  0EFF               	movlw	255
 18408  002FC0  24DE               	addwf	postinc2,w,c
 18409  002FC2  0100               	movlb	0	; () banked
 18410  002FC4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18411  002FC6  0EFF               	movlw	255
 18412  002FC8  20DE               	addwfc	postinc2,w,c
 18413  002FCA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18414  002FCC  0EFF               	movlw	255
 18415  002FCE  20DE               	addwfc	postinc2,w,c
 18416  002FD0  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 18417  002FD2  0EFF               	movlw	255
 18418  002FD4  20DE               	addwfc	postinc2,w,c
 18419  002FD6  6FC6               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 18420  002FD8  0E14               	movlw	20
 18421  002FDA  25FE               	addwf	_currentTCB& (0+255),w,b
 18422  002FDC  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 18423  002FDE  0E00               	movlw	0
 18424  002FE0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18425  002FE2  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 18426  002FE4  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 18427  002FE8  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 18428  002FEC  0E00               	movlw	low (__smallconst shr (0+16))
 18429  002FEE  6EF8               	movwf	tblptru,c
 18430  002FF0  0E0F               	movlw	(high __ramtop+-1)
 18431  002FF2  64F7               	cpfsgt	tblptrh,c
 18432  002FF4  D00D               	bra	u12957
 18433  002FF6  C0C3  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 18434  002FFA  000D               	tblwt		*+
 18435  002FFC  C0C4  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 18436  003000  000D               	tblwt		*+
 18437  003002  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 18438  003006  000D               	tblwt		*+
 18439  003008  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 18440  00300C  000C               	tblwt		*
 18441  00300E  D00C               	bra	u12950
 18442  003010                     u12957:
 18443  003010  CFF6 FFE9          	movff	tblptrl,fsr0l
 18444  003014  CFF7 FFEA          	movff	tblptrh,fsr0h
 18445  003018  C0C3  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 18446  00301C  C0C4  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 18447  003020  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 18448  003024  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 18449  003028                     u12950:
 18450                           
 18451                           ;tcpv4.c: 936: currentTCB->localSeqno = tcpHeader.ackNumber;
 18452  003028  0E10               	movlw	16
 18453  00302A  0100               	movlb	0	; () banked
 18454  00302C  25FE               	addwf	_currentTCB& (0+255),w,b
 18455  00302E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18456  003030  0E00               	movlw	0
 18457  003032  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18458  003034  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18459  003036  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18460  00303A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18461  00303E  0E00               	movlw	low (__smallconst shr (0+16))
 18462  003040  6EF8               	movwf	tblptru,c
 18463  003042  0E0F               	movlw	(high __ramtop+-1)
 18464  003044  64F7               	cpfsgt	tblptrh,c
 18465  003046  D00D               	bra	u12967
 18466  003048  C1C4  FFF5         	movff	_tcpHeader+8,tablat
 18467  00304C  000D               	tblwt		*+
 18468  00304E  C1C5  FFF5         	movff	_tcpHeader+9,tablat
 18469  003052  000D               	tblwt		*+
 18470  003054  C1C6  FFF5         	movff	_tcpHeader+10,tablat
 18471  003058  000D               	tblwt		*+
 18472  00305A  C1C7  FFF5         	movff	_tcpHeader+11,tablat
 18473  00305E  000C               	tblwt		*
 18474  003060  D00C               	bra	u12960
 18475  003062                     u12967:
 18476  003062  CFF6 FFE9          	movff	tblptrl,fsr0l
 18477  003066  CFF7 FFEA          	movff	tblptrh,fsr0h
 18478  00306A  C1C4  FFEE         	movff	_tcpHeader+8,postinc0
 18479  00306E  C1C5  FFEE         	movff	_tcpHeader+9,postinc0
 18480  003072  C1C6  FFEE         	movff	_tcpHeader+10,postinc0
 18481  003076  C1C7  FFEF         	movff	_tcpHeader+11,indf0
 18482  00307A                     u12960:
 18483                           
 18484                           ;tcpv4.c: 939: if(rcvPayloadLen > 0)
 18485  00307A  0101               	movlb	1	; () banked
 18486  00307C  51A0               	movf	_rcvPayloadLen& (0+255),w,b
 18487  00307E  11A1               	iorwf	(_rcvPayloadLen+1)& (0+255),w,b
 18488  003080  E102 EFDA  F01C    	bz	l8831
 18489                           
 18490                           ; BSR set to: 1
 18491                           ;tcpv4.c: 940: {
 18492                           ;tcpv4.c: 941: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 18493  003086  0E08               	movlw	8
 18494  003088  0100               	movlb	0	; () banked
 18495  00308A  25FE               	addwf	_currentTCB& (0+255),w,b
 18496  00308C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18497  00308E  0E00               	movlw	0
 18498  003090  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18499  003092  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18500  003094  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18501  003098  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18502  00309C  0E00               	movlw	low (__smallconst shr (0+16))
 18503  00309E  6EF8               	movwf	tblptru,c
 18504  0030A0  0E0F               	movlw	(high __ramtop+-1)
 18505  0030A2  64F7               	cpfsgt	tblptrh,c
 18506  0030A4  D00D               	bra	u12987
 18507  0030A6  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 18508  0030AA  000D               	tblwt		*+
 18509  0030AC  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 18510  0030B0  000D               	tblwt		*+
 18511  0030B2  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 18512  0030B6  000D               	tblwt		*+
 18513  0030B8  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 18514  0030BC  000C               	tblwt		*
 18515  0030BE  D00C               	bra	u12980
 18516  0030C0                     u12987:
 18517  0030C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18518  0030C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18519  0030C8  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 18520  0030CC  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 18521  0030D0  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 18522  0030D4  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 18523  0030D8                     u12980:
 18524                           
 18525                           ;tcpv4.c: 944: TCP_PayloadSave(rcvPayloadLen);
 18526  0030D8  C1A0  F05A         	movff	_rcvPayloadLen,TCP_PayloadSave@len
 18527  0030DC  C1A1  F05B         	movff	_rcvPayloadLen+1,TCP_PayloadSave@len+1
 18528  0030E0  EC58  F02D         	call	_TCP_PayloadSave	;wreg free
 18529  0030E4  EFDA  F01C         	goto	l8831
 18530  0030E8                     l8687:
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;tcpv4.c: 947: {
 18534                           ;tcpv4.c: 951: currentTCB->flags = 0x04U | 0x10U;
 18535  0030E8  0E35               	movlw	53
 18536  0030EA  25FE               	addwf	_currentTCB& (0+255),w,b
 18537  0030EC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18538  0030EE  0E00               	movlw	0
 18539  0030F0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18540  0030F2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18541  0030F4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18542  0030F8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18543  0030FC  0E00               	movlw	low (__smallconst shr (0+16))
 18544  0030FE  6EF8               	movwf	tblptru,c
 18545  003100  0E0F               	movlw	(high __ramtop+-1)
 18546  003102  64F7               	cpfsgt	tblptrh,c
 18547  003104  D004               	bra	u12997
 18548  003106  0E14               	movlw	20
 18549  003108  6EF5               	movwf	tablat,c
 18550  00310A  000C               	tblwt		*
 18551  00310C  D006               	bra	u12990
 18552  00310E                     u12997:
 18553  00310E  CFF6 FFE9          	movff	tblptrl,fsr0l
 18554  003112  CFF7 FFEA          	movff	tblptrh,fsr0h
 18555  003116  0E14               	movlw	20
 18556  003118  6EEF               	movwf	indf0,c
 18557  00311A                     u12990:
 18558                           
 18559                           ;tcpv4.c: 952: if (TCP_Snd(currentTCB))
 18560  00311A  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 18561  00311E  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 18562  003122  EC11  F01D         	call	_TCP_Snd	;wreg free
 18563  003126  EF72  F00D         	goto	L10
 18564  00312A                     l8695:
 18565                           
 18566                           ; BSR set to: 0
 18567                           ;tcpv4.c: 963: ;
 18568                           ;tcpv4.c: 964: currentTCB->flags = 0x01U;
 18569  00312A  0E35               	movlw	53
 18570  00312C  25FE               	addwf	_currentTCB& (0+255),w,b
 18571  00312E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18572  003130  0E00               	movlw	0
 18573  003132  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18574  003134  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18575  003136  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18576  00313A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18577  00313E  0E00               	movlw	low (__smallconst shr (0+16))
 18578  003140  6EF8               	movwf	tblptru,c
 18579  003142  0E0F               	movlw	(high __ramtop+-1)
 18580  003144  64F7               	cpfsgt	tblptrh,c
 18581  003146  D004               	bra	u13017
 18582  003148  0E01               	movlw	1
 18583  00314A  6EF5               	movwf	tablat,c
 18584  00314C  000C               	tblwt		*
 18585  00314E  D006               	bra	u13010
 18586  003150                     u13017:
 18587  003150  CFF6 FFE9          	movff	tblptrl,fsr0l
 18588  003154  CFF7 FFEA          	movff	tblptrh,fsr0h
 18589  003158  0E01               	movlw	1
 18590  00315A  6EEF               	movwf	indf0,c
 18591  00315C                     u13010:
 18592  00315C  EF2F  F013         	goto	l8635
 18593  003160                     l8701:
 18594                           
 18595                           ; BSR set to: 0
 18596                           ;tcpv4.c: 971: ;
 18597                           ;tcpv4.c: 974: currentTCB->localSeqno = tcpHeader.ackNumber;
 18598  003160  0E10               	movlw	16
 18599  003162  25FE               	addwf	_currentTCB& (0+255),w,b
 18600  003164  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18601  003166  0E00               	movlw	0
 18602  003168  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18603  00316A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18604  00316C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18605  003170  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18606  003174  0E00               	movlw	low (__smallconst shr (0+16))
 18607  003176  6EF8               	movwf	tblptru,c
 18608  003178  0E0F               	movlw	(high __ramtop+-1)
 18609  00317A  64F7               	cpfsgt	tblptrh,c
 18610  00317C  D00D               	bra	u13027
 18611  00317E  C1C4  FFF5         	movff	_tcpHeader+8,tablat
 18612  003182  000D               	tblwt		*+
 18613  003184  C1C5  FFF5         	movff	_tcpHeader+9,tablat
 18614  003188  000D               	tblwt		*+
 18615  00318A  C1C6  FFF5         	movff	_tcpHeader+10,tablat
 18616  00318E  000D               	tblwt		*+
 18617  003190  C1C7  FFF5         	movff	_tcpHeader+11,tablat
 18618  003194  000C               	tblwt		*
 18619  003196  D00C               	bra	u13020
 18620  003198                     u13027:
 18621  003198  CFF6 FFE9          	movff	tblptrl,fsr0l
 18622  00319C  CFF7 FFEA          	movff	tblptrh,fsr0h
 18623  0031A0  C1C4  FFEE         	movff	_tcpHeader+8,postinc0
 18624  0031A4  C1C5  FFEE         	movff	_tcpHeader+9,postinc0
 18625  0031A8  C1C6  FFEE         	movff	_tcpHeader+10,postinc0
 18626  0031AC  C1C7  FFEF         	movff	_tcpHeader+11,indf0
 18627  0031B0                     u13020:
 18628                           
 18629                           ;tcpv4.c: 975: currentTCB->remoteAck = currentTCB->remoteAck + 1;
 18630  0031B0  0E0C               	movlw	12
 18631  0031B2  0100               	movlb	0	; () banked
 18632  0031B4  25FE               	addwf	_currentTCB& (0+255),w,b
 18633  0031B6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18634  0031B8  0E00               	movlw	0
 18635  0031BA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18636  0031BC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18637  0031BE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18638  0031C2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18639  0031C6  0E00               	movlw	low (__smallconst shr (0+16))
 18640  0031C8  6EF8               	movwf	tblptru,c
 18641  0031CA  0E0F               	movlw	(high __ramtop+-1)
 18642  0031CC  64F7               	cpfsgt	tblptrh,c
 18643  0031CE  D00D               	bra	u13037
 18644  0031D0  0009               	tblrd		*+
 18645  0031D2  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18646  0031D6  0009               	tblrd		*+
 18647  0031D8  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18648  0031DC  0009               	tblrd		*+
 18649  0031DE  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18650  0031E2  0009               	tblrd		*+
 18651  0031E4  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18652  0031E8  D00C               	bra	u13030
 18653  0031EA                     u13037:
 18654  0031EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 18655  0031EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 18656  0031F2  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18657  0031F6  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18658  0031FA  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18659  0031FE  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18660  003202                     u13030:
 18661  003202  0E01               	movlw	1
 18662  003204  0100               	movlb	0	; () banked
 18663  003206  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18664  003208  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 18665  00320A  0E00               	movlw	0
 18666  00320C  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18667  00320E  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 18668  003210  0E00               	movlw	0
 18669  003212  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18670  003214  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 18671  003216  0E00               	movlw	0
 18672  003218  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18673  00321A  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 18674  00321C  0E0C               	movlw	12
 18675  00321E  25FE               	addwf	_currentTCB& (0+255),w,b
 18676  003220  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 18677  003222  0E00               	movlw	0
 18678  003224  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18679  003226  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 18680  003228  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 18681  00322C  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 18682  003230  0E00               	movlw	low (__smallconst shr (0+16))
 18683  003232  6EF8               	movwf	tblptru,c
 18684  003234  0E0F               	movlw	(high __ramtop+-1)
 18685  003236  64F7               	cpfsgt	tblptrh,c
 18686  003238  D00D               	bra	u13047
 18687  00323A  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 18688  00323E  000D               	tblwt		*+
 18689  003240  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 18690  003244  000D               	tblwt		*+
 18691  003246  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 18692  00324A  000D               	tblwt		*+
 18693  00324C  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 18694  003250  000C               	tblwt		*
 18695  003252  D00C               	bra	u13040
 18696  003254                     u13047:
 18697  003254  CFF6 FFE9          	movff	tblptrl,fsr0l
 18698  003258  CFF7 FFEA          	movff	tblptrh,fsr0h
 18699  00325C  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 18700  003260  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 18701  003264  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 18702  003268  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 18703  00326C                     u13040:
 18704                           
 18705                           ;tcpv4.c: 977: currentTCB->socketState = SOCKET_CLOSING;
 18706  00326C  0E36               	movlw	54
 18707  00326E  0100               	movlb	0	; () banked
 18708  003270  25FE               	addwf	_currentTCB& (0+255),w,b
 18709  003272  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18710  003274  0E00               	movlw	0
 18711  003276  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18712  003278  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18713  00327A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18714  00327E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18715  003282  0E00               	movlw	low (__smallconst shr (0+16))
 18716  003284  6EF8               	movwf	tblptru,c
 18717  003286  0E0F               	movlw	(high __ramtop+-1)
 18718  003288  64F7               	cpfsgt	tblptrh,c
 18719  00328A  D004               	bra	u13057
 18720  00328C  0E04               	movlw	4
 18721  00328E  6EF5               	movwf	tablat,c
 18722  003290  000C               	tblwt		*
 18723  003292  D006               	bra	u13050
 18724  003294                     u13057:
 18725  003294  CFF6 FFE9          	movff	tblptrl,fsr0l
 18726  003298  CFF7 FFEA          	movff	tblptrh,fsr0h
 18727  00329C  0E04               	movlw	4
 18728  00329E  6EEF               	movwf	indf0,c
 18729  0032A0                     u13050:
 18730                           
 18731                           ;tcpv4.c: 978: currentTCB->timeout = ((unsigned long)1*2);
 18732  0032A0  0E30               	movlw	48
 18733  0032A2  0100               	movlb	0	; () banked
 18734  0032A4  25FE               	addwf	_currentTCB& (0+255),w,b
 18735  0032A6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18736  0032A8  0E00               	movlw	0
 18737  0032AA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18738  0032AC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18739  0032AE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18740  0032B2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18741  0032B6  0E00               	movlw	low (__smallconst shr (0+16))
 18742  0032B8  6EF8               	movwf	tblptru,c
 18743  0032BA  0E0F               	movlw	(high __ramtop+-1)
 18744  0032BC  64F7               	cpfsgt	tblptrh,c
 18745  0032BE  D006               	bra	u13067
 18746  0032C0  0E02               	movlw	2
 18747  0032C2  6EF5               	movwf	tablat,c
 18748  0032C4  000D               	tblwt		*+
 18749  0032C6  6AF5               	clrf	tablat,c
 18750  0032C8  000C               	tblwt		*
 18751  0032CA  D007               	bra	u13060
 18752  0032CC                     u13067:
 18753  0032CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 18754  0032D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 18755  0032D4  0E02               	movlw	2
 18756  0032D6  6EEE               	movwf	postinc0,c
 18757  0032D8  6AEF               	clrf	indf0,c
 18758  0032DA                     u13060:
 18759                           
 18760                           ;tcpv4.c: 979: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 18761  0032DA  0E32               	movlw	50
 18762  0032DC  0100               	movlb	0	; () banked
 18763  0032DE  25FE               	addwf	_currentTCB& (0+255),w,b
 18764  0032E0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18765  0032E2  0E00               	movlw	0
 18766  0032E4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18767  0032E6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18768  0032E8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18769  0032EC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18770  0032F0  0E00               	movlw	low (__smallconst shr (0+16))
 18771  0032F2  6EF8               	movwf	tblptru,c
 18772  0032F4  0E0F               	movlw	(high __ramtop+-1)
 18773  0032F6  64F7               	cpfsgt	tblptrh,c
 18774  0032F8  D006               	bra	u13077
 18775  0032FA  0E02               	movlw	2
 18776  0032FC  6EF5               	movwf	tablat,c
 18777  0032FE  000D               	tblwt		*+
 18778  003300  6AF5               	clrf	tablat,c
 18779  003302  000C               	tblwt		*
 18780  003304  D007               	bra	u13070
 18781  003306                     u13077:
 18782  003306  CFF6 FFE9          	movff	tblptrl,fsr0l
 18783  00330A  CFF7 FFEA          	movff	tblptrh,fsr0h
 18784  00330E  0E02               	movlw	2
 18785  003310  6EEE               	movwf	postinc0,c
 18786  003312  6AEF               	clrf	indf0,c
 18787  003314                     u13070:
 18788                           
 18789                           ;tcpv4.c: 980: currentTCB->timeoutsCount = (5u);
 18790  003314  0E34               	movlw	52
 18791  003316  0100               	movlb	0	; () banked
 18792  003318  25FE               	addwf	_currentTCB& (0+255),w,b
 18793  00331A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18794  00331C  0E00               	movlw	0
 18795  00331E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18796  003320  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18797  003322  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18798  003326  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18799  00332A  0E00               	movlw	low (__smallconst shr (0+16))
 18800  00332C  6EF8               	movwf	tblptru,c
 18801  00332E  0E0F               	movlw	(high __ramtop+-1)
 18802  003330  64F7               	cpfsgt	tblptrh,c
 18803  003332  D004               	bra	u13087
 18804  003334  0E05               	movlw	5
 18805  003336  6EF5               	movwf	tablat,c
 18806  003338  000C               	tblwt		*
 18807  00333A  D006               	bra	u13080
 18808  00333C                     u13087:
 18809  00333C  CFF6 FFE9          	movff	tblptrl,fsr0l
 18810  003340  CFF7 FFEA          	movff	tblptrh,fsr0h
 18811  003344  0E05               	movlw	5
 18812  003346  6EEF               	movwf	indf0,c
 18813  003348                     u13080:
 18814                           
 18815                           ;tcpv4.c: 982: currentTCB->flags = 0x01U | 0x10U;
 18816  003348  0E35               	movlw	53
 18817  00334A  0100               	movlb	0	; () banked
 18818  00334C  25FE               	addwf	_currentTCB& (0+255),w,b
 18819  00334E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18820  003350  0E00               	movlw	0
 18821  003352  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18822  003354  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18823  003356  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18824  00335A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18825  00335E  0E00               	movlw	low (__smallconst shr (0+16))
 18826  003360  6EF8               	movwf	tblptru,c
 18827  003362  0E0F               	movlw	(high __ramtop+-1)
 18828  003364  64F7               	cpfsgt	tblptrh,c
 18829  003366  D004               	bra	u13097
 18830  003368  0E11               	movlw	17
 18831  00336A  6EF5               	movwf	tablat,c
 18832  00336C  000C               	tblwt		*
 18833  00336E  D006               	bra	u13090
 18834  003370                     u13097:
 18835  003370  CFF6 FFE9          	movff	tblptrl,fsr0l
 18836  003374  CFF7 FFEA          	movff	tblptrh,fsr0h
 18837  003378  0E11               	movlw	17
 18838  00337A  6EEF               	movwf	indf0,c
 18839  00337C                     u13090:
 18840                           
 18841                           ;tcpv4.c: 984: nextState = LAST_ACK;
 18842  00337C  0E09               	movlw	9
 18843  00337E  EF30  F013         	goto	L12
 18844  003382                     l8709:
 18845                           
 18846                           ; BSR set to: 0
 18847                           ;tcpv4.c: 993: ;
 18848                           ;tcpv4.c: 994: if (currentTCB->timeoutsCount)
 18849  003382  0E34               	movlw	52
 18850  003384  25FE               	addwf	_currentTCB& (0+255),w,b
 18851  003386  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18852  003388  0E00               	movlw	0
 18853  00338A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18854  00338C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18855  00338E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18856  003392  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18857  003396  0E00               	movlw	low (__smallconst shr (0+16))
 18858  003398  6EF8               	movwf	tblptru,c
 18859  00339A  0E0F               	movlw	(high __ramtop+-1)
 18860  00339C  64F7               	cpfsgt	tblptrh,c
 18861  00339E  D003               	bra	u13107
 18862  0033A0  0008               	tblrd		*
 18863  0033A2  50F5               	movf	tablat,w,c
 18864  0033A4  D005               	bra	u13100
 18865  0033A6                     u13107:
 18866  0033A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 18867  0033AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 18868  0033AE  50EF               	movf	indf0,w,c
 18869  0033B0                     u13100:
 18870  0033B0  0900               	iorlw	0
 18871  0033B2  E002 EF32  F013    	bnz	l8637
 18872                           
 18873                           ;tcpv4.c: 998: {
 18874                           ;tcpv4.c: 1000: currentTCB->flags = 0x04U;
 18875  0033B8  0E35               	movlw	53
 18876  0033BA  0100               	movlb	0	; () banked
 18877  0033BC  25FE               	addwf	_currentTCB& (0+255),w,b
 18878  0033BE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18879  0033C0  0E00               	movlw	0
 18880  0033C2  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18881  0033C4  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18882  0033C6  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18883  0033CA  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18884  0033CE  0E00               	movlw	low (__smallconst shr (0+16))
 18885  0033D0  6EF8               	movwf	tblptru,c
 18886  0033D2  0E0F               	movlw	(high __ramtop+-1)
 18887  0033D4  64F7               	cpfsgt	tblptrh,c
 18888  0033D6  D004               	bra	u13127
 18889  0033D8  0E04               	movlw	4
 18890  0033DA  6EF5               	movwf	tablat,c
 18891  0033DC  000C               	tblwt		*
 18892  0033DE  D006               	bra	u13120
 18893  0033E0                     u13127:
 18894  0033E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18895  0033E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18896  0033E8  0E04               	movlw	4
 18897  0033EA  6EEF               	movwf	indf0,c
 18898  0033EC                     u13120:
 18899                           
 18900                           ;tcpv4.c: 1001: if(TCP_Snd(currentTCB))
 18901  0033EC  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 18902  0033F0  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 18903  0033F4  EC11  F01D         	call	_TCP_Snd	;wreg free
 18904  0033F8  EF72  F00D         	goto	L10
 18905  0033FC                     l8723:
 18906  0033FC  0100               	movlb	0	; () banked
 18907  0033FE  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 18908                           
 18909                           ; Switch size 1, requested type "speed"
 18910                           ; Number of cases is 7, Range of values is 0 to 12
 18911                           ; switch strategies available:
 18912                           ; Name         Instructions Cycles
 18913                           ; simple_byte           22    12 (average)
 18914                           ;	Chosen strategy is simple_byte
 18915  003400  E101 D693          	bz	l8695
 18916  003404  0A04               	xorlw	4	; case 4
 18917  003406  E102 EFE0  F015    	bz	l8663
 18918  00340C  0A02               	xorlw	2	; case 6
 18919  00340E  E101 D6A7          	bz	l8701
 18920  003412  0A01               	xorlw	1	; case 7
 18921  003414  E101 D6A4          	bz	l8701
 18922  003418  0A0E               	xorlw	14	; case 9
 18923  00341A  E102 EF41  F00A    	bz	l1293
 18924  003420  0A03               	xorlw	3	; case 10
 18925  003422  E102 EF41  F00A    	bz	l1293
 18926  003428  0A06               	xorlw	6	; case 12
 18927  00342A  E0AB               	bz	l8709
 18928  00342C  D2C3               	goto	l8831
 18929  00342E                     l8725:
 18930                           
 18931                           ; BSR set to: 0
 18932                           ;tcpv4.c: 1016: ;
 18933                           ;tcpv4.c: 1017: currentTCB->flags = 0x10U;
 18934  00342E  0E35               	movlw	53
 18935  003430  25FE               	addwf	_currentTCB& (0+255),w,b
 18936  003432  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18937  003434  0E00               	movlw	0
 18938  003436  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18939  003438  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18940  00343A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18941  00343E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18942  003442  0E00               	movlw	low (__smallconst shr (0+16))
 18943  003444  6EF8               	movwf	tblptru,c
 18944  003446  0E0F               	movlw	(high __ramtop+-1)
 18945  003448  64F7               	cpfsgt	tblptrh,c
 18946  00344A  D004               	bra	u13147
 18947  00344C  0E10               	movlw	16
 18948  00344E  6EF5               	movwf	tablat,c
 18949  003450  000C               	tblwt		*
 18950  003452  D006               	bra	u13140
 18951  003454                     u13147:
 18952  003454  CFF6 FFE9          	movff	tblptrl,fsr0l
 18953  003458  CFF7 FFEA          	movff	tblptrh,fsr0h
 18954  00345C  0E10               	movlw	16
 18955  00345E  6EEF               	movwf	indf0,c
 18956  003460                     u13140:
 18957                           
 18958                           ;tcpv4.c: 1018: if(TCP_Snd(currentTCB))
 18959  003460  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 18960  003464  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 18961  003468  EC11  F01D         	call	_TCP_Snd	;wreg free
 18962  00346C  0900               	iorlw	0
 18963  00346E  E101 D2A1          	bz	l8831
 18964                           
 18965                           ; BSR set to: 0
 18966                           ;tcpv4.c: 1019: {
 18967                           ;tcpv4.c: 1020: nextState = CLOSING;
 18968  003472  0E08               	movlw	8
 18969  003474  D05C               	goto	L14
 18970  003476                     l8731:
 18971                           
 18972                           ; BSR set to: 0
 18973                           ;tcpv4.c: 1024: ;
 18974                           ;tcpv4.c: 1026: currentTCB->timeout = ((unsigned long)1*2);
 18975  003476  0E30               	movlw	48
 18976  003478  25FE               	addwf	_currentTCB& (0+255),w,b
 18977  00347A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18978  00347C  0E00               	movlw	0
 18979  00347E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18980  003480  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18981  003482  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18982  003486  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18983  00348A  0E00               	movlw	low (__smallconst shr (0+16))
 18984  00348C  6EF8               	movwf	tblptru,c
 18985  00348E  0E0F               	movlw	(high __ramtop+-1)
 18986  003490  64F7               	cpfsgt	tblptrh,c
 18987  003492  D006               	bra	u13167
 18988  003494  0E02               	movlw	2
 18989  003496  6EF5               	movwf	tablat,c
 18990  003498  000D               	tblwt		*+
 18991  00349A  6AF5               	clrf	tablat,c
 18992  00349C  000C               	tblwt		*
 18993  00349E  D007               	bra	u13160
 18994  0034A0                     u13167:
 18995  0034A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18996  0034A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18997  0034A8  0E02               	movlw	2
 18998  0034AA  6EEE               	movwf	postinc0,c
 18999  0034AC  6AEF               	clrf	indf0,c
 19000  0034AE                     u13160:
 19001                           
 19002                           ;tcpv4.c: 1027: currentTCB->timeoutsCount = 1;
 19003  0034AE  0E34               	movlw	52
 19004  0034B0  0100               	movlb	0	; () banked
 19005  0034B2  25FE               	addwf	_currentTCB& (0+255),w,b
 19006  0034B4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19007  0034B6  0E00               	movlw	0
 19008  0034B8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19009  0034BA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19010  0034BC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19011  0034C0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19012  0034C4  0E00               	movlw	low (__smallconst shr (0+16))
 19013  0034C6  6EF8               	movwf	tblptru,c
 19014  0034C8  0E0F               	movlw	(high __ramtop+-1)
 19015  0034CA  64F7               	cpfsgt	tblptrh,c
 19016  0034CC  D004               	bra	u13177
 19017  0034CE  0E01               	movlw	1
 19018  0034D0  6EF5               	movwf	tablat,c
 19019  0034D2  000C               	tblwt		*
 19020  0034D4  D006               	bra	u13170
 19021  0034D6                     u13177:
 19022  0034D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 19023  0034DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 19024  0034DE  0E01               	movlw	1
 19025  0034E0  6EEF               	movwf	indf0,c
 19026  0034E2                     u13170:
 19027                           
 19028                           ;tcpv4.c: 1028: nextState = FIN_WAIT_2;
 19029  0034E2  0E06               	movlw	6
 19030  0034E4  EF92  F014         	goto	L18
 19031  0034E8                     l8735:
 19032                           
 19033                           ; BSR set to: 0
 19034                           ;tcpv4.c: 1031: ;
 19035                           ;tcpv4.c: 1032: currentTCB->flags = 0x10U;
 19036  0034E8  0E35               	movlw	53
 19037  0034EA  25FE               	addwf	_currentTCB& (0+255),w,b
 19038  0034EC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19039  0034EE  0E00               	movlw	0
 19040  0034F0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19041  0034F2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19042  0034F4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19043  0034F8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19044  0034FC  0E00               	movlw	low (__smallconst shr (0+16))
 19045  0034FE  6EF8               	movwf	tblptru,c
 19046  003500  0E0F               	movlw	(high __ramtop+-1)
 19047  003502  64F7               	cpfsgt	tblptrh,c
 19048  003504  D004               	bra	u13187
 19049  003506  0E10               	movlw	16
 19050  003508  6EF5               	movwf	tablat,c
 19051  00350A  000C               	tblwt		*
 19052  00350C  D006               	bra	u13180
 19053  00350E                     u13187:
 19054  00350E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19055  003512  CFF7 FFEA          	movff	tblptrh,fsr0h
 19056  003516  0E10               	movlw	16
 19057  003518  6EEF               	movwf	indf0,c
 19058  00351A                     u13180:
 19059                           
 19060                           ;tcpv4.c: 1033: if(TCP_Snd(currentTCB))
 19061  00351A  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19062  00351E  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19063  003522  EC11  F01D         	call	_TCP_Snd	;wreg free
 19064  003526  0900               	iorlw	0
 19065  003528  E101 D244          	bz	l8831
 19066  00352C                     l8739:
 19067                           
 19068                           ; BSR set to: 0
 19069                           ;tcpv4.c: 1034: {
 19070                           ;tcpv4.c: 1035: nextState = TIME_WAIT;
 19071  00352C  0E0A               	movlw	10
 19072  00352E                     L14:
 19073  00352E  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 19074  003530  D241               	goto	l8831
 19075  003532                     l8741:
 19076                           
 19077                           ; BSR set to: 0
 19078                           ;tcpv4.c: 1039: ;
 19079                           ;tcpv4.c: 1040: if (currentTCB->timeoutsCount)
 19080  003532  0E34               	movlw	52
 19081  003534  25FE               	addwf	_currentTCB& (0+255),w,b
 19082  003536  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19083  003538  0E00               	movlw	0
 19084  00353A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19085  00353C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19086  00353E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19087  003542  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19088  003546  0E00               	movlw	low (__smallconst shr (0+16))
 19089  003548  6EF8               	movwf	tblptru,c
 19090  00354A  0E0F               	movlw	(high __ramtop+-1)
 19091  00354C  64F7               	cpfsgt	tblptrh,c
 19092  00354E  D003               	bra	u13207
 19093  003550  0008               	tblrd		*
 19094  003552  50F5               	movf	tablat,w,c
 19095  003554  D005               	bra	u13200
 19096  003556                     u13207:
 19097  003556  CFF6 FFE9          	movff	tblptrl,fsr0l
 19098  00355A  CFF7 FFEA          	movff	tblptrh,fsr0h
 19099  00355E  50EF               	movf	indf0,w,c
 19100  003560                     u13200:
 19101  003560  0900               	iorlw	0
 19102  003562  E002 EF32  F013    	bnz	l8637
 19103                           
 19104                           ;tcpv4.c: 1044: {
 19105                           ;tcpv4.c: 1046: currentTCB->flags = 0x04U;
 19106  003568  0E35               	movlw	53
 19107  00356A  0100               	movlb	0	; () banked
 19108  00356C  25FE               	addwf	_currentTCB& (0+255),w,b
 19109  00356E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19110  003570  0E00               	movlw	0
 19111  003572  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19112  003574  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19113  003576  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19114  00357A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19115  00357E  0E00               	movlw	low (__smallconst shr (0+16))
 19116  003580  6EF8               	movwf	tblptru,c
 19117  003582  0E0F               	movlw	(high __ramtop+-1)
 19118  003584  64F7               	cpfsgt	tblptrh,c
 19119  003586  D004               	bra	u13227
 19120  003588  0E04               	movlw	4
 19121  00358A  6EF5               	movwf	tablat,c
 19122  00358C  000C               	tblwt		*
 19123  00358E  D006               	bra	u13220
 19124  003590                     u13227:
 19125  003590  CFF6 FFE9          	movff	tblptrl,fsr0l
 19126  003594  CFF7 FFEA          	movff	tblptrh,fsr0h
 19127  003598  0E04               	movlw	4
 19128  00359A  6EEF               	movwf	indf0,c
 19129  00359C                     u13220:
 19130                           
 19131                           ;tcpv4.c: 1047: if(TCP_Snd(currentTCB))
 19132  00359C  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19133  0035A0  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19134  0035A4  EC11  F01D         	call	_TCP_Snd	;wreg free
 19135  0035A8  EF72  F00D         	goto	L10
 19136  0035AC                     l8755:
 19137  0035AC  0100               	movlb	0	; () banked
 19138  0035AE  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19139                           
 19140                           ; Switch size 1, requested type "speed"
 19141                           ; Number of cases is 4, Range of values is 4 to 12
 19142                           ; switch strategies available:
 19143                           ; Name         Instructions Cycles
 19144                           ; simple_byte           13     7 (average)
 19145                           ;	Chosen strategy is simple_byte
 19146  0035B0  0A04               	xorlw	4	; case 4
 19147  0035B2  E101 D760          	bz	l8731
 19148  0035B6  0A02               	xorlw	2	; case 6
 19149  0035B8  E101 D739          	bz	l8725
 19150  0035BC  0A01               	xorlw	1	; case 7
 19151  0035BE  E094               	bz	l8735
 19152  0035C0  0A0B               	xorlw	11	; case 12
 19153  0035C2  E0B7               	bz	l8741
 19154  0035C4  D1F7               	goto	l8831
 19155  0035C6                     l8757:
 19156                           
 19157                           ; BSR set to: 0
 19158                           ;tcpv4.c: 1062: ;
 19159                           ;tcpv4.c: 1063: if(TCP_Snd(currentTCB))
 19160  0035C6  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19161  0035CA  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19162  0035CE  EC11  F01D         	call	_TCP_Snd	;wreg free
 19163  0035D2  D7A9               	goto	L15
 19164  0035D4                     l8761:
 19165                           
 19166                           ; BSR set to: 0
 19167                           ;tcpv4.c: 1069: ;
 19168                           ;tcpv4.c: 1070: if (currentTCB->timeoutsCount)
 19169  0035D4  0E34               	movlw	52
 19170  0035D6  25FE               	addwf	_currentTCB& (0+255),w,b
 19171  0035D8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19172  0035DA  0E00               	movlw	0
 19173  0035DC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19174  0035DE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19175  0035E0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19176  0035E4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19177  0035E8  0E00               	movlw	low (__smallconst shr (0+16))
 19178  0035EA  6EF8               	movwf	tblptru,c
 19179  0035EC  0E0F               	movlw	(high __ramtop+-1)
 19180  0035EE  64F7               	cpfsgt	tblptrh,c
 19181  0035F0  D003               	bra	u13257
 19182  0035F2  0008               	tblrd		*
 19183  0035F4  50F5               	movf	tablat,w,c
 19184  0035F6  D005               	bra	u13250
 19185  0035F8                     u13257:
 19186  0035F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 19187  0035FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 19188  003600  50EF               	movf	indf0,w,c
 19189  003602                     u13250:
 19190  003602  0900               	iorlw	0
 19191  003604  E002 EF32  F013    	bnz	l8637
 19192                           
 19193                           ;tcpv4.c: 1074: {
 19194                           ;tcpv4.c: 1076: currentTCB->flags = 0x04U;
 19195  00360A  0E35               	movlw	53
 19196  00360C  0100               	movlb	0	; () banked
 19197  00360E  25FE               	addwf	_currentTCB& (0+255),w,b
 19198  003610  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19199  003612  0E00               	movlw	0
 19200  003614  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19201  003616  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19202  003618  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19203  00361C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19204  003620  0E00               	movlw	low (__smallconst shr (0+16))
 19205  003622  6EF8               	movwf	tblptru,c
 19206  003624  0E0F               	movlw	(high __ramtop+-1)
 19207  003626  64F7               	cpfsgt	tblptrh,c
 19208  003628  D004               	bra	u13277
 19209  00362A  0E04               	movlw	4
 19210  00362C  6EF5               	movwf	tablat,c
 19211  00362E  000C               	tblwt		*
 19212  003630  D006               	bra	u13270
 19213  003632                     u13277:
 19214  003632  CFF6 FFE9          	movff	tblptrl,fsr0l
 19215  003636  CFF7 FFEA          	movff	tblptrh,fsr0h
 19216  00363A  0E04               	movlw	4
 19217  00363C  6EEF               	movwf	indf0,c
 19218  00363E                     u13270:
 19219                           
 19220                           ;tcpv4.c: 1077: if(TCP_Snd(currentTCB))
 19221  00363E  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19222  003642  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19223  003646  EC11  F01D         	call	_TCP_Snd	;wreg free
 19224  00364A  EF72  F00D         	goto	L10
 19225  00364E                     l8775:
 19226  00364E  0100               	movlb	0	; () banked
 19227  003650  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19228                           
 19229                           ; Switch size 1, requested type "speed"
 19230                           ; Number of cases is 2, Range of values is 6 to 12
 19231                           ; switch strategies available:
 19232                           ; Name         Instructions Cycles
 19233                           ; simple_byte            7     4 (average)
 19234                           ;	Chosen strategy is simple_byte
 19235  003652  0A06               	xorlw	6	; case 6
 19236  003654  E0B8               	bz	l8757
 19237  003656  0A0A               	xorlw	10	; case 12
 19238  003658  E0BD               	bz	l8761
 19239  00365A  D1AC               	goto	l8831
 19240  00365C                     l8781:
 19241  00365C  0100               	movlb	0	; () banked
 19242  00365E  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19243                           
 19244                           ; Switch size 1, requested type "speed"
 19245                           ; Number of cases is 1, Range of values is 4 to 4
 19246                           ; switch strategies available:
 19247                           ; Name         Instructions Cycles
 19248                           ; simple_byte            4     3 (average)
 19249                           ;	Chosen strategy is simple_byte
 19250  003660  0A04               	xorlw	4	; case 4
 19251  003662  E101 D763          	bz	l8739
 19252  003666  D1A6               	goto	l8831
 19253  003668                     l8783:
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;tcpv4.c: 1107: case RCV_ACK:
 19257                           ;tcpv4.c: 1108: if ((currentTCB->destIP == receivedRemoteAddress) &&
 19258                           ;tcpv4.c: 1109: (currentTCB->destPort == tcpHeader.sourcePort))
 19259  003668  0E02               	movlw	2
 19260  00366A  25FE               	addwf	_currentTCB& (0+255),w,b
 19261  00366C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19262  00366E  0E00               	movlw	0
 19263  003670  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19264  003672  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19265  003674  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19266  003678  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19267  00367C  0E00               	movlw	low (__smallconst shr (0+16))
 19268  00367E  6EF8               	movwf	tblptru,c
 19269  003680  0E0F               	movlw	(high __ramtop+-1)
 19270  003682  64F7               	cpfsgt	tblptrh,c
 19271  003684  D00D               	bra	u13297
 19272  003686  0009               	tblrd		*+
 19273  003688  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 19274  00368C  0009               	tblrd		*+
 19275  00368E  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 19276  003692  0009               	tblrd		*+
 19277  003694  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 19278  003698  0009               	tblrd		*+
 19279  00369A  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 19280  00369E  D00C               	bra	u13290
 19281  0036A0                     u13297:
 19282  0036A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 19283  0036A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 19284  0036A8  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19285  0036AC  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19286  0036B0  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 19287  0036B4  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 19288  0036B8                     u13290:
 19289  0036B8  0101               	movlb	1	; () banked
 19290  0036BA  5196               	movf	_receivedRemoteAddress& (0+255),w,b
 19291  0036BC  0100               	movlb	0	; () banked
 19292  0036BE  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 19293  0036C0  E10F               	bnz	u13301
 19294  0036C2  0101               	movlb	1	; () banked
 19295  0036C4  5197               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 19296  0036C6  0100               	movlb	0	; () banked
 19297  0036C8  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 19298  0036CA  E10A               	bnz	u13301
 19299  0036CC  0101               	movlb	1	; () banked
 19300  0036CE  5198               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 19301  0036D0  0100               	movlb	0	; () banked
 19302  0036D2  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 19303  0036D4  E105               	bnz	u13301
 19304  0036D6  0101               	movlb	1	; () banked
 19305  0036D8  5199               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 19306  0036DA  0100               	movlb	0	; () banked
 19307  0036DC  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 19308  0036DE  A4D8               	btfss	status,2,c
 19309  0036E0                     u13301:
 19310  0036E0  D169               	goto	l8831
 19311                           
 19312                           ; BSR set to: 0
 19313  0036E2  0E06               	movlw	6
 19314  0036E4  25FE               	addwf	_currentTCB& (0+255),w,b
 19315  0036E6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19316  0036E8  0E00               	movlw	0
 19317  0036EA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19318  0036EC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19319  0036EE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19320  0036F2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19321  0036F6  0E00               	movlw	low (__smallconst shr (0+16))
 19322  0036F8  6EF8               	movwf	tblptru,c
 19323  0036FA  0E0F               	movlw	(high __ramtop+-1)
 19324  0036FC  64F7               	cpfsgt	tblptrh,c
 19325  0036FE  D007               	bra	u13317
 19326  003700  0009               	tblrd		*+
 19327  003702  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 19328  003706  0009               	tblrd		*+
 19329  003708  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 19330  00370C  D008               	bra	u13310
 19331  00370E                     u13317:
 19332  00370E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19333  003712  CFF7 FFEA          	movff	tblptrh,fsr0h
 19334  003716  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19335  00371A  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19336  00371E                     u13310:
 19337  00371E  0101               	movlb	1	; () banked
 19338  003720  51BC               	movf	_tcpHeader& (0+255),w,b
 19339  003722  0100               	movlb	0	; () banked
 19340  003724  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 19341  003726  E105               	bnz	u13321
 19342  003728  0101               	movlb	1	; () banked
 19343  00372A  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
 19344  00372C  0100               	movlb	0	; () banked
 19345  00372E  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 19346  003730  D13E               	goto	L16
 19347  003732                     u13321:
 19348  003732  D140               	goto	l8831
 19349  003734                     l8791:
 19350                           
 19351                           ; BSR set to: 0
 19352                           ;tcpv4.c: 1117: if (currentTCB->timeoutsCount)
 19353  003734  0E34               	movlw	52
 19354  003736  25FE               	addwf	_currentTCB& (0+255),w,b
 19355  003738  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19356  00373A  0E00               	movlw	0
 19357  00373C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19358  00373E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19359  003740  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19360  003744  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19361  003748  0E00               	movlw	low (__smallconst shr (0+16))
 19362  00374A  6EF8               	movwf	tblptru,c
 19363  00374C  0E0F               	movlw	(high __ramtop+-1)
 19364  00374E  64F7               	cpfsgt	tblptrh,c
 19365  003750  D003               	bra	u13337
 19366  003752  0008               	tblrd		*
 19367  003754  50F5               	movf	tablat,w,c
 19368  003756  D005               	bra	u13330
 19369  003758                     u13337:
 19370  003758  CFF6 FFE9          	movff	tblptrl,fsr0l
 19371  00375C  CFF7 FFEA          	movff	tblptrh,fsr0h
 19372  003760  50EF               	movf	indf0,w,c
 19373  003762                     u13330:
 19374  003762  0900               	iorlw	0
 19375  003764  E002 EF32  F013    	bnz	l8637
 19376                           
 19377                           ;tcpv4.c: 1121: {
 19378                           ;tcpv4.c: 1123: currentTCB->flags = 0x04U;
 19379  00376A  0E35               	movlw	53
 19380  00376C  0100               	movlb	0	; () banked
 19381  00376E  25FE               	addwf	_currentTCB& (0+255),w,b
 19382  003770  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19383  003772  0E00               	movlw	0
 19384  003774  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19385  003776  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19386  003778  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19387  00377C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19388  003780  0E00               	movlw	low (__smallconst shr (0+16))
 19389  003782  6EF8               	movwf	tblptru,c
 19390  003784  0E0F               	movlw	(high __ramtop+-1)
 19391  003786  64F7               	cpfsgt	tblptrh,c
 19392  003788  D004               	bra	u13357
 19393  00378A  0E04               	movlw	4
 19394  00378C  6EF5               	movwf	tablat,c
 19395  00378E  000C               	tblwt		*
 19396  003790  D006               	bra	u13350
 19397  003792                     u13357:
 19398  003792  CFF6 FFE9          	movff	tblptrl,fsr0l
 19399  003796  CFF7 FFEA          	movff	tblptrh,fsr0h
 19400  00379A  0E04               	movlw	4
 19401  00379C  6EEF               	movwf	indf0,c
 19402  00379E                     u13350:
 19403                           
 19404                           ;tcpv4.c: 1124: if(TCP_Snd(currentTCB))
 19405  00379E  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19406  0037A2  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19407  0037A6  EC11  F01D         	call	_TCP_Snd	;wreg free
 19408  0037AA  EF72  F00D         	goto	L10
 19409  0037AE                     l8805:
 19410  0037AE  0100               	movlb	0	; () banked
 19411  0037B0  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19412                           
 19413                           ; Switch size 1, requested type "speed"
 19414                           ; Number of cases is 3, Range of values is 4 to 12
 19415                           ; switch strategies available:
 19416                           ; Name         Instructions Cycles
 19417                           ; simple_byte           10     6 (average)
 19418                           ;	Chosen strategy is simple_byte
 19419  0037B2  0A04               	xorlw	4	; case 4
 19420  0037B4  E101 D758          	bz	l8783
 19421  0037B8  0A03               	xorlw	3	; case 7
 19422  0037BA  E101 D755          	bz	l8783
 19423  0037BE  0A0B               	xorlw	11	; case 12
 19424  0037C0  E0B9               	bz	l8791
 19425  0037C2  D0F8               	goto	l8831
 19426  0037C4                     l8809:
 19427                           
 19428                           ; BSR set to: 0
 19429                           ;tcpv4.c: 1143: ;
 19430                           ;tcpv4.c: 1145: currentTCB->timeout = ((unsigned long)1*2);
 19431  0037C4  0E30               	movlw	48
 19432  0037C6  25FE               	addwf	_currentTCB& (0+255),w,b
 19433  0037C8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19434  0037CA  0E00               	movlw	0
 19435  0037CC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19436  0037CE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19437  0037D0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19438  0037D4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19439  0037D8  0E00               	movlw	low (__smallconst shr (0+16))
 19440  0037DA  6EF8               	movwf	tblptru,c
 19441  0037DC  0E0F               	movlw	(high __ramtop+-1)
 19442  0037DE  64F7               	cpfsgt	tblptrh,c
 19443  0037E0  D006               	bra	u13377
 19444  0037E2  0E02               	movlw	2
 19445  0037E4  6EF5               	movwf	tablat,c
 19446  0037E6  000D               	tblwt		*+
 19447  0037E8  6AF5               	clrf	tablat,c
 19448  0037EA  000C               	tblwt		*
 19449  0037EC  D007               	bra	u13370
 19450  0037EE                     u13377:
 19451  0037EE  CFF6 FFE9          	movff	tblptrl,fsr0l
 19452  0037F2  CFF7 FFEA          	movff	tblptrh,fsr0h
 19453  0037F6  0E02               	movlw	2
 19454  0037F8  6EEE               	movwf	postinc0,c
 19455  0037FA  6AEF               	clrf	indf0,c
 19456  0037FC                     u13370:
 19457                           
 19458                           ;tcpv4.c: 1146: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 19459  0037FC  0E32               	movlw	50
 19460  0037FE  0100               	movlb	0	; () banked
 19461  003800  25FE               	addwf	_currentTCB& (0+255),w,b
 19462  003802  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19463  003804  0E00               	movlw	0
 19464  003806  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19465  003808  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19466  00380A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19467  00380E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19468  003812  0E00               	movlw	low (__smallconst shr (0+16))
 19469  003814  6EF8               	movwf	tblptru,c
 19470  003816  0E0F               	movlw	(high __ramtop+-1)
 19471  003818  64F7               	cpfsgt	tblptrh,c
 19472  00381A  D006               	bra	u13387
 19473  00381C  0E02               	movlw	2
 19474  00381E  6EF5               	movwf	tablat,c
 19475  003820  000D               	tblwt		*+
 19476  003822  6AF5               	clrf	tablat,c
 19477  003824  000C               	tblwt		*
 19478  003826  D007               	bra	u13380
 19479  003828                     u13387:
 19480  003828  CFF6 FFE9          	movff	tblptrl,fsr0l
 19481  00382C  CFF7 FFEA          	movff	tblptrh,fsr0h
 19482  003830  0E02               	movlw	2
 19483  003832  6EEE               	movwf	postinc0,c
 19484  003834  6AEF               	clrf	indf0,c
 19485  003836                     u13380:
 19486                           
 19487                           ;tcpv4.c: 1147: currentTCB->timeoutsCount = (3u);
 19488  003836  0E34               	movlw	52
 19489  003838  0100               	movlb	0	; () banked
 19490  00383A  25FE               	addwf	_currentTCB& (0+255),w,b
 19491  00383C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19492  00383E  0E00               	movlw	0
 19493  003840  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19494  003842  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19495  003844  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19496  003848  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19497  00384C  0E00               	movlw	low (__smallconst shr (0+16))
 19498  00384E  6EF8               	movwf	tblptru,c
 19499  003850  0E0F               	movlw	(high __ramtop+-1)
 19500  003852  64F7               	cpfsgt	tblptrh,c
 19501  003854  D004               	bra	u13397
 19502  003856  0E03               	movlw	3
 19503  003858  6EF5               	movwf	tablat,c
 19504  00385A  000C               	tblwt		*
 19505  00385C  D006               	bra	u13390
 19506  00385E                     u13397:
 19507  00385E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19508  003862  CFF7 FFEA          	movff	tblptrh,fsr0h
 19509  003866  0E03               	movlw	3
 19510  003868  6EEF               	movwf	indf0,c
 19511  00386A                     u13390:
 19512                           
 19513                           ;tcpv4.c: 1148: currentTCB->flags = 0x02U;
 19514  00386A  0E35               	movlw	53
 19515  00386C  0100               	movlb	0	; () banked
 19516  00386E  25FE               	addwf	_currentTCB& (0+255),w,b
 19517  003870  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19518  003872  0E00               	movlw	0
 19519  003874  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19520  003876  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19521  003878  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19522  00387C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19523  003880  0E00               	movlw	low (__smallconst shr (0+16))
 19524  003882  6EF8               	movwf	tblptru,c
 19525  003884  0E0F               	movlw	(high __ramtop+-1)
 19526  003886  64F7               	cpfsgt	tblptrh,c
 19527  003888  D004               	bra	u13407
 19528  00388A  0E02               	movlw	2
 19529  00388C  6EF5               	movwf	tablat,c
 19530  00388E  000C               	tblwt		*
 19531  003890  D006               	bra	u13400
 19532  003892                     u13407:
 19533  003892  CFF6 FFE9          	movff	tblptrl,fsr0l
 19534  003896  CFF7 FFEA          	movff	tblptrh,fsr0h
 19535  00389A  0E02               	movlw	2
 19536  00389C  6EEF               	movwf	indf0,c
 19537  00389E                     u13400:
 19538                           
 19539                           ;tcpv4.c: 1149: TCP_Snd(currentTCB);
 19540  00389E  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19541  0038A2  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19542  0038A6  EC11  F01D         	call	_TCP_Snd	;wreg free
 19543                           
 19544                           ; BSR set to: 0
 19545                           ;tcpv4.c: 1150: nextState = SYN_SENT;
 19546  0038AA  0E02               	movlw	2
 19547  0038AC  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 19548                           
 19549                           ; BSR set to: 0
 19550                           ;tcpv4.c: 1151: ret = 1;
 19551  0038AE  0E01               	movlw	1
 19552  0038B0  6FCF               	movwf	TCP_FiniteStateMachine@ret& (0+255),b
 19553                           
 19554                           ;tcpv4.c: 1152: break;
 19555  0038B2  D080               	goto	l8831
 19556  0038B4                     l8817:
 19557                           
 19558                           ; BSR set to: 0
 19559                           ;tcpv4.c: 1154: ;
 19560                           ;tcpv4.c: 1155: currentTCB->destIP = 0;
 19561  0038B4  0E02               	movlw	2
 19562  0038B6  25FE               	addwf	_currentTCB& (0+255),w,b
 19563  0038B8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19564  0038BA  0E00               	movlw	0
 19565  0038BC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19566  0038BE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19567  0038C0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19568  0038C4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19569  0038C8  0E00               	movlw	low (__smallconst shr (0+16))
 19570  0038CA  6EF8               	movwf	tblptru,c
 19571  0038CC  0E0F               	movlw	(high __ramtop+-1)
 19572  0038CE  64F7               	cpfsgt	tblptrh,c
 19573  0038D0  D009               	bra	u13417
 19574  0038D2  6AF5               	clrf	tablat,c
 19575  0038D4  000D               	tblwt		*+
 19576  0038D6  6AF5               	clrf	tablat,c
 19577  0038D8  000D               	tblwt		*+
 19578  0038DA  6AF5               	clrf	tablat,c
 19579  0038DC  000D               	tblwt		*+
 19580  0038DE  6AF5               	clrf	tablat,c
 19581  0038E0  000C               	tblwt		*
 19582  0038E2  D008               	bra	u13410
 19583  0038E4                     u13417:
 19584  0038E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 19585  0038E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 19586  0038EC  6AEE               	clrf	postinc0,c
 19587  0038EE  6AEE               	clrf	postinc0,c
 19588  0038F0  6AEE               	clrf	postinc0,c
 19589  0038F2  6AEF               	clrf	indf0,c
 19590  0038F4                     u13410:
 19591                           
 19592                           ;tcpv4.c: 1156: currentTCB->destPort = 0;
 19593  0038F4  0E06               	movlw	6
 19594  0038F6  0100               	movlb	0	; () banked
 19595  0038F8  25FE               	addwf	_currentTCB& (0+255),w,b
 19596  0038FA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19597  0038FC  0E00               	movlw	0
 19598  0038FE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19599  003900  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19600  003902  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19601  003906  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19602  00390A  0E00               	movlw	low (__smallconst shr (0+16))
 19603  00390C  6EF8               	movwf	tblptru,c
 19604  00390E  0E0F               	movlw	(high __ramtop+-1)
 19605  003910  64F7               	cpfsgt	tblptrh,c
 19606  003912  D005               	bra	u13427
 19607  003914  6AF5               	clrf	tablat,c
 19608  003916  000D               	tblwt		*+
 19609  003918  6AF5               	clrf	tablat,c
 19610  00391A  000C               	tblwt		*
 19611  00391C  D006               	bra	u13420
 19612  00391E                     u13427:
 19613  00391E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19614  003922  CFF7 FFEA          	movff	tblptrh,fsr0h
 19615  003926  6AEE               	clrf	postinc0,c
 19616  003928  6AEF               	clrf	indf0,c
 19617  00392A                     u13420:
 19618                           
 19619                           ;tcpv4.c: 1157: nextState = LISTEN;
 19620  00392A  0E01               	movlw	1
 19621  00392C  0100               	movlb	0	; () banked
 19622  00392E  D7BE               	goto	L17
 19623  003930                     l8825:
 19624  003930  0100               	movlb	0	; () banked
 19625  003932  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19626                           
 19627                           ; Switch size 1, requested type "speed"
 19628                           ; Number of cases is 2, Range of values is 1 to 2
 19629                           ; switch strategies available:
 19630                           ; Name         Instructions Cycles
 19631                           ; simple_byte            7     4 (average)
 19632                           ;	Chosen strategy is simple_byte
 19633  003934  0A01               	xorlw	1	; case 1
 19634  003936  E101 D745          	bz	l8809
 19635  00393A  0A03               	xorlw	3	; case 2
 19636  00393C  E0BB               	bz	l8817
 19637  00393E  D03A               	goto	l8831
 19638  003940                     l8829:
 19639                           
 19640                           ; BSR set to: 0
 19641  003940  0E2A               	movlw	42
 19642  003942  25FE               	addwf	_currentTCB& (0+255),w,b
 19643  003944  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19644  003946  0E00               	movlw	0
 19645  003948  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19646  00394A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19647  00394C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19648  003950  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19649  003954  0E00               	movlw	low (__smallconst shr (0+16))
 19650  003956  6EF8               	movwf	tblptru,c
 19651  003958  0E0F               	movlw	(high __ramtop+-1)
 19652  00395A  64F7               	cpfsgt	tblptrh,c
 19653  00395C  D003               	bra	u13437
 19654  00395E  0008               	tblrd		*
 19655  003960  50F5               	movf	tablat,w,c
 19656  003962  D005               	bra	u13430
 19657  003964                     u13437:
 19658  003964  CFF6 FFE9          	movff	tblptrl,fsr0l
 19659  003968  CFF7 FFEA          	movff	tblptrh,fsr0h
 19660  00396C  50EF               	movf	indf0,w,c
 19661  00396E                     u13430:
 19662                           
 19663                           ; Switch size 1, requested type "speed"
 19664                           ; Number of cases is 11, Range of values is 0 to 10
 19665                           ; switch strategies available:
 19666                           ; Name         Instructions Cycles
 19667                           ; simple_byte           34    18 (average)
 19668                           ;	Chosen strategy is simple_byte
 19669  00396E  0A00               	xorlw	0	; case 0
 19670  003970  E0DF               	bz	l8825
 19671  003972  0A01               	xorlw	1	; case 1
 19672  003974  E102 EF4B  F00A    	bz	l8513
 19673  00397A  0A03               	xorlw	3	; case 2
 19674  00397C  E102 EFFE  F00F    	bz	l8605
 19675  003982  0A01               	xorlw	1	; case 3
 19676  003984  E102 EFC9  F015    	bz	l8661
 19677  00398A  0A07               	xorlw	7	; case 4
 19678  00398C  E101 D536          	bz	l8723
 19679  003990  0A01               	xorlw	1	; case 5
 19680  003992  E101 D60B          	bz	l8755
 19681  003996  0A03               	xorlw	3	; case 6
 19682  003998  E101 D659          	bz	l8775
 19683  00399C  0A01               	xorlw	1	; case 7
 19684  00399E  E00A               	bz	l8831
 19685  0039A0  0A0F               	xorlw	15	; case 8
 19686  0039A2  E101 D65B          	bz	l8781
 19687  0039A6  0A01               	xorlw	1	; case 9
 19688  0039A8  E101 D701          	bz	l8805
 19689  0039AC  0A03               	xorlw	3	; case 10
 19690  0039AE                     L16:
 19691  0039AE  E102 EF41  F00A    	bz	l1293
 19692  0039B4                     l8831:
 19693                           
 19694                           ;tcpv4.c: 1167: currentTCB->connectionEvent = NOP;
 19695  0039B4  0E2B               	movlw	43
 19696  0039B6  0100               	movlb	0	; () banked
 19697  0039B8  25FE               	addwf	_currentTCB& (0+255),w,b
 19698  0039BA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19699  0039BC  0E00               	movlw	0
 19700  0039BE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19701  0039C0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19702  0039C2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19703  0039C6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19704  0039CA  0E00               	movlw	low (__smallconst shr (0+16))
 19705  0039CC  6EF8               	movwf	tblptru,c
 19706  0039CE  0E0F               	movlw	(high __ramtop+-1)
 19707  0039D0  64F7               	cpfsgt	tblptrh,c
 19708  0039D2  D004               	bra	u13447
 19709  0039D4  0E0D               	movlw	13
 19710  0039D6  6EF5               	movwf	tablat,c
 19711  0039D8  000C               	tblwt		*
 19712  0039DA  D006               	bra	u13440
 19713  0039DC                     u13447:
 19714  0039DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 19715  0039E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 19716  0039E4  0E0D               	movlw	13
 19717  0039E6  6EEF               	movwf	indf0,c
 19718  0039E8                     u13440:
 19719                           
 19720                           ;tcpv4.c: 1168: currentTCB->fsmState = nextState;
 19721  0039E8  0E2A               	movlw	42
 19722  0039EA  0100               	movlb	0	; () banked
 19723  0039EC  25FE               	addwf	_currentTCB& (0+255),w,b
 19724  0039EE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19725  0039F0  0E00               	movlw	0
 19726  0039F2  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19727  0039F4  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19728  0039F6  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19729  0039FA  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19730  0039FE  0E00               	movlw	low (__smallconst shr (0+16))
 19731  003A00  6EF8               	movwf	tblptru,c
 19732  003A02  0E0F               	movlw	(high __ramtop+-1)
 19733  003A04  64F7               	cpfsgt	tblptrh,c
 19734  003A06  D004               	bra	u13457
 19735  003A08  C0D3  FFF5         	movff	TCP_FiniteStateMachine@nextState,tablat
 19736  003A0C  000C               	tblwt		*
 19737  003A0E  D006               	bra	u13450
 19738  003A10                     u13457:
 19739  003A10  CFF6 FFE9          	movff	tblptrl,fsr0l
 19740  003A14  CFF7 FFEA          	movff	tblptrh,fsr0h
 19741  003A18  C0D3  FFEF         	movff	TCP_FiniteStateMachine@nextState,indf0
 19742  003A1C                     u13450:
 19743                           
 19744                           ;tcpv4.c: 1169: return ret;
 19745  003A1C  0100               	movlb	0	; () banked
 19746  003A1E  51CF               	movf	TCP_FiniteStateMachine@ret& (0+255),w,b
 19747                           
 19748                           ; BSR set to: 0
 19749  003A20  0012               	return		;funcret
 19750  003A22                     __end_of_TCP_FiniteStateMachine:
 19751                           	opt stack 0
 19752                           tosu	equ	0xFFF
 19753                           tosh	equ	0xFFE
 19754                           tosl	equ	0xFFD
 19755                           pclath	equ	0xFFA
 19756                           tblptru	equ	0xFF8
 19757                           tblptrh	equ	0xFF7
 19758                           tblptrl	equ	0xFF6
 19759                           tablat	equ	0xFF5
 19760                           prodh	equ	0xFF4
 19761                           prodl	equ	0xFF3
 19762                           intcon	equ	0xFF2
 19763                           intcon2	equ	0xFF1
 19764                           indf0	equ	0xFEF
 19765                           postinc0	equ	0xFEE
 19766                           fsr0h	equ	0xFEA
 19767                           fsr0l	equ	0xFE9
 19768                           wreg	equ	0xFE8
 19769                           indf1	equ	0xFE7
 19770                           postinc1	equ	0xFE6
 19771                           postdec1	equ	0xFE5
 19772                           plusw1	equ	0xFE3
 19773                           fsr1h	equ	0xFE2
 19774                           fsr1l	equ	0xFE1
 19775                           indf2	equ	0xFDF
 19776                           postinc2	equ	0xFDE
 19777                           postdec2	equ	0xFDD
 19778                           plusw2	equ	0xFDB
 19779                           fsr2h	equ	0xFDA
 19780                           fsr2l	equ	0xFD9
 19781                           status	equ	0xFD8
 19782                           
 19783 ;; *************** function _TCP_PayloadSave *****************
 19784 ;; Defined at:
 19785 ;;		line 310 in file "../../TCPIP Library/source/tcpv4.c"
 19786 ;; Parameters:    Size  Location     Type
 19787 ;;  len             2   89[COMRAM] unsigned int 
 19788 ;; Auto vars:     Size  Location     Type
 19789 ;;  buffer_size     2   97[BANK0 ] unsigned int 
 19790 ;;  ret             1    0        unsigned char 
 19791 ;; Return value:  Size  Location     Type
 19792 ;;                  1    wreg      unsigned char 
 19793 ;; Registers used:
 19794 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19795 ;; Tracked objects:
 19796 ;;		On entry : 0/1
 19797 ;;		On exit  : 0/0
 19798 ;;		Unchanged: 0/0
 19799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19801 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19802 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19803 ;;      Totals:         2      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19804 ;;Total ram usage:       17 bytes
 19805 ;; Hardware stack levels used:    1
 19806 ;; Hardware stack levels required when called:   10
 19807 ;; This function calls:
 19808 ;;		_ETH_ReadBlock
 19809 ;;		_TCP_Snd
 19810 ;; This function is called by:
 19811 ;;		_TCP_FiniteStateMachine
 19812 ;; This function uses a non-reentrant model
 19813 ;;
 19814                           
 19815                           	psect	text79
 19816  005AB0                     __ptext79:
 19817                           	opt stack 0
 19818  005AB0                     _TCP_PayloadSave:
 19819                           	opt stack 17
 19820                           
 19821                           ;tcpv4.c: 313: uint16_t buffer_size;
 19822                           ;tcpv4.c: 316: if (currentTCB->rxBufState == RX_BUFF_IN_USE)
 19823                           
 19824                           ; BSR set to: 0
 19825                           ;incstack = 0
 19826  005AB0  0E22               	movlw	34
 19827  005AB2  0100               	movlb	0	; () banked
 19828  005AB4  25FE               	addwf	_currentTCB& (0+255),w,b
 19829  005AB6  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 19830  005AB8  0E00               	movlw	0
 19831  005ABA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19832  005ABC  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 19833  005ABE  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 19834  005AC2  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 19835  005AC6  0E00               	movlw	low (__smallconst shr (0+16))
 19836  005AC8  6EF8               	movwf	tblptru,c
 19837  005ACA  0E0F               	movlw	(high __ramtop+-1)
 19838  005ACC  64F7               	cpfsgt	tblptrh,c
 19839  005ACE  D003               	bra	u11287
 19840  005AD0  0008               	tblrd		*
 19841  005AD2  50F5               	movf	tablat,w,c
 19842  005AD4  D005               	bra	u11280
 19843  005AD6                     u11287:
 19844  005AD6  CFF6 FFE9          	movff	tblptrl,fsr0l
 19845  005ADA  CFF7 FFEA          	movff	tblptrh,fsr0h
 19846  005ADE  50EF               	movf	indf0,w,c
 19847  005AE0                     u11280:
 19848  005AE0  06E8               	decf	wreg,f,c
 19849  005AE2  A4D8               	btfss	status,2,c
 19850  005AE4  0012               	return	
 19851                           
 19852                           ;tcpv4.c: 317: {
 19853                           ;tcpv4.c: 319: if (currentTCB->localWnd >= len)
 19854  005AE6  0E1A               	movlw	26
 19855  005AE8  0100               	movlb	0	; () banked
 19856  005AEA  25FE               	addwf	_currentTCB& (0+255),w,b
 19857  005AEC  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 19858  005AEE  0E00               	movlw	0
 19859  005AF0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19860  005AF2  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 19861  005AF4  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 19862  005AF8  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 19863  005AFC  0E00               	movlw	low (__smallconst shr (0+16))
 19864  005AFE  6EF8               	movwf	tblptru,c
 19865  005B00  0E0F               	movlw	(high __ramtop+-1)
 19866  005B02  64F7               	cpfsgt	tblptrh,c
 19867  005B04  D007               	bra	u11307
 19868  005B06  0009               	tblrd		*+
 19869  005B08  CFF5 F0B6          	movff	tablat,??_TCP_PayloadSave+2
 19870  005B0C  0009               	tblrd		*+
 19871  005B0E  CFF5 F0B7          	movff	tablat,??_TCP_PayloadSave+3
 19872  005B12  D008               	bra	u11300
 19873  005B14                     u11307:
 19874  005B14  CFF6 FFE9          	movff	tblptrl,fsr0l
 19875  005B18  CFF7 FFEA          	movff	tblptrh,fsr0h
 19876  005B1C  CFEE F0B6          	movff	postinc0,??_TCP_PayloadSave+2
 19877  005B20  CFEE F0B7          	movff	postinc0,??_TCP_PayloadSave+3
 19878  005B24                     u11300:
 19879  005B24  505A               	movf	TCP_PayloadSave@len,w,c
 19880  005B26  0100               	movlb	0	; () banked
 19881  005B28  5DB6               	subwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 19882  005B2A  505B               	movf	TCP_PayloadSave@len+1,w,c
 19883  005B2C  59B7               	subwfb	(??_TCP_PayloadSave+3)& (0+255),w,b
 19884  005B2E  E305               	bnc	l8279
 19885                           
 19886                           ; BSR set to: 0
 19887                           ;tcpv4.c: 320: {
 19888                           ;tcpv4.c: 321: buffer_size = len;
 19889  005B30  C05A  F0C1         	movff	TCP_PayloadSave@len,TCP_PayloadSave@buffer_size
 19890  005B34  C05B  F0C2         	movff	TCP_PayloadSave@len+1,TCP_PayloadSave@buffer_size+1
 19891                           
 19892                           ;tcpv4.c: 322: }else
 19893  005B38  D01E               	goto	l8281
 19894  005B3A                     l8279:
 19895                           
 19896                           ; BSR set to: 0
 19897                           ;tcpv4.c: 323: {
 19898                           ;tcpv4.c: 324: buffer_size = currentTCB->localWnd;
 19899  005B3A  0E1A               	movlw	26
 19900  005B3C  25FE               	addwf	_currentTCB& (0+255),w,b
 19901  005B3E  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 19902  005B40  0E00               	movlw	0
 19903  005B42  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19904  005B44  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 19905  005B46  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 19906  005B4A  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 19907  005B4E  0E00               	movlw	low (__smallconst shr (0+16))
 19908  005B50  6EF8               	movwf	tblptru,c
 19909  005B52  0E0F               	movlw	(high __ramtop+-1)
 19910  005B54  64F7               	cpfsgt	tblptrh,c
 19911  005B56  D007               	bra	u11327
 19912  005B58  0009               	tblrd		*+
 19913  005B5A  CFF5 F0C1          	movff	tablat,TCP_PayloadSave@buffer_size
 19914  005B5E  0009               	tblrd		*+
 19915  005B60  CFF5 F0C2          	movff	tablat,TCP_PayloadSave@buffer_size+1
 19916  005B64  D008               	bra	u11320
 19917  005B66                     u11327:
 19918  005B66  CFF6 FFE9          	movff	tblptrl,fsr0l
 19919  005B6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 19920  005B6E  CFEE F0C1          	movff	postinc0,TCP_PayloadSave@buffer_size
 19921  005B72  CFEE F0C2          	movff	postinc0,TCP_PayloadSave@buffer_size+1
 19922  005B76                     u11320:
 19923  005B76                     l8281:
 19924                           
 19925                           ;tcpv4.c: 325: }
 19926                           ;tcpv4.c: 327: ETH_ReadBlock(currentTCB->rxBufferPtr, buffer_size);
 19927  005B76  0E20               	movlw	32
 19928  005B78  0100               	movlb	0	; () banked
 19929  005B7A  25FE               	addwf	_currentTCB& (0+255),w,b
 19930  005B7C  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 19931  005B7E  0E00               	movlw	0
 19932  005B80  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19933  005B82  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 19934  005B84  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 19935  005B88  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 19936  005B8C  0E00               	movlw	low (__smallconst shr (0+16))
 19937  005B8E  6EF8               	movwf	tblptru,c
 19938  005B90  0E0F               	movlw	(high __ramtop+-1)
 19939  005B92  64F7               	cpfsgt	tblptrh,c
 19940  005B94  D007               	bra	u11337
 19941  005B96  0009               	tblrd		*+
 19942  005B98  CFF5 F003          	movff	tablat,ETH_ReadBlock@data
 19943  005B9C  0009               	tblrd		*+
 19944  005B9E  CFF5 F004          	movff	tablat,ETH_ReadBlock@data+1
 19945  005BA2  D008               	bra	u11330
 19946  005BA4                     u11337:
 19947  005BA4  CFF6 FFE9          	movff	tblptrl,fsr0l
 19948  005BA8  CFF7 FFEA          	movff	tblptrh,fsr0h
 19949  005BAC  CFEE F003          	movff	postinc0,ETH_ReadBlock@data
 19950  005BB0  CFEE F004          	movff	postinc0,ETH_ReadBlock@data+1
 19951  005BB4                     u11330:
 19952  005BB4  C0C1  F005         	movff	TCP_PayloadSave@buffer_size,ETH_ReadBlock@length
 19953  005BB8  C0C2  F006         	movff	TCP_PayloadSave@buffer_size+1,ETH_ReadBlock@length+1
 19954  005BBC  ECD9  F03A         	call	_ETH_ReadBlock	;wreg free
 19955                           
 19956                           ; BSR set to: 1
 19957                           ;tcpv4.c: 328: currentTCB->rxBufferPtr = currentTCB->rxBufferPtr + buffer_size;
 19958  005BC0  0E20               	movlw	32
 19959  005BC2  0100               	movlb	0	; () banked
 19960  005BC4  25FE               	addwf	_currentTCB& (0+255),w,b
 19961  005BC6  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 19962  005BC8  0E00               	movlw	0
 19963  005BCA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19964  005BCC  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 19965  005BCE  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 19966  005BD2  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 19967  005BD6  0E00               	movlw	low (__smallconst shr (0+16))
 19968  005BD8  6EF8               	movwf	tblptru,c
 19969  005BDA  0E0F               	movlw	(high __ramtop+-1)
 19970  005BDC  64F7               	cpfsgt	tblptrh,c
 19971  005BDE  D007               	bra	u11347
 19972  005BE0  0009               	tblrd		*+
 19973  005BE2  CFF5 F0B6          	movff	tablat,??_TCP_PayloadSave+2
 19974  005BE6  0009               	tblrd		*+
 19975  005BE8  CFF5 F0B7          	movff	tablat,??_TCP_PayloadSave+3
 19976  005BEC  D008               	bra	u11340
 19977  005BEE                     u11347:
 19978  005BEE  CFF6 FFE9          	movff	tblptrl,fsr0l
 19979  005BF2  CFF7 FFEA          	movff	tblptrh,fsr0h
 19980  005BF6  CFEE F0B6          	movff	postinc0,??_TCP_PayloadSave+2
 19981  005BFA  CFEE F0B7          	movff	postinc0,??_TCP_PayloadSave+3
 19982  005BFE                     u11340:
 19983  005BFE  0100               	movlb	0	; () banked
 19984  005C00  51C1               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 19985  005C02  27B6               	addwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 19986  005C04  51C2               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 19987  005C06  23B7               	addwfc	(??_TCP_PayloadSave+3)& (0+255),f,b
 19988  005C08  0E20               	movlw	32
 19989  005C0A  25FE               	addwf	_currentTCB& (0+255),w,b
 19990  005C0C  6FB8               	movwf	(??_TCP_PayloadSave+4)& (0+255),b
 19991  005C0E  0E00               	movlw	0
 19992  005C10  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19993  005C12  6FB9               	movwf	(??_TCP_PayloadSave+5)& (0+255),b
 19994  005C14  C0B8  FFF6         	movff	??_TCP_PayloadSave+4,tblptrl
 19995  005C18  C0B9  FFF7         	movff	??_TCP_PayloadSave+5,tblptrh
 19996  005C1C  0E00               	movlw	low (__smallconst shr (0+16))
 19997  005C1E  6EF8               	movwf	tblptru,c
 19998  005C20  0E0F               	movlw	(high __ramtop+-1)
 19999  005C22  64F7               	cpfsgt	tblptrh,c
 20000  005C24  D007               	bra	u11357
 20001  005C26  C0B6  FFF5         	movff	??_TCP_PayloadSave+2,tablat
 20002  005C2A  000D               	tblwt		*+
 20003  005C2C  C0B7  FFF5         	movff	??_TCP_PayloadSave+3,tablat
 20004  005C30  000C               	tblwt		*
 20005  005C32  D008               	bra	u11350
 20006  005C34                     u11357:
 20007  005C34  CFF6 FFE9          	movff	tblptrl,fsr0l
 20008  005C38  CFF7 FFEA          	movff	tblptrh,fsr0h
 20009  005C3C  C0B6  FFEE         	movff	??_TCP_PayloadSave+2,postinc0
 20010  005C40  C0B7  FFEF         	movff	??_TCP_PayloadSave+3,indf0
 20011  005C44                     u11350:
 20012                           
 20013                           ;tcpv4.c: 331: currentTCB->localWnd = currentTCB->localWnd - buffer_size;
 20014  005C44  0E1A               	movlw	26
 20015  005C46  0100               	movlb	0	; () banked
 20016  005C48  25FE               	addwf	_currentTCB& (0+255),w,b
 20017  005C4A  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 20018  005C4C  0E00               	movlw	0
 20019  005C4E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20020  005C50  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 20021  005C52  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 20022  005C56  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 20023  005C5A  0E00               	movlw	low (__smallconst shr (0+16))
 20024  005C5C  6EF8               	movwf	tblptru,c
 20025  005C5E  0E0F               	movlw	(high __ramtop+-1)
 20026  005C60  64F7               	cpfsgt	tblptrh,c
 20027  005C62  D007               	bra	u11367
 20028  005C64  0009               	tblrd		*+
 20029  005C66  CFF5 F0B6          	movff	tablat,??_TCP_PayloadSave+2
 20030  005C6A  0009               	tblrd		*+
 20031  005C6C  CFF5 F0B7          	movff	tablat,??_TCP_PayloadSave+3
 20032  005C70  D008               	bra	u11360
 20033  005C72                     u11367:
 20034  005C72  CFF6 FFE9          	movff	tblptrl,fsr0l
 20035  005C76  CFF7 FFEA          	movff	tblptrh,fsr0h
 20036  005C7A  CFEE F0B6          	movff	postinc0,??_TCP_PayloadSave+2
 20037  005C7E  CFEE F0B7          	movff	postinc0,??_TCP_PayloadSave+3
 20038  005C82                     u11360:
 20039  005C82  0100               	movlb	0	; () banked
 20040  005C84  51C1               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 20041  005C86  5FB6               	subwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 20042  005C88  51C2               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 20043  005C8A  5BB7               	subwfb	(??_TCP_PayloadSave+3)& (0+255),f,b
 20044  005C8C  0E1A               	movlw	26
 20045  005C8E  25FE               	addwf	_currentTCB& (0+255),w,b
 20046  005C90  6FB8               	movwf	(??_TCP_PayloadSave+4)& (0+255),b
 20047  005C92  0E00               	movlw	0
 20048  005C94  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20049  005C96  6FB9               	movwf	(??_TCP_PayloadSave+5)& (0+255),b
 20050  005C98  C0B8  FFF6         	movff	??_TCP_PayloadSave+4,tblptrl
 20051  005C9C  C0B9  FFF7         	movff	??_TCP_PayloadSave+5,tblptrh
 20052  005CA0  0E00               	movlw	low (__smallconst shr (0+16))
 20053  005CA2  6EF8               	movwf	tblptru,c
 20054  005CA4  0E0F               	movlw	(high __ramtop+-1)
 20055  005CA6  64F7               	cpfsgt	tblptrh,c
 20056  005CA8  D007               	bra	u11377
 20057  005CAA  C0B6  FFF5         	movff	??_TCP_PayloadSave+2,tablat
 20058  005CAE  000D               	tblwt		*+
 20059  005CB0  C0B7  FFF5         	movff	??_TCP_PayloadSave+3,tablat
 20060  005CB4  000C               	tblwt		*
 20061  005CB6  D008               	bra	u11370
 20062  005CB8                     u11377:
 20063  005CB8  CFF6 FFE9          	movff	tblptrl,fsr0l
 20064  005CBC  CFF7 FFEA          	movff	tblptrh,fsr0h
 20065  005CC0  C0B6  FFEE         	movff	??_TCP_PayloadSave+2,postinc0
 20066  005CC4  C0B7  FFEF         	movff	??_TCP_PayloadSave+3,indf0
 20067  005CC8                     u11370:
 20068                           
 20069                           ;tcpv4.c: 332: currentTCB->remoteAck = currentTCB->remoteSeqno + buffer_size;
 20070  005CC8  0E08               	movlw	8
 20071  005CCA  0100               	movlb	0	; () banked
 20072  005CCC  25FE               	addwf	_currentTCB& (0+255),w,b
 20073  005CCE  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 20074  005CD0  0E00               	movlw	0
 20075  005CD2  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20076  005CD4  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 20077  005CD6  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 20078  005CDA  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 20079  005CDE  0E00               	movlw	low (__smallconst shr (0+16))
 20080  005CE0  6EF8               	movwf	tblptru,c
 20081  005CE2  0E0F               	movlw	(high __ramtop+-1)
 20082  005CE4  64F7               	cpfsgt	tblptrh,c
 20083  005CE6  D00D               	bra	u11387
 20084  005CE8  0009               	tblrd		*+
 20085  005CEA  CFF5 F0B6          	movff	tablat,??_TCP_PayloadSave+2
 20086  005CEE  0009               	tblrd		*+
 20087  005CF0  CFF5 F0B7          	movff	tablat,??_TCP_PayloadSave+3
 20088  005CF4  0009               	tblrd		*+
 20089  005CF6  CFF5 F0B8          	movff	tablat,??_TCP_PayloadSave+4
 20090  005CFA  0009               	tblrd		*+
 20091  005CFC  CFF5 F0B9          	movff	tablat,??_TCP_PayloadSave+5
 20092  005D00  D00C               	bra	u11380
 20093  005D02                     u11387:
 20094  005D02  CFF6 FFE9          	movff	tblptrl,fsr0l
 20095  005D06  CFF7 FFEA          	movff	tblptrh,fsr0h
 20096  005D0A  CFEE F0B6          	movff	postinc0,??_TCP_PayloadSave+2
 20097  005D0E  CFEE F0B7          	movff	postinc0,??_TCP_PayloadSave+3
 20098  005D12  CFEE F0B8          	movff	postinc0,??_TCP_PayloadSave+4
 20099  005D16  CFEE F0B9          	movff	postinc0,??_TCP_PayloadSave+5
 20100  005D1A                     u11380:
 20101  005D1A  0100               	movlb	0	; () banked
 20102  005D1C  51C1               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 20103  005D1E  25B6               	addwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 20104  005D20  6FBA               	movwf	(??_TCP_PayloadSave+6)& (0+255),b
 20105  005D22  51C2               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 20106  005D24  21B7               	addwfc	(??_TCP_PayloadSave+3)& (0+255),w,b
 20107  005D26  6FBB               	movwf	(??_TCP_PayloadSave+7)& (0+255),b
 20108  005D28  0E00               	movlw	0
 20109  005D2A  21B8               	addwfc	(??_TCP_PayloadSave+4)& (0+255),w,b
 20110  005D2C  6FBC               	movwf	(??_TCP_PayloadSave+8)& (0+255),b
 20111  005D2E  0E00               	movlw	0
 20112  005D30  21B9               	addwfc	(??_TCP_PayloadSave+5)& (0+255),w,b
 20113  005D32  6FBD               	movwf	(??_TCP_PayloadSave+9)& (0+255),b
 20114  005D34  0E0C               	movlw	12
 20115  005D36  25FE               	addwf	_currentTCB& (0+255),w,b
 20116  005D38  6FBE               	movwf	(??_TCP_PayloadSave+10)& (0+255),b
 20117  005D3A  0E00               	movlw	0
 20118  005D3C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20119  005D3E  6FBF               	movwf	(??_TCP_PayloadSave+11)& (0+255),b
 20120  005D40  C0BE  FFF6         	movff	??_TCP_PayloadSave+10,tblptrl
 20121  005D44  C0BF  FFF7         	movff	??_TCP_PayloadSave+11,tblptrh
 20122  005D48  0E00               	movlw	low (__smallconst shr (0+16))
 20123  005D4A  6EF8               	movwf	tblptru,c
 20124  005D4C  0E0F               	movlw	(high __ramtop+-1)
 20125  005D4E  64F7               	cpfsgt	tblptrh,c
 20126  005D50  D00D               	bra	u11397
 20127  005D52  C0BA  FFF5         	movff	??_TCP_PayloadSave+6,tablat
 20128  005D56  000D               	tblwt		*+
 20129  005D58  C0BB  FFF5         	movff	??_TCP_PayloadSave+7,tablat
 20130  005D5C  000D               	tblwt		*+
 20131  005D5E  C0BC  FFF5         	movff	??_TCP_PayloadSave+8,tablat
 20132  005D62  000D               	tblwt		*+
 20133  005D64  C0BD  FFF5         	movff	??_TCP_PayloadSave+9,tablat
 20134  005D68  000C               	tblwt		*
 20135  005D6A  D00C               	bra	u11390
 20136  005D6C                     u11397:
 20137  005D6C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20138  005D70  CFF7 FFEA          	movff	tblptrh,fsr0h
 20139  005D74  C0BA  FFEE         	movff	??_TCP_PayloadSave+6,postinc0
 20140  005D78  C0BB  FFEE         	movff	??_TCP_PayloadSave+7,postinc0
 20141  005D7C  C0BC  FFEE         	movff	??_TCP_PayloadSave+8,postinc0
 20142  005D80  C0BD  FFEF         	movff	??_TCP_PayloadSave+9,indf0
 20143  005D84                     u11390:
 20144                           
 20145                           ;tcpv4.c: 335: currentTCB->flags = 0x10U;
 20146  005D84  0E35               	movlw	53
 20147  005D86  0100               	movlb	0	; () banked
 20148  005D88  25FE               	addwf	_currentTCB& (0+255),w,b
 20149  005D8A  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 20150  005D8C  0E00               	movlw	0
 20151  005D8E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20152  005D90  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 20153  005D92  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 20154  005D96  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 20155  005D9A  0E00               	movlw	low (__smallconst shr (0+16))
 20156  005D9C  6EF8               	movwf	tblptru,c
 20157  005D9E  0E0F               	movlw	(high __ramtop+-1)
 20158  005DA0  64F7               	cpfsgt	tblptrh,c
 20159  005DA2  D004               	bra	u11407
 20160  005DA4  0E10               	movlw	16
 20161  005DA6  6EF5               	movwf	tablat,c
 20162  005DA8  000C               	tblwt		*
 20163  005DAA  D006               	bra	u11400
 20164  005DAC                     u11407:
 20165  005DAC  CFF6 FFE9          	movff	tblptrl,fsr0l
 20166  005DB0  CFF7 FFEA          	movff	tblptrh,fsr0h
 20167  005DB4  0E10               	movlw	16
 20168  005DB6  6EEF               	movwf	indf0,c
 20169  005DB8                     u11400:
 20170                           
 20171                           ;tcpv4.c: 336: TCP_Snd(currentTCB);
 20172  005DB8  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 20173  005DBC  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 20174  005DC0  EF11  F01D         	goto	_TCP_Snd	;wreg free
 20175  005DC4                     __end_of_TCP_PayloadSave:
 20176                           	opt stack 0
 20177                           tosu	equ	0xFFF
 20178                           tosh	equ	0xFFE
 20179                           tosl	equ	0xFFD
 20180                           pclath	equ	0xFFA
 20181                           tblptru	equ	0xFF8
 20182                           tblptrh	equ	0xFF7
 20183                           tblptrl	equ	0xFF6
 20184                           tablat	equ	0xFF5
 20185                           prodh	equ	0xFF4
 20186                           prodl	equ	0xFF3
 20187                           intcon	equ	0xFF2
 20188                           intcon2	equ	0xFF1
 20189                           indf0	equ	0xFEF
 20190                           postinc0	equ	0xFEE
 20191                           fsr0h	equ	0xFEA
 20192                           fsr0l	equ	0xFE9
 20193                           wreg	equ	0xFE8
 20194                           indf1	equ	0xFE7
 20195                           postinc1	equ	0xFE6
 20196                           postdec1	equ	0xFE5
 20197                           plusw1	equ	0xFE3
 20198                           fsr1h	equ	0xFE2
 20199                           fsr1l	equ	0xFE1
 20200                           indf2	equ	0xFDF
 20201                           postinc2	equ	0xFDE
 20202                           postdec2	equ	0xFDD
 20203                           plusw2	equ	0xFDB
 20204                           fsr2h	equ	0xFDA
 20205                           fsr2l	equ	0xFD9
 20206                           status	equ	0xFD8
 20207                           
 20208 ;; *************** function _TCP_Snd *****************
 20209 ;; Defined at:
 20210 ;;		line 200 in file "../../TCPIP Library/source/tcpv4.c"
 20211 ;; Parameters:    Size  Location     Type
 20212 ;;  tcbPtr          2   87[COMRAM] PTR struct .
 20213 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
 20214 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), NULL(0), 
 20215 ;; Auto vars:     Size  Location     Type
 20216 ;;  txHeader       20   64[BANK0 ] struct .
 20217 ;;  tcpDataLengt    2   62[BANK0 ] unsigned int 
 20218 ;;  payloadLengt    2   59[BANK0 ] unsigned int 
 20219 ;;  cksm            2   57[BANK0 ] unsigned int 
 20220 ;;  data            2   55[BANK0 ] PTR unsigned char 
 20221 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
 20222 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@txdataPort7(20), Network_Read@debug_str(80), NULL(0), 
 20223 ;;  ret             1   61[BANK0 ] unsigned char 
 20224 ;; Return value:  Size  Location     Type
 20225 ;;                  1    wreg      unsigned char 
 20226 ;; Registers used:
 20227 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20228 ;; Tracked objects:
 20229 ;;		On entry : 0/0
 20230 ;;		On exit  : F/0
 20231 ;;		Unchanged: 0/0
 20232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20234 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20235 ;;      Temps:          0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20236 ;;      Totals:         2      77       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20237 ;;Total ram usage:       79 bytes
 20238 ;; Hardware stack levels used:    1
 20239 ;; Hardware stack levels required when called:    9
 20240 ;; This function calls:
 20241 ;;		_ETH_Insert
 20242 ;;		_ETH_TxComputeChecksum
 20243 ;;		_ETH_WriteBlock
 20244 ;;		_IPV4_Send
 20245 ;;		_IPv4_Start
 20246 ;; This function is called by:
 20247 ;;		_TCP_PayloadSave
 20248 ;;		_TCP_FiniteStateMachine
 20249 ;;		_TCP_Send
 20250 ;; This function uses a non-reentrant model
 20251 ;;
 20252                           
 20253                           	psect	text80
 20254  003A22                     __ptext80:
 20255                           	opt stack 0
 20256  003A22                     _TCP_Snd:
 20257                           	opt stack 18
 20258                           
 20259                           ;tcpv4.c: 203: tcpHeader_t txHeader;
 20260                           ;tcpv4.c: 204: uint16_t payloadLength;
 20261                           ;tcpv4.c: 205: uint16_t cksm;
 20262                           ;tcpv4.c: 206: uint16_t tcpDataLength;
 20263                           ;tcpv4.c: 207: uint8_t *data;
 20264                           ;tcpv4.c: 209: txHeader.sourcePort = ((((uint16_t)tcbPtr->localPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcbPtr->localPort & (uint16_t)0x00FF) << 8));
 20265                           
 20266                           ;incstack = 0
 20267  003A22  C058  FFF6         	movff	TCP_Snd@tcbPtr,tblptrl
 20268  003A26  C059  FFF7         	movff	TCP_Snd@tcbPtr+1,tblptrh
 20269  003A2A  0E00               	movlw	low (__smallconst shr (0+16))
 20270  003A2C  6EF8               	movwf	tblptru,c
 20271  003A2E  0E0F               	movlw	(high __ramtop+-1)
 20272  003A30  64F7               	cpfsgt	tblptrh,c
 20273  003A32  D007               	bra	u10577
 20274  003A34  0009               	tblrd		*+
 20275  003A36  CFF5 F067          	movff	tablat,??_TCP_Snd
 20276  003A3A  0009               	tblrd		*+
 20277  003A3C  CFF5 F068          	movff	tablat,??_TCP_Snd+1
 20278  003A40  D008               	bra	u10570
 20279  003A42                     u10577:
 20280  003A42  CFF6 FFE9          	movff	tblptrl,fsr0l
 20281  003A46  CFF7 FFEA          	movff	tblptrh,fsr0h
 20282  003A4A  CFEE F067          	movff	postinc0,??_TCP_Snd
 20283  003A4E  CFEE F068          	movff	postinc0,??_TCP_Snd+1
 20284  003A52                     u10570:
 20285  003A52  0100               	movlb	0	; () banked
 20286  003A54  5167               	movf	??_TCP_Snd& (0+255),w,b
 20287  003A56  6F6A               	movwf	(??_TCP_Snd+3)& (0+255),b
 20288  003A58  6B69               	clrf	(??_TCP_Snd+2)& (0+255),b
 20289  003A5A  C058  FFF6         	movff	TCP_Snd@tcbPtr,tblptrl
 20290  003A5E  C059  FFF7         	movff	TCP_Snd@tcbPtr+1,tblptrh
 20291  003A62  0E00               	movlw	low (__smallconst shr (0+16))
 20292  003A64  6EF8               	movwf	tblptru,c
 20293  003A66  0E0F               	movlw	(high __ramtop+-1)
 20294  003A68  64F7               	cpfsgt	tblptrh,c
 20295  003A6A  D007               	bra	u10587
 20296  003A6C  0009               	tblrd		*+
 20297  003A6E  CFF5 F06B          	movff	tablat,??_TCP_Snd+4
 20298  003A72  0009               	tblrd		*+
 20299  003A74  CFF5 F06C          	movff	tablat,??_TCP_Snd+5
 20300  003A78  D008               	bra	u10580
 20301  003A7A                     u10587:
 20302  003A7A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20303  003A7E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20304  003A82  CFEE F06B          	movff	postinc0,??_TCP_Snd+4
 20305  003A86  CFEE F06C          	movff	postinc0,??_TCP_Snd+5
 20306  003A8A                     u10580:
 20307  003A8A  C06C  F06B         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 20308  003A8E  0100               	movlb	0	; () banked
 20309  003A90  6B6C               	clrf	(??_TCP_Snd+5)& (0+255),b
 20310  003A92  6B6C               	clrf	(??_TCP_Snd+5)& (0+255),b
 20311  003A94  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 20312  003A96  116B               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 20313  003A98  6FA0               	movwf	TCP_Snd@txHeader& (0+255),b
 20314  003A9A  516A               	movf	(??_TCP_Snd+3)& (0+255),w,b
 20315  003A9C  116C               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 20316  003A9E  6FA1               	movwf	(TCP_Snd@txHeader+1)& (0+255),b
 20317                           
 20318                           ;tcpv4.c: 210: txHeader.destPort = ((((uint16_t)tcbPtr->destPort & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)tcbPtr->destPort & (uint16_t)0x00FF) << 8));
 20319  003AA0  0E06               	movlw	6
 20320  003AA2  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20321  003AA4  6F67               	movwf	??_TCP_Snd& (0+255),b
 20322  003AA6  0E00               	movlw	0
 20323  003AA8  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20324  003AAA  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20325  003AAC  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20326  003AB0  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20327  003AB4  0E00               	movlw	low (__smallconst shr (0+16))
 20328  003AB6  6EF8               	movwf	tblptru,c
 20329  003AB8  0E0F               	movlw	(high __ramtop+-1)
 20330  003ABA  64F7               	cpfsgt	tblptrh,c
 20331  003ABC  D007               	bra	u10597
 20332  003ABE  0009               	tblrd		*+
 20333  003AC0  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 20334  003AC4  0009               	tblrd		*+
 20335  003AC6  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 20336  003ACA  D008               	bra	u10590
 20337  003ACC                     u10597:
 20338  003ACC  CFF6 FFE9          	movff	tblptrl,fsr0l
 20339  003AD0  CFF7 FFEA          	movff	tblptrh,fsr0h
 20340  003AD4  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 20341  003AD8  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 20342  003ADC                     u10590:
 20343  003ADC  0100               	movlb	0	; () banked
 20344  003ADE  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 20345  003AE0  6F6C               	movwf	(??_TCP_Snd+5)& (0+255),b
 20346  003AE2  6B6B               	clrf	(??_TCP_Snd+4)& (0+255),b
 20347  003AE4  0E06               	movlw	6
 20348  003AE6  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20349  003AE8  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 20350  003AEA  0E00               	movlw	0
 20351  003AEC  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20352  003AEE  6F6E               	movwf	(??_TCP_Snd+7)& (0+255),b
 20353  003AF0  C06D  FFF6         	movff	??_TCP_Snd+6,tblptrl
 20354  003AF4  C06E  FFF7         	movff	??_TCP_Snd+7,tblptrh
 20355  003AF8  0E00               	movlw	low (__smallconst shr (0+16))
 20356  003AFA  6EF8               	movwf	tblptru,c
 20357  003AFC  0E0F               	movlw	(high __ramtop+-1)
 20358  003AFE  64F7               	cpfsgt	tblptrh,c
 20359  003B00  D007               	bra	u10607
 20360  003B02  0009               	tblrd		*+
 20361  003B04  CFF5 F06F          	movff	tablat,??_TCP_Snd+8
 20362  003B08  0009               	tblrd		*+
 20363  003B0A  CFF5 F070          	movff	tablat,??_TCP_Snd+9
 20364  003B0E  D008               	bra	u10600
 20365  003B10                     u10607:
 20366  003B10  CFF6 FFE9          	movff	tblptrl,fsr0l
 20367  003B14  CFF7 FFEA          	movff	tblptrh,fsr0h
 20368  003B18  CFEE F06F          	movff	postinc0,??_TCP_Snd+8
 20369  003B1C  CFEE F070          	movff	postinc0,??_TCP_Snd+9
 20370  003B20                     u10600:
 20371  003B20  C070  F06F         	movff	??_TCP_Snd+9,??_TCP_Snd+8
 20372  003B24  0100               	movlb	0	; () banked
 20373  003B26  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 20374  003B28  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 20375  003B2A  516B               	movf	(??_TCP_Snd+4)& (0+255),w,b
 20376  003B2C  116F               	iorwf	(??_TCP_Snd+8)& (0+255),w,b
 20377  003B2E  6FA2               	movwf	(TCP_Snd@txHeader+2)& (0+255),b
 20378  003B30  516C               	movf	(??_TCP_Snd+5)& (0+255),w,b
 20379  003B32  1170               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 20380  003B34  6FA3               	movwf	(TCP_Snd@txHeader+3)& (0+255),b
 20381                           
 20382                           ;tcpv4.c: 212: txHeader.sequenceNumber = ((((uint32_t)tcbPtr->localSeqno&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)tcbPtr->localSeqno&(uint32_t)0x00ff0000) >> 8) | (((uint32_t
      +                          )tcbPtr->localSeqno&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->localSeqno&(uint32
      +                          _
 20383  003B36  0E10               	movlw	16
 20384  003B38  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20385  003B3A  6F67               	movwf	??_TCP_Snd& (0+255),b
 20386  003B3C  0E00               	movlw	0
 20387  003B3E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20388  003B40  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20389  003B42  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20390  003B46  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20391  003B4A  0E00               	movlw	low (__smallconst shr (0+16))
 20392  003B4C  6EF8               	movwf	tblptru,c
 20393  003B4E  0E0F               	movlw	(high __ramtop+-1)
 20394  003B50  64F7               	cpfsgt	tblptrh,c
 20395  003B52  D00D               	bra	u10617
 20396  003B54  0009               	tblrd		*+
 20397  003B56  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 20398  003B5A  0009               	tblrd		*+
 20399  003B5C  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 20400  003B60  0009               	tblrd		*+
 20401  003B62  CFF5 F06B          	movff	tablat,??_TCP_Snd+4
 20402  003B66  0009               	tblrd		*+
 20403  003B68  CFF5 F06C          	movff	tablat,??_TCP_Snd+5
 20404  003B6C  D00C               	bra	u10610
 20405  003B6E                     u10617:
 20406  003B6E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20407  003B72  CFF7 FFEA          	movff	tblptrh,fsr0h
 20408  003B76  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 20409  003B7A  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 20410  003B7E  CFEE F06B          	movff	postinc0,??_TCP_Snd+4
 20411  003B82  CFEE F06C          	movff	postinc0,??_TCP_Snd+5
 20412  003B86                     u10610:
 20413  003B86  0100               	movlb	0	; () banked
 20414  003B88  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 20415  003B8A  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 20416  003B8C  6B6E               	clrf	(??_TCP_Snd+7)& (0+255),b
 20417  003B8E  6B6F               	clrf	(??_TCP_Snd+8)& (0+255),b
 20418  003B90  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 20419  003B92  C06D  F070         	movff	??_TCP_Snd+6,??_TCP_Snd+9
 20420  003B96  6B6F               	clrf	(??_TCP_Snd+8)& (0+255),b
 20421  003B98  6B6E               	clrf	(??_TCP_Snd+7)& (0+255),b
 20422  003B9A  6B6D               	clrf	(??_TCP_Snd+6)& (0+255),b
 20423  003B9C  0E10               	movlw	16
 20424  003B9E  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20425  003BA0  6F71               	movwf	(??_TCP_Snd+10)& (0+255),b
 20426  003BA2  0E00               	movlw	0
 20427  003BA4  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20428  003BA6  6F72               	movwf	(??_TCP_Snd+11)& (0+255),b
 20429  003BA8  C071  FFF6         	movff	??_TCP_Snd+10,tblptrl
 20430  003BAC  C072  FFF7         	movff	??_TCP_Snd+11,tblptrh
 20431  003BB0  0E00               	movlw	low (__smallconst shr (0+16))
 20432  003BB2  6EF8               	movwf	tblptru,c
 20433  003BB4  0E0F               	movlw	(high __ramtop+-1)
 20434  003BB6  64F7               	cpfsgt	tblptrh,c
 20435  003BB8  D00D               	bra	u10627
 20436  003BBA  0009               	tblrd		*+
 20437  003BBC  CFF5 F073          	movff	tablat,??_TCP_Snd+12
 20438  003BC0  0009               	tblrd		*+
 20439  003BC2  CFF5 F074          	movff	tablat,??_TCP_Snd+13
 20440  003BC6  0009               	tblrd		*+
 20441  003BC8  CFF5 F075          	movff	tablat,??_TCP_Snd+14
 20442  003BCC  0009               	tblrd		*+
 20443  003BCE  CFF5 F076          	movff	tablat,??_TCP_Snd+15
 20444  003BD2  D00C               	bra	u10620
 20445  003BD4                     u10627:
 20446  003BD4  CFF6 FFE9          	movff	tblptrl,fsr0l
 20447  003BD8  CFF7 FFEA          	movff	tblptrh,fsr0h
 20448  003BDC  CFEE F073          	movff	postinc0,??_TCP_Snd+12
 20449  003BE0  CFEE F074          	movff	postinc0,??_TCP_Snd+13
 20450  003BE4  CFEE F075          	movff	postinc0,??_TCP_Snd+14
 20451  003BE8  CFEE F076          	movff	postinc0,??_TCP_Snd+15
 20452  003BEC                     u10620:
 20453  003BEC  0100               	movlb	0	; () banked
 20454  003BEE  6B77               	clrf	(??_TCP_Snd+16)& (0+255),b
 20455  003BF0  5174               	movf	(??_TCP_Snd+13)& (0+255),w,b
 20456  003BF2  6F78               	movwf	(??_TCP_Snd+17)& (0+255),b
 20457  003BF4  6B79               	clrf	(??_TCP_Snd+18)& (0+255),b
 20458  003BF6  6B7A               	clrf	(??_TCP_Snd+19)& (0+255),b
 20459  003BF8  C079  F07A         	movff	??_TCP_Snd+18,??_TCP_Snd+19
 20460  003BFC  C078  F079         	movff	??_TCP_Snd+17,??_TCP_Snd+18
 20461  003C00  C077  F078         	movff	??_TCP_Snd+16,??_TCP_Snd+17
 20462  003C04  6B77               	clrf	(??_TCP_Snd+16)& (0+255),b
 20463  003C06  0E10               	movlw	16
 20464  003C08  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20465  003C0A  6F7B               	movwf	(??_TCP_Snd+20)& (0+255),b
 20466  003C0C  0E00               	movlw	0
 20467  003C0E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20468  003C10  6F7C               	movwf	(??_TCP_Snd+21)& (0+255),b
 20469  003C12  C07B  FFF6         	movff	??_TCP_Snd+20,tblptrl
 20470  003C16  C07C  FFF7         	movff	??_TCP_Snd+21,tblptrh
 20471  003C1A  0E00               	movlw	low (__smallconst shr (0+16))
 20472  003C1C  6EF8               	movwf	tblptru,c
 20473  003C1E  0E0F               	movlw	(high __ramtop+-1)
 20474  003C20  64F7               	cpfsgt	tblptrh,c
 20475  003C22  D00D               	bra	u10637
 20476  003C24  0009               	tblrd		*+
 20477  003C26  CFF5 F07D          	movff	tablat,??_TCP_Snd+22
 20478  003C2A  0009               	tblrd		*+
 20479  003C2C  CFF5 F07E          	movff	tablat,??_TCP_Snd+23
 20480  003C30  0009               	tblrd		*+
 20481  003C32  CFF5 F07F          	movff	tablat,??_TCP_Snd+24
 20482  003C36  0009               	tblrd		*+
 20483  003C38  CFF5 F080          	movff	tablat,??_TCP_Snd+25
 20484  003C3C  D00C               	bra	u10630
 20485  003C3E                     u10637:
 20486  003C3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20487  003C42  CFF7 FFEA          	movff	tblptrh,fsr0h
 20488  003C46  CFEE F07D          	movff	postinc0,??_TCP_Snd+22
 20489  003C4A  CFEE F07E          	movff	postinc0,??_TCP_Snd+23
 20490  003C4E  CFEE F07F          	movff	postinc0,??_TCP_Snd+24
 20491  003C52  CFEE F080          	movff	postinc0,??_TCP_Snd+25
 20492  003C56                     u10630:
 20493  003C56  C07E  F07D         	movff	??_TCP_Snd+23,??_TCP_Snd+22
 20494  003C5A  C07F  F07E         	movff	??_TCP_Snd+24,??_TCP_Snd+23
 20495  003C5E  C080  F07F         	movff	??_TCP_Snd+25,??_TCP_Snd+24
 20496  003C62  0100               	movlb	0	; () banked
 20497  003C64  6B80               	clrf	(??_TCP_Snd+25)& (0+255),b
 20498  003C66  6B81               	clrf	(??_TCP_Snd+26)& (0+255),b
 20499  003C68  517E               	movf	(??_TCP_Snd+23)& (0+255),w,b
 20500  003C6A  6F82               	movwf	(??_TCP_Snd+27)& (0+255),b
 20501  003C6C  6B83               	clrf	(??_TCP_Snd+28)& (0+255),b
 20502  003C6E  6B84               	clrf	(??_TCP_Snd+29)& (0+255),b
 20503  003C70  0E10               	movlw	16
 20504  003C72  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20505  003C74  6F85               	movwf	(??_TCP_Snd+30)& (0+255),b
 20506  003C76  0E00               	movlw	0
 20507  003C78  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20508  003C7A  6F86               	movwf	(??_TCP_Snd+31)& (0+255),b
 20509  003C7C  C085  FFF6         	movff	??_TCP_Snd+30,tblptrl
 20510  003C80  C086  FFF7         	movff	??_TCP_Snd+31,tblptrh
 20511  003C84  0E00               	movlw	low (__smallconst shr (0+16))
 20512  003C86  6EF8               	movwf	tblptru,c
 20513  003C88  0E0F               	movlw	(high __ramtop+-1)
 20514  003C8A  64F7               	cpfsgt	tblptrh,c
 20515  003C8C  D00D               	bra	u10647
 20516  003C8E  0009               	tblrd		*+
 20517  003C90  CFF5 F087          	movff	tablat,??_TCP_Snd+32
 20518  003C94  0009               	tblrd		*+
 20519  003C96  CFF5 F088          	movff	tablat,??_TCP_Snd+33
 20520  003C9A  0009               	tblrd		*+
 20521  003C9C  CFF5 F089          	movff	tablat,??_TCP_Snd+34
 20522  003CA0  0009               	tblrd		*+
 20523  003CA2  CFF5 F08A          	movff	tablat,??_TCP_Snd+35
 20524  003CA6  D00C               	bra	u10640
 20525  003CA8                     u10647:
 20526  003CA8  CFF6 FFE9          	movff	tblptrl,fsr0l
 20527  003CAC  CFF7 FFEA          	movff	tblptrh,fsr0h
 20528  003CB0  CFEE F087          	movff	postinc0,??_TCP_Snd+32
 20529  003CB4  CFEE F088          	movff	postinc0,??_TCP_Snd+33
 20530  003CB8  CFEE F089          	movff	postinc0,??_TCP_Snd+34
 20531  003CBC  CFEE F08A          	movff	postinc0,??_TCP_Snd+35
 20532  003CC0                     u10640:
 20533  003CC0  0100               	movlb	0	; () banked
 20534  003CC2  6B8B               	clrf	(??_TCP_Snd+36)& (0+255),b
 20535  003CC4  6B8C               	clrf	(??_TCP_Snd+37)& (0+255),b
 20536  003CC6  6B8D               	clrf	(??_TCP_Snd+38)& (0+255),b
 20537  003CC8  518A               	movf	(??_TCP_Snd+35)& (0+255),w,b
 20538  003CCA  6F8E               	movwf	(??_TCP_Snd+39)& (0+255),b
 20539  003CCC  0E19               	movlw	25
 20540  003CCE  D005               	goto	u10650
 20541  003CD0                     u10655:
 20542  003CD0  90D8               	bcf	status,0,c
 20543  003CD2  338E               	rrcf	(??_TCP_Snd+39)& (0+255),f,b
 20544  003CD4  338D               	rrcf	(??_TCP_Snd+38)& (0+255),f,b
 20545  003CD6  338C               	rrcf	(??_TCP_Snd+37)& (0+255),f,b
 20546  003CD8  338B               	rrcf	(??_TCP_Snd+36)& (0+255),f,b
 20547  003CDA                     u10650:
 20548  003CDA  2EE8               	decfsz	wreg,f,c
 20549  003CDC  D7F9               	goto	u10655
 20550  003CDE  5181               	movf	(??_TCP_Snd+26)& (0+255),w,b
 20551  003CE0  118B               	iorwf	(??_TCP_Snd+36)& (0+255),w,b
 20552  003CE2  6F8F               	movwf	(??_TCP_Snd+40)& (0+255),b
 20553  003CE4  5182               	movf	(??_TCP_Snd+27)& (0+255),w,b
 20554  003CE6  118C               	iorwf	(??_TCP_Snd+37)& (0+255),w,b
 20555  003CE8  6F90               	movwf	(??_TCP_Snd+41)& (0+255),b
 20556  003CEA  5183               	movf	(??_TCP_Snd+28)& (0+255),w,b
 20557  003CEC  118D               	iorwf	(??_TCP_Snd+38)& (0+255),w,b
 20558  003CEE  6F91               	movwf	(??_TCP_Snd+42)& (0+255),b
 20559  003CF0  5184               	movf	(??_TCP_Snd+29)& (0+255),w,b
 20560  003CF2  118E               	iorwf	(??_TCP_Snd+39)& (0+255),w,b
 20561  003CF4  6F92               	movwf	(??_TCP_Snd+43)& (0+255),b
 20562  003CF6  5177               	movf	(??_TCP_Snd+16)& (0+255),w,b
 20563  003CF8  118F               	iorwf	(??_TCP_Snd+40)& (0+255),w,b
 20564  003CFA  6F93               	movwf	(??_TCP_Snd+44)& (0+255),b
 20565  003CFC  5178               	movf	(??_TCP_Snd+17)& (0+255),w,b
 20566  003CFE  1190               	iorwf	(??_TCP_Snd+41)& (0+255),w,b
 20567  003D00  6F94               	movwf	(??_TCP_Snd+45)& (0+255),b
 20568  003D02  5179               	movf	(??_TCP_Snd+18)& (0+255),w,b
 20569  003D04  1191               	iorwf	(??_TCP_Snd+42)& (0+255),w,b
 20570  003D06  6F95               	movwf	(??_TCP_Snd+46)& (0+255),b
 20571  003D08  517A               	movf	(??_TCP_Snd+19)& (0+255),w,b
 20572  003D0A  1192               	iorwf	(??_TCP_Snd+43)& (0+255),w,b
 20573  003D0C  6F96               	movwf	(??_TCP_Snd+47)& (0+255),b
 20574  003D0E  516D               	movf	(??_TCP_Snd+6)& (0+255),w,b
 20575  003D10  1193               	iorwf	(??_TCP_Snd+44)& (0+255),w,b
 20576  003D12  6FA4               	movwf	(TCP_Snd@txHeader+4)& (0+255),b
 20577  003D14  516E               	movf	(??_TCP_Snd+7)& (0+255),w,b
 20578  003D16  1194               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 20579  003D18  6FA5               	movwf	(TCP_Snd@txHeader+5)& (0+255),b
 20580  003D1A  516F               	movf	(??_TCP_Snd+8)& (0+255),w,b
 20581  003D1C  1195               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 20582  003D1E  6FA6               	movwf	(TCP_Snd@txHeader+6)& (0+255),b
 20583  003D20  5170               	movf	(??_TCP_Snd+9)& (0+255),w,b
 20584  003D22  1196               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 20585  003D24  6FA7               	movwf	(TCP_Snd@txHeader+7)& (0+255),b
 20586                           
 20587                           ;tcpv4.c: 214: txHeader.ackNumber = ((((uint32_t)tcbPtr->remoteAck&(uint32_t)0xff000000)
      +                           >> 24) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)tcbPtr
      +                          ->remoteAck&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x0000
      +                          0
 20588  003D26  0E0C               	movlw	12
 20589  003D28  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20590  003D2A  6F67               	movwf	??_TCP_Snd& (0+255),b
 20591  003D2C  0E00               	movlw	0
 20592  003D2E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20593  003D30  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20594  003D32  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20595  003D36  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20596  003D3A  0E00               	movlw	low (__smallconst shr (0+16))
 20597  003D3C  6EF8               	movwf	tblptru,c
 20598  003D3E  0E0F               	movlw	(high __ramtop+-1)
 20599  003D40  64F7               	cpfsgt	tblptrh,c
 20600  003D42  D00D               	bra	u10667
 20601  003D44  0009               	tblrd		*+
 20602  003D46  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 20603  003D4A  0009               	tblrd		*+
 20604  003D4C  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 20605  003D50  0009               	tblrd		*+
 20606  003D52  CFF5 F06B          	movff	tablat,??_TCP_Snd+4
 20607  003D56  0009               	tblrd		*+
 20608  003D58  CFF5 F06C          	movff	tablat,??_TCP_Snd+5
 20609  003D5C  D00C               	bra	u10660
 20610  003D5E                     u10667:
 20611  003D5E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20612  003D62  CFF7 FFEA          	movff	tblptrh,fsr0h
 20613  003D66  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 20614  003D6A  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 20615  003D6E  CFEE F06B          	movff	postinc0,??_TCP_Snd+4
 20616  003D72  CFEE F06C          	movff	postinc0,??_TCP_Snd+5
 20617  003D76                     u10660:
 20618  003D76  0100               	movlb	0	; () banked
 20619  003D78  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 20620  003D7A  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 20621  003D7C  6B6E               	clrf	(??_TCP_Snd+7)& (0+255),b
 20622  003D7E  6B6F               	clrf	(??_TCP_Snd+8)& (0+255),b
 20623  003D80  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 20624  003D82  C06D  F070         	movff	??_TCP_Snd+6,??_TCP_Snd+9
 20625  003D86  6B6F               	clrf	(??_TCP_Snd+8)& (0+255),b
 20626  003D88  6B6E               	clrf	(??_TCP_Snd+7)& (0+255),b
 20627  003D8A  6B6D               	clrf	(??_TCP_Snd+6)& (0+255),b
 20628  003D8C  0E0C               	movlw	12
 20629  003D8E  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20630  003D90  6F71               	movwf	(??_TCP_Snd+10)& (0+255),b
 20631  003D92  0E00               	movlw	0
 20632  003D94  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20633  003D96  6F72               	movwf	(??_TCP_Snd+11)& (0+255),b
 20634  003D98  C071  FFF6         	movff	??_TCP_Snd+10,tblptrl
 20635  003D9C  C072  FFF7         	movff	??_TCP_Snd+11,tblptrh
 20636  003DA0  0E00               	movlw	low (__smallconst shr (0+16))
 20637  003DA2  6EF8               	movwf	tblptru,c
 20638  003DA4  0E0F               	movlw	(high __ramtop+-1)
 20639  003DA6  64F7               	cpfsgt	tblptrh,c
 20640  003DA8  D00D               	bra	u10677
 20641  003DAA  0009               	tblrd		*+
 20642  003DAC  CFF5 F073          	movff	tablat,??_TCP_Snd+12
 20643  003DB0  0009               	tblrd		*+
 20644  003DB2  CFF5 F074          	movff	tablat,??_TCP_Snd+13
 20645  003DB6  0009               	tblrd		*+
 20646  003DB8  CFF5 F075          	movff	tablat,??_TCP_Snd+14
 20647  003DBC  0009               	tblrd		*+
 20648  003DBE  CFF5 F076          	movff	tablat,??_TCP_Snd+15
 20649  003DC2  D00C               	bra	u10670
 20650  003DC4                     u10677:
 20651  003DC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 20652  003DC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 20653  003DCC  CFEE F073          	movff	postinc0,??_TCP_Snd+12
 20654  003DD0  CFEE F074          	movff	postinc0,??_TCP_Snd+13
 20655  003DD4  CFEE F075          	movff	postinc0,??_TCP_Snd+14
 20656  003DD8  CFEE F076          	movff	postinc0,??_TCP_Snd+15
 20657  003DDC                     u10670:
 20658  003DDC  0100               	movlb	0	; () banked
 20659  003DDE  6B77               	clrf	(??_TCP_Snd+16)& (0+255),b
 20660  003DE0  5174               	movf	(??_TCP_Snd+13)& (0+255),w,b
 20661  003DE2  6F78               	movwf	(??_TCP_Snd+17)& (0+255),b
 20662  003DE4  6B79               	clrf	(??_TCP_Snd+18)& (0+255),b
 20663  003DE6  6B7A               	clrf	(??_TCP_Snd+19)& (0+255),b
 20664  003DE8  C079  F07A         	movff	??_TCP_Snd+18,??_TCP_Snd+19
 20665  003DEC  C078  F079         	movff	??_TCP_Snd+17,??_TCP_Snd+18
 20666  003DF0  C077  F078         	movff	??_TCP_Snd+16,??_TCP_Snd+17
 20667  003DF4  6B77               	clrf	(??_TCP_Snd+16)& (0+255),b
 20668  003DF6  0E0C               	movlw	12
 20669  003DF8  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20670  003DFA  6F7B               	movwf	(??_TCP_Snd+20)& (0+255),b
 20671  003DFC  0E00               	movlw	0
 20672  003DFE  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20673  003E00  6F7C               	movwf	(??_TCP_Snd+21)& (0+255),b
 20674  003E02  C07B  FFF6         	movff	??_TCP_Snd+20,tblptrl
 20675  003E06  C07C  FFF7         	movff	??_TCP_Snd+21,tblptrh
 20676  003E0A  0E00               	movlw	low (__smallconst shr (0+16))
 20677  003E0C  6EF8               	movwf	tblptru,c
 20678  003E0E  0E0F               	movlw	(high __ramtop+-1)
 20679  003E10  64F7               	cpfsgt	tblptrh,c
 20680  003E12  D00D               	bra	u10687
 20681  003E14  0009               	tblrd		*+
 20682  003E16  CFF5 F07D          	movff	tablat,??_TCP_Snd+22
 20683  003E1A  0009               	tblrd		*+
 20684  003E1C  CFF5 F07E          	movff	tablat,??_TCP_Snd+23
 20685  003E20  0009               	tblrd		*+
 20686  003E22  CFF5 F07F          	movff	tablat,??_TCP_Snd+24
 20687  003E26  0009               	tblrd		*+
 20688  003E28  CFF5 F080          	movff	tablat,??_TCP_Snd+25
 20689  003E2C  D00C               	bra	u10680
 20690  003E2E                     u10687:
 20691  003E2E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20692  003E32  CFF7 FFEA          	movff	tblptrh,fsr0h
 20693  003E36  CFEE F07D          	movff	postinc0,??_TCP_Snd+22
 20694  003E3A  CFEE F07E          	movff	postinc0,??_TCP_Snd+23
 20695  003E3E  CFEE F07F          	movff	postinc0,??_TCP_Snd+24
 20696  003E42  CFEE F080          	movff	postinc0,??_TCP_Snd+25
 20697  003E46                     u10680:
 20698  003E46  C07E  F07D         	movff	??_TCP_Snd+23,??_TCP_Snd+22
 20699  003E4A  C07F  F07E         	movff	??_TCP_Snd+24,??_TCP_Snd+23
 20700  003E4E  C080  F07F         	movff	??_TCP_Snd+25,??_TCP_Snd+24
 20701  003E52  0100               	movlb	0	; () banked
 20702  003E54  6B80               	clrf	(??_TCP_Snd+25)& (0+255),b
 20703  003E56  6B81               	clrf	(??_TCP_Snd+26)& (0+255),b
 20704  003E58  517E               	movf	(??_TCP_Snd+23)& (0+255),w,b
 20705  003E5A  6F82               	movwf	(??_TCP_Snd+27)& (0+255),b
 20706  003E5C  6B83               	clrf	(??_TCP_Snd+28)& (0+255),b
 20707  003E5E  6B84               	clrf	(??_TCP_Snd+29)& (0+255),b
 20708  003E60  0E0C               	movlw	12
 20709  003E62  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20710  003E64  6F85               	movwf	(??_TCP_Snd+30)& (0+255),b
 20711  003E66  0E00               	movlw	0
 20712  003E68  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20713  003E6A  6F86               	movwf	(??_TCP_Snd+31)& (0+255),b
 20714  003E6C  C085  FFF6         	movff	??_TCP_Snd+30,tblptrl
 20715  003E70  C086  FFF7         	movff	??_TCP_Snd+31,tblptrh
 20716  003E74  0E00               	movlw	low (__smallconst shr (0+16))
 20717  003E76  6EF8               	movwf	tblptru,c
 20718  003E78  0E0F               	movlw	(high __ramtop+-1)
 20719  003E7A  64F7               	cpfsgt	tblptrh,c
 20720  003E7C  D00D               	bra	u10697
 20721  003E7E  0009               	tblrd		*+
 20722  003E80  CFF5 F087          	movff	tablat,??_TCP_Snd+32
 20723  003E84  0009               	tblrd		*+
 20724  003E86  CFF5 F088          	movff	tablat,??_TCP_Snd+33
 20725  003E8A  0009               	tblrd		*+
 20726  003E8C  CFF5 F089          	movff	tablat,??_TCP_Snd+34
 20727  003E90  0009               	tblrd		*+
 20728  003E92  CFF5 F08A          	movff	tablat,??_TCP_Snd+35
 20729  003E96  D00C               	bra	u10690
 20730  003E98                     u10697:
 20731  003E98  CFF6 FFE9          	movff	tblptrl,fsr0l
 20732  003E9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 20733  003EA0  CFEE F087          	movff	postinc0,??_TCP_Snd+32
 20734  003EA4  CFEE F088          	movff	postinc0,??_TCP_Snd+33
 20735  003EA8  CFEE F089          	movff	postinc0,??_TCP_Snd+34
 20736  003EAC  CFEE F08A          	movff	postinc0,??_TCP_Snd+35
 20737  003EB0                     u10690:
 20738  003EB0  0100               	movlb	0	; () banked
 20739  003EB2  6B8B               	clrf	(??_TCP_Snd+36)& (0+255),b
 20740  003EB4  6B8C               	clrf	(??_TCP_Snd+37)& (0+255),b
 20741  003EB6  6B8D               	clrf	(??_TCP_Snd+38)& (0+255),b
 20742  003EB8  518A               	movf	(??_TCP_Snd+35)& (0+255),w,b
 20743  003EBA  6F8E               	movwf	(??_TCP_Snd+39)& (0+255),b
 20744  003EBC  0E19               	movlw	25
 20745  003EBE  D005               	goto	u10700
 20746  003EC0                     u10705:
 20747  003EC0  90D8               	bcf	status,0,c
 20748  003EC2  338E               	rrcf	(??_TCP_Snd+39)& (0+255),f,b
 20749  003EC4  338D               	rrcf	(??_TCP_Snd+38)& (0+255),f,b
 20750  003EC6  338C               	rrcf	(??_TCP_Snd+37)& (0+255),f,b
 20751  003EC8  338B               	rrcf	(??_TCP_Snd+36)& (0+255),f,b
 20752  003ECA                     u10700:
 20753  003ECA  2EE8               	decfsz	wreg,f,c
 20754  003ECC  D7F9               	goto	u10705
 20755  003ECE  5181               	movf	(??_TCP_Snd+26)& (0+255),w,b
 20756  003ED0  118B               	iorwf	(??_TCP_Snd+36)& (0+255),w,b
 20757  003ED2  6F8F               	movwf	(??_TCP_Snd+40)& (0+255),b
 20758  003ED4  5182               	movf	(??_TCP_Snd+27)& (0+255),w,b
 20759  003ED6  118C               	iorwf	(??_TCP_Snd+37)& (0+255),w,b
 20760  003ED8  6F90               	movwf	(??_TCP_Snd+41)& (0+255),b
 20761  003EDA  5183               	movf	(??_TCP_Snd+28)& (0+255),w,b
 20762  003EDC  118D               	iorwf	(??_TCP_Snd+38)& (0+255),w,b
 20763  003EDE  6F91               	movwf	(??_TCP_Snd+42)& (0+255),b
 20764  003EE0  5184               	movf	(??_TCP_Snd+29)& (0+255),w,b
 20765  003EE2  118E               	iorwf	(??_TCP_Snd+39)& (0+255),w,b
 20766  003EE4  6F92               	movwf	(??_TCP_Snd+43)& (0+255),b
 20767  003EE6  5177               	movf	(??_TCP_Snd+16)& (0+255),w,b
 20768  003EE8  118F               	iorwf	(??_TCP_Snd+40)& (0+255),w,b
 20769  003EEA  6F93               	movwf	(??_TCP_Snd+44)& (0+255),b
 20770  003EEC  5178               	movf	(??_TCP_Snd+17)& (0+255),w,b
 20771  003EEE  1190               	iorwf	(??_TCP_Snd+41)& (0+255),w,b
 20772  003EF0  6F94               	movwf	(??_TCP_Snd+45)& (0+255),b
 20773  003EF2  5179               	movf	(??_TCP_Snd+18)& (0+255),w,b
 20774  003EF4  1191               	iorwf	(??_TCP_Snd+42)& (0+255),w,b
 20775  003EF6  6F95               	movwf	(??_TCP_Snd+46)& (0+255),b
 20776  003EF8  517A               	movf	(??_TCP_Snd+19)& (0+255),w,b
 20777  003EFA  1192               	iorwf	(??_TCP_Snd+43)& (0+255),w,b
 20778  003EFC  6F96               	movwf	(??_TCP_Snd+47)& (0+255),b
 20779  003EFE  516D               	movf	(??_TCP_Snd+6)& (0+255),w,b
 20780  003F00  1193               	iorwf	(??_TCP_Snd+44)& (0+255),w,b
 20781  003F02  6FA8               	movwf	(TCP_Snd@txHeader+8)& (0+255),b
 20782  003F04  516E               	movf	(??_TCP_Snd+7)& (0+255),w,b
 20783  003F06  1194               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 20784  003F08  6FA9               	movwf	(TCP_Snd@txHeader+9)& (0+255),b
 20785  003F0A  516F               	movf	(??_TCP_Snd+8)& (0+255),w,b
 20786  003F0C  1195               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 20787  003F0E  6FAA               	movwf	(TCP_Snd@txHeader+10)& (0+255),b
 20788  003F10  5170               	movf	(??_TCP_Snd+9)& (0+255),w,b
 20789  003F12  1196               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 20790  003F14  6FAB               	movwf	(TCP_Snd@txHeader+11)& (0+255),b
 20791                           
 20792                           ; BSR set to: 0
 20793                           ;tcpv4.c: 216: txHeader.ns = 0;
 20794  003F16  91AC               	bcf	(TCP_Snd@txHeader+12)& (0+255),0,b
 20795                           
 20796                           ; BSR set to: 0
 20797                           ;tcpv4.c: 217: txHeader.reserved = 0;
 20798  003F18  0EF1               	movlw	-15
 20799  003F1A  17AC               	andwf	(TCP_Snd@txHeader+12)& (0+255),f,b
 20800                           
 20801                           ; BSR set to: 0
 20802                           ;tcpv4.c: 218: txHeader.dataOffset = 5;
 20803  003F1C  51AC               	movf	(TCP_Snd@txHeader+12)& (0+255),w,b
 20804  003F1E  0B0F               	andlw	-241
 20805  003F20  0950               	iorlw	80
 20806  003F22  6FAC               	movwf	(TCP_Snd@txHeader+12)& (0+255),b
 20807                           
 20808                           ;tcpv4.c: 219: txHeader.windowSize = ((((uint16_t)tcbPtr->localWnd & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)tcbPtr->localWnd & (uint16_t)0x00FF) << 8));
 20809  003F24  0E1A               	movlw	26
 20810  003F26  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20811  003F28  6F67               	movwf	??_TCP_Snd& (0+255),b
 20812  003F2A  0E00               	movlw	0
 20813  003F2C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20814  003F2E  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20815  003F30  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20816  003F34  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20817  003F38  0E00               	movlw	low (__smallconst shr (0+16))
 20818  003F3A  6EF8               	movwf	tblptru,c
 20819  003F3C  0E0F               	movlw	(high __ramtop+-1)
 20820  003F3E  64F7               	cpfsgt	tblptrh,c
 20821  003F40  D007               	bra	u10717
 20822  003F42  0009               	tblrd		*+
 20823  003F44  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 20824  003F48  0009               	tblrd		*+
 20825  003F4A  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 20826  003F4E  D008               	bra	u10710
 20827  003F50                     u10717:
 20828  003F50  CFF6 FFE9          	movff	tblptrl,fsr0l
 20829  003F54  CFF7 FFEA          	movff	tblptrh,fsr0h
 20830  003F58  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 20831  003F5C  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 20832  003F60                     u10710:
 20833  003F60  0100               	movlb	0	; () banked
 20834  003F62  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 20835  003F64  6F6C               	movwf	(??_TCP_Snd+5)& (0+255),b
 20836  003F66  6B6B               	clrf	(??_TCP_Snd+4)& (0+255),b
 20837  003F68  0E1A               	movlw	26
 20838  003F6A  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20839  003F6C  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 20840  003F6E  0E00               	movlw	0
 20841  003F70  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20842  003F72  6F6E               	movwf	(??_TCP_Snd+7)& (0+255),b
 20843  003F74  C06D  FFF6         	movff	??_TCP_Snd+6,tblptrl
 20844  003F78  C06E  FFF7         	movff	??_TCP_Snd+7,tblptrh
 20845  003F7C  0E00               	movlw	low (__smallconst shr (0+16))
 20846  003F7E  6EF8               	movwf	tblptru,c
 20847  003F80  0E0F               	movlw	(high __ramtop+-1)
 20848  003F82  64F7               	cpfsgt	tblptrh,c
 20849  003F84  D007               	bra	u10727
 20850  003F86  0009               	tblrd		*+
 20851  003F88  CFF5 F06F          	movff	tablat,??_TCP_Snd+8
 20852  003F8C  0009               	tblrd		*+
 20853  003F8E  CFF5 F070          	movff	tablat,??_TCP_Snd+9
 20854  003F92  D008               	bra	u10720
 20855  003F94                     u10727:
 20856  003F94  CFF6 FFE9          	movff	tblptrl,fsr0l
 20857  003F98  CFF7 FFEA          	movff	tblptrh,fsr0h
 20858  003F9C  CFEE F06F          	movff	postinc0,??_TCP_Snd+8
 20859  003FA0  CFEE F070          	movff	postinc0,??_TCP_Snd+9
 20860  003FA4                     u10720:
 20861  003FA4  C070  F06F         	movff	??_TCP_Snd+9,??_TCP_Snd+8
 20862  003FA8  0100               	movlb	0	; () banked
 20863  003FAA  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 20864  003FAC  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 20865  003FAE  516B               	movf	(??_TCP_Snd+4)& (0+255),w,b
 20866  003FB0  116F               	iorwf	(??_TCP_Snd+8)& (0+255),w,b
 20867  003FB2  6FAE               	movwf	(TCP_Snd@txHeader+14)& (0+255),b
 20868  003FB4  516C               	movf	(??_TCP_Snd+5)& (0+255),w,b
 20869  003FB6  1170               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 20870  003FB8  6FAF               	movwf	(TCP_Snd@txHeader+15)& (0+255),b
 20871                           
 20872                           ; BSR set to: 0
 20873                           ;tcpv4.c: 220: txHeader.checksum = 0;
 20874  003FBA  6BB0               	clrf	(TCP_Snd@txHeader+16)& (0+255),b
 20875  003FBC  6BB1               	clrf	(TCP_Snd@txHeader+17)& (0+255),b
 20876                           
 20877                           ; BSR set to: 0
 20878                           ;tcpv4.c: 221: txHeader.urgentPtr = 0;
 20879  003FBE  6BB2               	clrf	(TCP_Snd@txHeader+18)& (0+255),b
 20880  003FC0  6BB3               	clrf	(TCP_Snd@txHeader+19)& (0+255),b
 20881                           
 20882                           ;tcpv4.c: 223: if ((tcbPtr->flags) & (0x02U | 0x04U))
 20883  003FC2  0E35               	movlw	53
 20884  003FC4  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20885  003FC6  6F67               	movwf	??_TCP_Snd& (0+255),b
 20886  003FC8  0E00               	movlw	0
 20887  003FCA  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20888  003FCC  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20889  003FCE  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20890  003FD2  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20891  003FD6  0E00               	movlw	low (__smallconst shr (0+16))
 20892  003FD8  6EF8               	movwf	tblptru,c
 20893  003FDA  0E0F               	movlw	(high __ramtop+-1)
 20894  003FDC  64F7               	cpfsgt	tblptrh,c
 20895  003FDE  D003               	bra	u10737
 20896  003FE0  0008               	tblrd		*
 20897  003FE2  50F5               	movf	tablat,w,c
 20898  003FE4  D005               	bra	u10730
 20899  003FE6                     u10737:
 20900  003FE6  CFF6 FFE9          	movff	tblptrl,fsr0l
 20901  003FEA  CFF7 FFEA          	movff	tblptrh,fsr0h
 20902  003FEE  50EF               	movf	indf0,w,c
 20903  003FF0                     u10730:
 20904  003FF0  0100               	movlb	0	; () banked
 20905  003FF2  6F69               	movwf	(??_TCP_Snd+2)& (0+255),b
 20906  003FF4  0E06               	movlw	6
 20907  003FF6  1769               	andwf	(??_TCP_Snd+2)& (0+255),f,b
 20908  003FF8  E003               	bz	l8075
 20909                           
 20910                           ; BSR set to: 0
 20911                           ;tcpv4.c: 224: {
 20912                           ;tcpv4.c: 225: tcpDataLength = 0;
 20913  003FFA  6B9E               	clrf	TCP_Snd@tcpDataLength& (0+255),b
 20914  003FFC  6B9F               	clrf	(TCP_Snd@tcpDataLength+1)& (0+255),b
 20915                           
 20916                           ;tcpv4.c: 226: } else
 20917  003FFE  D188               	goto	l1212
 20918  004000                     l8075:
 20919                           
 20920                           ; BSR set to: 0
 20921                           ;tcpv4.c: 227: {
 20922                           ;tcpv4.c: 228: tcpDataLength = tcbPtr->bytesToSend;
 20923  004000  0E27               	movlw	39
 20924  004002  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20925  004004  6F67               	movwf	??_TCP_Snd& (0+255),b
 20926  004006  0E00               	movlw	0
 20927  004008  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20928  00400A  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20929  00400C  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20930  004010  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20931  004014  0E00               	movlw	low (__smallconst shr (0+16))
 20932  004016  6EF8               	movwf	tblptru,c
 20933  004018  0E0F               	movlw	(high __ramtop+-1)
 20934  00401A  64F7               	cpfsgt	tblptrh,c
 20935  00401C  D007               	bra	u10757
 20936  00401E  0009               	tblrd		*+
 20937  004020  CFF5 F09E          	movff	tablat,TCP_Snd@tcpDataLength
 20938  004024  0009               	tblrd		*+
 20939  004026  CFF5 F09F          	movff	tablat,TCP_Snd@tcpDataLength+1
 20940  00402A  D008               	bra	u10750
 20941  00402C                     u10757:
 20942  00402C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20943  004030  CFF7 FFEA          	movff	tblptrh,fsr0h
 20944  004034  CFEE F09E          	movff	postinc0,TCP_Snd@tcpDataLength
 20945  004038  CFEE F09F          	movff	postinc0,TCP_Snd@tcpDataLength+1
 20946  00403C                     u10750:
 20947                           
 20948                           ;tcpv4.c: 230: if (tcpDataLength != 0)
 20949  00403C  0100               	movlb	0	; () banked
 20950  00403E  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 20951  004040  119F               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 20952  004042  E101 D165          	bz	l1212
 20953                           
 20954                           ; BSR set to: 0
 20955                           ;tcpv4.c: 231: {
 20956                           ;tcpv4.c: 232: if(tcpDataLength > tcbPtr->remoteWnd)
 20957  004046  0E18               	movlw	24
 20958  004048  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20959  00404A  6F67               	movwf	??_TCP_Snd& (0+255),b
 20960  00404C  0E00               	movlw	0
 20961  00404E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20962  004050  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20963  004052  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20964  004056  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20965  00405A  0E00               	movlw	low (__smallconst shr (0+16))
 20966  00405C  6EF8               	movwf	tblptru,c
 20967  00405E  0E0F               	movlw	(high __ramtop+-1)
 20968  004060  64F7               	cpfsgt	tblptrh,c
 20969  004062  D007               	bra	u10777
 20970  004064  0009               	tblrd		*+
 20971  004066  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 20972  00406A  0009               	tblrd		*+
 20973  00406C  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 20974  004070  D008               	bra	u10770
 20975  004072                     u10777:
 20976  004072  CFF6 FFE9          	movff	tblptrl,fsr0l
 20977  004076  CFF7 FFEA          	movff	tblptrh,fsr0h
 20978  00407A  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 20979  00407E  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 20980  004082                     u10770:
 20981  004082  0100               	movlb	0	; () banked
 20982  004084  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 20983  004086  5D69               	subwf	(??_TCP_Snd+2)& (0+255),w,b
 20984  004088  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 20985  00408A  596A               	subwfb	(??_TCP_Snd+3)& (0+255),w,b
 20986  00408C  E21E               	bc	l1214
 20987                           
 20988                           ; BSR set to: 0
 20989                           ;tcpv4.c: 233: {
 20990                           ;tcpv4.c: 234: tcpDataLength = tcbPtr->remoteWnd;
 20991  00408E  0E18               	movlw	24
 20992  004090  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20993  004092  6F67               	movwf	??_TCP_Snd& (0+255),b
 20994  004094  0E00               	movlw	0
 20995  004096  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20996  004098  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20997  00409A  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20998  00409E  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20999  0040A2  0E00               	movlw	low (__smallconst shr (0+16))
 21000  0040A4  6EF8               	movwf	tblptru,c
 21001  0040A6  0E0F               	movlw	(high __ramtop+-1)
 21002  0040A8  64F7               	cpfsgt	tblptrh,c
 21003  0040AA  D007               	bra	u10797
 21004  0040AC  0009               	tblrd		*+
 21005  0040AE  CFF5 F09E          	movff	tablat,TCP_Snd@tcpDataLength
 21006  0040B2  0009               	tblrd		*+
 21007  0040B4  CFF5 F09F          	movff	tablat,TCP_Snd@tcpDataLength+1
 21008  0040B8  D008               	bra	u10790
 21009  0040BA                     u10797:
 21010  0040BA  CFF6 FFE9          	movff	tblptrl,fsr0l
 21011  0040BE  CFF7 FFEA          	movff	tblptrh,fsr0h
 21012  0040C2  CFEE F09E          	movff	postinc0,TCP_Snd@tcpDataLength
 21013  0040C6  CFEE F09F          	movff	postinc0,TCP_Snd@tcpDataLength+1
 21014  0040CA                     u10790:
 21015  0040CA                     l1214:
 21016                           
 21017                           ;tcpv4.c: 235: }
 21018                           ;tcpv4.c: 237: if(tcpDataLength > tcbPtr->mss)
 21019  0040CA  0E1C               	movlw	28
 21020  0040CC  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21021  0040CE  0100               	movlb	0	; () banked
 21022  0040D0  6F67               	movwf	??_TCP_Snd& (0+255),b
 21023  0040D2  0E00               	movlw	0
 21024  0040D4  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21025  0040D6  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21026  0040D8  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21027  0040DC  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21028  0040E0  0E00               	movlw	low (__smallconst shr (0+16))
 21029  0040E2  6EF8               	movwf	tblptru,c
 21030  0040E4  0E0F               	movlw	(high __ramtop+-1)
 21031  0040E6  64F7               	cpfsgt	tblptrh,c
 21032  0040E8  D007               	bra	u10807
 21033  0040EA  0009               	tblrd		*+
 21034  0040EC  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21035  0040F0  0009               	tblrd		*+
 21036  0040F2  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21037  0040F6  D008               	bra	u10800
 21038  0040F8                     u10807:
 21039  0040F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 21040  0040FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 21041  004100  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21042  004104  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 21043  004108                     u10800:
 21044  004108  0100               	movlb	0	; () banked
 21045  00410A  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 21046  00410C  5D69               	subwf	(??_TCP_Snd+2)& (0+255),w,b
 21047  00410E  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21048  004110  596A               	subwfb	(??_TCP_Snd+3)& (0+255),w,b
 21049  004112  E21E               	bc	l1215
 21050                           
 21051                           ; BSR set to: 0
 21052                           ;tcpv4.c: 238: {
 21053                           ;tcpv4.c: 239: tcpDataLength = tcbPtr->mss;
 21054  004114  0E1C               	movlw	28
 21055  004116  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21056  004118  6F67               	movwf	??_TCP_Snd& (0+255),b
 21057  00411A  0E00               	movlw	0
 21058  00411C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21059  00411E  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21060  004120  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21061  004124  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21062  004128  0E00               	movlw	low (__smallconst shr (0+16))
 21063  00412A  6EF8               	movwf	tblptru,c
 21064  00412C  0E0F               	movlw	(high __ramtop+-1)
 21065  00412E  64F7               	cpfsgt	tblptrh,c
 21066  004130  D007               	bra	u10827
 21067  004132  0009               	tblrd		*+
 21068  004134  CFF5 F09E          	movff	tablat,TCP_Snd@tcpDataLength
 21069  004138  0009               	tblrd		*+
 21070  00413A  CFF5 F09F          	movff	tablat,TCP_Snd@tcpDataLength+1
 21071  00413E  D008               	bra	u10820
 21072  004140                     u10827:
 21073  004140  CFF6 FFE9          	movff	tblptrl,fsr0l
 21074  004144  CFF7 FFEA          	movff	tblptrh,fsr0h
 21075  004148  CFEE F09E          	movff	postinc0,TCP_Snd@tcpDataLength
 21076  00414C  CFEE F09F          	movff	postinc0,TCP_Snd@tcpDataLength+1
 21077  004150                     u10820:
 21078  004150                     l1215:
 21079                           
 21080                           ;tcpv4.c: 240: }
 21081                           ;tcpv4.c: 241: data = tcbPtr->txBufferPtr;
 21082  004150  0E25               	movlw	37
 21083  004152  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21084  004154  0100               	movlb	0	; () banked
 21085  004156  6F67               	movwf	??_TCP_Snd& (0+255),b
 21086  004158  0E00               	movlw	0
 21087  00415A  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21088  00415C  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21089  00415E  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21090  004162  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21091  004166  0E00               	movlw	low (__smallconst shr (0+16))
 21092  004168  6EF8               	movwf	tblptru,c
 21093  00416A  0E0F               	movlw	(high __ramtop+-1)
 21094  00416C  64F7               	cpfsgt	tblptrh,c
 21095  00416E  D007               	bra	u10837
 21096  004170  0009               	tblrd		*+
 21097  004172  CFF5 F097          	movff	tablat,TCP_Snd@data
 21098  004176  0009               	tblrd		*+
 21099  004178  CFF5 F098          	movff	tablat,TCP_Snd@data+1
 21100  00417C  D008               	bra	u10830
 21101  00417E                     u10837:
 21102  00417E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21103  004182  CFF7 FFEA          	movff	tblptrh,fsr0h
 21104  004186  CFEE F097          	movff	postinc0,TCP_Snd@data
 21105  00418A  CFEE F098          	movff	postinc0,TCP_Snd@data+1
 21106  00418E                     u10830:
 21107                           
 21108                           ;tcpv4.c: 244: tcbPtr->txBufferPtr = tcbPtr->txBufferPtr + tcpDataLength;
 21109  00418E  0E25               	movlw	37
 21110  004190  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21111  004192  0100               	movlb	0	; () banked
 21112  004194  6F67               	movwf	??_TCP_Snd& (0+255),b
 21113  004196  0E00               	movlw	0
 21114  004198  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21115  00419A  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21116  00419C  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21117  0041A0  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21118  0041A4  0E00               	movlw	low (__smallconst shr (0+16))
 21119  0041A6  6EF8               	movwf	tblptru,c
 21120  0041A8  0E0F               	movlw	(high __ramtop+-1)
 21121  0041AA  64F7               	cpfsgt	tblptrh,c
 21122  0041AC  D007               	bra	u10847
 21123  0041AE  0009               	tblrd		*+
 21124  0041B0  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21125  0041B4  0009               	tblrd		*+
 21126  0041B6  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21127  0041BA  D008               	bra	u10840
 21128  0041BC                     u10847:
 21129  0041BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 21130  0041C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 21131  0041C4  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21132  0041C8  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 21133  0041CC                     u10840:
 21134  0041CC  0100               	movlb	0	; () banked
 21135  0041CE  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 21136  0041D0  2769               	addwf	(??_TCP_Snd+2)& (0+255),f,b
 21137  0041D2  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21138  0041D4  236A               	addwfc	(??_TCP_Snd+3)& (0+255),f,b
 21139  0041D6  0E25               	movlw	37
 21140  0041D8  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21141  0041DA  6F6B               	movwf	(??_TCP_Snd+4)& (0+255),b
 21142  0041DC  0E00               	movlw	0
 21143  0041DE  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21144  0041E0  6F6C               	movwf	(??_TCP_Snd+5)& (0+255),b
 21145  0041E2  C06B  FFF6         	movff	??_TCP_Snd+4,tblptrl
 21146  0041E6  C06C  FFF7         	movff	??_TCP_Snd+5,tblptrh
 21147  0041EA  0E00               	movlw	low (__smallconst shr (0+16))
 21148  0041EC  6EF8               	movwf	tblptru,c
 21149  0041EE  0E0F               	movlw	(high __ramtop+-1)
 21150  0041F0  64F7               	cpfsgt	tblptrh,c
 21151  0041F2  D007               	bra	u10857
 21152  0041F4  C069  FFF5         	movff	??_TCP_Snd+2,tablat
 21153  0041F8  000D               	tblwt		*+
 21154  0041FA  C06A  FFF5         	movff	??_TCP_Snd+3,tablat
 21155  0041FE  000C               	tblwt		*
 21156  004200  D008               	bra	u10850
 21157  004202                     u10857:
 21158  004202  CFF6 FFE9          	movff	tblptrl,fsr0l
 21159  004206  CFF7 FFEA          	movff	tblptrh,fsr0h
 21160  00420A  C069  FFEE         	movff	??_TCP_Snd+2,postinc0
 21161  00420E  C06A  FFEF         	movff	??_TCP_Snd+3,indf0
 21162  004212                     u10850:
 21163                           
 21164                           ;tcpv4.c: 245: tcbPtr->bytesToSend = tcbPtr->bytesToSend - tcpDataLength;
 21165  004212  0E27               	movlw	39
 21166  004214  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21167  004216  0100               	movlb	0	; () banked
 21168  004218  6F67               	movwf	??_TCP_Snd& (0+255),b
 21169  00421A  0E00               	movlw	0
 21170  00421C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21171  00421E  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21172  004220  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21173  004224  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21174  004228  0E00               	movlw	low (__smallconst shr (0+16))
 21175  00422A  6EF8               	movwf	tblptru,c
 21176  00422C  0E0F               	movlw	(high __ramtop+-1)
 21177  00422E  64F7               	cpfsgt	tblptrh,c
 21178  004230  D007               	bra	u10867
 21179  004232  0009               	tblrd		*+
 21180  004234  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21181  004238  0009               	tblrd		*+
 21182  00423A  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21183  00423E  D008               	bra	u10860
 21184  004240                     u10867:
 21185  004240  CFF6 FFE9          	movff	tblptrl,fsr0l
 21186  004244  CFF7 FFEA          	movff	tblptrh,fsr0h
 21187  004248  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21188  00424C  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 21189  004250                     u10860:
 21190  004250  0100               	movlb	0	; () banked
 21191  004252  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 21192  004254  5F69               	subwf	(??_TCP_Snd+2)& (0+255),f,b
 21193  004256  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21194  004258  5B6A               	subwfb	(??_TCP_Snd+3)& (0+255),f,b
 21195  00425A  0E27               	movlw	39
 21196  00425C  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21197  00425E  6F6B               	movwf	(??_TCP_Snd+4)& (0+255),b
 21198  004260  0E00               	movlw	0
 21199  004262  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21200  004264  6F6C               	movwf	(??_TCP_Snd+5)& (0+255),b
 21201  004266  C06B  FFF6         	movff	??_TCP_Snd+4,tblptrl
 21202  00426A  C06C  FFF7         	movff	??_TCP_Snd+5,tblptrh
 21203  00426E  0E00               	movlw	low (__smallconst shr (0+16))
 21204  004270  6EF8               	movwf	tblptru,c
 21205  004272  0E0F               	movlw	(high __ramtop+-1)
 21206  004274  64F7               	cpfsgt	tblptrh,c
 21207  004276  D007               	bra	u10877
 21208  004278  C069  FFF5         	movff	??_TCP_Snd+2,tablat
 21209  00427C  000D               	tblwt		*+
 21210  00427E  C06A  FFF5         	movff	??_TCP_Snd+3,tablat
 21211  004282  000C               	tblwt		*
 21212  004284  D008               	bra	u10870
 21213  004286                     u10877:
 21214  004286  CFF6 FFE9          	movff	tblptrl,fsr0l
 21215  00428A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21216  00428E  C069  FFEE         	movff	??_TCP_Snd+2,postinc0
 21217  004292  C06A  FFEF         	movff	??_TCP_Snd+3,indf0
 21218  004296                     u10870:
 21219                           
 21220                           ;tcpv4.c: 247: if (tcbPtr->bytesToSend == 0)
 21221  004296  0E27               	movlw	39
 21222  004298  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21223  00429A  0100               	movlb	0	; () banked
 21224  00429C  6F67               	movwf	??_TCP_Snd& (0+255),b
 21225  00429E  0E00               	movlw	0
 21226  0042A0  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21227  0042A2  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21228  0042A4  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21229  0042A8  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21230  0042AC  0E00               	movlw	low (__smallconst shr (0+16))
 21231  0042AE  6EF8               	movwf	tblptru,c
 21232  0042B0  0E0F               	movlw	(high __ramtop+-1)
 21233  0042B2  64F7               	cpfsgt	tblptrh,c
 21234  0042B4  D007               	bra	u10887
 21235  0042B6  0009               	tblrd		*+
 21236  0042B8  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21237  0042BC  0009               	tblrd		*+
 21238  0042BE  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21239  0042C2  D008               	bra	u10880
 21240  0042C4                     u10887:
 21241  0042C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 21242  0042C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 21243  0042CC  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21244  0042D0  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 21245  0042D4                     u10880:
 21246  0042D4  0100               	movlb	0	; () banked
 21247  0042D6  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 21248  0042D8  116A               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 21249  0042DA  E11A               	bnz	l1212
 21250                           
 21251                           ; BSR set to: 0
 21252                           ;tcpv4.c: 248: {
 21253                           ;tcpv4.c: 249: tcbPtr->flags |= 0x08U;
 21254  0042DC  0E35               	movlw	53
 21255  0042DE  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21256  0042E0  6F67               	movwf	??_TCP_Snd& (0+255),b
 21257  0042E2  0E00               	movlw	0
 21258  0042E4  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21259  0042E6  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21260  0042E8  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21261  0042EC  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21262  0042F0  0E00               	movlw	low (__smallconst shr (0+16))
 21263  0042F2  6EF8               	movwf	tblptru,c
 21264  0042F4  0E0F               	movlw	(high __ramtop+-1)
 21265  0042F6  64F7               	cpfsgt	tblptrh,c
 21266  0042F8  D005               	bra	u10907
 21267  0042FA  0E08               	movlw	8
 21268  0042FC  0008               	tblrd		*
 21269  0042FE  12F5               	iorwf	tablat,f,c
 21270  004300  000C               	tblwt		*
 21271  004302  D006               	bra	u10900
 21272  004304                     u10907:
 21273  004304  CFF6 FFE9          	movff	tblptrl,fsr0l
 21274  004308  CFF7 FFEA          	movff	tblptrh,fsr0h
 21275  00430C  0E08               	movlw	8
 21276  00430E  12EF               	iorwf	indf0,f,c
 21277  004310                     u10900:
 21278  004310                     l1212:
 21279                           
 21280                           ;tcpv4.c: 250: }
 21281                           ;tcpv4.c: 251: }
 21282                           ;tcpv4.c: 252: }
 21283                           ;tcpv4.c: 254: txHeader.flags = tcbPtr->flags;
 21284  004310  0E35               	movlw	53
 21285  004312  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21286  004314  0100               	movlb	0	; () banked
 21287  004316  6F67               	movwf	??_TCP_Snd& (0+255),b
 21288  004318  0E00               	movlw	0
 21289  00431A  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21290  00431C  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21291  00431E  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21292  004322  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21293  004326  0E00               	movlw	low (__smallconst shr (0+16))
 21294  004328  6EF8               	movwf	tblptru,c
 21295  00432A  0E0F               	movlw	(high __ramtop+-1)
 21296  00432C  64F7               	cpfsgt	tblptrh,c
 21297  00432E  D003               	bra	u10917
 21298  004330  0008               	tblrd		*
 21299  004332  50F5               	movf	tablat,w,c
 21300  004334  D005               	bra	u10910
 21301  004336                     u10917:
 21302  004336  CFF6 FFE9          	movff	tblptrl,fsr0l
 21303  00433A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21304  00433E  50EF               	movf	indf0,w,c
 21305  004340                     u10910:
 21306  004340  0100               	movlb	0	; () banked
 21307  004342  6FAD               	movwf	(TCP_Snd@txHeader+13)& (0+255),b
 21308                           
 21309                           ; BSR set to: 0
 21310                           ;tcpv4.c: 255: payloadLength = sizeof(tcpHeader_t) + tcpDataLength;
 21311  004344  0E14               	movlw	20
 21312  004346  259E               	addwf	TCP_Snd@tcpDataLength& (0+255),w,b
 21313  004348  6F9B               	movwf	TCP_Snd@payloadLength& (0+255),b
 21314  00434A  0E00               	movlw	0
 21315  00434C  219F               	addwfc	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21316  00434E  6F9C               	movwf	(TCP_Snd@payloadLength+1)& (0+255),b
 21317                           
 21318                           ; BSR set to: 0
 21319                           ;tcpv4.c: 257: ret = IPv4_Start(tcbPtr->destIP, TCP);
 21320  004350  0E02               	movlw	2
 21321  004352  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21322  004354  6F67               	movwf	??_TCP_Snd& (0+255),b
 21323  004356  0E00               	movlw	0
 21324  004358  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21325  00435A  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21326  00435C  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21327  004360  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21328  004364  0E00               	movlw	low (__smallconst shr (0+16))
 21329  004366  6EF8               	movwf	tblptru,c
 21330  004368  0E0F               	movlw	(high __ramtop+-1)
 21331  00436A  64F7               	cpfsgt	tblptrh,c
 21332  00436C  D00D               	bra	u10927
 21333  00436E  0009               	tblrd		*+
 21334  004370  CFF5 F04B          	movff	tablat,IPv4_Start@destAddress
 21335  004374  0009               	tblrd		*+
 21336  004376  CFF5 F04C          	movff	tablat,IPv4_Start@destAddress+1
 21337  00437A  0009               	tblrd		*+
 21338  00437C  CFF5 F04D          	movff	tablat,IPv4_Start@destAddress+2
 21339  004380  0009               	tblrd		*+
 21340  004382  CFF5 F04E          	movff	tablat,IPv4_Start@destAddress+3
 21341  004386  D00C               	bra	u10920
 21342  004388                     u10927:
 21343  004388  CFF6 FFE9          	movff	tblptrl,fsr0l
 21344  00438C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21345  004390  CFEE F04B          	movff	postinc0,IPv4_Start@destAddress
 21346  004394  CFEE F04C          	movff	postinc0,IPv4_Start@destAddress+1
 21347  004398  CFEE F04D          	movff	postinc0,IPv4_Start@destAddress+2
 21348  00439C  CFEE F04E          	movff	postinc0,IPv4_Start@destAddress+3
 21349  0043A0                     u10920:
 21350  0043A0  0E06               	movlw	6
 21351  0043A2  6E4F               	movwf	IPv4_Start@protocol,c
 21352  0043A4  EC0F  F034         	call	_IPv4_Start	;wreg free
 21353  0043A8  6F9D               	movwf	TCP_Snd@ret& (0+255),b
 21354                           
 21355                           ; BSR set to: 0
 21356                           ;tcpv4.c: 258: if (ret)
 21357  0043AA  519D               	movf	TCP_Snd@ret& (0+255),w,b
 21358  0043AC  E041               	bz	l8107
 21359                           
 21360                           ; BSR set to: 0
 21361                           ;tcpv4.c: 259: {
 21362                           ;tcpv4.c: 260: ETH_WriteBlock((uint8_t *) &txHeader, sizeof(tcpHeader_t));
 21363  0043AE  0EA0               	movlw	low TCP_Snd@txHeader
 21364  0043B0  6E03               	movwf	ETH_WriteBlock@data,c
 21365  0043B2  6A04               	clrf	ETH_WriteBlock@data+1,c
 21366  0043B4  6A06               	clrf	ETH_WriteBlock@len+1,c
 21367  0043B6  0E14               	movlw	20
 21368  0043B8  6E05               	movwf	ETH_WriteBlock@len,c
 21369  0043BA  ECFE  F03D         	call	_ETH_WriteBlock	;wreg free
 21370                           
 21371                           ;tcpv4.c: 262: if (tcpDataLength > 0)
 21372  0043BE  0100               	movlb	0	; () banked
 21373  0043C0  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 21374  0043C2  119F               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21375  0043C4  E00A               	bz	l8099
 21376                           
 21377                           ; BSR set to: 0
 21378                           ;tcpv4.c: 263: {
 21379                           ;tcpv4.c: 264: ETH_WriteBlock( data, tcpDataLength);
 21380  0043C6  C097  F003         	movff	TCP_Snd@data,ETH_WriteBlock@data
 21381  0043CA  C098  F004         	movff	TCP_Snd@data+1,ETH_WriteBlock@data+1
 21382  0043CE  C09E  F005         	movff	TCP_Snd@tcpDataLength,ETH_WriteBlock@len
 21383  0043D2  C09F  F006         	movff	TCP_Snd@tcpDataLength+1,ETH_WriteBlock@len+1
 21384  0043D6  ECFE  F03D         	call	_ETH_WriteBlock	;wreg free
 21385  0043DA                     l8099:
 21386                           
 21387                           ;tcpv4.c: 265: }
 21388                           ;tcpv4.c: 267: cksm = payloadLength + TCP;
 21389  0043DA  0E06               	movlw	6
 21390  0043DC  0100               	movlb	0	; () banked
 21391  0043DE  259B               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 21392  0043E0  6F99               	movwf	TCP_Snd@cksm& (0+255),b
 21393  0043E2  0E00               	movlw	0
 21394  0043E4  219C               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 21395  0043E6  6F9A               	movwf	(TCP_Snd@cksm+1)& (0+255),b
 21396                           
 21397                           ; BSR set to: 0
 21398                           ;tcpv4.c: 269: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, payloadLength + 8, cksm);
 21399  0043E8  6A0E               	clrf	ETH_TxComputeChecksum@position+1,c
 21400  0043EA  0E1A               	movlw	26
 21401  0043EC  6E0D               	movwf	ETH_TxComputeChecksum@position,c
 21402  0043EE  0E08               	movlw	8
 21403  0043F0  259B               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 21404  0043F2  6E0F               	movwf	ETH_TxComputeChecksum@length,c
 21405  0043F4  0E00               	movlw	0
 21406  0043F6  219C               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 21407  0043F8  6E10               	movwf	ETH_TxComputeChecksum@length+1,c
 21408  0043FA  C099  F011         	movff	TCP_Snd@cksm,ETH_TxComputeChecksum@seed
 21409  0043FE  C09A  F012         	movff	TCP_Snd@cksm+1,ETH_TxComputeChecksum@seed+1
 21410  004402  EC92  F038         	call	_ETH_TxComputeChecksum	;wreg free
 21411  004406  C00D  F099         	movff	?_ETH_TxComputeChecksum,TCP_Snd@cksm
 21412  00440A  C00E  F09A         	movff	?_ETH_TxComputeChecksum+1,TCP_Snd@cksm+1
 21413                           
 21414                           ;tcpv4.c: 270: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (int)(((char*)&((tcpHeader_t *)1)->checksum)-1));
 21415  00440E  6A0C               	clrf	ETH_Insert@len+1,c
 21416  004410  0E02               	movlw	2
 21417  004412  6E0B               	movwf	ETH_Insert@len,c
 21418  004414  6A0E               	clrf	ETH_Insert@offset+1,c
 21419  004416  0E32               	movlw	50
 21420  004418  6E0D               	movwf	ETH_Insert@offset,c
 21421  00441A  0E99               	movlw	TCP_Snd@cksm& (0+255)
 21422  00441C  ECA9  F03E         	call	_ETH_Insert
 21423                           
 21424                           ;tcpv4.c: 272: ret = IPV4_Send(payloadLength);
 21425  004420  C09B  F01D         	movff	TCP_Snd@payloadLength,IPV4_Send@payloadLength
 21426  004424  C09C  F01E         	movff	TCP_Snd@payloadLength+1,IPV4_Send@payloadLength+1
 21427  004428  EC64  F03D         	call	_IPV4_Send	;wreg free
 21428  00442C  0100               	movlb	0	; () banked
 21429  00442E  6F9D               	movwf	TCP_Snd@ret& (0+255),b
 21430  004430                     l8107:
 21431                           
 21432                           ; BSR set to: 0
 21433                           ;tcpv4.c: 273: }
 21434                           ;tcpv4.c: 277: if (ret == 0)
 21435  004430  519D               	movf	TCP_Snd@ret& (0+255),w,b
 21436  004432  E173               	bnz	l8113
 21437                           
 21438                           ; BSR set to: 0
 21439                           ;tcpv4.c: 278: {
 21440                           ;tcpv4.c: 281: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount + 1;
 21441  004434  0E34               	movlw	52
 21442  004436  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21443  004438  6F67               	movwf	??_TCP_Snd& (0+255),b
 21444  00443A  0E00               	movlw	0
 21445  00443C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21446  00443E  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21447  004440  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21448  004444  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21449  004448  0E00               	movlw	low (__smallconst shr (0+16))
 21450  00444A  6EF8               	movwf	tblptru,c
 21451  00444C  0E0F               	movlw	(high __ramtop+-1)
 21452  00444E  64F7               	cpfsgt	tblptrh,c
 21453  004450  D003               	bra	u10967
 21454  004452  0008               	tblrd		*
 21455  004454  50F5               	movf	tablat,w,c
 21456  004456  D005               	bra	u10960
 21457  004458                     u10967:
 21458  004458  CFF6 FFE9          	movff	tblptrl,fsr0l
 21459  00445C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21460  004460  50EF               	movf	indf0,w,c
 21461  004462                     u10960:
 21462  004462  0100               	movlb	0	; () banked
 21463  004464  6F69               	movwf	(??_TCP_Snd+2)& (0+255),b
 21464  004466  2B69               	incf	(??_TCP_Snd+2)& (0+255),f,b
 21465  004468  0E34               	movlw	52
 21466  00446A  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21467  00446C  6F6A               	movwf	(??_TCP_Snd+3)& (0+255),b
 21468  00446E  0E00               	movlw	0
 21469  004470  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21470  004472  6F6B               	movwf	(??_TCP_Snd+4)& (0+255),b
 21471  004474  C06A  FFF6         	movff	??_TCP_Snd+3,tblptrl
 21472  004478  C06B  FFF7         	movff	??_TCP_Snd+4,tblptrh
 21473  00447C  0E00               	movlw	low (__smallconst shr (0+16))
 21474  00447E  6EF8               	movwf	tblptru,c
 21475  004480  0E0F               	movlw	(high __ramtop+-1)
 21476  004482  64F7               	cpfsgt	tblptrh,c
 21477  004484  D004               	bra	u10977
 21478  004486  C069  FFF5         	movff	??_TCP_Snd+2,tablat
 21479  00448A  000C               	tblwt		*
 21480  00448C  D006               	bra	u10970
 21481  00448E                     u10977:
 21482  00448E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21483  004492  CFF7 FFEA          	movff	tblptrh,fsr0h
 21484  004496  C069  FFEF         	movff	??_TCP_Snd+2,indf0
 21485  00449A                     u10970:
 21486                           
 21487                           ;tcpv4.c: 283: if (tcbPtr->timeout == 0)
 21488  00449A  0E30               	movlw	48
 21489  00449C  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21490  00449E  0100               	movlb	0	; () banked
 21491  0044A0  6F67               	movwf	??_TCP_Snd& (0+255),b
 21492  0044A2  0E00               	movlw	0
 21493  0044A4  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21494  0044A6  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21495  0044A8  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21496  0044AC  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21497  0044B0  0E00               	movlw	low (__smallconst shr (0+16))
 21498  0044B2  6EF8               	movwf	tblptru,c
 21499  0044B4  0E0F               	movlw	(high __ramtop+-1)
 21500  0044B6  64F7               	cpfsgt	tblptrh,c
 21501  0044B8  D007               	bra	u10987
 21502  0044BA  0009               	tblrd		*+
 21503  0044BC  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21504  0044C0  0009               	tblrd		*+
 21505  0044C2  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21506  0044C6  D008               	bra	u10980
 21507  0044C8                     u10987:
 21508  0044C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 21509  0044CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 21510  0044D0  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21511  0044D4  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 21512  0044D8                     u10980:
 21513  0044D8  0100               	movlb	0	; () banked
 21514  0044DA  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 21515  0044DC  116A               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 21516  0044DE  E17A               	bnz	l8115
 21517                           
 21518                           ; BSR set to: 0
 21519                           ;tcpv4.c: 284: {
 21520                           ;tcpv4.c: 285: tcbPtr->timeout = ((unsigned long)1*2);
 21521  0044E0  0E30               	movlw	48
 21522  0044E2  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21523  0044E4  6F67               	movwf	??_TCP_Snd& (0+255),b
 21524  0044E6  0E00               	movlw	0
 21525  0044E8  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21526  0044EA  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21527  0044EC  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21528  0044F0  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21529  0044F4  0E00               	movlw	low (__smallconst shr (0+16))
 21530  0044F6  6EF8               	movwf	tblptru,c
 21531  0044F8  0E0F               	movlw	(high __ramtop+-1)
 21532  0044FA  64F7               	cpfsgt	tblptrh,c
 21533  0044FC  D006               	bra	u11007
 21534  0044FE  0E02               	movlw	2
 21535  004500  6EF5               	movwf	tablat,c
 21536  004502  000D               	tblwt		*+
 21537  004504  6AF5               	clrf	tablat,c
 21538  004506  000C               	tblwt		*
 21539  004508  D007               	bra	u11000
 21540  00450A                     u11007:
 21541  00450A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21542  00450E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21543  004512  0E02               	movlw	2
 21544  004514  6EEE               	movwf	postinc0,c
 21545  004516  6AEF               	clrf	indf0,c
 21546  004518                     u11000:
 21547  004518  D05D               	goto	l8115
 21548  00451A                     l8113:
 21549                           
 21550                           ; BSR set to: 0
 21551                           ;tcpv4.c: 288: else
 21552                           ;tcpv4.c: 289: {
 21553                           ;tcpv4.c: 291: tcbPtr->localSeqno = tcbPtr->localSeqno + tcpDataLength;
 21554  00451A  0E10               	movlw	16
 21555  00451C  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21556  00451E  6F67               	movwf	??_TCP_Snd& (0+255),b
 21557  004520  0E00               	movlw	0
 21558  004522  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21559  004524  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21560  004526  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21561  00452A  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21562  00452E  0E00               	movlw	low (__smallconst shr (0+16))
 21563  004530  6EF8               	movwf	tblptru,c
 21564  004532  0E0F               	movlw	(high __ramtop+-1)
 21565  004534  64F7               	cpfsgt	tblptrh,c
 21566  004536  D00D               	bra	u11017
 21567  004538  0009               	tblrd		*+
 21568  00453A  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21569  00453E  0009               	tblrd		*+
 21570  004540  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21571  004544  0009               	tblrd		*+
 21572  004546  CFF5 F06B          	movff	tablat,??_TCP_Snd+4
 21573  00454A  0009               	tblrd		*+
 21574  00454C  CFF5 F06C          	movff	tablat,??_TCP_Snd+5
 21575  004550  D00C               	bra	u11010
 21576  004552                     u11017:
 21577  004552  CFF6 FFE9          	movff	tblptrl,fsr0l
 21578  004556  CFF7 FFEA          	movff	tblptrh,fsr0h
 21579  00455A  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21580  00455E  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 21581  004562  CFEE F06B          	movff	postinc0,??_TCP_Snd+4
 21582  004566  CFEE F06C          	movff	postinc0,??_TCP_Snd+5
 21583  00456A                     u11010:
 21584  00456A  0100               	movlb	0	; () banked
 21585  00456C  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 21586  00456E  2569               	addwf	(??_TCP_Snd+2)& (0+255),w,b
 21587  004570  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 21588  004572  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21589  004574  216A               	addwfc	(??_TCP_Snd+3)& (0+255),w,b
 21590  004576  6F6E               	movwf	(??_TCP_Snd+7)& (0+255),b
 21591  004578  0E00               	movlw	0
 21592  00457A  216B               	addwfc	(??_TCP_Snd+4)& (0+255),w,b
 21593  00457C  6F6F               	movwf	(??_TCP_Snd+8)& (0+255),b
 21594  00457E  0E00               	movlw	0
 21595  004580  216C               	addwfc	(??_TCP_Snd+5)& (0+255),w,b
 21596  004582  6F70               	movwf	(??_TCP_Snd+9)& (0+255),b
 21597  004584  0E10               	movlw	16
 21598  004586  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21599  004588  6F71               	movwf	(??_TCP_Snd+10)& (0+255),b
 21600  00458A  0E00               	movlw	0
 21601  00458C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21602  00458E  6F72               	movwf	(??_TCP_Snd+11)& (0+255),b
 21603  004590  C071  FFF6         	movff	??_TCP_Snd+10,tblptrl
 21604  004594  C072  FFF7         	movff	??_TCP_Snd+11,tblptrh
 21605  004598  0E00               	movlw	low (__smallconst shr (0+16))
 21606  00459A  6EF8               	movwf	tblptru,c
 21607  00459C  0E0F               	movlw	(high __ramtop+-1)
 21608  00459E  64F7               	cpfsgt	tblptrh,c
 21609  0045A0  D00D               	bra	u11027
 21610  0045A2  C06D  FFF5         	movff	??_TCP_Snd+6,tablat
 21611  0045A6  000D               	tblwt		*+
 21612  0045A8  C06E  FFF5         	movff	??_TCP_Snd+7,tablat
 21613  0045AC  000D               	tblwt		*+
 21614  0045AE  C06F  FFF5         	movff	??_TCP_Snd+8,tablat
 21615  0045B2  000D               	tblwt		*+
 21616  0045B4  C070  FFF5         	movff	??_TCP_Snd+9,tablat
 21617  0045B8  000C               	tblwt		*
 21618  0045BA  D00C               	bra	u11020
 21619  0045BC                     u11027:
 21620  0045BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 21621  0045C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 21622  0045C4  C06D  FFEE         	movff	??_TCP_Snd+6,postinc0
 21623  0045C8  C06E  FFEE         	movff	??_TCP_Snd+7,postinc0
 21624  0045CC  C06F  FFEE         	movff	??_TCP_Snd+8,postinc0
 21625  0045D0  C070  FFEF         	movff	??_TCP_Snd+9,indf0
 21626  0045D4                     u11020:
 21627  0045D4                     l8115:
 21628                           
 21629                           ;tcpv4.c: 293: }
 21630                           ;tcpv4.c: 295: return ret;
 21631  0045D4  0100               	movlb	0	; () banked
 21632  0045D6  519D               	movf	TCP_Snd@ret& (0+255),w,b
 21633                           
 21634                           ; BSR set to: 0
 21635  0045D8  0012               	return		;funcret
 21636  0045DA                     __end_of_TCP_Snd:
 21637                           	opt stack 0
 21638                           tosu	equ	0xFFF
 21639                           tosh	equ	0xFFE
 21640                           tosl	equ	0xFFD
 21641                           pclath	equ	0xFFA
 21642                           tblptru	equ	0xFF8
 21643                           tblptrh	equ	0xFF7
 21644                           tblptrl	equ	0xFF6
 21645                           tablat	equ	0xFF5
 21646                           prodh	equ	0xFF4
 21647                           prodl	equ	0xFF3
 21648                           intcon	equ	0xFF2
 21649                           intcon2	equ	0xFF1
 21650                           indf0	equ	0xFEF
 21651                           postinc0	equ	0xFEE
 21652                           fsr0h	equ	0xFEA
 21653                           fsr0l	equ	0xFE9
 21654                           wreg	equ	0xFE8
 21655                           indf1	equ	0xFE7
 21656                           postinc1	equ	0xFE6
 21657                           postdec1	equ	0xFE5
 21658                           plusw1	equ	0xFE3
 21659                           fsr1h	equ	0xFE2
 21660                           fsr1l	equ	0xFE1
 21661                           indf2	equ	0xFDF
 21662                           postinc2	equ	0xFDE
 21663                           postdec2	equ	0xFDD
 21664                           plusw2	equ	0xFDB
 21665                           fsr2h	equ	0xFDA
 21666                           fsr2l	equ	0xFD9
 21667                           status	equ	0xFD8
 21668                           
 21669 ;; *************** function _IPv4_Start *****************
 21670 ;; Defined at:
 21671 ;;		line 213 in file "../../TCPIP Library/source/ipv4.c"
 21672 ;; Parameters:    Size  Location     Type
 21673 ;;  destAddress     4   74[COMRAM] unsigned long 
 21674 ;;  protocol        1   78[COMRAM] enum E6803
 21675 ;; Auto vars:     Size  Location     Type
 21676 ;;  targetAddres    4    0[BANK0 ] unsigned long 
 21677 ;;  macAddress      2    4[BANK0 ] PTR const struct .
 21678 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), arpMap(104), NULL(0), 
 21679 ;;  ret             1    6[BANK0 ] enum E6944
 21680 ;; Return value:  Size  Location     Type
 21681 ;;                  1    wreg      enum E366
 21682 ;; Registers used:
 21683 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21684 ;; Tracked objects:
 21685 ;;		On entry : 0/0
 21686 ;;		On exit  : F/0
 21687 ;;		Unchanged: 0/0
 21688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21689 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21690 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21691 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21692 ;;      Totals:        13       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21693 ;;Total ram usage:       20 bytes
 21694 ;; Hardware stack levels used:    1
 21695 ;; Hardware stack levels required when called:    8
 21696 ;; This function calls:
 21697 ;;		_ARPV4_Lookup
 21698 ;;		_ARPV4_Request
 21699 ;;		_ETH_Write16
 21700 ;;		_ETH_Write32
 21701 ;;		_ETH_Write8
 21702 ;;		_ETH_WriteStart
 21703 ;; This function is called by:
 21704 ;;		_ICMP_EchoReply
 21705 ;;		_TCP_Snd
 21706 ;;		_UDP_Start
 21707 ;; This function uses a non-reentrant model
 21708 ;;
 21709                           
 21710                           	psect	text81
 21711  00681E                     __ptext81:
 21712                           	opt stack 0
 21713  00681E                     _IPv4_Start:
 21714                           	opt stack 18
 21715                           
 21716                           ;ipv4.c: 215: error_msg ret = ERROR;
 21717                           
 21718                           ; BSR set to: 0
 21719                           ;incstack = 0
 21720  00681E  0100               	movlb	0	; () banked
 21721  006820  6B66               	clrf	IPv4_Start@ret& (0+255),b
 21722                           
 21723                           ; BSR set to: 0
 21724                           ;ipv4.c: 217: const mac48Address_t *macAddress;
 21725                           ;ipv4.c: 218: uint32_t targetAddress;
 21726                           ;ipv4.c: 221: if(((ipv4Address != 0) || (protocol == UDP))
 21727                           ;ipv4.c: 222: && (ipv4Address != 0x7F000001))
 21728  006822  0101               	movlb	1	; () banked
 21729  006824  518E               	movf	_ipv4Address& (0+255),w,b
 21730  006826  118F               	iorwf	(_ipv4Address+1)& (0+255),w,b
 21731  006828  1190               	iorwf	(_ipv4Address+2)& (0+255),w,b
 21732  00682A  1191               	iorwf	(_ipv4Address+3)& (0+255),w,b
 21733  00682C  E103               	bnz	l7947
 21734                           
 21735                           ; BSR set to: 1
 21736  00682E  0E11               	movlw	17
 21737  006830  184F               	xorwf	IPv4_Start@protocol,w,c
 21738  006832  E162               	bnz	l7961
 21739  006834                     l7947:
 21740                           
 21741                           ; BSR set to: 1
 21742  006834  058E               	decf	_ipv4Address& (0+255),w,b
 21743  006836  E105               	bnz	u10450
 21744  006838  0E7F               	movlw	127
 21745  00683A  1991               	xorwf	(_ipv4Address+3)& (0+255),w,b
 21746  00683C  118F               	iorwf	(_ipv4Address+1)& (0+255),w,b
 21747  00683E  1190               	iorwf	(_ipv4Address+2)& (0+255),w,b
 21748  006840  E05B               	bz	l7961
 21749  006842                     u10450:
 21750                           
 21751                           ; BSR set to: 1
 21752                           ;ipv4.c: 223: {
 21753                           ;ipv4.c: 224: if(destAddress != 0xFFFFFFFF)
 21754  006842  284B               	incf	IPv4_Start@destAddress,w,c
 21755  006844  E106               	bnz	u10460
 21756  006846  284C               	incf	IPv4_Start@destAddress+1,w,c
 21757  006848  E104               	bnz	u10460
 21758  00684A  284D               	incf	IPv4_Start@destAddress+2,w,c
 21759  00684C  E102               	bnz	u10460
 21760  00684E  284E               	incf	IPv4_Start@destAddress+3,w,c
 21761  006850  E056               	bz	l7965
 21762  006852                     u10460:
 21763                           
 21764                           ; BSR set to: 1
 21765                           ;ipv4.c: 225: {
 21766                           ;ipv4.c: 226: if((ipv4SubnetMask & destAddress) == (ipv4SubnetMask & ipv4Address))
 21767  006852  518E               	movf	_ipv4Address& (0+255),w,b
 21768  006854  1592               	andwf	_ipv4SubnetMask& (0+255),w,b
 21769  006856  6E50               	movwf	??_IPv4_Start& (0+255),c
 21770  006858  518F               	movf	(_ipv4Address+1)& (0+255),w,b
 21771  00685A  1593               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 21772  00685C  6E51               	movwf	(??_IPv4_Start+1)& (0+255),c
 21773  00685E  5190               	movf	(_ipv4Address+2)& (0+255),w,b
 21774  006860  1594               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 21775  006862  6E52               	movwf	(??_IPv4_Start+2)& (0+255),c
 21776  006864  5191               	movf	(_ipv4Address+3)& (0+255),w,b
 21777  006866  1595               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 21778  006868  6E53               	movwf	(??_IPv4_Start+3)& (0+255),c
 21779  00686A  504B               	movf	IPv4_Start@destAddress,w,c
 21780  00686C  1592               	andwf	_ipv4SubnetMask& (0+255),w,b
 21781  00686E  6E54               	movwf	(??_IPv4_Start+4)& (0+255),c
 21782  006870  504C               	movf	IPv4_Start@destAddress+1,w,c
 21783  006872  1593               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 21784  006874  6E55               	movwf	(??_IPv4_Start+5)& (0+255),c
 21785  006876  504D               	movf	IPv4_Start@destAddress+2,w,c
 21786  006878  1594               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 21787  00687A  6E56               	movwf	(??_IPv4_Start+6)& (0+255),c
 21788  00687C  504E               	movf	IPv4_Start@destAddress+3,w,c
 21789  00687E  1595               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 21790  006880  6E57               	movwf	(??_IPv4_Start+7)& (0+255),c
 21791  006882  5050               	movf	??_IPv4_Start,w,c
 21792  006884  1854               	xorwf	??_IPv4_Start+4,w,c
 21793  006886  E112               	bnz	l1035
 21794  006888  5051               	movf	??_IPv4_Start+1,w,c
 21795  00688A  1855               	xorwf	??_IPv4_Start+5,w,c
 21796  00688C  E10F               	bnz	l1035
 21797  00688E  5052               	movf	??_IPv4_Start+2,w,c
 21798  006890  1856               	xorwf	??_IPv4_Start+6,w,c
 21799  006892  E10C               	bnz	l1035
 21800  006894  5053               	movf	??_IPv4_Start+3,w,c
 21801  006896  1857               	xorwf	??_IPv4_Start+7,w,c
 21802  006898  E109               	bnz	l1035
 21803                           
 21804                           ; BSR set to: 1
 21805                           ;ipv4.c: 227: {
 21806                           ;ipv4.c: 228: targetAddress = destAddress;
 21807  00689A  C04B  F060         	movff	IPv4_Start@destAddress,IPv4_Start@targetAddress
 21808  00689E  C04C  F061         	movff	IPv4_Start@destAddress+1,IPv4_Start@targetAddress+1
 21809  0068A2  C04D  F062         	movff	IPv4_Start@destAddress+2,IPv4_Start@targetAddress+2
 21810  0068A6  C04E  F063         	movff	IPv4_Start@destAddress+3,IPv4_Start@targetAddress+3
 21811                           
 21812                           ;ipv4.c: 229: }
 21813  0068AA  D008               	goto	l7955
 21814  0068AC                     l1035:
 21815                           
 21816                           ; BSR set to: 1
 21817                           ;ipv4.c: 230: else
 21818                           ;ipv4.c: 231: {
 21819                           ;ipv4.c: 232: targetAddress = ipv4Router;
 21820  0068AC  C226  F060         	movff	_ipv4Router,IPv4_Start@targetAddress
 21821  0068B0  C227  F061         	movff	_ipv4Router+1,IPv4_Start@targetAddress+1
 21822  0068B4  C228  F062         	movff	_ipv4Router+2,IPv4_Start@targetAddress+2
 21823  0068B8  C229  F063         	movff	_ipv4Router+3,IPv4_Start@targetAddress+3
 21824  0068BC                     l7955:
 21825                           
 21826                           ; BSR set to: 1
 21827                           ;ipv4.c: 233: }
 21828                           ;ipv4.c: 235: macAddress= ARPV4_Lookup(targetAddress);
 21829  0068BC  C060  F002         	movff	IPv4_Start@targetAddress,ARPV4_Lookup@ip_address
 21830  0068C0  C061  F003         	movff	IPv4_Start@targetAddress+1,ARPV4_Lookup@ip_address+1
 21831  0068C4  C062  F004         	movff	IPv4_Start@targetAddress+2,ARPV4_Lookup@ip_address+2
 21832  0068C8  C063  F005         	movff	IPv4_Start@targetAddress+3,ARPV4_Lookup@ip_address+3
 21833  0068CC  EC22  F03F         	call	_ARPV4_Lookup	;wreg free
 21834  0068D0  C002  F064         	movff	?_ARPV4_Lookup,IPv4_Start@macAddress
 21835  0068D4  C003  F065         	movff	?_ARPV4_Lookup+1,IPv4_Start@macAddress+1
 21836                           
 21837                           ; BSR set to: 1
 21838                           ;ipv4.c: 236: if(macAddress == 0)
 21839  0068D8  0100               	movlb	0	; () banked
 21840  0068DA  5164               	movf	IPv4_Start@macAddress& (0+255),w,b
 21841  0068DC  1165               	iorwf	(IPv4_Start@macAddress+1)& (0+255),w,b
 21842  0068DE  E116               	bnz	l7967
 21843                           
 21844                           ; BSR set to: 0
 21845                           ;ipv4.c: 237: {
 21846                           ;ipv4.c: 238: ret = ARPV4_Request(targetAddress);
 21847  0068E0  C060  F00F         	movff	IPv4_Start@targetAddress,ARPV4_Request@destAddress
 21848  0068E4  C061  F010         	movff	IPv4_Start@targetAddress+1,ARPV4_Request@destAddress+1
 21849  0068E8  C062  F011         	movff	IPv4_Start@targetAddress+2,ARPV4_Request@destAddress+2
 21850  0068EC  C063  F012         	movff	IPv4_Start@targetAddress+3,ARPV4_Request@destAddress+3
 21851  0068F0  EC67  F032         	call	_ARPV4_Request	;wreg free
 21852  0068F4  0100               	movlb	0	; () banked
 21853  0068F6  6F66               	movwf	IPv4_Start@ret& (0+255),b
 21854  0068F8                     l7961:
 21855                           
 21856                           ;ipv4.c: 239: return ret;
 21857  0068F8  0100               	movlb	0	; () banked
 21858  0068FA  5166               	movf	IPv4_Start@ret& (0+255),w,b
 21859  0068FC  0012               	return	
 21860  0068FE                     l7965:
 21861                           
 21862                           ; BSR set to: 1
 21863                           ;ipv4.c: 242: else
 21864                           ;ipv4.c: 243: {
 21865                           ;ipv4.c: 244: macAddress = &broadcastMAC;
 21866  0068FE  0E28               	movlw	low _broadcastMAC
 21867  006900  0100               	movlb	0	; () banked
 21868  006902  6F64               	movwf	IPv4_Start@macAddress& (0+255),b
 21869  006904  5164               	movf	IPv4_Start@macAddress& (0+255),w,b
 21870  006906  A4D8               	btfss	status,2,c
 21871  006908  0E10               	movlw	high __smallconst
 21872  00690A  6F65               	movwf	(IPv4_Start@macAddress+1)& (0+255),b
 21873  00690C                     l7967:
 21874                           
 21875                           ; BSR set to: 0
 21876                           ;ipv4.c: 245: }
 21877                           ;ipv4.c: 246: ret = ETH_WriteStart(macAddress, 0x0800);
 21878  00690C  C064  F00B         	movff	IPv4_Start@macAddress,ETH_WriteStart@destMAC
 21879  006910  C065  F00C         	movff	IPv4_Start@macAddress+1,ETH_WriteStart@destMAC+1
 21880  006914  0E08               	movlw	8
 21881  006916  6E0E               	movwf	ETH_WriteStart@type+1,c
 21882  006918  6A0D               	clrf	ETH_WriteStart@type,c
 21883  00691A  EC7F  F03E         	call	_ETH_WriteStart	;wreg free
 21884  00691E  0100               	movlb	0	; () banked
 21885  006920  6F66               	movwf	IPv4_Start@ret& (0+255),b
 21886                           
 21887                           ; BSR set to: 0
 21888                           ;ipv4.c: 247: if(ret == SUCCESS)
 21889  006922  0566               	decf	IPv4_Start@ret& (0+255),w,b
 21890  006924  E1E9               	bnz	l7961
 21891                           
 21892                           ; BSR set to: 0
 21893                           ;ipv4.c: 248: {
 21894                           ;ipv4.c: 249: ETH_Write16(0x4500);
 21895  006926  0E45               	movlw	69
 21896  006928  6E04               	movwf	ETH_Write16@data+1,c
 21897  00692A  6A03               	clrf	ETH_Write16@data,c
 21898  00692C  ECD4  F042         	call	_ETH_Write16	;wreg free
 21899                           
 21900                           ;ipv4.c: 250: ETH_Write16(0);
 21901  006930  6A04               	clrf	ETH_Write16@data+1,c
 21902  006932  6A03               	clrf	ETH_Write16@data,c
 21903  006934  ECD4  F042         	call	_ETH_Write16	;wreg free
 21904                           
 21905                           ;ipv4.c: 251: ETH_Write32(0xAA554000);
 21906  006938  6A03               	clrf	ETH_Write32@data,c
 21907  00693A  0E40               	movlw	64
 21908  00693C  6E04               	movwf	ETH_Write32@data+1,c
 21909  00693E  0E55               	movlw	85
 21910  006940  6E05               	movwf	ETH_Write32@data+2,c
 21911  006942  0EAA               	movlw	170
 21912  006944  6E06               	movwf	ETH_Write32@data+3,c
 21913  006946  ECCD  F041         	call	_ETH_Write32	;wreg free
 21914                           
 21915                           ;ipv4.c: 252: ETH_Write8(64u);
 21916  00694A  0E40               	movlw	64
 21917  00694C  EC6A  F043         	call	_ETH_Write8
 21918                           
 21919                           ;ipv4.c: 253: ETH_Write8(protocol);
 21920  006950  504F               	movf	IPv4_Start@protocol,w,c
 21921  006952  EC6A  F043         	call	_ETH_Write8
 21922                           
 21923                           ;ipv4.c: 254: ETH_Write16(0);
 21924  006956  6A04               	clrf	ETH_Write16@data+1,c
 21925  006958  6A03               	clrf	ETH_Write16@data,c
 21926  00695A  ECD4  F042         	call	_ETH_Write16	;wreg free
 21927                           
 21928                           ;ipv4.c: 255: ETH_Write32(ipv4Address);
 21929  00695E  C18E  F003         	movff	_ipv4Address,ETH_Write32@data
 21930  006962  C18F  F004         	movff	_ipv4Address+1,ETH_Write32@data+1
 21931  006966  C190  F005         	movff	_ipv4Address+2,ETH_Write32@data+2
 21932  00696A  C191  F006         	movff	_ipv4Address+3,ETH_Write32@data+3
 21933  00696E  ECCD  F041         	call	_ETH_Write32	;wreg free
 21934                           
 21935                           ;ipv4.c: 256: ETH_Write32(destAddress);
 21936  006972  C04B  F003         	movff	IPv4_Start@destAddress,ETH_Write32@data
 21937  006976  C04C  F004         	movff	IPv4_Start@destAddress+1,ETH_Write32@data+1
 21938  00697A  C04D  F005         	movff	IPv4_Start@destAddress+2,ETH_Write32@data+2
 21939  00697E  C04E  F006         	movff	IPv4_Start@destAddress+3,ETH_Write32@data+3
 21940  006982  ECCD  F041         	call	_ETH_Write32	;wreg free
 21941                           
 21942                           ;ipv4.c: 259: ipv4Header.srcIpAddress = ipv4Address;
 21943  006986  C18E  F1B4         	movff	_ipv4Address,_ipv4Header+12
 21944  00698A  C18F  F1B5         	movff	_ipv4Address+1,_ipv4Header+13
 21945  00698E  C190  F1B6         	movff	_ipv4Address+2,_ipv4Header+14
 21946  006992  C191  F1B7         	movff	_ipv4Address+3,_ipv4Header+15
 21947                           
 21948                           ;ipv4.c: 260: ipv4Header.dstIpAddress = destAddress;
 21949  006996  C04B  F1B8         	movff	IPv4_Start@destAddress,_ipv4Header+16
 21950  00699A  C04C  F1B9         	movff	IPv4_Start@destAddress+1,_ipv4Header+17
 21951  00699E  C04D  F1BA         	movff	IPv4_Start@destAddress+2,_ipv4Header+18
 21952  0069A2  C04E  F1BB         	movff	IPv4_Start@destAddress+3,_ipv4Header+19
 21953                           
 21954                           ;ipv4.c: 261: ipv4Header.protocol = protocol;
 21955  0069A6  C04F  F1B1         	movff	IPv4_Start@protocol,_ipv4Header+9
 21956  0069AA  D7A6               	goto	l7961
 21957  0069AC                     __end_of_IPv4_Start:
 21958                           	opt stack 0
 21959                           tosu	equ	0xFFF
 21960                           tosh	equ	0xFFE
 21961                           tosl	equ	0xFFD
 21962                           pclath	equ	0xFFA
 21963                           tblptru	equ	0xFF8
 21964                           tblptrh	equ	0xFF7
 21965                           tblptrl	equ	0xFF6
 21966                           tablat	equ	0xFF5
 21967                           prodh	equ	0xFF4
 21968                           prodl	equ	0xFF3
 21969                           intcon	equ	0xFF2
 21970                           intcon2	equ	0xFF1
 21971                           indf0	equ	0xFEF
 21972                           postinc0	equ	0xFEE
 21973                           fsr0h	equ	0xFEA
 21974                           fsr0l	equ	0xFE9
 21975                           wreg	equ	0xFE8
 21976                           indf1	equ	0xFE7
 21977                           postinc1	equ	0xFE6
 21978                           postdec1	equ	0xFE5
 21979                           plusw1	equ	0xFE3
 21980                           fsr1h	equ	0xFE2
 21981                           fsr1l	equ	0xFE1
 21982                           indf2	equ	0xFDF
 21983                           postinc2	equ	0xFDE
 21984                           postdec2	equ	0xFDD
 21985                           plusw2	equ	0xFDB
 21986                           fsr2h	equ	0xFDA
 21987                           fsr2l	equ	0xFD9
 21988                           status	equ	0xFD8
 21989                           
 21990 ;; *************** function _ETH_Write8 *****************
 21991 ;; Defined at:
 21992 ;;		line 334 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 21993 ;; Parameters:    Size  Location     Type
 21994 ;;  data            1    wreg     unsigned char 
 21995 ;; Auto vars:     Size  Location     Type
 21996 ;;  data            1    2[COMRAM] unsigned char 
 21997 ;; Return value:  Size  Location     Type
 21998 ;;		None               void
 21999 ;; Registers used:
 22000 ;;		wreg, status,2, status,0, cstack
 22001 ;; Tracked objects:
 22002 ;;		On entry : 0/0
 22003 ;;		On exit  : 0/0
 22004 ;;		Unchanged: 0/0
 22005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22010 ;;Total ram usage:        1 bytes
 22011 ;; Hardware stack levels used:    1
 22012 ;; Hardware stack levels required when called:    4
 22013 ;; This function calls:
 22014 ;;		_SPI_ExchangeByte
 22015 ;; This function is called by:
 22016 ;;		_DHCP_Request
 22017 ;;		_DHCP_WriteZeros
 22018 ;;		_IPv4_Start
 22019 ;; This function uses a non-reentrant model
 22020 ;;
 22021                           
 22022                           	psect	text82
 22023  0086D4                     __ptext82:
 22024                           	opt stack 0
 22025  0086D4                     _ETH_Write8:
 22026                           	opt stack 21
 22027                           
 22028                           ; BSR set to: 0
 22029                           ;incstack = 0
 22030                           ;ETH_Write8@data stored from wreg
 22031  0086D4  6E03               	movwf	ETH_Write8@data,c
 22032                           
 22033                           ;encX24j600_spi.c: 336: do{LATB3 = 0;} while(0);
 22034  0086D6  968A               	bcf	3978,3,c	;volatile
 22035                           
 22036                           ;encX24j600_spi.c: 337: TXPacketSize += 1;
 22037  0086D8  0101               	movlb	1	; () banked
 22038  0086DA  4B9A               	infsnz	_TXPacketSize& (0+255),f,b
 22039  0086DC  2B9B               	incf	(_TXPacketSize+1)& (0+255),f,b
 22040                           
 22041                           ; BSR set to: 1
 22042                           ;encX24j600_spi.c: 338: SPI_ExchangeByte(wgpdata_inst);
 22043  0086DE  0E2A               	movlw	42
 22044  0086E0  ECCC  F043         	call	_SPI_ExchangeByte
 22045                           
 22046                           ;encX24j600_spi.c: 339: SPI_ExchangeByte(data);
 22047  0086E4  5003               	movf	ETH_Write8@data,w,c
 22048  0086E6  ECCC  F043         	call	_SPI_ExchangeByte
 22049  0086EA  868A               	bsf	3978,3,c	;volatile
 22050  0086EC  0012               	return		;funcret
 22051  0086EE                     __end_of_ETH_Write8:
 22052                           	opt stack 0
 22053                           tosu	equ	0xFFF
 22054                           tosh	equ	0xFFE
 22055                           tosl	equ	0xFFD
 22056                           pclath	equ	0xFFA
 22057                           tblptru	equ	0xFF8
 22058                           tblptrh	equ	0xFF7
 22059                           tblptrl	equ	0xFF6
 22060                           tablat	equ	0xFF5
 22061                           prodh	equ	0xFF4
 22062                           prodl	equ	0xFF3
 22063                           intcon	equ	0xFF2
 22064                           intcon2	equ	0xFF1
 22065                           indf0	equ	0xFEF
 22066                           postinc0	equ	0xFEE
 22067                           fsr0h	equ	0xFEA
 22068                           fsr0l	equ	0xFE9
 22069                           wreg	equ	0xFE8
 22070                           indf1	equ	0xFE7
 22071                           postinc1	equ	0xFE6
 22072                           postdec1	equ	0xFE5
 22073                           plusw1	equ	0xFE3
 22074                           fsr1h	equ	0xFE2
 22075                           fsr1l	equ	0xFE1
 22076                           indf2	equ	0xFDF
 22077                           postinc2	equ	0xFDE
 22078                           postdec2	equ	0xFDD
 22079                           plusw2	equ	0xFDB
 22080                           fsr2h	equ	0xFDA
 22081                           fsr2l	equ	0xFD9
 22082                           status	equ	0xFD8
 22083                           
 22084 ;; *************** function _ETH_Write32 *****************
 22085 ;; Defined at:
 22086 ;;		line 376 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 22087 ;; Parameters:    Size  Location     Type
 22088 ;;  data            4    2[COMRAM] unsigned long 
 22089 ;; Auto vars:     Size  Location     Type
 22090 ;;		None
 22091 ;; Return value:  Size  Location     Type
 22092 ;;		None               void
 22093 ;; Registers used:
 22094 ;;		wreg, status,2, status,0, cstack
 22095 ;; Tracked objects:
 22096 ;;		On entry : 0/0
 22097 ;;		On exit  : 0/0
 22098 ;;		Unchanged: 0/0
 22099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22103 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22104 ;;Total ram usage:        4 bytes
 22105 ;; Hardware stack levels used:    1
 22106 ;; Hardware stack levels required when called:    4
 22107 ;; This function calls:
 22108 ;;		_SPI_ExchangeByte
 22109 ;; This function is called by:
 22110 ;;		_DHCP_Request
 22111 ;;		_IPv4_Start
 22112 ;; This function uses a non-reentrant model
 22113 ;;
 22114                           
 22115                           	psect	text83
 22116  00839A                     __ptext83:
 22117                           	opt stack 0
 22118  00839A                     _ETH_Write32:
 22119                           	opt stack 21
 22120                           
 22121                           ;incstack = 0
 22122                           ;encX24j600_spi.c: 378: do{LATB3 = 0;} while(0);
 22123  00839A  968A               	bcf	3978,3,c	;volatile
 22124                           
 22125                           ;encX24j600_spi.c: 379: TXPacketSize += 4;
 22126  00839C  0E04               	movlw	4
 22127  00839E  0101               	movlb	1	; () banked
 22128  0083A0  279A               	addwf	_TXPacketSize& (0+255),f,b
 22129  0083A2  0E00               	movlw	0
 22130  0083A4  239B               	addwfc	(_TXPacketSize+1)& (0+255),f,b
 22131                           
 22132                           ; BSR set to: 1
 22133                           ;encX24j600_spi.c: 380: SPI_ExchangeByte(wgpdata_inst);
 22134  0083A6  0E2A               	movlw	42
 22135  0083A8  ECCC  F043         	call	_SPI_ExchangeByte
 22136                           
 22137                           ;encX24j600_spi.c: 381: SPI_ExchangeByte(((uint8_t*) &data)[3]);
 22138  0083AC  5006               	movf	ETH_Write32@data+3,w,c
 22139  0083AE  ECCC  F043         	call	_SPI_ExchangeByte
 22140                           
 22141                           ;encX24j600_spi.c: 382: SPI_ExchangeByte(((uint8_t*) &data)[2]);
 22142  0083B2  5005               	movf	ETH_Write32@data+2,w,c
 22143  0083B4  ECCC  F043         	call	_SPI_ExchangeByte
 22144                           
 22145                           ;encX24j600_spi.c: 383: SPI_ExchangeByte(((uint8_t*) &data)[1]);
 22146  0083B8  5004               	movf	ETH_Write32@data+1,w,c
 22147  0083BA  ECCC  F043         	call	_SPI_ExchangeByte
 22148                           
 22149                           ;encX24j600_spi.c: 384: SPI_ExchangeByte(((uint8_t*) &data)[0]);
 22150  0083BE  5003               	movf	ETH_Write32@data,w,c
 22151  0083C0  ECCC  F043         	call	_SPI_ExchangeByte
 22152  0083C4  868A               	bsf	3978,3,c	;volatile
 22153  0083C6  0012               	return		;funcret
 22154  0083C8                     __end_of_ETH_Write32:
 22155                           	opt stack 0
 22156                           tosu	equ	0xFFF
 22157                           tosh	equ	0xFFE
 22158                           tosl	equ	0xFFD
 22159                           pclath	equ	0xFFA
 22160                           tblptru	equ	0xFF8
 22161                           tblptrh	equ	0xFF7
 22162                           tblptrl	equ	0xFF6
 22163                           tablat	equ	0xFF5
 22164                           prodh	equ	0xFF4
 22165                           prodl	equ	0xFF3
 22166                           intcon	equ	0xFF2
 22167                           intcon2	equ	0xFF1
 22168                           indf0	equ	0xFEF
 22169                           postinc0	equ	0xFEE
 22170                           fsr0h	equ	0xFEA
 22171                           fsr0l	equ	0xFE9
 22172                           wreg	equ	0xFE8
 22173                           indf1	equ	0xFE7
 22174                           postinc1	equ	0xFE6
 22175                           postdec1	equ	0xFE5
 22176                           plusw1	equ	0xFE3
 22177                           fsr1h	equ	0xFE2
 22178                           fsr1l	equ	0xFE1
 22179                           indf2	equ	0xFDF
 22180                           postinc2	equ	0xFDE
 22181                           postdec2	equ	0xFDD
 22182                           plusw2	equ	0xFDB
 22183                           fsr2h	equ	0xFDA
 22184                           fsr2l	equ	0xFD9
 22185                           status	equ	0xFD8
 22186                           
 22187 ;; *************** function _ARPV4_Request *****************
 22188 ;; Defined at:
 22189 ;;		line 194 in file "../../TCPIP Library/source/arpv4.c"
 22190 ;; Parameters:    Size  Location     Type
 22191 ;;  destAddress     4   14[COMRAM] unsigned long 
 22192 ;; Auto vars:     Size  Location     Type
 22193 ;;  header         28   46[COMRAM] struct .
 22194 ;;  ret             1   45[COMRAM] enum E450
 22195 ;; Return value:  Size  Location     Type
 22196 ;;                  1    wreg      enum E450
 22197 ;; Registers used:
 22198 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22199 ;; Tracked objects:
 22200 ;;		On entry : F/0
 22201 ;;		On exit  : 0/0
 22202 ;;		Unchanged: 0/0
 22203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22205 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22206 ;;      Temps:         27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22207 ;;      Totals:        60       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22208 ;;Total ram usage:       60 bytes
 22209 ;; Hardware stack levels used:    1
 22210 ;; Hardware stack levels required when called:    7
 22211 ;; This function calls:
 22212 ;;		_ETH_GetMAC
 22213 ;;		_ETH_Send
 22214 ;;		_ETH_WriteBlock
 22215 ;;		_ETH_WriteStart
 22216 ;; This function is called by:
 22217 ;;		_IPv4_Start
 22218 ;; This function uses a non-reentrant model
 22219 ;;
 22220                           
 22221                           	psect	text84
 22222  0064CE                     __ptext84:
 22223                           	opt stack 0
 22224  0064CE                     _ARPV4_Request:
 22225                           	opt stack 18
 22226                           
 22227                           ; BSR set to: 0
 22228                           ;arpv4.c: 200: arpHeader_t header;
 22229                           ;arpv4.c: 201: header.htype = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 &
      +                           (uint16_t)0x00FF) << 8));
 22230                           
 22231                           ; BSR set to: 0
 22232                           
 22233                           ;incstack = 0
 22234  0064CE  0E01               	movlw	1
 22235  0064D0  6E30               	movwf	ARPV4_Request@header+1,c
 22236  0064D2  6A2F               	clrf	ARPV4_Request@header,c
 22237                           
 22238                           ;arpv4.c: 202: header.ptype = ((((uint16_t)0x0800 & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)0x0800 & (uint16_t)0x00FF) << 8));
 22239  0064D4  6A32               	clrf	ARPV4_Request@header+3,c
 22240  0064D6  0E08               	movlw	8
 22241  0064D8  6E31               	movwf	ARPV4_Request@header+2,c
 22242                           
 22243                           ;arpv4.c: 203: header.hlen = 6;
 22244  0064DA  0E06               	movlw	6
 22245  0064DC  6E33               	movwf	ARPV4_Request@header+4,c
 22246                           
 22247                           ;arpv4.c: 204: header.plen = 4;
 22248  0064DE  0E04               	movlw	4
 22249  0064E0  6E34               	movwf	ARPV4_Request@header+5,c
 22250                           
 22251                           ;arpv4.c: 205: header.oper = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & 
      +                          (uint16_t)0x00FF) << 8));
 22252  0064E2  0E01               	movlw	1
 22253  0064E4  6E36               	movwf	ARPV4_Request@header+7,c
 22254  0064E6  6A35               	clrf	ARPV4_Request@header+6,c
 22255                           
 22256                           ; BSR set to: 0
 22257                           ;arpv4.c: 206: ETH_GetMAC((char*)&header.sha);
 22258  0064E8  0E37               	movlw	low (ARPV4_Request@header+8)
 22259  0064EA  6E08               	movwf	ETH_GetMAC@macAddr,c
 22260  0064EC  6A09               	clrf	ETH_GetMAC@macAddr+1,c
 22261  0064EE  ECB6  F03C         	call	_ETH_GetMAC	;wreg free
 22262                           
 22263                           ;arpv4.c: 207: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
 22264  0064F2  0101               	movlb	1	; () banked
 22265  0064F4  518E               	movf	_ipv4Address& (0+255),w,b
 22266  0064F6  6E13               	movwf	??_ARPV4_Request& (0+255),c
 22267  0064F8  6A14               	clrf	(??_ARPV4_Request+1)& (0+255),c
 22268  0064FA  6A15               	clrf	(??_ARPV4_Request+2)& (0+255),c
 22269  0064FC  6A16               	clrf	(??_ARPV4_Request+3)& (0+255),c
 22270  0064FE  C013  F016         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 22271  006502  6A15               	clrf	??_ARPV4_Request+2,c
 22272  006504  6A14               	clrf	??_ARPV4_Request+1,c
 22273  006506  6A13               	clrf	??_ARPV4_Request,c
 22274  006508  6A17               	clrf	(??_ARPV4_Request+4)& (0+255),c
 22275  00650A  518F               	movf	(_ipv4Address+1)& (0+255),w,b
 22276  00650C  6E18               	movwf	(??_ARPV4_Request+5)& (0+255),c
 22277  00650E  6A19               	clrf	(??_ARPV4_Request+6)& (0+255),c
 22278  006510  6A1A               	clrf	(??_ARPV4_Request+7)& (0+255),c
 22279  006512  C019  F01A         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 22280  006516  C018  F019         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 22281  00651A  C017  F018         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 22282  00651E  6A17               	clrf	??_ARPV4_Request+4,c
 22283  006520  6A1B               	clrf	(??_ARPV4_Request+8)& (0+255),c
 22284  006522  5190               	movf	(_ipv4Address+2)& (0+255),w,b
 22285  006524  6E1C               	movwf	(??_ARPV4_Request+9)& (0+255),c
 22286  006526  6A1D               	clrf	(??_ARPV4_Request+10)& (0+255),c
 22287  006528  501B               	movf	??_ARPV4_Request+8,w,c
 22288  00652A  6E1E               	movwf	(??_ARPV4_Request+11)& (0+255),c
 22289  00652C  501C               	movf	??_ARPV4_Request+9,w,c
 22290  00652E  6E1F               	movwf	(??_ARPV4_Request+12)& (0+255),c
 22291  006530  501D               	movf	??_ARPV4_Request+10,w,c
 22292  006532  6E20               	movwf	(??_ARPV4_Request+13)& (0+255),c
 22293  006534  6A21               	clrf	(??_ARPV4_Request+14)& (0+255),c
 22294  006536  6A22               	clrf	(??_ARPV4_Request+15)& (0+255),c
 22295  006538  6A23               	clrf	(??_ARPV4_Request+16)& (0+255),c
 22296  00653A  6A24               	clrf	(??_ARPV4_Request+17)& (0+255),c
 22297  00653C  5191               	movf	(_ipv4Address+3)& (0+255),w,b
 22298  00653E  6E25               	movwf	(??_ARPV4_Request+18)& (0+255),c
 22299  006540  0E19               	movlw	25
 22300  006542  D005               	goto	u10370
 22301  006544                     u10375:
 22302  006544  90D8               	bcf	status,0,c
 22303  006546  3225               	rrcf	??_ARPV4_Request+18,f,c
 22304  006548  3224               	rrcf	??_ARPV4_Request+17,f,c
 22305  00654A  3223               	rrcf	??_ARPV4_Request+16,f,c
 22306  00654C  3222               	rrcf	??_ARPV4_Request+15,f,c
 22307  00654E                     u10370:
 22308  00654E  2EE8               	decfsz	wreg,f,c
 22309  006550  D7F9               	goto	u10375
 22310  006552  501E               	movf	??_ARPV4_Request+11,w,c
 22311  006554  1022               	iorwf	??_ARPV4_Request+15,w,c
 22312  006556  6E26               	movwf	(??_ARPV4_Request+19)& (0+255),c
 22313  006558  501F               	movf	??_ARPV4_Request+12,w,c
 22314  00655A  1023               	iorwf	??_ARPV4_Request+16,w,c
 22315  00655C  6E27               	movwf	(??_ARPV4_Request+20)& (0+255),c
 22316  00655E  5020               	movf	??_ARPV4_Request+13,w,c
 22317  006560  1024               	iorwf	??_ARPV4_Request+17,w,c
 22318  006562  6E28               	movwf	(??_ARPV4_Request+21)& (0+255),c
 22319  006564  5021               	movf	??_ARPV4_Request+14,w,c
 22320  006566  1025               	iorwf	??_ARPV4_Request+18,w,c
 22321  006568  6E29               	movwf	(??_ARPV4_Request+22)& (0+255),c
 22322  00656A  5017               	movf	??_ARPV4_Request+4,w,c
 22323  00656C  1026               	iorwf	??_ARPV4_Request+19,w,c
 22324  00656E  6E2A               	movwf	(??_ARPV4_Request+23)& (0+255),c
 22325  006570  5018               	movf	??_ARPV4_Request+5,w,c
 22326  006572  1027               	iorwf	??_ARPV4_Request+20,w,c
 22327  006574  6E2B               	movwf	(??_ARPV4_Request+24)& (0+255),c
 22328  006576  5019               	movf	??_ARPV4_Request+6,w,c
 22329  006578  1028               	iorwf	??_ARPV4_Request+21,w,c
 22330  00657A  6E2C               	movwf	(??_ARPV4_Request+25)& (0+255),c
 22331  00657C  501A               	movf	??_ARPV4_Request+7,w,c
 22332  00657E  1029               	iorwf	??_ARPV4_Request+22,w,c
 22333  006580  6E2D               	movwf	(??_ARPV4_Request+26)& (0+255),c
 22334  006582  5013               	movf	??_ARPV4_Request,w,c
 22335  006584  102A               	iorwf	??_ARPV4_Request+23,w,c
 22336  006586  6E3D               	movwf	ARPV4_Request@header+14,c
 22337  006588  5014               	movf	??_ARPV4_Request+1,w,c
 22338  00658A  102B               	iorwf	??_ARPV4_Request+24,w,c
 22339  00658C  6E3E               	movwf	ARPV4_Request@header+15,c
 22340  00658E  5015               	movf	??_ARPV4_Request+2,w,c
 22341  006590  102C               	iorwf	??_ARPV4_Request+25,w,c
 22342  006592  6E3F               	movwf	ARPV4_Request@header+16,c
 22343  006594  5016               	movf	??_ARPV4_Request+3,w,c
 22344  006596  102D               	iorwf	??_ARPV4_Request+26,w,c
 22345  006598  6E40               	movwf	ARPV4_Request@header+17,c
 22346                           
 22347                           ; BSR set to: 1
 22348                           ;arpv4.c: 208: header.tpa= ((((uint32_t)destAddress&(uint32_t)0xff000000) >> 24) | (((ui
      +                          nt32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)destAddress&(uint32_t)0x000
      +                          0ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x000000ff) << 24) );
 22349  00659A  500F               	movf	ARPV4_Request@destAddress,w,c
 22350  00659C  6E13               	movwf	??_ARPV4_Request& (0+255),c
 22351  00659E  6A14               	clrf	(??_ARPV4_Request+1)& (0+255),c
 22352  0065A0  6A15               	clrf	(??_ARPV4_Request+2)& (0+255),c
 22353  0065A2  6A16               	clrf	(??_ARPV4_Request+3)& (0+255),c
 22354  0065A4  C013  F016         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 22355  0065A8  6A15               	clrf	??_ARPV4_Request+2,c
 22356  0065AA  6A14               	clrf	??_ARPV4_Request+1,c
 22357  0065AC  6A13               	clrf	??_ARPV4_Request,c
 22358  0065AE  6A17               	clrf	(??_ARPV4_Request+4)& (0+255),c
 22359  0065B0  5010               	movf	ARPV4_Request@destAddress+1,w,c
 22360  0065B2  6E18               	movwf	(??_ARPV4_Request+5)& (0+255),c
 22361  0065B4  6A19               	clrf	(??_ARPV4_Request+6)& (0+255),c
 22362  0065B6  6A1A               	clrf	(??_ARPV4_Request+7)& (0+255),c
 22363  0065B8  C019  F01A         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 22364  0065BC  C018  F019         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 22365  0065C0  C017  F018         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 22366  0065C4  6A17               	clrf	??_ARPV4_Request+4,c
 22367  0065C6  6A1B               	clrf	(??_ARPV4_Request+8)& (0+255),c
 22368  0065C8  5011               	movf	ARPV4_Request@destAddress+2,w,c
 22369  0065CA  6E1C               	movwf	(??_ARPV4_Request+9)& (0+255),c
 22370  0065CC  6A1D               	clrf	(??_ARPV4_Request+10)& (0+255),c
 22371  0065CE  501B               	movf	??_ARPV4_Request+8,w,c
 22372  0065D0  6E1E               	movwf	(??_ARPV4_Request+11)& (0+255),c
 22373  0065D2  501C               	movf	??_ARPV4_Request+9,w,c
 22374  0065D4  6E1F               	movwf	(??_ARPV4_Request+12)& (0+255),c
 22375  0065D6  501D               	movf	??_ARPV4_Request+10,w,c
 22376  0065D8  6E20               	movwf	(??_ARPV4_Request+13)& (0+255),c
 22377  0065DA  6A21               	clrf	(??_ARPV4_Request+14)& (0+255),c
 22378  0065DC  6A22               	clrf	(??_ARPV4_Request+15)& (0+255),c
 22379  0065DE  6A23               	clrf	(??_ARPV4_Request+16)& (0+255),c
 22380  0065E0  6A24               	clrf	(??_ARPV4_Request+17)& (0+255),c
 22381  0065E2  5012               	movf	ARPV4_Request@destAddress+3,w,c
 22382  0065E4  6E25               	movwf	(??_ARPV4_Request+18)& (0+255),c
 22383  0065E6  0E19               	movlw	25
 22384  0065E8  D005               	goto	u10380
 22385  0065EA                     u10385:
 22386  0065EA  90D8               	bcf	status,0,c
 22387  0065EC  3225               	rrcf	??_ARPV4_Request+18,f,c
 22388  0065EE  3224               	rrcf	??_ARPV4_Request+17,f,c
 22389  0065F0  3223               	rrcf	??_ARPV4_Request+16,f,c
 22390  0065F2  3222               	rrcf	??_ARPV4_Request+15,f,c
 22391  0065F4                     u10380:
 22392  0065F4  2EE8               	decfsz	wreg,f,c
 22393  0065F6  D7F9               	goto	u10385
 22394  0065F8  501E               	movf	??_ARPV4_Request+11,w,c
 22395  0065FA  1022               	iorwf	??_ARPV4_Request+15,w,c
 22396  0065FC  6E26               	movwf	(??_ARPV4_Request+19)& (0+255),c
 22397  0065FE  501F               	movf	??_ARPV4_Request+12,w,c
 22398  006600  1023               	iorwf	??_ARPV4_Request+16,w,c
 22399  006602  6E27               	movwf	(??_ARPV4_Request+20)& (0+255),c
 22400  006604  5020               	movf	??_ARPV4_Request+13,w,c
 22401  006606  1024               	iorwf	??_ARPV4_Request+17,w,c
 22402  006608  6E28               	movwf	(??_ARPV4_Request+21)& (0+255),c
 22403  00660A  5021               	movf	??_ARPV4_Request+14,w,c
 22404  00660C  1025               	iorwf	??_ARPV4_Request+18,w,c
 22405  00660E  6E29               	movwf	(??_ARPV4_Request+22)& (0+255),c
 22406  006610  5017               	movf	??_ARPV4_Request+4,w,c
 22407  006612  1026               	iorwf	??_ARPV4_Request+19,w,c
 22408  006614  6E2A               	movwf	(??_ARPV4_Request+23)& (0+255),c
 22409  006616  5018               	movf	??_ARPV4_Request+5,w,c
 22410  006618  1027               	iorwf	??_ARPV4_Request+20,w,c
 22411  00661A  6E2B               	movwf	(??_ARPV4_Request+24)& (0+255),c
 22412  00661C  5019               	movf	??_ARPV4_Request+6,w,c
 22413  00661E  1028               	iorwf	??_ARPV4_Request+21,w,c
 22414  006620  6E2C               	movwf	(??_ARPV4_Request+25)& (0+255),c
 22415  006622  501A               	movf	??_ARPV4_Request+7,w,c
 22416  006624  1029               	iorwf	??_ARPV4_Request+22,w,c
 22417  006626  6E2D               	movwf	(??_ARPV4_Request+26)& (0+255),c
 22418  006628  5013               	movf	??_ARPV4_Request,w,c
 22419  00662A  102A               	iorwf	??_ARPV4_Request+23,w,c
 22420  00662C  6E47               	movwf	ARPV4_Request@header+24,c
 22421  00662E  5014               	movf	??_ARPV4_Request+1,w,c
 22422  006630  102B               	iorwf	??_ARPV4_Request+24,w,c
 22423  006632  6E48               	movwf	ARPV4_Request@header+25,c
 22424  006634  5015               	movf	??_ARPV4_Request+2,w,c
 22425  006636  102C               	iorwf	??_ARPV4_Request+25,w,c
 22426  006638  6E49               	movwf	ARPV4_Request@header+26,c
 22427  00663A  5016               	movf	??_ARPV4_Request+3,w,c
 22428  00663C  102D               	iorwf	??_ARPV4_Request+26,w,c
 22429  00663E  6E4A               	movwf	ARPV4_Request@header+27,c
 22430                           
 22431                           ; BSR set to: 1
 22432                           ;arpv4.c: 209: header.tha.s.byte1 = 0;
 22433  006640  6A41               	clrf	ARPV4_Request@header+18,c
 22434                           
 22435                           ; BSR set to: 1
 22436                           ;arpv4.c: 210: header.tha.s.byte2 = 0;
 22437  006642  6A42               	clrf	ARPV4_Request@header+19,c
 22438                           
 22439                           ; BSR set to: 1
 22440                           ;arpv4.c: 211: header.tha.s.byte3 = 0;
 22441  006644  6A43               	clrf	ARPV4_Request@header+20,c
 22442                           
 22443                           ; BSR set to: 1
 22444                           ;arpv4.c: 212: header.tha.s.byte4 = 0;
 22445  006646  6A44               	clrf	ARPV4_Request@header+21,c
 22446                           
 22447                           ; BSR set to: 1
 22448                           ;arpv4.c: 213: header.tha.s.byte5 = 0;
 22449  006648  6A45               	clrf	ARPV4_Request@header+22,c
 22450                           
 22451                           ; BSR set to: 1
 22452                           ;arpv4.c: 214: header.tha.s.byte6 = 0;
 22453  00664A  6A46               	clrf	ARPV4_Request@header+23,c
 22454                           
 22455                           ; BSR set to: 1
 22456                           ;arpv4.c: 216: ret = ETH_WriteStart(&broadcastMAC,0x0806);
 22457  00664C  0E28               	movlw	low _broadcastMAC
 22458  00664E  6E0B               	movwf	ETH_WriteStart@destMAC,c
 22459  006650  500B               	movf	ETH_WriteStart@destMAC,w,c
 22460  006652  A4D8               	btfss	status,2,c
 22461  006654  0E10               	movlw	high __smallconst
 22462  006656  6E0C               	movwf	ETH_WriteStart@destMAC+1,c
 22463  006658  0E08               	movlw	8
 22464  00665A  6E0E               	movwf	ETH_WriteStart@type+1,c
 22465  00665C  0E06               	movlw	6
 22466  00665E  6E0D               	movwf	ETH_WriteStart@type,c
 22467  006660  EC7F  F03E         	call	_ETH_WriteStart	;wreg free
 22468  006664  6E2E               	movwf	ARPV4_Request@ret,c
 22469                           
 22470                           ;arpv4.c: 217: if(ret == SUCCESS)
 22471  006666  042E               	decf	ARPV4_Request@ret,w,c
 22472  006668  E10E               	bnz	l7911
 22473                           
 22474                           ;arpv4.c: 218: {
 22475                           ;arpv4.c: 219: ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
 22476  00666A  0E2F               	movlw	low ARPV4_Request@header
 22477  00666C  6E03               	movwf	ETH_WriteBlock@data,c
 22478  00666E  6A04               	clrf	ETH_WriteBlock@data+1,c
 22479  006670  6A06               	clrf	ETH_WriteBlock@len+1,c
 22480  006672  0E1C               	movlw	28
 22481  006674  6E05               	movwf	ETH_WriteBlock@len,c
 22482  006676  ECFE  F03D         	call	_ETH_WriteBlock	;wreg free
 22483                           
 22484                           ;arpv4.c: 220: ret = ETH_Send();
 22485  00667A  ECE5  F042         	call	_ETH_Send	;wreg free
 22486  00667E  6E2E               	movwf	ARPV4_Request@ret,c
 22487                           
 22488                           ; BSR set to: 1
 22489                           ;arpv4.c: 221: if(ret == SUCCESS)
 22490  006680  042E               	decf	ARPV4_Request@ret,w,c
 22491  006682  E101               	bnz	l7911
 22492                           
 22493                           ; BSR set to: 1
 22494                           ;arpv4.c: 222: {
 22495                           ;arpv4.c: 223: return MAC_NOT_FOUND;
 22496  006684  0C05               	retlw	5
 22497  006686                     l7911:
 22498                           
 22499                           ;arpv4.c: 224: }
 22500                           ;arpv4.c: 225: }
 22501                           ;arpv4.c: 226: return ret;
 22502  006686  502E               	movf	ARPV4_Request@ret,w,c
 22503  006688  0012               	return		;funcret
 22504  00668A                     __end_of_ARPV4_Request:
 22505                           	opt stack 0
 22506                           tosu	equ	0xFFF
 22507                           tosh	equ	0xFFE
 22508                           tosl	equ	0xFFD
 22509                           pclath	equ	0xFFA
 22510                           tblptru	equ	0xFF8
 22511                           tblptrh	equ	0xFF7
 22512                           tblptrl	equ	0xFF6
 22513                           tablat	equ	0xFF5
 22514                           prodh	equ	0xFF4
 22515                           prodl	equ	0xFF3
 22516                           intcon	equ	0xFF2
 22517                           intcon2	equ	0xFF1
 22518                           indf0	equ	0xFEF
 22519                           postinc0	equ	0xFEE
 22520                           fsr0h	equ	0xFEA
 22521                           fsr0l	equ	0xFE9
 22522                           wreg	equ	0xFE8
 22523                           indf1	equ	0xFE7
 22524                           postinc1	equ	0xFE6
 22525                           postdec1	equ	0xFE5
 22526                           plusw1	equ	0xFE3
 22527                           fsr1h	equ	0xFE2
 22528                           fsr1l	equ	0xFE1
 22529                           indf2	equ	0xFDF
 22530                           postinc2	equ	0xFDE
 22531                           postdec2	equ	0xFDD
 22532                           plusw2	equ	0xFDB
 22533                           fsr2h	equ	0xFDA
 22534                           fsr2l	equ	0xFD9
 22535                           status	equ	0xFD8
 22536                           
 22537 ;; *************** function _ETH_WriteStart *****************
 22538 ;; Defined at:
 22539 ;;		line 366 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 22540 ;; Parameters:    Size  Location     Type
 22541 ;;  destMAC         2   10[COMRAM] PTR const struct .
 22542 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), header.sha(6), ARPV4_Packet@header(28), 
 22543 ;;		 -> arpMap(104), NULL(0), 
 22544 ;;  type            2   12[COMRAM] unsigned int 
 22545 ;; Auto vars:     Size  Location     Type
 22546 ;;		None
 22547 ;; Return value:  Size  Location     Type
 22548 ;;                  1    wreg      enum E6988
 22549 ;; Registers used:
 22550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22551 ;; Tracked objects:
 22552 ;;		On entry : E/1
 22553 ;;		On exit  : 0/0
 22554 ;;		Unchanged: 0/0
 22555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22559 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22560 ;;Total ram usage:        4 bytes
 22561 ;; Hardware stack levels used:    1
 22562 ;; Hardware stack levels required when called:    6
 22563 ;; This function calls:
 22564 ;;		_ENCx24_Read
 22565 ;;		_ENCx24_Write
 22566 ;;		_ETH_Write16
 22567 ;;		_ETH_WriteBlock
 22568 ;; This function is called by:
 22569 ;;		_ARPV4_Packet
 22570 ;;		_ARPV4_Request
 22571 ;;		_IPv4_Start
 22572 ;; This function uses a non-reentrant model
 22573 ;;
 22574                           
 22575                           	psect	text85
 22576  007CFE                     __ptext85:
 22577                           	opt stack 0
 22578  007CFE                     _ETH_WriteStart:
 22579                           	opt stack 19
 22580                           
 22581                           ;encX24J600_driver.c: 368: TXPacketSize = 0;
 22582                           
 22583                           ;incstack = 0
 22584  007CFE  0101               	movlb	1	; () banked
 22585  007D00  6B9A               	clrf	_TXPacketSize& (0+255),b
 22586  007D02  6B9B               	clrf	(_TXPacketSize+1)& (0+255),b
 22587                           
 22588                           ;encX24J600_driver.c: 369: if(ethData.bufferBusy)
 22589  007D04  BB83               	btfsc	_ethData& (0+255),5,b	;volatile
 22590                           
 22591                           ; BSR set to: 1
 22592                           ;encX24J600_driver.c: 370: {
 22593                           ;encX24J600_driver.c: 371: return BUFFER_BUSY;
 22594  007D06  0C03               	retlw	3
 22595                           
 22596                           ; BSR set to: 1
 22597                           ;encX24J600_driver.c: 372: }
 22598                           ;encX24J600_driver.c: 373: if((ENCx24_Read(XJ600_ECON1L) & 0x02))
 22599  007D08  0EFE               	movlw	254
 22600  007D0A  ECDF  F03F         	call	_ENCx24_Read
 22601  007D0E  B205               	btfsc	?_ENCx24_Read,1,c
 22602                           
 22603                           ;encX24J600_driver.c: 374: {
 22604                           ;encX24J600_driver.c: 375: return TX_LOGIC_NOT_IDLE;
 22605  007D10  0C04               	retlw	4
 22606                           
 22607                           ;encX24J600_driver.c: 376: }
 22608                           ;encX24J600_driver.c: 378: ENCx24_Write(XJ600_EGPWRPTL, 0x0000ul);
 22609  007D12  6A06               	clrf	ENCx24_Write@data+1,c
 22610  007D14  6A05               	clrf	ENCx24_Write@data,c
 22611  007D16  0E88               	movlw	136
 22612  007D18  EC91  F040         	call	_ENCx24_Write
 22613                           
 22614                           ;encX24J600_driver.c: 380: ETH_WriteBlock((char *)destMAC,6);
 22615  007D1C  C00B  F003         	movff	ETH_WriteStart@destMAC,ETH_WriteBlock@data
 22616  007D20  C00C  F004         	movff	ETH_WriteStart@destMAC+1,ETH_WriteBlock@data+1
 22617  007D24  6A06               	clrf	ETH_WriteBlock@len+1,c
 22618  007D26  0E06               	movlw	6
 22619  007D28  6E05               	movwf	ETH_WriteBlock@len,c
 22620  007D2A  ECFE  F03D         	call	_ETH_WriteBlock	;wreg free
 22621                           
 22622                           ;encX24J600_driver.c: 381: ETH_WriteBlock((char *)&ethMAC,6);
 22623  007D2E  0E99               	movlw	low _ethMAC
 22624  007D30  6E03               	movwf	ETH_WriteBlock@data,c
 22625  007D32  0E02               	movlw	high _ethMAC
 22626  007D34  6E04               	movwf	ETH_WriteBlock@data+1,c
 22627  007D36  6A06               	clrf	ETH_WriteBlock@len+1,c
 22628  007D38  0E06               	movlw	6
 22629  007D3A  6E05               	movwf	ETH_WriteBlock@len,c
 22630  007D3C  ECFE  F03D         	call	_ETH_WriteBlock	;wreg free
 22631                           
 22632                           ;encX24J600_driver.c: 382: ETH_Write16(type);
 22633  007D40  C00D  F003         	movff	ETH_WriteStart@type,ETH_Write16@data
 22634  007D44  C00E  F004         	movff	ETH_WriteStart@type+1,ETH_Write16@data+1
 22635  007D48  ECD4  F042         	call	_ETH_Write16	;wreg free
 22636                           
 22637                           ;encX24J600_driver.c: 383: ethData.bufferBusy = 1;
 22638  007D4C  0101               	movlb	1	; () banked
 22639  007D4E  8B83               	bsf	_ethData& (0+255),5,b	;volatile
 22640                           
 22641                           ; BSR set to: 1
 22642                           ;encX24J600_driver.c: 385: return SUCCESS;
 22643  007D50  0C01               	retlw	1	;funcret
 22644  007D52                     __end_of_ETH_WriteStart:
 22645                           	opt stack 0
 22646                           tosu	equ	0xFFF
 22647                           tosh	equ	0xFFE
 22648                           tosl	equ	0xFFD
 22649                           pclath	equ	0xFFA
 22650                           tblptru	equ	0xFF8
 22651                           tblptrh	equ	0xFF7
 22652                           tblptrl	equ	0xFF6
 22653                           tablat	equ	0xFF5
 22654                           prodh	equ	0xFF4
 22655                           prodl	equ	0xFF3
 22656                           intcon	equ	0xFF2
 22657                           intcon2	equ	0xFF1
 22658                           indf0	equ	0xFEF
 22659                           postinc0	equ	0xFEE
 22660                           fsr0h	equ	0xFEA
 22661                           fsr0l	equ	0xFE9
 22662                           wreg	equ	0xFE8
 22663                           indf1	equ	0xFE7
 22664                           postinc1	equ	0xFE6
 22665                           postdec1	equ	0xFE5
 22666                           plusw1	equ	0xFE3
 22667                           fsr1h	equ	0xFE2
 22668                           fsr1l	equ	0xFE1
 22669                           indf2	equ	0xFDF
 22670                           postinc2	equ	0xFDE
 22671                           postdec2	equ	0xFDD
 22672                           plusw2	equ	0xFDB
 22673                           fsr2h	equ	0xFDA
 22674                           fsr2l	equ	0xFD9
 22675                           status	equ	0xFD8
 22676                           
 22677 ;; *************** function _ETH_WriteBlock *****************
 22678 ;; Defined at:
 22679 ;;		line 393 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 22680 ;; Parameters:    Size  Location     Type
 22681 ;;  data            2    2[COMRAM] PTR void 
 22682 ;;		 -> arpMap.macAddress(6), ?_sprintf(2), ?_printf(2), main@str(32), 
 22683 ;;		 -> STR_5(13), STR_4(17), DEMO_TCP_EchoServer@txdataPort7(20), TCP_Snd@txHeader(20), 
 22684 ;;		 -> Network_Read@debug_str(80), dhcpName(21), DHCP_Request@ethMAC(6), broadcastMAC(6), 
 22685 ;;		 -> ARPV4_Request@header(28), header.sha(6), ARPV4_Packet@header(28), arpMap(104), 
 22686 ;;		 -> ethMAC(6), NULL(0), 
 22687 ;;  len             2    4[COMRAM] unsigned int 
 22688 ;; Auto vars:     Size  Location     Type
 22689 ;;  p               2    6[COMRAM] PTR unsigned char 
 22690 ;;		 -> arpMap.macAddress(6), ?_sprintf(2), ?_printf(2), main@str(32), 
 22691 ;;		 -> STR_5(13), STR_4(17), DEMO_TCP_EchoServer@txdataPort7(20), TCP_Snd@txHeader(20), 
 22692 ;;		 -> Network_Read@debug_str(80), dhcpName(21), DHCP_Request@ethMAC(6), broadcastMAC(6), 
 22693 ;;		 -> ARPV4_Request@header(28), header.sha(6), ARPV4_Packet@header(28), arpMap(104), 
 22694 ;;		 -> ethMAC(6), NULL(0), 
 22695 ;; Return value:  Size  Location     Type
 22696 ;;                  2    2[COMRAM] unsigned int 
 22697 ;; Registers used:
 22698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22699 ;; Tracked objects:
 22700 ;;		On entry : 0/1
 22701 ;;		On exit  : 0/0
 22702 ;;		Unchanged: 0/0
 22703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22707 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22708 ;;Total ram usage:        6 bytes
 22709 ;; Hardware stack levels used:    1
 22710 ;; Hardware stack levels required when called:    4
 22711 ;; This function calls:
 22712 ;;		_SPI_ExchangeByte
 22713 ;; This function is called by:
 22714 ;;		_ETH_WriteStart
 22715 ;;		_ARPV4_Packet
 22716 ;;		_ARPV4_Request
 22717 ;;		_DHCP_Request
 22718 ;;		_TCP_Snd
 22719 ;; This function uses a non-reentrant model
 22720 ;;
 22721                           
 22722                           	psect	text86
 22723  007BFC                     __ptext86:
 22724                           	opt stack 0
 22725  007BFC                     _ETH_WriteBlock:
 22726                           	opt stack 20
 22727                           
 22728                           ;encX24j600_spi.c: 395: char *p = data;
 22729                           
 22730                           ;incstack = 0
 22731  007BFC  C003  F007         	movff	ETH_WriteBlock@data,ETH_WriteBlock@p
 22732  007C00  C004  F008         	movff	ETH_WriteBlock@data+1,ETH_WriteBlock@p+1
 22733  007C04  968A               	bcf	3978,3,c	;volatile
 22734                           
 22735                           ;encX24j600_spi.c: 398: TXPacketSize += len;
 22736  007C06  5005               	movf	ETH_WriteBlock@len,w,c
 22737  007C08  0101               	movlb	1	; () banked
 22738  007C0A  279A               	addwf	_TXPacketSize& (0+255),f,b
 22739  007C0C  5006               	movf	ETH_WriteBlock@len+1,w,c
 22740  007C0E  239B               	addwfc	(_TXPacketSize+1)& (0+255),f,b
 22741                           
 22742                           ; BSR set to: 1
 22743                           ;encX24j600_spi.c: 399: SPI_ExchangeByte(wgpdata_inst);
 22744  007C10  0E2A               	movlw	42
 22745  007C12  ECCC  F043         	call	_SPI_ExchangeByte
 22746                           
 22747                           ;encX24j600_spi.c: 400: while(len--)
 22748  007C16  D015               	goto	l7689
 22749  007C18                     l7685:
 22750                           
 22751                           ;encX24j600_spi.c: 401: {
 22752                           ;encX24j600_spi.c: 402: SPI_ExchangeByte(*p++);
 22753  007C18  C007  FFF6         	movff	ETH_WriteBlock@p,tblptrl
 22754  007C1C  C008  FFF7         	movff	ETH_WriteBlock@p+1,tblptrh
 22755  007C20  0E00               	movlw	low (__smallconst shr (0+16))
 22756  007C22  6EF8               	movwf	tblptru,c
 22757  007C24  0E0F               	movlw	(high __ramtop+-1)
 22758  007C26  64F7               	cpfsgt	tblptrh,c
 22759  007C28  D003               	bra	u10257
 22760  007C2A  0008               	tblrd		*
 22761  007C2C  50F5               	movf	tablat,w,c
 22762  007C2E  D005               	bra	u10250
 22763  007C30                     u10257:
 22764  007C30  CFF6 FFE9          	movff	tblptrl,fsr0l
 22765  007C34  CFF7 FFEA          	movff	tblptrh,fsr0h
 22766  007C38  50EF               	movf	indf0,w,c
 22767  007C3A                     u10250:
 22768  007C3A  ECCC  F043         	call	_SPI_ExchangeByte
 22769  007C3E  4A07               	infsnz	ETH_WriteBlock@p,f,c
 22770  007C40  2A08               	incf	ETH_WriteBlock@p+1,f,c
 22771  007C42                     l7689:
 22772  007C42  0605               	decf	ETH_WriteBlock@len,f,c
 22773  007C44  A0D8               	btfss	status,0,c
 22774  007C46  0606               	decf	ETH_WriteBlock@len+1,f,c
 22775  007C48  2805               	incf	ETH_WriteBlock@len,w,c
 22776  007C4A  E1E6               	bnz	l7685
 22777  007C4C  2806               	incf	ETH_WriteBlock@len+1,w,c
 22778  007C4E  E1E4               	bnz	l7685
 22779                           
 22780                           ;encX24j600_spi.c: 403: }
 22781                           ;encX24j600_spi.c: 404: do{LATB3 = 1;} while(0);
 22782  007C50  868A               	bsf	3978,3,c	;volatile
 22783  007C52  0012               	return		;funcret
 22784  007C54                     __end_of_ETH_WriteBlock:
 22785                           	opt stack 0
 22786                           tosu	equ	0xFFF
 22787                           tosh	equ	0xFFE
 22788                           tosl	equ	0xFFD
 22789                           pclath	equ	0xFFA
 22790                           tblptru	equ	0xFF8
 22791                           tblptrh	equ	0xFF7
 22792                           tblptrl	equ	0xFF6
 22793                           tablat	equ	0xFF5
 22794                           prodh	equ	0xFF4
 22795                           prodl	equ	0xFF3
 22796                           intcon	equ	0xFF2
 22797                           intcon2	equ	0xFF1
 22798                           indf0	equ	0xFEF
 22799                           postinc0	equ	0xFEE
 22800                           fsr0h	equ	0xFEA
 22801                           fsr0l	equ	0xFE9
 22802                           wreg	equ	0xFE8
 22803                           indf1	equ	0xFE7
 22804                           postinc1	equ	0xFE6
 22805                           postdec1	equ	0xFE5
 22806                           plusw1	equ	0xFE3
 22807                           fsr1h	equ	0xFE2
 22808                           fsr1l	equ	0xFE1
 22809                           indf2	equ	0xFDF
 22810                           postinc2	equ	0xFDE
 22811                           postdec2	equ	0xFDD
 22812                           plusw2	equ	0xFDB
 22813                           fsr2h	equ	0xFDA
 22814                           fsr2l	equ	0xFD9
 22815                           status	equ	0xFD8
 22816                           
 22817 ;; *************** function _ETH_Write16 *****************
 22818 ;; Defined at:
 22819 ;;		line 347 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 22820 ;; Parameters:    Size  Location     Type
 22821 ;;  data            2    2[COMRAM] unsigned int 
 22822 ;; Auto vars:     Size  Location     Type
 22823 ;;		None
 22824 ;; Return value:  Size  Location     Type
 22825 ;;		None               void
 22826 ;; Registers used:
 22827 ;;		wreg, status,2, status,0, cstack
 22828 ;; Tracked objects:
 22829 ;;		On entry : 0/0
 22830 ;;		On exit  : 0/0
 22831 ;;		Unchanged: 0/0
 22832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22837 ;;Total ram usage:        2 bytes
 22838 ;; Hardware stack levels used:    1
 22839 ;; Hardware stack levels required when called:    4
 22840 ;; This function calls:
 22841 ;;		_SPI_ExchangeByte
 22842 ;; This function is called by:
 22843 ;;		_ETH_WriteStart
 22844 ;;		_DHCP_Request
 22845 ;;		_ICMP_EchoReply
 22846 ;;		_IPv4_Start
 22847 ;;		_UDP_Start
 22848 ;; This function uses a non-reentrant model
 22849 ;;
 22850                           
 22851                           	psect	text87
 22852  0085A8                     __ptext87:
 22853                           	opt stack 0
 22854  0085A8                     _ETH_Write16:
 22855                           	opt stack 20
 22856                           
 22857                           ;incstack = 0
 22858                           ;encX24j600_spi.c: 349: do{LATB3 = 0;} while(0);
 22859  0085A8  968A               	bcf	3978,3,c	;volatile
 22860                           
 22861                           ;encX24j600_spi.c: 350: TXPacketSize += 2;
 22862  0085AA  0E02               	movlw	2
 22863  0085AC  0101               	movlb	1	; () banked
 22864  0085AE  279A               	addwf	_TXPacketSize& (0+255),f,b
 22865  0085B0  0E00               	movlw	0
 22866  0085B2  239B               	addwfc	(_TXPacketSize+1)& (0+255),f,b
 22867                           
 22868                           ; BSR set to: 1
 22869                           ;encX24j600_spi.c: 351: SPI_ExchangeByte(wgpdata_inst);
 22870  0085B4  0E2A               	movlw	42
 22871  0085B6  ECCC  F043         	call	_SPI_ExchangeByte
 22872                           
 22873                           ;encX24j600_spi.c: 352: SPI_ExchangeByte(((uint8_t*) &data)[1]);
 22874  0085BA  5004               	movf	ETH_Write16@data+1,w,c
 22875  0085BC  ECCC  F043         	call	_SPI_ExchangeByte
 22876                           
 22877                           ;encX24j600_spi.c: 353: SPI_ExchangeByte(((uint8_t*) &data)[0]);
 22878  0085C0  5003               	movf	ETH_Write16@data,w,c
 22879  0085C2  ECCC  F043         	call	_SPI_ExchangeByte
 22880  0085C6  868A               	bsf	3978,3,c	;volatile
 22881  0085C8  0012               	return		;funcret
 22882  0085CA                     __end_of_ETH_Write16:
 22883                           	opt stack 0
 22884                           tosu	equ	0xFFF
 22885                           tosh	equ	0xFFE
 22886                           tosl	equ	0xFFD
 22887                           pclath	equ	0xFFA
 22888                           tblptru	equ	0xFF8
 22889                           tblptrh	equ	0xFF7
 22890                           tblptrl	equ	0xFF6
 22891                           tablat	equ	0xFF5
 22892                           prodh	equ	0xFF4
 22893                           prodl	equ	0xFF3
 22894                           intcon	equ	0xFF2
 22895                           intcon2	equ	0xFF1
 22896                           indf0	equ	0xFEF
 22897                           postinc0	equ	0xFEE
 22898                           fsr0h	equ	0xFEA
 22899                           fsr0l	equ	0xFE9
 22900                           wreg	equ	0xFE8
 22901                           indf1	equ	0xFE7
 22902                           postinc1	equ	0xFE6
 22903                           postdec1	equ	0xFE5
 22904                           plusw1	equ	0xFE3
 22905                           fsr1h	equ	0xFE2
 22906                           fsr1l	equ	0xFE1
 22907                           indf2	equ	0xFDF
 22908                           postinc2	equ	0xFDE
 22909                           postdec2	equ	0xFDD
 22910                           plusw2	equ	0xFDB
 22911                           fsr2h	equ	0xFDA
 22912                           fsr2l	equ	0xFD9
 22913                           status	equ	0xFD8
 22914                           
 22915 ;; *************** function _ETH_GetMAC *****************
 22916 ;; Defined at:
 22917 ;;		line 456 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 22918 ;; Parameters:    Size  Location     Type
 22919 ;;  macAddr         2    7[COMRAM] PTR unsigned char 
 22920 ;;		 -> DHCP_Handler@ethMAC(6), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), header.sha(6), 
 22921 ;;		 -> ARPV4_Packet@header(28), ethMAC(6), 
 22922 ;; Auto vars:     Size  Location     Type
 22923 ;;		None
 22924 ;; Return value:  Size  Location     Type
 22925 ;;		None               void
 22926 ;; Registers used:
 22927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22928 ;; Tracked objects:
 22929 ;;		On entry : 0/0
 22930 ;;		On exit  : 0/0
 22931 ;;		Unchanged: 0/0
 22932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22937 ;;Total ram usage:        2 bytes
 22938 ;; Hardware stack levels used:    1
 22939 ;; Hardware stack levels required when called:    6
 22940 ;; This function calls:
 22941 ;;		_ETH_MACRead8
 22942 ;; This function is called by:
 22943 ;;		_ETH_Init
 22944 ;;		_ARPV4_Packet
 22945 ;;		_ARPV4_Request
 22946 ;;		_DHCP_Request
 22947 ;;		_DHCP_Handler
 22948 ;; This function uses a non-reentrant model
 22949 ;;
 22950                           
 22951                           	psect	text88
 22952  00796C                     __ptext88:
 22953                           	opt stack 0
 22954  00796C                     _ETH_GetMAC:
 22955                           	opt stack 18
 22956                           
 22957                           ;encX24J600_driver.c: 459: *macAddr++ = ETH_MACRead8(XJ600_MAADR1L);
 22958                           
 22959                           ;incstack = 0
 22960  00796C  0E64               	movlw	100
 22961  00796E  EC30  F041         	call	_ETH_MACRead8
 22962  007972  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 22963  007976  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 22964  00797A  6EDF               	movwf	indf2,c
 22965  00797C  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 22966  00797E  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 22967                           
 22968                           ;encX24J600_driver.c: 460: *macAddr++ = ETH_MACRead8(XJ600_MAADR1H);
 22969  007980  0E65               	movlw	101
 22970  007982  EC30  F041         	call	_ETH_MACRead8
 22971  007986  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 22972  00798A  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 22973  00798E  6EDF               	movwf	indf2,c
 22974  007990  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 22975  007992  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 22976                           
 22977                           ;encX24J600_driver.c: 461: *macAddr++ = ETH_MACRead8(XJ600_MAADR2L);
 22978  007994  0E62               	movlw	98
 22979  007996  EC30  F041         	call	_ETH_MACRead8
 22980  00799A  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 22981  00799E  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 22982  0079A2  6EDF               	movwf	indf2,c
 22983  0079A4  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 22984  0079A6  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 22985                           
 22986                           ;encX24J600_driver.c: 462: *macAddr++ = ETH_MACRead8(XJ600_MAADR2H);
 22987  0079A8  0E63               	movlw	99
 22988  0079AA  EC30  F041         	call	_ETH_MACRead8
 22989  0079AE  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 22990  0079B2  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 22991  0079B6  6EDF               	movwf	indf2,c
 22992  0079B8  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 22993  0079BA  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 22994                           
 22995                           ;encX24J600_driver.c: 463: *macAddr++ = ETH_MACRead8(XJ600_MAADR3L);
 22996  0079BC  0E60               	movlw	96
 22997  0079BE  EC30  F041         	call	_ETH_MACRead8
 22998  0079C2  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 22999  0079C6  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 23000  0079CA  6EDF               	movwf	indf2,c
 23001  0079CC  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 23002  0079CE  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 23003                           
 23004                           ;encX24J600_driver.c: 464: *macAddr++ = ETH_MACRead8(XJ600_MAADR3H);
 23005  0079D0  0E61               	movlw	97
 23006  0079D2  EC30  F041         	call	_ETH_MACRead8
 23007  0079D6  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 23008  0079DA  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 23009  0079DE  6EDF               	movwf	indf2,c
 23010  0079E0  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 23011  0079E2  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 23012  0079E4  0012               	return		;funcret
 23013  0079E6                     __end_of_ETH_GetMAC:
 23014                           	opt stack 0
 23015                           tosu	equ	0xFFF
 23016                           tosh	equ	0xFFE
 23017                           tosl	equ	0xFFD
 23018                           pclath	equ	0xFFA
 23019                           tblptru	equ	0xFF8
 23020                           tblptrh	equ	0xFF7
 23021                           tblptrl	equ	0xFF6
 23022                           tablat	equ	0xFF5
 23023                           prodh	equ	0xFF4
 23024                           prodl	equ	0xFF3
 23025                           intcon	equ	0xFF2
 23026                           intcon2	equ	0xFF1
 23027                           indf0	equ	0xFEF
 23028                           postinc0	equ	0xFEE
 23029                           fsr0h	equ	0xFEA
 23030                           fsr0l	equ	0xFE9
 23031                           wreg	equ	0xFE8
 23032                           indf1	equ	0xFE7
 23033                           postinc1	equ	0xFE6
 23034                           postdec1	equ	0xFE5
 23035                           plusw1	equ	0xFE3
 23036                           fsr1h	equ	0xFE2
 23037                           fsr1l	equ	0xFE1
 23038                           indf2	equ	0xFDF
 23039                           postinc2	equ	0xFDE
 23040                           postdec2	equ	0xFDD
 23041                           plusw2	equ	0xFDB
 23042                           fsr2h	equ	0xFDA
 23043                           fsr2l	equ	0xFD9
 23044                           status	equ	0xFD8
 23045                           
 23046 ;; *************** function _ETH_MACRead8 *****************
 23047 ;; Defined at:
 23048 ;;		line 504 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 23049 ;; Parameters:    Size  Location     Type
 23050 ;;  a               1    wreg     enum E6725
 23051 ;; Auto vars:     Size  Location     Type
 23052 ;;  a               1    6[COMRAM] enum E6725
 23053 ;;  bank            1    5[COMRAM] unsigned char 
 23054 ;;  v               1    4[COMRAM] unsigned char 
 23055 ;; Return value:  Size  Location     Type
 23056 ;;                  1    wreg      unsigned char 
 23057 ;; Registers used:
 23058 ;;		wreg, status,2, status,0, cstack
 23059 ;; Tracked objects:
 23060 ;;		On entry : 0/0
 23061 ;;		On exit  : 0/0
 23062 ;;		Unchanged: 0/0
 23063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23065 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23067 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23068 ;;Total ram usage:        3 bytes
 23069 ;; Hardware stack levels used:    1
 23070 ;; Hardware stack levels required when called:    5
 23071 ;; This function calls:
 23072 ;;		_ENCx24_BankselSPI
 23073 ;;		_SPI_ExchangeByte
 23074 ;; This function is called by:
 23075 ;;		_ETH_GetMAC
 23076 ;; This function uses a non-reentrant model
 23077 ;;
 23078                           
 23079                           	psect	text89
 23080  008260                     __ptext89:
 23081                           	opt stack 0
 23082  008260                     _ETH_MACRead8:
 23083                           	opt stack 18
 23084                           
 23085                           ;incstack = 0
 23086                           ;ETH_MACRead8@a stored from wreg
 23087  008260  6E07               	movwf	ETH_MACRead8@a,c
 23088                           
 23089                           ;encX24j600_spi.c: 506: uint8_t v;
 23090                           ;encX24j600_spi.c: 507: uint8_t bank;
 23091                           ;encX24j600_spi.c: 509: bank = a & 0xE0;
 23092  008262  5007               	movf	ETH_MACRead8@a,w,c
 23093  008264  0BE0               	andlw	224
 23094  008266  6E06               	movwf	ETH_MACRead8@bank,c
 23095                           
 23096                           ;encX24j600_spi.c: 510: if(bank != 0X80)
 23097  008268  0E80               	movlw	128
 23098  00826A  1806               	xorwf	ETH_MACRead8@bank,w,c
 23099  00826C  E009               	bz	l739
 23100                           
 23101                           ;encX24j600_spi.c: 511: {
 23102                           ;encX24j600_spi.c: 512: ENCx24_BankselSPI(a);
 23103  00826E  5007               	movf	ETH_MACRead8@a,w,c
 23104  008270  EC2A  F03E         	call	_ENCx24_BankselSPI
 23105  008274  968A               	bcf	3978,3,c	;volatile
 23106                           
 23107                           ;encX24j600_spi.c: 514: SPI_ExchangeByte(rcr_inst| (a & 0x1F));
 23108  008276  5007               	movf	ETH_MACRead8@a,w,c
 23109  008278  0B1F               	andlw	31
 23110  00827A  ECCC  F043         	call	_SPI_ExchangeByte
 23111                           
 23112                           ;encX24j600_spi.c: 515: }
 23113  00827E  D007               	goto	l738
 23114  008280                     l739:
 23115  008280  968A               	bcf	3978,3,c	;volatile
 23116                           
 23117                           ;encX24j600_spi.c: 519: SPI_ExchangeByte(rcru_inst);
 23118  008282  0E20               	movlw	32
 23119  008284  ECCC  F043         	call	_SPI_ExchangeByte
 23120                           
 23121                           ;encX24j600_spi.c: 520: SPI_ExchangeByte(a);
 23122  008288  5007               	movf	ETH_MACRead8@a,w,c
 23123  00828A  ECCC  F043         	call	_SPI_ExchangeByte
 23124  00828E                     l738:
 23125                           
 23126                           ;encX24j600_spi.c: 521: }
 23127                           ;encX24j600_spi.c: 522: v = SPI_ExchangeByte(0);
 23128  00828E  0E00               	movlw	0
 23129  008290  ECCC  F043         	call	_SPI_ExchangeByte
 23130  008294  6E05               	movwf	ETH_MACRead8@v,c
 23131  008296  868A               	bsf	3978,3,c	;volatile
 23132                           
 23133                           ;encX24j600_spi.c: 525: return v;
 23134  008298  5005               	movf	ETH_MACRead8@v,w,c
 23135  00829A  0012               	return		;funcret
 23136  00829C                     __end_of_ETH_MACRead8:
 23137                           	opt stack 0
 23138                           tosu	equ	0xFFF
 23139                           tosh	equ	0xFFE
 23140                           tosl	equ	0xFFD
 23141                           pclath	equ	0xFFA
 23142                           tblptru	equ	0xFF8
 23143                           tblptrh	equ	0xFF7
 23144                           tblptrl	equ	0xFF6
 23145                           tablat	equ	0xFF5
 23146                           prodh	equ	0xFF4
 23147                           prodl	equ	0xFF3
 23148                           intcon	equ	0xFF2
 23149                           intcon2	equ	0xFF1
 23150                           indf0	equ	0xFEF
 23151                           postinc0	equ	0xFEE
 23152                           fsr0h	equ	0xFEA
 23153                           fsr0l	equ	0xFE9
 23154                           wreg	equ	0xFE8
 23155                           indf1	equ	0xFE7
 23156                           postinc1	equ	0xFE6
 23157                           postdec1	equ	0xFE5
 23158                           plusw1	equ	0xFE3
 23159                           fsr1h	equ	0xFE2
 23160                           fsr1l	equ	0xFE1
 23161                           indf2	equ	0xFDF
 23162                           postinc2	equ	0xFDE
 23163                           postdec2	equ	0xFDD
 23164                           plusw2	equ	0xFDB
 23165                           fsr2h	equ	0xFDA
 23166                           fsr2l	equ	0xFD9
 23167                           status	equ	0xFD8
 23168                           
 23169 ;; *************** function _ARPV4_Lookup *****************
 23170 ;; Defined at:
 23171 ;;		line 234 in file "../../TCPIP Library/source/arpv4.c"
 23172 ;; Parameters:    Size  Location     Type
 23173 ;;  ip_address      4    1[COMRAM] unsigned long 
 23174 ;; Auto vars:     Size  Location     Type
 23175 ;;  entry_pointe    2    9[COMRAM] PTR struct .
 23176 ;;		 -> arpMap(104), 
 23177 ;;  x               1   11[COMRAM] unsigned char 
 23178 ;; Return value:  Size  Location     Type
 23179 ;;                  2    1[COMRAM] PTR struct .
 23180 ;; Registers used:
 23181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23182 ;; Tracked objects:
 23183 ;;		On entry : F/1
 23184 ;;		On exit  : F/1
 23185 ;;		Unchanged: F/0
 23186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23188 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23189 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23190 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23191 ;;Total ram usage:       11 bytes
 23192 ;; Hardware stack levels used:    1
 23193 ;; Hardware stack levels required when called:    3
 23194 ;; This function calls:
 23195 ;;		Nothing
 23196 ;; This function is called by:
 23197 ;;		_IPv4_Start
 23198 ;; This function uses a non-reentrant model
 23199 ;;
 23200                           
 23201                           	psect	text90
 23202  007E44                     __ptext90:
 23203                           	opt stack 0
 23204  007E44                     _ARPV4_Lookup:
 23205                           	opt stack 22
 23206                           
 23207                           ; BSR set to: 1
 23208                           ;arpv4.c: 236: arpMap_t *entry_pointer = arpMap;
 23209                           
 23210                           ;incstack = 0
 23211  007E44  0E00               	movlw	low _arpMap
 23212  007E46  6E0A               	movwf	ARPV4_Lookup@entry_pointer,c
 23213  007E48  0E03               	movlw	high _arpMap
 23214  007E4A  6E0B               	movwf	ARPV4_Lookup@entry_pointer+1,c
 23215                           
 23216                           ; BSR set to: 1
 23217                           ;arpv4.c: 237: uint8_t x;
 23218                           ;arpv4.c: 239: for(x = 0; x < 8; x++)
 23219  007E4C  6A0C               	clrf	ARPV4_Lookup@x,c
 23220  007E4E                     l7921:
 23221                           
 23222                           ; BSR set to: 1
 23223                           ;arpv4.c: 240: {
 23224                           ;arpv4.c: 241: if(entry_pointer->ipAddress == ip_address)
 23225  007E4E  EE20 F006          	lfsr	2,6
 23226  007E52  500A               	movf	ARPV4_Lookup@entry_pointer,w,c
 23227  007E54  26D9               	addwf	fsr2l,f,c
 23228  007E56  500B               	movf	ARPV4_Lookup@entry_pointer+1,w,c
 23229  007E58  22DA               	addwfc	fsr2h,f,c
 23230  007E5A  5002               	movf	ARPV4_Lookup@ip_address,w,c
 23231  007E5C  18DE               	xorwf	postinc2,w,c
 23232  007E5E  E10E               	bnz	l7927
 23233  007E60  5003               	movf	ARPV4_Lookup@ip_address+1,w,c
 23234  007E62  18DE               	xorwf	postinc2,w,c
 23235  007E64  E10B               	bnz	l7927
 23236  007E66  5004               	movf	ARPV4_Lookup@ip_address+2,w,c
 23237  007E68  18DE               	xorwf	postinc2,w,c
 23238  007E6A  E108               	bnz	l7927
 23239  007E6C  5005               	movf	ARPV4_Lookup@ip_address+3,w,c
 23240  007E6E  18DE               	xorwf	postinc2,w,c
 23241  007E70  E105               	bnz	l7927
 23242                           
 23243                           ; BSR set to: 1
 23244                           ;arpv4.c: 242: return &entry_pointer->macAddress;
 23245  007E72  C00A  F002         	movff	ARPV4_Lookup@entry_pointer,?_ARPV4_Lookup
 23246  007E76  C00B  F003         	movff	ARPV4_Lookup@entry_pointer+1,?_ARPV4_Lookup+1
 23247  007E7A  0012               	return	
 23248  007E7C                     l7927:
 23249                           
 23250                           ; BSR set to: 1
 23251                           ;arpv4.c: 243: entry_pointer ++;
 23252  007E7C  0E0D               	movlw	13
 23253  007E7E  260A               	addwf	ARPV4_Lookup@entry_pointer,f,c
 23254  007E80  0E00               	movlw	0
 23255  007E82  220B               	addwfc	ARPV4_Lookup@entry_pointer+1,f,c
 23256                           
 23257                           ; BSR set to: 1
 23258  007E84  2A0C               	incf	ARPV4_Lookup@x,f,c
 23259                           
 23260                           ; BSR set to: 1
 23261  007E86  0E07               	movlw	7
 23262  007E88  640C               	cpfsgt	ARPV4_Lookup@x,c
 23263  007E8A  D7E1               	goto	l7921
 23264                           
 23265                           ; BSR set to: 1
 23266                           ;arpv4.c: 244: }
 23267                           ;arpv4.c: 245: return 0;
 23268  007E8C  6A02               	clrf	?_ARPV4_Lookup,c
 23269  007E8E  6A03               	clrf	?_ARPV4_Lookup+1,c
 23270                           
 23271                           ; BSR set to: 1
 23272  007E90  0012               	return		;funcret
 23273  007E92                     __end_of_ARPV4_Lookup:
 23274                           	opt stack 0
 23275                           tosu	equ	0xFFF
 23276                           tosh	equ	0xFFE
 23277                           tosl	equ	0xFFD
 23278                           pclath	equ	0xFFA
 23279                           tblptru	equ	0xFF8
 23280                           tblptrh	equ	0xFF7
 23281                           tblptrl	equ	0xFF6
 23282                           tablat	equ	0xFF5
 23283                           prodh	equ	0xFF4
 23284                           prodl	equ	0xFF3
 23285                           intcon	equ	0xFF2
 23286                           intcon2	equ	0xFF1
 23287                           indf0	equ	0xFEF
 23288                           postinc0	equ	0xFEE
 23289                           fsr0h	equ	0xFEA
 23290                           fsr0l	equ	0xFE9
 23291                           wreg	equ	0xFE8
 23292                           indf1	equ	0xFE7
 23293                           postinc1	equ	0xFE6
 23294                           postdec1	equ	0xFE5
 23295                           plusw1	equ	0xFE3
 23296                           fsr1h	equ	0xFE2
 23297                           fsr1l	equ	0xFE1
 23298                           indf2	equ	0xFDF
 23299                           postinc2	equ	0xFDE
 23300                           postdec2	equ	0xFDD
 23301                           plusw2	equ	0xFDB
 23302                           fsr2h	equ	0xFDA
 23303                           fsr2l	equ	0xFD9
 23304                           status	equ	0xFD8
 23305                           
 23306 ;; *************** function _IPV4_Send *****************
 23307 ;; Defined at:
 23308 ;;		line 267 in file "../../TCPIP Library/source/ipv4.c"
 23309 ;; Parameters:    Size  Location     Type
 23310 ;;  payloadLengt    2   28[COMRAM] unsigned int 
 23311 ;; Auto vars:     Size  Location     Type
 23312 ;;  totalLength     2   37[COMRAM] unsigned int 
 23313 ;;  cksm            2   35[COMRAM] unsigned int 
 23314 ;;  ret             1   34[COMRAM] enum E6944
 23315 ;; Return value:  Size  Location     Type
 23316 ;;                  1    wreg      enum E366
 23317 ;; Registers used:
 23318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23319 ;; Tracked objects:
 23320 ;;		On entry : 0/0
 23321 ;;		On exit  : F/1
 23322 ;;		Unchanged: 0/0
 23323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23325 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23326 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23327 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23328 ;;Total ram usage:       11 bytes
 23329 ;; Hardware stack levels used:    1
 23330 ;; Hardware stack levels required when called:    8
 23331 ;; This function calls:
 23332 ;;		_ETH_Insert
 23333 ;;		_ETH_Send
 23334 ;;		_ETH_TxComputeChecksum
 23335 ;; This function is called by:
 23336 ;;		_ICMP_EchoReply
 23337 ;;		_TCP_Snd
 23338 ;;		_UDP_Send
 23339 ;; This function uses a non-reentrant model
 23340 ;;
 23341                           
 23342                           	psect	text91
 23343  007AC8                     __ptext91:
 23344                           	opt stack 0
 23345  007AC8                     _IPV4_Send:
 23346                           	opt stack 18
 23347                           
 23348                           ;ipv4.c: 269: uint16_t totalLength;
 23349                           ;ipv4.c: 270: uint16_t cksm;
 23350                           ;ipv4.c: 271: error_msg ret;
 23351                           ;ipv4.c: 273: totalLength = 20 + payloadLength;
 23352                           
 23353                           ; BSR set to: 1
 23354                           ;incstack = 0
 23355  007AC8  0E14               	movlw	20
 23356  007ACA  241D               	addwf	IPV4_Send@payloadLength,w,c
 23357  007ACC  6E26               	movwf	IPV4_Send@totalLength,c
 23358  007ACE  0E00               	movlw	0
 23359  007AD0  201E               	addwfc	IPV4_Send@payloadLength+1,w,c
 23360  007AD2  6E27               	movwf	IPV4_Send@totalLength+1,c
 23361                           
 23362                           ;ipv4.c: 274: totalLength = ((((uint16_t)totalLength & (uint16_t)0xFF00) >> 8) | (((uint
      +                          16_t)totalLength & (uint16_t)0x00FF) << 8));
 23363  007AD4  5026               	movf	IPV4_Send@totalLength,w,c
 23364  007AD6  6E20               	movwf	(??_IPV4_Send+1)& (0+255),c
 23365  007AD8  6A1F               	clrf	??_IPV4_Send& (0+255),c
 23366  007ADA  5027               	movf	IPV4_Send@totalLength+1,w,c
 23367  007ADC  6E21               	movwf	(??_IPV4_Send+2)& (0+255),c
 23368  007ADE  6A22               	clrf	(??_IPV4_Send+3)& (0+255),c
 23369  007AE0  501F               	movf	??_IPV4_Send,w,c
 23370  007AE2  1021               	iorwf	??_IPV4_Send+2,w,c
 23371  007AE4  6E26               	movwf	IPV4_Send@totalLength,c
 23372  007AE6  5020               	movf	??_IPV4_Send+1,w,c
 23373  007AE8  1022               	iorwf	??_IPV4_Send+3,w,c
 23374  007AEA  6E27               	movwf	IPV4_Send@totalLength+1,c
 23375                           
 23376                           ;ipv4.c: 277: ETH_Insert((char *)&totalLength, 2, sizeof(ethernetFrame_t) + (int)(((char
      +                          *)&((ipv4Header_t *)1)->length)-1));
 23377  007AEC  6A0C               	clrf	ETH_Insert@len+1,c
 23378  007AEE  0E02               	movlw	2
 23379  007AF0  6E0B               	movwf	ETH_Insert@len,c
 23380  007AF2  6A0E               	clrf	ETH_Insert@offset+1,c
 23381  007AF4  0E10               	movlw	16
 23382  007AF6  6E0D               	movwf	ETH_Insert@offset,c
 23383  007AF8  0E26               	movlw	IPV4_Send@totalLength& (0+255)
 23384  007AFA  ECA9  F03E         	call	_ETH_Insert
 23385                           
 23386                           ;ipv4.c: 279: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t),sizeof(ipv4Header_t),
      +                          0);
 23387  007AFE  6A0E               	clrf	ETH_TxComputeChecksum@position+1,c
 23388  007B00  0E0E               	movlw	14
 23389  007B02  6E0D               	movwf	ETH_TxComputeChecksum@position,c
 23390  007B04  6A10               	clrf	ETH_TxComputeChecksum@length+1,c
 23391  007B06  0E14               	movlw	20
 23392  007B08  6E0F               	movwf	ETH_TxComputeChecksum@length,c
 23393  007B0A  6A12               	clrf	ETH_TxComputeChecksum@seed+1,c
 23394  007B0C  6A11               	clrf	ETH_TxComputeChecksum@seed,c
 23395  007B0E  EC92  F038         	call	_ETH_TxComputeChecksum	;wreg free
 23396  007B12  C00D  F024         	movff	?_ETH_TxComputeChecksum,IPV4_Send@cksm
 23397  007B16  C00E  F025         	movff	?_ETH_TxComputeChecksum+1,IPV4_Send@cksm+1
 23398                           
 23399                           ;ipv4.c: 281: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + (int)(((char*)&((ip
      +                          v4Header_t *)1)->headerCksm)-1));
 23400  007B1A  6A0C               	clrf	ETH_Insert@len+1,c
 23401  007B1C  0E02               	movlw	2
 23402  007B1E  6E0B               	movwf	ETH_Insert@len,c
 23403  007B20  6A0E               	clrf	ETH_Insert@offset+1,c
 23404  007B22  0E18               	movlw	24
 23405  007B24  6E0D               	movwf	ETH_Insert@offset,c
 23406  007B26  0E24               	movlw	IPV4_Send@cksm& (0+255)
 23407  007B28  ECA9  F03E         	call	_ETH_Insert
 23408                           
 23409                           ;ipv4.c: 282: ret = ETH_Send();
 23410  007B2C  ECE5  F042         	call	_ETH_Send	;wreg free
 23411  007B30  6E23               	movwf	IPV4_Send@ret,c
 23412                           
 23413                           ; BSR set to: 1
 23414                           ;ipv4.c: 284: return ret;
 23415  007B32  5023               	movf	IPV4_Send@ret,w,c
 23416                           
 23417                           ; BSR set to: 1
 23418  007B34  0012               	return		;funcret
 23419  007B36                     __end_of_IPV4_Send:
 23420                           	opt stack 0
 23421                           tosu	equ	0xFFF
 23422                           tosh	equ	0xFFE
 23423                           tosl	equ	0xFFD
 23424                           pclath	equ	0xFFA
 23425                           tblptru	equ	0xFF8
 23426                           tblptrh	equ	0xFF7
 23427                           tblptrl	equ	0xFF6
 23428                           tablat	equ	0xFF5
 23429                           prodh	equ	0xFF4
 23430                           prodl	equ	0xFF3
 23431                           intcon	equ	0xFF2
 23432                           intcon2	equ	0xFF1
 23433                           indf0	equ	0xFEF
 23434                           postinc0	equ	0xFEE
 23435                           fsr0h	equ	0xFEA
 23436                           fsr0l	equ	0xFE9
 23437                           wreg	equ	0xFE8
 23438                           indf1	equ	0xFE7
 23439                           postinc1	equ	0xFE6
 23440                           postdec1	equ	0xFE5
 23441                           plusw1	equ	0xFE3
 23442                           fsr1h	equ	0xFE2
 23443                           fsr1l	equ	0xFE1
 23444                           indf2	equ	0xFDF
 23445                           postinc2	equ	0xFDE
 23446                           postdec2	equ	0xFDD
 23447                           plusw2	equ	0xFDB
 23448                           fsr2h	equ	0xFDA
 23449                           fsr2l	equ	0xFD9
 23450                           status	equ	0xFD8
 23451                           
 23452 ;; *************** function _ETH_TxComputeChecksum *****************
 23453 ;; Defined at:
 23454 ;;		line 501 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 23455 ;; Parameters:    Size  Location     Type
 23456 ;;  position        2   12[COMRAM] unsigned int 
 23457 ;;  length          2   14[COMRAM] unsigned int 
 23458 ;;  seed            2   16[COMRAM] unsigned int 
 23459 ;; Auto vars:     Size  Location     Type
 23460 ;;  cksm            4   22[COMRAM] unsigned long 
 23461 ;;  econ1Val        2   26[COMRAM] unsigned int 
 23462 ;; Return value:  Size  Location     Type
 23463 ;;                  2   12[COMRAM] unsigned int 
 23464 ;; Registers used:
 23465 ;;		wreg, status,2, status,0, cstack
 23466 ;; Tracked objects:
 23467 ;;		On entry : 0/0
 23468 ;;		On exit  : 0/0
 23469 ;;		Unchanged: 0/0
 23470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23471 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23472 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23473 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23474 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23475 ;;Total ram usage:       16 bytes
 23476 ;; Hardware stack levels used:    1
 23477 ;; Hardware stack levels required when called:    7
 23478 ;; This function calls:
 23479 ;;		_ENCx24_BFC
 23480 ;;		_ENCx24_BFS
 23481 ;;		_ENCx24_Read
 23482 ;;		_ENCx24_Write
 23483 ;;		_waitForDMA
 23484 ;; This function is called by:
 23485 ;;		_ICMP_EchoReply
 23486 ;;		_IPV4_Send
 23487 ;;		_TCP_Snd
 23488 ;;		_UDP_Send
 23489 ;; This function uses a non-reentrant model
 23490 ;;
 23491                           
 23492                           	psect	text92
 23493  007124                     __ptext92:
 23494                           	opt stack 0
 23495  007124                     _ETH_TxComputeChecksum:
 23496                           	opt stack 0
 23497  007124                     i6L__ptext93:
 23498                           	opt stack 0
 23499  007124                     i6L_waitForDMA:
 23500                           	opt stack 0
 23501  007124                     i6Ll501:
 23502                           	opt stack 0
 23503  007124                     i6Ll7801:
 23504                           	opt stack 18
 23505                           
 23506                           ;encX24J600_driver.c: 487: {
 23507                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
 23508  007124  0EFE               	movlw	254
 23509  007126  ECDF  F03F         	call	_ENCx24_Read
 23510  00712A  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
 23511  00712E  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
 23512  007132                     i6Ll7803:
 23513                           	opt stack 18
 23514                           
 23515                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
 23516  007132  BA0B               	btfsc	waitForDMA@econ1_val,5,c
 23517  007134                     i6Lu10341:
 23518                           	opt stack 0
 23519  007134  D7F7               	goto	i6Ll501
 23520  007136                     i6Lu10340:
 23521                           	opt stack 0
 23522  007136                     i6Ll503:
 23523                           	opt stack 18
 23524                           
 23525                           ;encX24J600_driver.c: 515: ENCx24_BFC(XJ600_ECON1L, econ1Val);
 23526  007136  6A06               	clrf	ENCx24_BFC@bitMask+1,c
 23527  007138  0E1C               	movlw	28
 23528  00713A  6E05               	movwf	ENCx24_BFC@bitMask,c
 23529  00713C  0EFE               	movlw	254
 23530  00713E  ECD2  F040         	call	_ENCx24_BFC
 23531                           
 23532                           ;encX24J600_driver.c: 518: ENCx24_Write(XJ600_EDMASTL, position);
 23533  007142  C00D  F005         	movff	ETH_TxComputeChecksum@position,ENCx24_Write@data
 23534  007146  C00E  F006         	movff	ETH_TxComputeChecksum@position+1,ENCx24_Write@data+1
 23535  00714A  0E0A               	movlw	10
 23536  00714C  EC91  F040         	call	_ENCx24_Write
 23537                           
 23538                           ;encX24J600_driver.c: 520: ENCx24_Write(XJ600_EDMALENL, length);
 23539  007150  C00F  F005         	movff	ETH_TxComputeChecksum@length,ENCx24_Write@data
 23540  007154  C010  F006         	movff	ETH_TxComputeChecksum@length+1,ENCx24_Write@data+1
 23541  007158  0E0C               	movlw	12
 23542  00715A  EC91  F040         	call	_ENCx24_Write
 23543                           
 23544                           ;encX24J600_driver.c: 522: econ1Val = 0x0020;
 23545  00715E  6A1C               	clrf	ETH_TxComputeChecksum@econ1Val+1,c
 23546  007160  0E20               	movlw	32
 23547  007162  6E1B               	movwf	ETH_TxComputeChecksum@econ1Val,c
 23548                           
 23549                           ;encX24J600_driver.c: 524: if (seed)
 23550  007164  5011               	movf	ETH_TxComputeChecksum@seed,w,c
 23551  007166  1012               	iorwf	ETH_TxComputeChecksum@seed+1,w,c
 23552  007168  E016               	bz	l7827
 23553                           
 23554                           ;encX24J600_driver.c: 525: {
 23555                           ;encX24J600_driver.c: 526: econ1Val |= 0x0008;
 23556  00716A  861B               	bsf	ETH_TxComputeChecksum@econ1Val,3,c
 23557                           
 23558                           ;encX24J600_driver.c: 527: seed=~(seed);
 23559  00716C  1E11               	comf	ETH_TxComputeChecksum@seed,f,c
 23560  00716E  1E12               	comf	ETH_TxComputeChecksum@seed+1,f,c
 23561                           
 23562                           ;encX24J600_driver.c: 528: seed = ((((uint16_t)seed & (uint16_t)0xFF00) >> 8) | (((uint1
      +                          6_t)seed & (uint16_t)0x00FF) << 8));
 23563  007170  5011               	movf	ETH_TxComputeChecksum@seed,w,c
 23564  007172  6E14               	movwf	(??_ETH_TxComputeChecksum+1)& (0+255),c
 23565  007174  6A13               	clrf	??_ETH_TxComputeChecksum& (0+255),c
 23566  007176  5012               	movf	ETH_TxComputeChecksum@seed+1,w,c
 23567  007178  6E15               	movwf	(??_ETH_TxComputeChecksum+2)& (0+255),c
 23568  00717A  6A16               	clrf	(??_ETH_TxComputeChecksum+3)& (0+255),c
 23569  00717C  5013               	movf	??_ETH_TxComputeChecksum,w,c
 23570  00717E  1015               	iorwf	??_ETH_TxComputeChecksum+2,w,c
 23571  007180  6E11               	movwf	ETH_TxComputeChecksum@seed,c
 23572  007182  5014               	movf	??_ETH_TxComputeChecksum+1,w,c
 23573  007184  1016               	iorwf	??_ETH_TxComputeChecksum+3,w,c
 23574  007186  6E12               	movwf	ETH_TxComputeChecksum@seed+1,c
 23575                           
 23576                           ;encX24J600_driver.c: 529: ENCx24_Write(XJ600_EDMACSL, seed);
 23577  007188  C011  F005         	movff	ETH_TxComputeChecksum@seed,ENCx24_Write@data
 23578  00718C  C012  F006         	movff	ETH_TxComputeChecksum@seed+1,ENCx24_Write@data+1
 23579  007190  0E10               	movlw	16
 23580  007192  EC91  F040         	call	_ENCx24_Write
 23581  007196                     l7827:
 23582                           
 23583                           ;encX24J600_driver.c: 530: }
 23584                           ;encX24J600_driver.c: 532: ENCx24_BFS(XJ600_ECON1L, econ1Val);
 23585  007196  C01B  F005         	movff	ETH_TxComputeChecksum@econ1Val,ENCx24_BFS@bitMask
 23586  00719A  C01C  F006         	movff	ETH_TxComputeChecksum@econ1Val+1,ENCx24_BFS@bitMask+1
 23587  00719E  0EFE               	movlw	254
 23588  0071A0  ECB2  F040         	call	_ENCx24_BFS
 23589  0071A4                     i7L__ptext93:
 23590                           	opt stack 0
 23591  0071A4                     i7L_waitForDMA:
 23592                           	opt stack 0
 23593  0071A4                     i7Ll501:
 23594                           	opt stack 0
 23595  0071A4                     i7Ll7801:
 23596                           	opt stack 18
 23597                           
 23598                           ;encX24J600_driver.c: 487: {
 23599                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
 23600  0071A4  0EFE               	movlw	254
 23601  0071A6  ECDF  F03F         	call	_ENCx24_Read
 23602  0071AA  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
 23603  0071AE  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
 23604  0071B2                     i7Ll7803:
 23605                           	opt stack 18
 23606                           
 23607                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
 23608  0071B2  BA0B               	btfsc	waitForDMA@econ1_val,5,c
 23609  0071B4                     i7Lu10341:
 23610                           	opt stack 0
 23611  0071B4  D7F7               	goto	i7Ll501
 23612  0071B6                     i7Lu10340:
 23613                           	opt stack 0
 23614  0071B6                     i7Ll503:
 23615                           	opt stack 18
 23616                           
 23617                           ;encX24J600_driver.c: 535: cksm = ENCx24_Read(XJ600_EDMACSL);
 23618  0071B6  0E10               	movlw	16
 23619  0071B8  ECDF  F03F         	call	_ENCx24_Read
 23620  0071BC  C005  F017         	movff	?_ENCx24_Read,ETH_TxComputeChecksum@cksm
 23621  0071C0  C006  F018         	movff	?_ENCx24_Read+1,ETH_TxComputeChecksum@cksm+1
 23622  0071C4  6A19               	clrf	ETH_TxComputeChecksum@cksm+2,c
 23623  0071C6  6A1A               	clrf	ETH_TxComputeChecksum@cksm+3,c
 23624                           
 23625                           ;encX24J600_driver.c: 536: return cksm;
 23626  0071C8  C017  F00D         	movff	ETH_TxComputeChecksum@cksm,?_ETH_TxComputeChecksum
 23627  0071CC  C018  F00E         	movff	ETH_TxComputeChecksum@cksm+1,?_ETH_TxComputeChecksum+1
 23628  0071D0  0012               	return		;funcret
 23629  0071D2                     __end_of_ETH_TxComputeChecksum:
 23630                           	opt stack 0
 23631                           tosu	equ	0xFFF
 23632                           tosh	equ	0xFFE
 23633                           tosl	equ	0xFFD
 23634                           pclath	equ	0xFFA
 23635                           tblptru	equ	0xFF8
 23636                           tblptrh	equ	0xFF7
 23637                           tblptrl	equ	0xFF6
 23638                           tablat	equ	0xFF5
 23639                           prodh	equ	0xFF4
 23640                           prodl	equ	0xFF3
 23641                           intcon	equ	0xFF2
 23642                           intcon2	equ	0xFF1
 23643                           indf0	equ	0xFEF
 23644                           postinc0	equ	0xFEE
 23645                           fsr0h	equ	0xFEA
 23646                           fsr0l	equ	0xFE9
 23647                           wreg	equ	0xFE8
 23648                           indf1	equ	0xFE7
 23649                           postinc1	equ	0xFE6
 23650                           postdec1	equ	0xFE5
 23651                           plusw1	equ	0xFE3
 23652                           fsr1h	equ	0xFE2
 23653                           fsr1l	equ	0xFE1
 23654                           indf2	equ	0xFDF
 23655                           postinc2	equ	0xFDE
 23656                           postdec2	equ	0xFDD
 23657                           plusw2	equ	0xFDB
 23658                           fsr2h	equ	0xFDA
 23659                           fsr2l	equ	0xFD9
 23660                           status	equ	0xFD8
 23661                           
 23662 ;; *************** function _waitForDMA *****************
 23663 ;; Defined at:
 23664 ;;		line 483 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 23665 ;; Parameters:    Size  Location     Type
 23666 ;;		None
 23667 ;; Auto vars:     Size  Location     Type
 23668 ;;  econ1_val       2   10[COMRAM] unsigned int 
 23669 ;; Return value:  Size  Location     Type
 23670 ;;		None               void
 23671 ;; Registers used:
 23672 ;;		wreg, status,2, status,0, cstack
 23673 ;; Tracked objects:
 23674 ;;		On entry : 0/0
 23675 ;;		On exit  : 0/0
 23676 ;;		Unchanged: 0/0
 23677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23682 ;;Total ram usage:        2 bytes
 23683 ;; Hardware stack levels used:    1
 23684 ;; Hardware stack levels required when called:    6
 23685 ;; This function calls:
 23686 ;;		_ENCx24_Read
 23687 ;; This function is called by:
 23688 ;;		_ETH_Copy
 23689 ;;		_ETH_TxComputeChecksum
 23690 ;;		_ETH_RxComputeChecksum
 23691 ;; This function uses a non-reentrant model
 23692 ;;
 23693                           
 23694                           	psect	text93
 23695  000000                     __ptext93:
 23696                           	opt stack 0
 23697  000000                     _waitForDMA:
 23698                           	opt stack 0
 23699  000000                     __end_of_waitForDMA:
 23700                           	opt stack 0
 23701                           tosu	equ	0xFFF
 23702                           tosh	equ	0xFFE
 23703                           tosl	equ	0xFFD
 23704                           pclath	equ	0xFFA
 23705                           tblptru	equ	0xFF8
 23706                           tblptrh	equ	0xFF7
 23707                           tblptrl	equ	0xFF6
 23708                           tablat	equ	0xFF5
 23709                           prodh	equ	0xFF4
 23710                           prodl	equ	0xFF3
 23711                           intcon	equ	0xFF2
 23712                           intcon2	equ	0xFF1
 23713                           indf0	equ	0xFEF
 23714                           postinc0	equ	0xFEE
 23715                           fsr0h	equ	0xFEA
 23716                           fsr0l	equ	0xFE9
 23717                           wreg	equ	0xFE8
 23718                           indf1	equ	0xFE7
 23719                           postinc1	equ	0xFE6
 23720                           postdec1	equ	0xFE5
 23721                           plusw1	equ	0xFE3
 23722                           fsr1h	equ	0xFE2
 23723                           fsr1l	equ	0xFE1
 23724                           indf2	equ	0xFDF
 23725                           postinc2	equ	0xFDE
 23726                           postdec2	equ	0xFDD
 23727                           plusw2	equ	0xFDB
 23728                           fsr2h	equ	0xFDA
 23729                           fsr2l	equ	0xFD9
 23730                           status	equ	0xFD8
 23731                           
 23732 ;; *************** function _ENCx24_BFS *****************
 23733 ;; Defined at:
 23734 ;;		line 151 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 23735 ;; Parameters:    Size  Location     Type
 23736 ;;  a               1    wreg     enum E6725
 23737 ;;  bitMask         2    4[COMRAM] unsigned int 
 23738 ;; Auto vars:     Size  Location     Type
 23739 ;;  a               1    7[COMRAM] enum E6725
 23740 ;;  bank            1    6[COMRAM] unsigned char 
 23741 ;; Return value:  Size  Location     Type
 23742 ;;		None               void
 23743 ;; Registers used:
 23744 ;;		wreg, status,2, status,0, cstack
 23745 ;; Tracked objects:
 23746 ;;		On entry : 0/0
 23747 ;;		On exit  : 0/0
 23748 ;;		Unchanged: 0/0
 23749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23753 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23754 ;;Total ram usage:        4 bytes
 23755 ;; Hardware stack levels used:    1
 23756 ;; Hardware stack levels required when called:    5
 23757 ;; This function calls:
 23758 ;;		_ENCx24_BankselSPI
 23759 ;;		_SPI_ExchangeByte
 23760 ;; This function is called by:
 23761 ;;		_ETH_SendSystemReset
 23762 ;;		_ETH_Init
 23763 ;;		_ETH_ResetReceiver
 23764 ;;		_ETH_Copy
 23765 ;;		_ETH_TxComputeChecksum
 23766 ;;		_ETH_RxComputeChecksum
 23767 ;;		_ENCx24_PhyRead
 23768 ;; This function uses a non-reentrant model
 23769 ;;
 23770                           
 23771                           	psect	text94
 23772  008164                     __ptext94:
 23773                           	opt stack 0
 23774  008164                     _ENCx24_BFS:
 23775                           	opt stack 19
 23776                           
 23777                           ;incstack = 0
 23778                           ;ENCx24_BFS@a stored from wreg
 23779  008164  6E08               	movwf	ENCx24_BFS@a,c
 23780                           
 23781                           ;encX24j600_spi.c: 153: uint8_t bank;
 23782                           ;encX24j600_spi.c: 154: bank = a & 0xE0;
 23783  008166  5008               	movf	ENCx24_BFS@a,w,c
 23784  008168  0BE0               	andlw	224
 23785  00816A  6E07               	movwf	ENCx24_BFS@bank,c
 23786                           
 23787                           ;encX24j600_spi.c: 155: if(bank != 0X80)
 23788  00816C  0E80               	movlw	128
 23789  00816E  1807               	xorwf	ENCx24_BFS@bank,w,c
 23790  008170  E00A               	bz	l578
 23791                           
 23792                           ;encX24j600_spi.c: 156: {
 23793                           ;encX24j600_spi.c: 157: ENCx24_BankselSPI(a);
 23794  008172  5008               	movf	ENCx24_BFS@a,w,c
 23795  008174  EC2A  F03E         	call	_ENCx24_BankselSPI
 23796  008178  968A               	bcf	3978,3,c	;volatile
 23797                           
 23798                           ;encX24j600_spi.c: 159: SPI_ExchangeByte(bfs_inst | (a & 0x1F));
 23799  00817A  5008               	movf	ENCx24_BFS@a,w,c
 23800  00817C  0B1F               	andlw	31
 23801  00817E  0980               	iorlw	128
 23802  008180  ECCC  F043         	call	_SPI_ExchangeByte
 23803                           
 23804                           ;encX24j600_spi.c: 160: }
 23805  008184  D007               	goto	l577
 23806  008186                     l578:
 23807  008186  968A               	bcf	3978,3,c	;volatile
 23808                           
 23809                           ;encX24j600_spi.c: 164: SPI_ExchangeByte(bfsu_inst);
 23810  008188  0E24               	movlw	36
 23811  00818A  ECCC  F043         	call	_SPI_ExchangeByte
 23812                           
 23813                           ;encX24j600_spi.c: 165: SPI_ExchangeByte(a);
 23814  00818E  5008               	movf	ENCx24_BFS@a,w,c
 23815  008190  ECCC  F043         	call	_SPI_ExchangeByte
 23816  008194                     l577:
 23817                           
 23818                           ;encX24j600_spi.c: 166: }
 23819                           ;encX24j600_spi.c: 167: SPI_ExchangeByte(bitMask);
 23820  008194  5005               	movf	ENCx24_BFS@bitMask,w,c
 23821  008196  ECCC  F043         	call	_SPI_ExchangeByte
 23822                           
 23823                           ;encX24j600_spi.c: 168: SPI_ExchangeByte(bitMask>>8);
 23824  00819A  5006               	movf	ENCx24_BFS@bitMask+1,w,c
 23825  00819C  ECCC  F043         	call	_SPI_ExchangeByte
 23826  0081A0  868A               	bsf	3978,3,c	;volatile
 23827  0081A2  0012               	return		;funcret
 23828  0081A4                     __end_of_ENCx24_BFS:
 23829                           	opt stack 0
 23830                           tosu	equ	0xFFF
 23831                           tosh	equ	0xFFE
 23832                           tosl	equ	0xFFD
 23833                           pclath	equ	0xFFA
 23834                           tblptru	equ	0xFF8
 23835                           tblptrh	equ	0xFF7
 23836                           tblptrl	equ	0xFF6
 23837                           tablat	equ	0xFF5
 23838                           prodh	equ	0xFF4
 23839                           prodl	equ	0xFF3
 23840                           intcon	equ	0xFF2
 23841                           intcon2	equ	0xFF1
 23842                           indf0	equ	0xFEF
 23843                           postinc0	equ	0xFEE
 23844                           fsr0h	equ	0xFEA
 23845                           fsr0l	equ	0xFE9
 23846                           wreg	equ	0xFE8
 23847                           indf1	equ	0xFE7
 23848                           postinc1	equ	0xFE6
 23849                           postdec1	equ	0xFE5
 23850                           plusw1	equ	0xFE3
 23851                           fsr1h	equ	0xFE2
 23852                           fsr1l	equ	0xFE1
 23853                           indf2	equ	0xFDF
 23854                           postinc2	equ	0xFDE
 23855                           postdec2	equ	0xFDD
 23856                           plusw2	equ	0xFDB
 23857                           fsr2h	equ	0xFDA
 23858                           fsr2l	equ	0xFD9
 23859                           status	equ	0xFD8
 23860                           
 23861 ;; *************** function _ENCx24_BFC *****************
 23862 ;; Defined at:
 23863 ;;		line 177 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 23864 ;; Parameters:    Size  Location     Type
 23865 ;;  a               1    wreg     enum E6725
 23866 ;;  bitMask         2    4[COMRAM] unsigned int 
 23867 ;; Auto vars:     Size  Location     Type
 23868 ;;  a               1    7[COMRAM] enum E6725
 23869 ;;  bank            1    6[COMRAM] unsigned char 
 23870 ;; Return value:  Size  Location     Type
 23871 ;;		None               void
 23872 ;; Registers used:
 23873 ;;		wreg, status,2, status,0, cstack
 23874 ;; Tracked objects:
 23875 ;;		On entry : 0/0
 23876 ;;		On exit  : 0/0
 23877 ;;		Unchanged: 0/0
 23878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23882 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23883 ;;Total ram usage:        4 bytes
 23884 ;; Hardware stack levels used:    1
 23885 ;; Hardware stack levels required when called:    5
 23886 ;; This function calls:
 23887 ;;		_ENCx24_BankselSPI
 23888 ;;		_SPI_ExchangeByte
 23889 ;; This function is called by:
 23890 ;;		_ETH_EventHandler
 23891 ;;		_ETH_ResetReceiver
 23892 ;;		_ETH_Copy
 23893 ;;		_ETH_TxComputeChecksum
 23894 ;;		_ETH_RxComputeChecksum
 23895 ;;		_ENCx24_PhyRead
 23896 ;; This function uses a non-reentrant model
 23897 ;;
 23898                           
 23899                           	psect	text95
 23900  0081A4                     __ptext95:
 23901                           	opt stack 0
 23902  0081A4                     _ENCx24_BFC:
 23903                           	opt stack 19
 23904                           
 23905                           ;incstack = 0
 23906                           ;ENCx24_BFC@a stored from wreg
 23907  0081A4  6E08               	movwf	ENCx24_BFC@a,c
 23908                           
 23909                           ;encX24j600_spi.c: 179: uint8_t bank;
 23910                           ;encX24j600_spi.c: 180: bank = a & 0xE0;
 23911  0081A6  5008               	movf	ENCx24_BFC@a,w,c
 23912  0081A8  0BE0               	andlw	224
 23913  0081AA  6E07               	movwf	ENCx24_BFC@bank,c
 23914                           
 23915                           ;encX24j600_spi.c: 181: if(bank != 0X80)
 23916  0081AC  0E80               	movlw	128
 23917  0081AE  1807               	xorwf	ENCx24_BFC@bank,w,c
 23918  0081B0  E00A               	bz	l589
 23919                           
 23920                           ;encX24j600_spi.c: 182: {
 23921                           ;encX24j600_spi.c: 183: ENCx24_BankselSPI(a);
 23922  0081B2  5008               	movf	ENCx24_BFC@a,w,c
 23923  0081B4  EC2A  F03E         	call	_ENCx24_BankselSPI
 23924  0081B8  968A               	bcf	3978,3,c	;volatile
 23925                           
 23926                           ;encX24j600_spi.c: 185: SPI_ExchangeByte(bfc_inst | (a & 0x1F));
 23927  0081BA  5008               	movf	ENCx24_BFC@a,w,c
 23928  0081BC  0B1F               	andlw	31
 23929  0081BE  09A0               	iorlw	160
 23930  0081C0  ECCC  F043         	call	_SPI_ExchangeByte
 23931                           
 23932                           ;encX24j600_spi.c: 186: }
 23933  0081C4  D007               	goto	l588
 23934  0081C6                     l589:
 23935  0081C6  968A               	bcf	3978,3,c	;volatile
 23936                           
 23937                           ;encX24j600_spi.c: 190: SPI_ExchangeByte(bfcu_inst);
 23938  0081C8  0E26               	movlw	38
 23939  0081CA  ECCC  F043         	call	_SPI_ExchangeByte
 23940                           
 23941                           ;encX24j600_spi.c: 191: SPI_ExchangeByte(a);
 23942  0081CE  5008               	movf	ENCx24_BFC@a,w,c
 23943  0081D0  ECCC  F043         	call	_SPI_ExchangeByte
 23944  0081D4                     l588:
 23945                           
 23946                           ;encX24j600_spi.c: 192: }
 23947                           ;encX24j600_spi.c: 193: SPI_ExchangeByte(bitMask);
 23948  0081D4  5005               	movf	ENCx24_BFC@bitMask,w,c
 23949  0081D6  ECCC  F043         	call	_SPI_ExchangeByte
 23950                           
 23951                           ;encX24j600_spi.c: 194: SPI_ExchangeByte(bitMask>>8);
 23952  0081DA  5006               	movf	ENCx24_BFC@bitMask+1,w,c
 23953  0081DC  ECCC  F043         	call	_SPI_ExchangeByte
 23954  0081E0  868A               	bsf	3978,3,c	;volatile
 23955  0081E2  0012               	return		;funcret
 23956  0081E4                     __end_of_ENCx24_BFC:
 23957                           	opt stack 0
 23958                           tosu	equ	0xFFF
 23959                           tosh	equ	0xFFE
 23960                           tosl	equ	0xFFD
 23961                           pclath	equ	0xFFA
 23962                           tblptru	equ	0xFF8
 23963                           tblptrh	equ	0xFF7
 23964                           tblptrl	equ	0xFF6
 23965                           tablat	equ	0xFF5
 23966                           prodh	equ	0xFF4
 23967                           prodl	equ	0xFF3
 23968                           intcon	equ	0xFF2
 23969                           intcon2	equ	0xFF1
 23970                           indf0	equ	0xFEF
 23971                           postinc0	equ	0xFEE
 23972                           fsr0h	equ	0xFEA
 23973                           fsr0l	equ	0xFE9
 23974                           wreg	equ	0xFE8
 23975                           indf1	equ	0xFE7
 23976                           postinc1	equ	0xFE6
 23977                           postdec1	equ	0xFE5
 23978                           plusw1	equ	0xFE3
 23979                           fsr1h	equ	0xFE2
 23980                           fsr1l	equ	0xFE1
 23981                           indf2	equ	0xFDF
 23982                           postinc2	equ	0xFDE
 23983                           postdec2	equ	0xFDD
 23984                           plusw2	equ	0xFDB
 23985                           fsr2h	equ	0xFDA
 23986                           fsr2l	equ	0xFD9
 23987                           status	equ	0xFD8
 23988                           
 23989 ;; *************** function _ETH_Send *****************
 23990 ;; Defined at:
 23991 ;;		line 393 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 23992 ;; Parameters:    Size  Location     Type
 23993 ;;		None
 23994 ;; Auto vars:     Size  Location     Type
 23995 ;;		None
 23996 ;; Return value:  Size  Location     Type
 23997 ;;                  1    wreg      enum E6988
 23998 ;; Registers used:
 23999 ;;		wreg, status,2, status,0, cstack
 24000 ;; Tracked objects:
 24001 ;;		On entry : 0/1
 24002 ;;		On exit  : F/1
 24003 ;;		Unchanged: 0/0
 24004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24009 ;;Total ram usage:        0 bytes
 24010 ;; Hardware stack levels used:    1
 24011 ;; Hardware stack levels required when called:    6
 24012 ;; This function calls:
 24013 ;;		_ENCx24_Write
 24014 ;;		_ETH_Set_TXRTS
 24015 ;; This function is called by:
 24016 ;;		_ARPV4_Packet
 24017 ;;		_ARPV4_Request
 24018 ;;		_IPV4_Send
 24019 ;; This function uses a non-reentrant model
 24020 ;;
 24021                           
 24022                           	psect	text96
 24023  0085CA                     __ptext96:
 24024                           	opt stack 0
 24025  0085CA                     _ETH_Send:
 24026                           	opt stack 18
 24027                           
 24028                           ;encX24J600_driver.c: 396: ENCx24_Write(XJ600_ETXLENL, TXPacketSize);
 24029                           
 24030                           ;incstack = 0
 24031  0085CA  C19A  F005         	movff	_TXPacketSize,ENCx24_Write@data
 24032  0085CE  C19B  F006         	movff	_TXPacketSize+1,ENCx24_Write@data+1
 24033  0085D2  0E02               	movlw	2
 24034  0085D4  EC91  F040         	call	_ENCx24_Write
 24035                           
 24036                           ;encX24J600_driver.c: 397: if (!ethData.up)
 24037  0085D8  0101               	movlb	1	; () banked
 24038  0085DA  A583               	btfss	_ethData& (0+255),2,b	;volatile
 24039                           
 24040                           ; BSR set to: 1
 24041                           ;encX24J600_driver.c: 398: {
 24042                           ;encX24J600_driver.c: 399: return LINK_NOT_FOUND;
 24043  0085DC  0C02               	retlw	2
 24044                           
 24045                           ; BSR set to: 1
 24046                           ;encX24J600_driver.c: 400: }
 24047                           ;encX24J600_driver.c: 401: if(!ethData.bufferBusy)
 24048  0085DE  AB83               	btfss	_ethData& (0+255),5,b	;volatile
 24049                           
 24050                           ; BSR set to: 1
 24051                           ;encX24J600_driver.c: 402: {
 24052                           ;encX24J600_driver.c: 403: return BUFFER_BUSY;
 24053  0085E0  0C03               	retlw	3
 24054                           
 24055                           ; BSR set to: 1
 24056                           ;encX24J600_driver.c: 404: }
 24057                           ;encX24J600_driver.c: 405: ETH_Set_TXRTS();
 24058  0085E2  ECE5  F043         	call	_ETH_Set_TXRTS	;wreg free
 24059                           
 24060                           ;encX24J600_driver.c: 406: ethData.bufferBusy = 0;
 24061  0085E6  0101               	movlb	1	; () banked
 24062  0085E8  9B83               	bcf	_ethData& (0+255),5,b	;volatile
 24063                           
 24064                           ; BSR set to: 1
 24065                           
 24066                           ; BSR set to: 1
 24067                           ;encX24J600_driver.c: 408: return SUCCESS;
 24068  0085EA  0C01               	retlw	1	;funcret
 24069  0085EC                     __end_of_ETH_Send:
 24070                           	opt stack 0
 24071                           tosu	equ	0xFFF
 24072                           tosh	equ	0xFFE
 24073                           tosl	equ	0xFFD
 24074                           pclath	equ	0xFFA
 24075                           tblptru	equ	0xFF8
 24076                           tblptrh	equ	0xFF7
 24077                           tblptrl	equ	0xFF6
 24078                           tablat	equ	0xFF5
 24079                           prodh	equ	0xFF4
 24080                           prodl	equ	0xFF3
 24081                           intcon	equ	0xFF2
 24082                           intcon2	equ	0xFF1
 24083                           indf0	equ	0xFEF
 24084                           postinc0	equ	0xFEE
 24085                           fsr0h	equ	0xFEA
 24086                           fsr0l	equ	0xFE9
 24087                           wreg	equ	0xFE8
 24088                           indf1	equ	0xFE7
 24089                           postinc1	equ	0xFE6
 24090                           postdec1	equ	0xFE5
 24091                           plusw1	equ	0xFE3
 24092                           fsr1h	equ	0xFE2
 24093                           fsr1l	equ	0xFE1
 24094                           indf2	equ	0xFDF
 24095                           postinc2	equ	0xFDE
 24096                           postdec2	equ	0xFDD
 24097                           plusw2	equ	0xFDB
 24098                           fsr2h	equ	0xFDA
 24099                           fsr2l	equ	0xFD9
 24100                           status	equ	0xFD8
 24101                           
 24102 ;; *************** function _ETH_Set_TXRTS *****************
 24103 ;; Defined at:
 24104 ;;		line 435 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24105 ;; Parameters:    Size  Location     Type
 24106 ;;		None
 24107 ;; Auto vars:     Size  Location     Type
 24108 ;;		None
 24109 ;; Return value:  Size  Location     Type
 24110 ;;		None               void
 24111 ;; Registers used:
 24112 ;;		wreg, status,2, cstack
 24113 ;; Tracked objects:
 24114 ;;		On entry : F/1
 24115 ;;		On exit  : 0/0
 24116 ;;		Unchanged: 0/0
 24117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24122 ;;Total ram usage:        0 bytes
 24123 ;; Hardware stack levels used:    1
 24124 ;; Hardware stack levels required when called:    4
 24125 ;; This function calls:
 24126 ;;		_SPI_ExchangeByte
 24127 ;; This function is called by:
 24128 ;;		_ETH_Send
 24129 ;; This function uses a non-reentrant model
 24130 ;;
 24131                           
 24132                           	psect	text97
 24133  0087CA                     __ptext97:
 24134                           	opt stack 0
 24135  0087CA                     _ETH_Set_TXRTS:
 24136                           	opt stack 19
 24137                           
 24138                           ; BSR set to: 1
 24139                           
 24140                           ; BSR set to: 1
 24141                           ;incstack = 0
 24142                           ;encX24j600_spi.c: 437: do{LATB3 = 0;} while(0);
 24143  0087CA  968A               	bcf	3978,3,c	;volatile
 24144                           
 24145                           ; BSR set to: 1
 24146                           ;encX24j600_spi.c: 438: SPI_ExchangeByte(settxrts_inst);
 24147  0087CC  0ED4               	movlw	212
 24148  0087CE  ECCC  F043         	call	_SPI_ExchangeByte
 24149  0087D2  868A               	bsf	3978,3,c	;volatile
 24150  0087D4  0012               	return		;funcret
 24151  0087D6                     __end_of_ETH_Set_TXRTS:
 24152                           	opt stack 0
 24153                           tosu	equ	0xFFF
 24154                           tosh	equ	0xFFE
 24155                           tosl	equ	0xFFD
 24156                           pclath	equ	0xFFA
 24157                           tblptru	equ	0xFF8
 24158                           tblptrh	equ	0xFF7
 24159                           tblptrl	equ	0xFF6
 24160                           tablat	equ	0xFF5
 24161                           prodh	equ	0xFF4
 24162                           prodl	equ	0xFF3
 24163                           intcon	equ	0xFF2
 24164                           intcon2	equ	0xFF1
 24165                           indf0	equ	0xFEF
 24166                           postinc0	equ	0xFEE
 24167                           fsr0h	equ	0xFEA
 24168                           fsr0l	equ	0xFE9
 24169                           wreg	equ	0xFE8
 24170                           indf1	equ	0xFE7
 24171                           postinc1	equ	0xFE6
 24172                           postdec1	equ	0xFE5
 24173                           plusw1	equ	0xFE3
 24174                           fsr1h	equ	0xFE2
 24175                           fsr1l	equ	0xFE1
 24176                           indf2	equ	0xFDF
 24177                           postinc2	equ	0xFDE
 24178                           postdec2	equ	0xFDD
 24179                           plusw2	equ	0xFDB
 24180                           fsr2h	equ	0xFDA
 24181                           fsr2l	equ	0xFD9
 24182                           status	equ	0xFD8
 24183                           
 24184 ;; *************** function _ETH_Insert *****************
 24185 ;; Defined at:
 24186 ;;		line 416 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24187 ;; Parameters:    Size  Location     Type
 24188 ;;  data            1    wreg     PTR unsigned char 
 24189 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), TCP_Snd@cksm(2), IPV4_Send@cksm(2), 
 24190 ;;		 -> IPV4_Send@totalLength(2), ICMP_EchoReply@cksm(2), 
 24191 ;;  len             2   10[COMRAM] unsigned int 
 24192 ;;  offset          2   12[COMRAM] unsigned int 
 24193 ;; Auto vars:     Size  Location     Type
 24194 ;;  data            1   16[COMRAM] PTR unsigned char 
 24195 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), TCP_Snd@cksm(2), IPV4_Send@cksm(2), 
 24196 ;;		 -> IPV4_Send@totalLength(2), ICMP_EchoReply@cksm(2), 
 24197 ;;  current_tx_p    2   14[COMRAM] unsigned int 
 24198 ;; Return value:  Size  Location     Type
 24199 ;;		None               void
 24200 ;; Registers used:
 24201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24202 ;; Tracked objects:
 24203 ;;		On entry : 0/0
 24204 ;;		On exit  : 0/0
 24205 ;;		Unchanged: 0/0
 24206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24207 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24208 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24210 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24211 ;;Total ram usage:        7 bytes
 24212 ;; Hardware stack levels used:    1
 24213 ;; Hardware stack levels required when called:    6
 24214 ;; This function calls:
 24215 ;;		_ENCx24_Read
 24216 ;;		_ENCx24_Write
 24217 ;;		_SPI_ExchangeByte
 24218 ;; This function is called by:
 24219 ;;		_ICMP_EchoReply
 24220 ;;		_IPV4_Send
 24221 ;;		_TCP_Snd
 24222 ;;		_UDP_Send
 24223 ;; This function uses a non-reentrant model
 24224 ;;
 24225                           
 24226                           	psect	text98
 24227  007D52                     __ptext98:
 24228                           	opt stack 0
 24229  007D52                     _ETH_Insert:
 24230                           	opt stack 19
 24231                           
 24232                           ;incstack = 0
 24233                           ;ETH_Insert@data stored from wreg
 24234  007D52  6E11               	movwf	ETH_Insert@data,c
 24235                           
 24236                           ;encX24j600_spi.c: 420: current_tx_pointer = ENCx24_Read(XJ600_EGPWRPTL);
 24237  007D54  0E88               	movlw	136
 24238  007D56  ECDF  F03F         	call	_ENCx24_Read
 24239  007D5A  C005  F00F         	movff	?_ENCx24_Read,ETH_Insert@current_tx_pointer
 24240  007D5E  C006  F010         	movff	?_ENCx24_Read+1,ETH_Insert@current_tx_pointer+1
 24241                           
 24242                           ;encX24j600_spi.c: 421: ENCx24_Write(XJ600_EGPWRPTL, offset);
 24243  007D62  C00D  F005         	movff	ETH_Insert@offset,ENCx24_Write@data
 24244  007D66  C00E  F006         	movff	ETH_Insert@offset+1,ENCx24_Write@data+1
 24245  007D6A  0E88               	movlw	136
 24246  007D6C  EC91  F040         	call	_ENCx24_Write
 24247  007D70  968A               	bcf	3978,3,c	;volatile
 24248                           
 24249                           ;encX24j600_spi.c: 424: SPI_ExchangeByte(wgpdata_inst);
 24250  007D72  0E2A               	movlw	42
 24251  007D74  ECCC  F043         	call	_SPI_ExchangeByte
 24252                           
 24253                           ;encX24j600_spi.c: 425: while(len--)
 24254  007D78  D007               	goto	l7871
 24255  007D7A                     l7867:
 24256                           
 24257                           ;encX24j600_spi.c: 426: SPI_ExchangeByte(*data++);
 24258  007D7A  5011               	movf	ETH_Insert@data,w,c
 24259  007D7C  6ED9               	movwf	fsr2l,c
 24260  007D7E  6ADA               	clrf	fsr2h,c
 24261  007D80  50DF               	movf	indf2,w,c
 24262  007D82  ECCC  F043         	call	_SPI_ExchangeByte
 24263  007D86  2A11               	incf	ETH_Insert@data,f,c
 24264  007D88                     l7871:
 24265  007D88  060B               	decf	ETH_Insert@len,f,c
 24266  007D8A  A0D8               	btfss	status,0,c
 24267  007D8C  060C               	decf	ETH_Insert@len+1,f,c
 24268  007D8E  280B               	incf	ETH_Insert@len,w,c
 24269  007D90  E1F4               	bnz	l7867
 24270  007D92  280C               	incf	ETH_Insert@len+1,w,c
 24271  007D94  E1F2               	bnz	l7867
 24272                           
 24273                           ;encX24j600_spi.c: 427: do{LATB3 = 1;} while(0);
 24274  007D96  868A               	bsf	3978,3,c	;volatile
 24275                           
 24276                           ;encX24j600_spi.c: 429: ENCx24_Write(XJ600_EGPWRPTL, current_tx_pointer);
 24277  007D98  C00F  F005         	movff	ETH_Insert@current_tx_pointer,ENCx24_Write@data
 24278  007D9C  C010  F006         	movff	ETH_Insert@current_tx_pointer+1,ENCx24_Write@data+1
 24279  007DA0  0E88               	movlw	136
 24280  007DA2  EF91  F040         	goto	_ENCx24_Write
 24281  007DA6                     __end_of_ETH_Insert:
 24282                           	opt stack 0
 24283                           tosu	equ	0xFFF
 24284                           tosh	equ	0xFFE
 24285                           tosl	equ	0xFFD
 24286                           pclath	equ	0xFFA
 24287                           tblptru	equ	0xFF8
 24288                           tblptrh	equ	0xFF7
 24289                           tblptrl	equ	0xFF6
 24290                           tablat	equ	0xFF5
 24291                           prodh	equ	0xFF4
 24292                           prodl	equ	0xFF3
 24293                           intcon	equ	0xFF2
 24294                           intcon2	equ	0xFF1
 24295                           indf0	equ	0xFEF
 24296                           postinc0	equ	0xFEE
 24297                           fsr0h	equ	0xFEA
 24298                           fsr0l	equ	0xFE9
 24299                           wreg	equ	0xFE8
 24300                           indf1	equ	0xFE7
 24301                           postinc1	equ	0xFE6
 24302                           postdec1	equ	0xFE5
 24303                           plusw1	equ	0xFE3
 24304                           fsr1h	equ	0xFE2
 24305                           fsr1l	equ	0xFE1
 24306                           indf2	equ	0xFDF
 24307                           postinc2	equ	0xFDE
 24308                           postdec2	equ	0xFDD
 24309                           plusw2	equ	0xFDB
 24310                           fsr2h	equ	0xFDA
 24311                           fsr2l	equ	0xFD9
 24312                           status	equ	0xFD8
 24313                           
 24314 ;; *************** function _ENCx24_Write *****************
 24315 ;; Defined at:
 24316 ;;		line 124 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24317 ;; Parameters:    Size  Location     Type
 24318 ;;  a               1    wreg     enum E6725
 24319 ;;  data            2    4[COMRAM] unsigned int 
 24320 ;; Auto vars:     Size  Location     Type
 24321 ;;  a               1    7[COMRAM] enum E6725
 24322 ;;  bank            1    6[COMRAM] unsigned char 
 24323 ;; Return value:  Size  Location     Type
 24324 ;;		None               void
 24325 ;; Registers used:
 24326 ;;		wreg, status,2, status,0, cstack
 24327 ;; Tracked objects:
 24328 ;;		On entry : 0/2
 24329 ;;		On exit  : 0/0
 24330 ;;		Unchanged: 0/0
 24331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24335 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24336 ;;Total ram usage:        4 bytes
 24337 ;; Hardware stack levels used:    1
 24338 ;; Hardware stack levels required when called:    5
 24339 ;; This function calls:
 24340 ;;		_ENCx24_BankselSPI
 24341 ;;		_SPI_ExchangeByte
 24342 ;; This function is called by:
 24343 ;;		_ETH_SendSystemReset
 24344 ;;		_ETH_Init
 24345 ;;		_ETH_EventHandler
 24346 ;;		_ETH_ResetReceiver
 24347 ;;		_ETH_Dump
 24348 ;;		_ETH_Flush
 24349 ;;		_ETH_WriteStart
 24350 ;;		_ETH_Send
 24351 ;;		_ETH_Copy
 24352 ;;		_ETH_TxComputeChecksum
 24353 ;;		_ETH_RxComputeChecksum
 24354 ;;		_ENCx24_PhyRead
 24355 ;;		_ENCx24_PHYWrite
 24356 ;;		_ETH_Insert
 24357 ;; This function uses a non-reentrant model
 24358 ;;
 24359                           
 24360                           	psect	text99
 24361  008122                     __ptext99:
 24362                           	opt stack 0
 24363  008122                     _ENCx24_Write:
 24364                           	opt stack 19
 24365                           
 24366                           ;incstack = 0
 24367                           ;ENCx24_Write@a stored from wreg
 24368  008122  6E08               	movwf	ENCx24_Write@a,c
 24369                           
 24370                           ;encX24j600_spi.c: 126: uint8_t bank;
 24371                           ;encX24j600_spi.c: 127: bank = a & 0xE0;
 24372  008124  5008               	movf	ENCx24_Write@a,w,c
 24373  008126  0BE0               	andlw	224
 24374  008128  6E07               	movwf	ENCx24_Write@bank,c
 24375                           
 24376                           ;encX24j600_spi.c: 128: if(bank != 0X80)
 24377  00812A  0E80               	movlw	128
 24378  00812C  1807               	xorwf	ENCx24_Write@bank,w,c
 24379  00812E  E00B               	bz	l567
 24380                           
 24381                           ;encX24j600_spi.c: 129: {
 24382                           ;encX24j600_spi.c: 130: ENCx24_BankselSPI(a);
 24383  008130  5008               	movf	ENCx24_Write@a,w,c
 24384  008132  EC2A  F03E         	call	_ENCx24_BankselSPI
 24385  008136  968A               	bcf	3978,3,c	;volatile
 24386                           
 24387                           ;encX24j600_spi.c: 132: a &= 0x1F;
 24388  008138  0E1F               	movlw	31
 24389  00813A  1608               	andwf	ENCx24_Write@a,f,c
 24390                           
 24391                           ;encX24j600_spi.c: 133: SPI_ExchangeByte(wcr_inst | (a));
 24392  00813C  5008               	movf	ENCx24_Write@a,w,c
 24393  00813E  0940               	iorlw	64
 24394  008140  ECCC  F043         	call	_SPI_ExchangeByte
 24395                           
 24396                           ;encX24j600_spi.c: 134: }
 24397  008144  D007               	goto	l566
 24398  008146                     l567:
 24399  008146  968A               	bcf	3978,3,c	;volatile
 24400                           
 24401                           ;encX24j600_spi.c: 138: SPI_ExchangeByte(wcru_inst);
 24402  008148  0E22               	movlw	34
 24403  00814A  ECCC  F043         	call	_SPI_ExchangeByte
 24404                           
 24405                           ;encX24j600_spi.c: 139: SPI_ExchangeByte(a);
 24406  00814E  5008               	movf	ENCx24_Write@a,w,c
 24407  008150  ECCC  F043         	call	_SPI_ExchangeByte
 24408  008154                     l566:
 24409                           
 24410                           ;encX24j600_spi.c: 140: }
 24411                           ;encX24j600_spi.c: 141: SPI_ExchangeByte(((uint8_t*) &data)[0]);
 24412  008154  5005               	movf	ENCx24_Write@data,w,c
 24413  008156  ECCC  F043         	call	_SPI_ExchangeByte
 24414                           
 24415                           ;encX24j600_spi.c: 142: SPI_ExchangeByte(((uint8_t*) &data)[1]);
 24416  00815A  5006               	movf	ENCx24_Write@data+1,w,c
 24417  00815C  ECCC  F043         	call	_SPI_ExchangeByte
 24418  008160  868A               	bsf	3978,3,c	;volatile
 24419  008162  0012               	return		;funcret
 24420  008164                     __end_of_ENCx24_Write:
 24421                           	opt stack 0
 24422                           tosu	equ	0xFFF
 24423                           tosh	equ	0xFFE
 24424                           tosl	equ	0xFFD
 24425                           pclath	equ	0xFFA
 24426                           tblptru	equ	0xFF8
 24427                           tblptrh	equ	0xFF7
 24428                           tblptrl	equ	0xFF6
 24429                           tablat	equ	0xFF5
 24430                           prodh	equ	0xFF4
 24431                           prodl	equ	0xFF3
 24432                           intcon	equ	0xFF2
 24433                           intcon2	equ	0xFF1
 24434                           indf0	equ	0xFEF
 24435                           postinc0	equ	0xFEE
 24436                           fsr0h	equ	0xFEA
 24437                           fsr0l	equ	0xFE9
 24438                           wreg	equ	0xFE8
 24439                           indf1	equ	0xFE7
 24440                           postinc1	equ	0xFE6
 24441                           postdec1	equ	0xFE5
 24442                           plusw1	equ	0xFE3
 24443                           fsr1h	equ	0xFE2
 24444                           fsr1l	equ	0xFE1
 24445                           indf2	equ	0xFDF
 24446                           postinc2	equ	0xFDE
 24447                           postdec2	equ	0xFDD
 24448                           plusw2	equ	0xFDB
 24449                           fsr2h	equ	0xFDA
 24450                           fsr2l	equ	0xFD9
 24451                           status	equ	0xFD8
 24452                           
 24453 ;; *************** function _ENCx24_Read *****************
 24454 ;; Defined at:
 24455 ;;		line 95 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24456 ;; Parameters:    Size  Location     Type
 24457 ;;  a               1    wreg     enum E6725
 24458 ;; Auto vars:     Size  Location     Type
 24459 ;;  a               1    9[COMRAM] enum E6725
 24460 ;;  v               2    7[COMRAM] unsigned int 
 24461 ;;  bank            1    6[COMRAM] unsigned char 
 24462 ;; Return value:  Size  Location     Type
 24463 ;;                  2    4[COMRAM] unsigned int 
 24464 ;; Registers used:
 24465 ;;		wreg, status,2, status,0, cstack
 24466 ;; Tracked objects:
 24467 ;;		On entry : 0/2
 24468 ;;		On exit  : 0/0
 24469 ;;		Unchanged: 0/0
 24470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24472 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24475 ;;Total ram usage:        6 bytes
 24476 ;; Hardware stack levels used:    1
 24477 ;; Hardware stack levels required when called:    5
 24478 ;; This function calls:
 24479 ;;		_ENCx24_BankselSPI
 24480 ;;		_SPI_ExchangeByte
 24481 ;; This function is called by:
 24482 ;;		_ETH_SendSystemReset
 24483 ;;		_ETH_Init
 24484 ;;		_ETH_readLinkStatus
 24485 ;;		_ETH_EventHandler
 24486 ;;		_ETH_Dump
 24487 ;;		_ETH_WriteStart
 24488 ;;		_ETH_Copy
 24489 ;;		_waitForDMA
 24490 ;;		_ETH_TxComputeChecksum
 24491 ;;		_ETH_RxComputeChecksum
 24492 ;;		_ETH_SaveRDPT
 24493 ;;		_ETH_ResetByteCount
 24494 ;;		_ETH_GetByteCount
 24495 ;;		_ENCx24_PhyRead
 24496 ;;		_ENCx24_PHYWrite
 24497 ;;		_ETH_Insert
 24498 ;; This function uses a non-reentrant model
 24499 ;;
 24500                           
 24501                           	psect	text100
 24502  007FBE                     __ptext100:
 24503                           	opt stack 0
 24504  007FBE                     _ENCx24_Read:
 24505                           	opt stack 22
 24506                           
 24507                           ;incstack = 0
 24508                           ;ENCx24_Read@a stored from wreg
 24509  007FBE  6E0A               	movwf	ENCx24_Read@a,c
 24510                           
 24511                           ;encX24j600_spi.c: 97: uint16_t v;
 24512                           ;encX24j600_spi.c: 98: uint8_t bank;
 24513                           ;encX24j600_spi.c: 100: bank = a & 0xE0;
 24514  007FC0  500A               	movf	ENCx24_Read@a,w,c
 24515  007FC2  0BE0               	andlw	224
 24516  007FC4  6E07               	movwf	ENCx24_Read@bank,c
 24517                           
 24518                           ;encX24j600_spi.c: 101: if(bank != 0X80)
 24519  007FC6  0E80               	movlw	128
 24520  007FC8  1807               	xorwf	ENCx24_Read@bank,w,c
 24521  007FCA  E009               	bz	l556
 24522                           
 24523                           ;encX24j600_spi.c: 102: {
 24524                           ;encX24j600_spi.c: 103: ENCx24_BankselSPI(a);
 24525  007FCC  500A               	movf	ENCx24_Read@a,w,c
 24526  007FCE  EC2A  F03E         	call	_ENCx24_BankselSPI
 24527  007FD2  968A               	bcf	3978,3,c	;volatile
 24528                           
 24529                           ;encX24j600_spi.c: 105: SPI_ExchangeByte(rcr_inst| (a & 0x1F));
 24530  007FD4  500A               	movf	ENCx24_Read@a,w,c
 24531  007FD6  0B1F               	andlw	31
 24532  007FD8  ECCC  F043         	call	_SPI_ExchangeByte
 24533                           
 24534                           ;encX24j600_spi.c: 106: }
 24535  007FDC  D007               	goto	l555
 24536  007FDE                     l556:
 24537  007FDE  968A               	bcf	3978,3,c	;volatile
 24538                           
 24539                           ;encX24j600_spi.c: 110: SPI_ExchangeByte(rcru_inst);
 24540  007FE0  0E20               	movlw	32
 24541  007FE2  ECCC  F043         	call	_SPI_ExchangeByte
 24542                           
 24543                           ;encX24j600_spi.c: 111: SPI_ExchangeByte(a);
 24544  007FE6  500A               	movf	ENCx24_Read@a,w,c
 24545  007FE8  ECCC  F043         	call	_SPI_ExchangeByte
 24546  007FEC                     l555:
 24547                           
 24548                           ;encX24j600_spi.c: 112: }
 24549                           ;encX24j600_spi.c: 113: ((uint8_t*)&v)[0] = SPI_ExchangeByte(0);
 24550  007FEC  0E00               	movlw	0
 24551  007FEE  ECCC  F043         	call	_SPI_ExchangeByte
 24552  007FF2  6E08               	movwf	ENCx24_Read@v,c
 24553                           
 24554                           ;encX24j600_spi.c: 114: ((uint8_t*)&v)[1] = SPI_ExchangeByte(0);
 24555  007FF4  0E00               	movlw	0
 24556  007FF6  ECCC  F043         	call	_SPI_ExchangeByte
 24557  007FFA  6E09               	movwf	ENCx24_Read@v+1,c
 24558  007FFC  868A               	bsf	3978,3,c	;volatile
 24559                           
 24560                           ;encX24j600_spi.c: 116: return v;
 24561  007FFE  C008  F005         	movff	ENCx24_Read@v,?_ENCx24_Read
 24562  008002  C009  F006         	movff	ENCx24_Read@v+1,?_ENCx24_Read+1
 24563  008006  0012               	return		;funcret
 24564  008008                     __end_of_ENCx24_Read:
 24565                           	opt stack 0
 24566                           tosu	equ	0xFFF
 24567                           tosh	equ	0xFFE
 24568                           tosl	equ	0xFFD
 24569                           pclath	equ	0xFFA
 24570                           tblptru	equ	0xFF8
 24571                           tblptrh	equ	0xFF7
 24572                           tblptrl	equ	0xFF6
 24573                           tablat	equ	0xFF5
 24574                           prodh	equ	0xFF4
 24575                           prodl	equ	0xFF3
 24576                           intcon	equ	0xFF2
 24577                           intcon2	equ	0xFF1
 24578                           indf0	equ	0xFEF
 24579                           postinc0	equ	0xFEE
 24580                           fsr0h	equ	0xFEA
 24581                           fsr0l	equ	0xFE9
 24582                           wreg	equ	0xFE8
 24583                           indf1	equ	0xFE7
 24584                           postinc1	equ	0xFE6
 24585                           postdec1	equ	0xFE5
 24586                           plusw1	equ	0xFE3
 24587                           fsr1h	equ	0xFE2
 24588                           fsr1l	equ	0xFE1
 24589                           indf2	equ	0xFDF
 24590                           postinc2	equ	0xFDE
 24591                           postdec2	equ	0xFDD
 24592                           plusw2	equ	0xFDB
 24593                           fsr2h	equ	0xFDA
 24594                           fsr2l	equ	0xFD9
 24595                           status	equ	0xFD8
 24596                           
 24597 ;; *************** function _ENCx24_BankselSPI *****************
 24598 ;; Defined at:
 24599 ;;		line 61 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24600 ;; Parameters:    Size  Location     Type
 24601 ;;  a               1    wreg     enum E6725
 24602 ;; Auto vars:     Size  Location     Type
 24603 ;;  a               1    2[COMRAM] enum E6725
 24604 ;;  bank            1    3[COMRAM] unsigned char 
 24605 ;; Return value:  Size  Location     Type
 24606 ;;		None               void
 24607 ;; Registers used:
 24608 ;;		wreg, status,2, status,0, cstack
 24609 ;; Tracked objects:
 24610 ;;		On entry : 0/0
 24611 ;;		On exit  : 0/0
 24612 ;;		Unchanged: 0/0
 24613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24618 ;;Total ram usage:        2 bytes
 24619 ;; Hardware stack levels used:    1
 24620 ;; Hardware stack levels required when called:    4
 24621 ;; This function calls:
 24622 ;;		_SPI_ExchangeByte
 24623 ;; This function is called by:
 24624 ;;		_ENCx24_Read
 24625 ;;		_ENCx24_Write
 24626 ;;		_ENCx24_BFS
 24627 ;;		_ENCx24_BFC
 24628 ;;		_ETH_MACRead8
 24629 ;; This function uses a non-reentrant model
 24630 ;;
 24631                           
 24632                           	psect	text101
 24633  007C54                     __ptext101:
 24634                           	opt stack 0
 24635  007C54                     _ENCx24_BankselSPI:
 24636                           	opt stack 22
 24637                           
 24638                           ;incstack = 0
 24639                           ;ENCx24_BankselSPI@a stored from wreg
 24640  007C54  6E03               	movwf	ENCx24_BankselSPI@a,c
 24641                           
 24642                           ;encX24j600_spi.c: 63: uint8_t bank;
 24643                           ;encX24j600_spi.c: 64: bank = a & 0xE0;
 24644  007C56  5003               	movf	ENCx24_BankselSPI@a,w,c
 24645  007C58  0BE0               	andlw	224
 24646  007C5A  6E04               	movwf	ENCx24_BankselSPI@bank,c
 24647                           
 24648                           ;encX24j600_spi.c: 65: if( bank != last_bank && bank!=0X80)
 24649  007C5C  0101               	movlb	1	; () banked
 24650  007C5E  19A6               	xorwf	_last_bank& (0+255),w,b
 24651  007C60  B4D8               	btfsc	status,2,c
 24652  007C62  0012               	return	
 24653                           
 24654                           ; BSR set to: 1
 24655  007C64  0E80               	movlw	128
 24656  007C66  1804               	xorwf	ENCx24_BankselSPI@bank,w,c
 24657  007C68  B4D8               	btfsc	status,2,c
 24658  007C6A  0012               	return	
 24659                           
 24660                           ; BSR set to: 1
 24661                           ;encX24j600_spi.c: 66: {
 24662                           ;encX24j600_spi.c: 67: last_bank = bank;
 24663  007C6C  C004  F1A6         	movff	ENCx24_BankselSPI@bank,_last_bank
 24664                           
 24665                           ; BSR set to: 1
 24666                           
 24667                           ;encX24j600_spi.c: 68: do{LATB3 = 0;} while(0);
 24668  007C70  968A               	bcf	3978,3,c	;volatile
 24669  007C72  D010               	goto	l7649
 24670  007C74                     l7639:
 24671                           
 24672                           ; BSR set to: 1
 24673                           ;encX24j600_spi.c: 72: SPI_ExchangeByte(b0sel_inst);
 24674  007C74  0EC0               	movlw	192
 24675  007C76  ECCC  F043         	call	_SPI_ExchangeByte
 24676                           
 24677                           ;encX24j600_spi.c: 73: break;
 24678  007C7A  D015               	goto	l547
 24679  007C7C                     l7641:
 24680                           
 24681                           ; BSR set to: 1
 24682                           ;encX24j600_spi.c: 75: SPI_ExchangeByte(b1sel_inst);
 24683  007C7C  0EC2               	movlw	194
 24684  007C7E  ECCC  F043         	call	_SPI_ExchangeByte
 24685                           
 24686                           ;encX24j600_spi.c: 76: break;
 24687  007C82  D011               	goto	l547
 24688  007C84                     l7643:
 24689                           
 24690                           ; BSR set to: 1
 24691                           ;encX24j600_spi.c: 78: SPI_ExchangeByte(b2sel_inst);
 24692  007C84  0EC4               	movlw	196
 24693  007C86  ECCC  F043         	call	_SPI_ExchangeByte
 24694                           
 24695                           ;encX24j600_spi.c: 79: break;
 24696  007C8A  D00D               	goto	l547
 24697  007C8C                     l7645:
 24698                           
 24699                           ; BSR set to: 1
 24700                           ;encX24j600_spi.c: 81: SPI_ExchangeByte(b3sel_inst);
 24701  007C8C  0EC6               	movlw	198
 24702  007C8E  ECCC  F043         	call	_SPI_ExchangeByte
 24703                           
 24704                           ;encX24j600_spi.c: 82: break;
 24705  007C92  D009               	goto	l547
 24706  007C94                     l7649:
 24707                           
 24708                           ; BSR set to: 1
 24709  007C94  5004               	movf	ENCx24_BankselSPI@bank,w,c
 24710                           
 24711                           ; Switch size 1, requested type "speed"
 24712                           ; Number of cases is 5, Range of values is 0 to 224
 24713                           ; switch strategies available:
 24714                           ; Name         Instructions Cycles
 24715                           ; simple_byte           16     9 (average)
 24716                           ;	Chosen strategy is simple_byte
 24717  007C96  E0EE               	bz	l7639
 24718  007C98  0A20               	xorlw	32	; case 32
 24719  007C9A  E0F0               	bz	l7641
 24720  007C9C  0A60               	xorlw	96	; case 64
 24721  007C9E  E0F2               	bz	l7643
 24722  007CA0  0A20               	xorlw	32	; case 96
 24723  007CA2  E0F4               	bz	l7645
 24724  007CA4  0A80               	xorlw	128	; case 224
 24725  007CA6                     l547:
 24726  007CA6  868A               	bsf	3978,3,c	;volatile
 24727  007CA8  0012               	return		;funcret
 24728  007CAA                     __end_of_ENCx24_BankselSPI:
 24729                           	opt stack 0
 24730                           tosu	equ	0xFFF
 24731                           tosh	equ	0xFFE
 24732                           tosl	equ	0xFFD
 24733                           pclath	equ	0xFFA
 24734                           tblptru	equ	0xFF8
 24735                           tblptrh	equ	0xFF7
 24736                           tblptrl	equ	0xFF6
 24737                           tablat	equ	0xFF5
 24738                           prodh	equ	0xFF4
 24739                           prodl	equ	0xFF3
 24740                           intcon	equ	0xFF2
 24741                           intcon2	equ	0xFF1
 24742                           indf0	equ	0xFEF
 24743                           postinc0	equ	0xFEE
 24744                           fsr0h	equ	0xFEA
 24745                           fsr0l	equ	0xFE9
 24746                           wreg	equ	0xFE8
 24747                           indf1	equ	0xFE7
 24748                           postinc1	equ	0xFE6
 24749                           postdec1	equ	0xFE5
 24750                           plusw1	equ	0xFE3
 24751                           fsr1h	equ	0xFE2
 24752                           fsr1l	equ	0xFE1
 24753                           indf2	equ	0xFDF
 24754                           postinc2	equ	0xFDE
 24755                           postdec2	equ	0xFDD
 24756                           plusw2	equ	0xFDB
 24757                           fsr2h	equ	0xFDA
 24758                           fsr2l	equ	0xFD9
 24759                           status	equ	0xFD8
 24760                           
 24761 ;; *************** function _ETH_ReadBlock *****************
 24762 ;; Defined at:
 24763 ;;		line 305 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24764 ;; Parameters:    Size  Location     Type
 24765 ;;  data            2    2[COMRAM] PTR void 
 24766 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
 24767 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@rxdataPort7(20), udpHeader(8), tcpHeader(20), 
 24768 ;;		 -> Network_Read@debug_str(80), Network_Read@header(14), ipv4Header(20), ICMP_Receive@icmpHdr(8), 
 24769 ;;		 -> DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), NULL(0), 
 24770 ;;  length          2    4[COMRAM] unsigned int 
 24771 ;; Auto vars:     Size  Location     Type
 24772 ;;  len             2    9[COMRAM] unsigned int 
 24773 ;;  p               2    7[COMRAM] PTR unsigned char 
 24774 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
 24775 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@rxdataPort7(20), udpHeader(8), tcpHeader(20), 
 24776 ;;		 -> Network_Read@debug_str(80), Network_Read@header(14), ipv4Header(20), ICMP_Receive@icmpHdr(8), 
 24777 ;;		 -> DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), NULL(0), 
 24778 ;; Return value:  Size  Location     Type
 24779 ;;                  2    2[COMRAM] unsigned int 
 24780 ;; Registers used:
 24781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24782 ;; Tracked objects:
 24783 ;;		On entry : 0/2
 24784 ;;		On exit  : F/1
 24785 ;;		Unchanged: 0/0
 24786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24788 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24789 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24790 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24791 ;;Total ram usage:        9 bytes
 24792 ;; Hardware stack levels used:    1
 24793 ;; Hardware stack levels required when called:    4
 24794 ;; This function calls:
 24795 ;;		_SPI_ExchangeByte
 24796 ;; This function is called by:
 24797 ;;		_ARPV4_Packet
 24798 ;;		_DHCP_Handler
 24799 ;;		_ICMP_Receive
 24800 ;;		_IPV4_Packet
 24801 ;;		_Network_Read
 24802 ;;		_TCP_PayloadSave
 24803 ;;		_TCP_Recv
 24804 ;;		_UDP_Receive
 24805 ;; This function uses a non-reentrant model
 24806 ;;
 24807                           
 24808                           	psect	text102
 24809  0075B2                     __ptext102:
 24810                           	opt stack 0
 24811  0075B2                     _ETH_ReadBlock:
 24812                           	opt stack 22
 24813                           
 24814                           ;encX24j600_spi.c: 307: uint16_t len = length;
 24815                           
 24816                           ;incstack = 0
 24817  0075B2  C005  F00A         	movff	ETH_ReadBlock@length,ETH_ReadBlock@len
 24818  0075B6  C006  F00B         	movff	ETH_ReadBlock@length+1,ETH_ReadBlock@len+1
 24819                           
 24820                           ;encX24j600_spi.c: 308: char *p = data;
 24821  0075BA  C003  F008         	movff	ETH_ReadBlock@data,ETH_ReadBlock@p
 24822  0075BE  C004  F009         	movff	ETH_ReadBlock@data+1,ETH_ReadBlock@p+1
 24823                           
 24824                           ;encX24j600_spi.c: 309: if(rxPacketStatusVector.ByteCount)
 24825  0075C2  0102               	movlb	2	; () banked
 24826  0075C4  5118               	movf	_rxPacketStatusVector& (0+255),w,b
 24827  0075C6  1119               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 24828  0075C8  E03A               	bz	l635
 24829                           
 24830                           ; BSR set to: 2
 24831                           ;encX24j600_spi.c: 310: {
 24832                           ;encX24j600_spi.c: 311: if(length > rxPacketStatusVector.ByteCount)
 24833  0075CA  5005               	movf	ETH_ReadBlock@length,w,c
 24834  0075CC  5D18               	subwf	_rxPacketStatusVector& (0+255),w,b
 24835  0075CE  5006               	movf	ETH_ReadBlock@length+1,w,c
 24836  0075D0  5919               	subwfb	(_rxPacketStatusVector+1)& (0+255),w,b
 24837  0075D2  E204               	bc	l8005
 24838                           
 24839                           ; BSR set to: 2
 24840                           ;encX24j600_spi.c: 312: {
 24841                           ;encX24j600_spi.c: 313: len = rxPacketStatusVector.ByteCount;
 24842  0075D4  C218  F00A         	movff	_rxPacketStatusVector,ETH_ReadBlock@len
 24843  0075D8  C219  F00B         	movff	_rxPacketStatusVector+1,ETH_ReadBlock@len+1
 24844  0075DC                     l8005:
 24845                           
 24846                           ; BSR set to: 2
 24847                           ;encX24j600_spi.c: 314: }
 24848                           ;encX24j600_spi.c: 315: rxPacketStatusVector.ByteCount -= len;
 24849  0075DC  500A               	movf	ETH_ReadBlock@len,w,c
 24850  0075DE  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
 24851  0075E0  500B               	movf	ETH_ReadBlock@len+1,w,c
 24852  0075E2  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 24853                           
 24854                           ; BSR set to: 2
 24855  0075E4  968A               	bcf	3978,3,c	;volatile
 24856                           
 24857                           ; BSR set to: 2
 24858                           ;encX24j600_spi.c: 317: SPI_ExchangeByte(rrxdata_inst);
 24859  0075E6  0E2C               	movlw	44
 24860  0075E8  ECCC  F043         	call	_SPI_ExchangeByte
 24861                           
 24862                           ;encX24j600_spi.c: 318: while(len--) *p++=SPI_ExchangeByte(0);
 24863  0075EC  D019               	goto	l8015
 24864  0075EE                     l8011:
 24865  0075EE  C008  FFF6         	movff	ETH_ReadBlock@p,tblptrl
 24866  0075F2  C009  FFF7         	movff	ETH_ReadBlock@p+1,tblptrh
 24867  0075F6  0E00               	movlw	low (__smallconst shr (0+16))
 24868  0075F8  6EF8               	movwf	tblptru,c
 24869  0075FA  0E00               	movlw	0
 24870  0075FC  ECCC  F043         	call	_SPI_ExchangeByte
 24871  007600  6E07               	movwf	??_ETH_ReadBlock& (0+255),c
 24872  007602  0E0F               	movlw	(high __ramtop+-1)
 24873  007604  64F7               	cpfsgt	tblptrh,c
 24874  007606  D004               	bra	u10527
 24875  007608  C007  FFF5         	movff	??_ETH_ReadBlock,tablat
 24876  00760C  000C               	tblwt		*
 24877  00760E  D006               	bra	u10520
 24878  007610                     u10527:
 24879  007610  CFF6 FFE9          	movff	tblptrl,fsr0l
 24880  007614  CFF7 FFEA          	movff	tblptrh,fsr0h
 24881  007618  C007  FFEF         	movff	??_ETH_ReadBlock,indf0
 24882  00761C                     u10520:
 24883  00761C  4A08               	infsnz	ETH_ReadBlock@p,f,c
 24884  00761E  2A09               	incf	ETH_ReadBlock@p+1,f,c
 24885  007620                     l8015:
 24886  007620  060A               	decf	ETH_ReadBlock@len,f,c
 24887  007622  A0D8               	btfss	status,0,c
 24888  007624  060B               	decf	ETH_ReadBlock@len+1,f,c
 24889  007626  280A               	incf	ETH_ReadBlock@len,w,c
 24890  007628  E1E2               	bnz	l8011
 24891  00762A  280B               	incf	ETH_ReadBlock@len+1,w,c
 24892  00762C  E1E0               	bnz	l8011
 24893                           
 24894                           ;encX24j600_spi.c: 319: do{LATB3 = 1;} while(0);
 24895  00762E  868A               	bsf	3978,3,c	;volatile
 24896                           
 24897                           ;encX24j600_spi.c: 320: ethData.error=0;
 24898  007630  0101               	movlb	1	; () banked
 24899  007632  9183               	bcf	_ethData& (0+255),0,b	;volatile
 24900                           
 24901                           ;encX24j600_spi.c: 321: return length;
 24902  007634  C005  F003         	movff	ETH_ReadBlock@length,?_ETH_ReadBlock
 24903  007638  C006  F004         	movff	ETH_ReadBlock@length+1,?_ETH_ReadBlock+1
 24904  00763C  0012               	return	
 24905  00763E                     l635:
 24906                           
 24907                           ; BSR set to: 2
 24908                           ;encX24j600_spi.c: 323: else
 24909                           ;encX24j600_spi.c: 324: {
 24910                           ;encX24j600_spi.c: 325: ethData.error= 1;
 24911  00763E  0101               	movlb	1	; () banked
 24912  007640  8183               	bsf	_ethData& (0+255),0,b	;volatile
 24913                           
 24914                           ;encX24j600_spi.c: 326: return 0;
 24915  007642  6A03               	clrf	?_ETH_ReadBlock,c
 24916  007644  6A04               	clrf	?_ETH_ReadBlock+1,c
 24917                           
 24918                           ; BSR set to: 1
 24919  007646  0012               	return		;funcret
 24920  007648                     __end_of_ETH_ReadBlock:
 24921                           	opt stack 0
 24922                           tosu	equ	0xFFF
 24923                           tosh	equ	0xFFE
 24924                           tosl	equ	0xFFD
 24925                           pclath	equ	0xFFA
 24926                           tblptru	equ	0xFF8
 24927                           tblptrh	equ	0xFF7
 24928                           tblptrl	equ	0xFF6
 24929                           tablat	equ	0xFF5
 24930                           prodh	equ	0xFF4
 24931                           prodl	equ	0xFF3
 24932                           intcon	equ	0xFF2
 24933                           intcon2	equ	0xFF1
 24934                           indf0	equ	0xFEF
 24935                           postinc0	equ	0xFEE
 24936                           fsr0h	equ	0xFEA
 24937                           fsr0l	equ	0xFE9
 24938                           wreg	equ	0xFE8
 24939                           indf1	equ	0xFE7
 24940                           postinc1	equ	0xFE6
 24941                           postdec1	equ	0xFE5
 24942                           plusw1	equ	0xFE3
 24943                           fsr1h	equ	0xFE2
 24944                           fsr1l	equ	0xFE1
 24945                           indf2	equ	0xFDF
 24946                           postinc2	equ	0xFDE
 24947                           postdec2	equ	0xFDD
 24948                           plusw2	equ	0xFDB
 24949                           fsr2h	equ	0xFDA
 24950                           fsr2l	equ	0xFD9
 24951                           status	equ	0xFD8
 24952                           
 24953 ;; *************** function _SPI_ExchangeByte *****************
 24954 ;; Defined at:
 24955 ;;		line 55 in file "../board_support_package/picdem2_net/mssp_spi_master.c"
 24956 ;; Parameters:    Size  Location     Type
 24957 ;;  v               1    wreg     unsigned char 
 24958 ;; Auto vars:     Size  Location     Type
 24959 ;;  v               1    1[COMRAM] unsigned char 
 24960 ;; Return value:  Size  Location     Type
 24961 ;;                  1    wreg      unsigned char 
 24962 ;; Registers used:
 24963 ;;		wreg, status,2
 24964 ;; Tracked objects:
 24965 ;;		On entry : 0/2
 24966 ;;		On exit  : 0/0
 24967 ;;		Unchanged: 0/0
 24968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24973 ;;Total ram usage:        1 bytes
 24974 ;; Hardware stack levels used:    1
 24975 ;; Hardware stack levels required when called:    3
 24976 ;; This function calls:
 24977 ;;		Nothing
 24978 ;; This function is called by:
 24979 ;;		_ETH_Init
 24980 ;;		_ETH_NextPacketUpdate
 24981 ;;		_ENCx24_BankselSPI
 24982 ;;		_ENCx24_Read
 24983 ;;		_ENCx24_Write
 24984 ;;		_ENCx24_BFS
 24985 ;;		_ENCx24_BFC
 24986 ;;		_ETH_Read8
 24987 ;;		_ETH_Read16
 24988 ;;		_ETH_Read32
 24989 ;;		_ETH_ReadBlock
 24990 ;;		_ETH_Write8
 24991 ;;		_ETH_Write16
 24992 ;;		_ETH_Write32
 24993 ;;		_ETH_WriteBlock
 24994 ;;		_ETH_Insert
 24995 ;;		_ETH_Set_TXRTS
 24996 ;;		_ETH_SetPktDec
 24997 ;;		_ETH_SetRXptr
 24998 ;;		_ETH_MACRead8
 24999 ;; This function uses a non-reentrant model
 25000 ;;
 25001                           
 25002                           	psect	text103
 25003  008798                     __ptext103:
 25004                           	opt stack 0
 25005  008798                     _SPI_ExchangeByte:
 25006                           	opt stack 23
 25007                           
 25008                           ; BSR set to: 1
 25009                           ;incstack = 0
 25010                           ;SPI_ExchangeByte@v stored from wreg
 25011  008798  6E02               	movwf	SPI_ExchangeByte@v,c
 25012                           
 25013                           ;mssp_spi_master.c: 57: SSP1BUF = v;
 25014  00879A  C002  FFC9         	movff	SPI_ExchangeByte@v,4041	;volatile
 25015  00879E                     l283:
 25016  00879E  A0C7               	btfss	4039,0,c	;volatile
 25017  0087A0  D7FE               	goto	l283
 25018                           
 25019                           ;mssp_spi_master.c: 59: return SSPBUF;
 25020  0087A2  50C9               	movf	4041,w,c	;volatile
 25021  0087A4  0012               	return		;funcret
 25022  0087A6                     __end_of_SPI_ExchangeByte:
 25023                           	opt stack 0
 25024                           tosu	equ	0xFFF
 25025                           tosh	equ	0xFFE
 25026                           tosl	equ	0xFFD
 25027                           pclath	equ	0xFFA
 25028                           tblptru	equ	0xFF8
 25029                           tblptrh	equ	0xFF7
 25030                           tblptrl	equ	0xFF6
 25031                           tablat	equ	0xFF5
 25032                           prodh	equ	0xFF4
 25033                           prodl	equ	0xFF3
 25034                           intcon	equ	0xFF2
 25035                           intcon2	equ	0xFF1
 25036                           indf0	equ	0xFEF
 25037                           postinc0	equ	0xFEE
 25038                           fsr0h	equ	0xFEA
 25039                           fsr0l	equ	0xFE9
 25040                           wreg	equ	0xFE8
 25041                           indf1	equ	0xFE7
 25042                           postinc1	equ	0xFE6
 25043                           postdec1	equ	0xFE5
 25044                           plusw1	equ	0xFE3
 25045                           fsr1h	equ	0xFE2
 25046                           fsr1l	equ	0xFE1
 25047                           indf2	equ	0xFDF
 25048                           postinc2	equ	0xFDE
 25049                           postdec2	equ	0xFDD
 25050                           plusw2	equ	0xFDB
 25051                           fsr2h	equ	0xFDA
 25052                           fsr2l	equ	0xFD9
 25053                           status	equ	0xFD8
 25054                           
 25055 ;; *************** function _TCB_Reset *****************
 25056 ;; Defined at:
 25057 ;;		line 134 in file "../../TCPIP Library/source/tcpv4.c"
 25058 ;; Parameters:    Size  Location     Type
 25059 ;;  tcbPtr          2    1[COMRAM] PTR struct .
 25060 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
 25061 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), NULL(0), 
 25062 ;; Auto vars:     Size  Location     Type
 25063 ;;		None
 25064 ;; Return value:  Size  Location     Type
 25065 ;;		None               void
 25066 ;; Registers used:
 25067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 25068 ;; Tracked objects:
 25069 ;;		On entry : 0/0
 25070 ;;		On exit  : 0/0
 25071 ;;		Unchanged: 0/0
 25072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25076 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25077 ;;Total ram usage:        4 bytes
 25078 ;; Hardware stack levels used:    1
 25079 ;; Hardware stack levels required when called:    3
 25080 ;; This function calls:
 25081 ;;		Nothing
 25082 ;; This function is called by:
 25083 ;;		_TCP_FiniteStateMachine
 25084 ;;		_TCP_SocketInit
 25085 ;; This function uses a non-reentrant model
 25086 ;;
 25087                           
 25088                           	psect	text104
 25089  005DC4                     __ptext104:
 25090                           	opt stack 0
 25091  005DC4                     _TCB_Reset:
 25092                           	opt stack 24
 25093                           
 25094                           ;tcpv4.c: 136: tcbPtr->destIP = 0;
 25095                           
 25096                           ;incstack = 0
 25097  005DC4  0E02               	movlw	2
 25098  005DC6  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25099  005DC8  6E04               	movwf	??_TCB_Reset& (0+255),c
 25100  005DCA  0E00               	movlw	0
 25101  005DCC  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25102  005DCE  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25103  005DD0  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25104  005DD4  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25105  005DD8  0E00               	movlw	low (__smallconst shr (0+16))
 25106  005DDA  6EF8               	movwf	tblptru,c
 25107  005DDC  0E0F               	movlw	(high __ramtop+-1)
 25108  005DDE  64F7               	cpfsgt	tblptrh,c
 25109  005DE0  D009               	bra	u11157
 25110  005DE2  6AF5               	clrf	tablat,c
 25111  005DE4  000D               	tblwt		*+
 25112  005DE6  6AF5               	clrf	tablat,c
 25113  005DE8  000D               	tblwt		*+
 25114  005DEA  6AF5               	clrf	tablat,c
 25115  005DEC  000D               	tblwt		*+
 25116  005DEE  6AF5               	clrf	tablat,c
 25117  005DF0  000C               	tblwt		*
 25118  005DF2  D008               	bra	u11150
 25119  005DF4                     u11157:
 25120  005DF4  CFF6 FFE9          	movff	tblptrl,fsr0l
 25121  005DF8  CFF7 FFEA          	movff	tblptrh,fsr0h
 25122  005DFC  6AEE               	clrf	postinc0,c
 25123  005DFE  6AEE               	clrf	postinc0,c
 25124  005E00  6AEE               	clrf	postinc0,c
 25125  005E02  6AEF               	clrf	indf0,c
 25126  005E04                     u11150:
 25127                           
 25128                           ;tcpv4.c: 137: tcbPtr->destPort = 0;
 25129  005E04  0E06               	movlw	6
 25130  005E06  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25131  005E08  6E04               	movwf	??_TCB_Reset& (0+255),c
 25132  005E0A  0E00               	movlw	0
 25133  005E0C  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25134  005E0E  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25135  005E10  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25136  005E14  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25137  005E18  0E00               	movlw	low (__smallconst shr (0+16))
 25138  005E1A  6EF8               	movwf	tblptru,c
 25139  005E1C  0E0F               	movlw	(high __ramtop+-1)
 25140  005E1E  64F7               	cpfsgt	tblptrh,c
 25141  005E20  D005               	bra	u11167
 25142  005E22  6AF5               	clrf	tablat,c
 25143  005E24  000D               	tblwt		*+
 25144  005E26  6AF5               	clrf	tablat,c
 25145  005E28  000C               	tblwt		*
 25146  005E2A  D006               	bra	u11160
 25147  005E2C                     u11167:
 25148  005E2C  CFF6 FFE9          	movff	tblptrl,fsr0l
 25149  005E30  CFF7 FFEA          	movff	tblptrh,fsr0h
 25150  005E34  6AEE               	clrf	postinc0,c
 25151  005E36  6AEF               	clrf	indf0,c
 25152  005E38                     u11160:
 25153                           
 25154                           ;tcpv4.c: 138: tcbPtr->localSeqno = 0;
 25155  005E38  0E10               	movlw	16
 25156  005E3A  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25157  005E3C  6E04               	movwf	??_TCB_Reset& (0+255),c
 25158  005E3E  0E00               	movlw	0
 25159  005E40  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25160  005E42  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25161  005E44  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25162  005E48  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25163  005E4C  0E00               	movlw	low (__smallconst shr (0+16))
 25164  005E4E  6EF8               	movwf	tblptru,c
 25165  005E50  0E0F               	movlw	(high __ramtop+-1)
 25166  005E52  64F7               	cpfsgt	tblptrh,c
 25167  005E54  D009               	bra	u11177
 25168  005E56  6AF5               	clrf	tablat,c
 25169  005E58  000D               	tblwt		*+
 25170  005E5A  6AF5               	clrf	tablat,c
 25171  005E5C  000D               	tblwt		*+
 25172  005E5E  6AF5               	clrf	tablat,c
 25173  005E60  000D               	tblwt		*+
 25174  005E62  6AF5               	clrf	tablat,c
 25175  005E64  000C               	tblwt		*
 25176  005E66  D008               	bra	u11170
 25177  005E68                     u11177:
 25178  005E68  CFF6 FFE9          	movff	tblptrl,fsr0l
 25179  005E6C  CFF7 FFEA          	movff	tblptrh,fsr0h
 25180  005E70  6AEE               	clrf	postinc0,c
 25181  005E72  6AEE               	clrf	postinc0,c
 25182  005E74  6AEE               	clrf	postinc0,c
 25183  005E76  6AEF               	clrf	indf0,c
 25184  005E78                     u11170:
 25185                           
 25186                           ;tcpv4.c: 139: tcbPtr->localLastAck = 0;
 25187  005E78  0E14               	movlw	20
 25188  005E7A  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25189  005E7C  6E04               	movwf	??_TCB_Reset& (0+255),c
 25190  005E7E  0E00               	movlw	0
 25191  005E80  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25192  005E82  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25193  005E84  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25194  005E88  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25195  005E8C  0E00               	movlw	low (__smallconst shr (0+16))
 25196  005E8E  6EF8               	movwf	tblptru,c
 25197  005E90  0E0F               	movlw	(high __ramtop+-1)
 25198  005E92  64F7               	cpfsgt	tblptrh,c
 25199  005E94  D009               	bra	u11187
 25200  005E96  6AF5               	clrf	tablat,c
 25201  005E98  000D               	tblwt		*+
 25202  005E9A  6AF5               	clrf	tablat,c
 25203  005E9C  000D               	tblwt		*+
 25204  005E9E  6AF5               	clrf	tablat,c
 25205  005EA0  000D               	tblwt		*+
 25206  005EA2  6AF5               	clrf	tablat,c
 25207  005EA4  000C               	tblwt		*
 25208  005EA6  D008               	bra	u11180
 25209  005EA8                     u11187:
 25210  005EA8  CFF6 FFE9          	movff	tblptrl,fsr0l
 25211  005EAC  CFF7 FFEA          	movff	tblptrh,fsr0h
 25212  005EB0  6AEE               	clrf	postinc0,c
 25213  005EB2  6AEE               	clrf	postinc0,c
 25214  005EB4  6AEE               	clrf	postinc0,c
 25215  005EB6  6AEF               	clrf	indf0,c
 25216  005EB8                     u11180:
 25217                           
 25218                           ;tcpv4.c: 140: tcbPtr->remoteSeqno = 0;
 25219  005EB8  0E08               	movlw	8
 25220  005EBA  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25221  005EBC  6E04               	movwf	??_TCB_Reset& (0+255),c
 25222  005EBE  0E00               	movlw	0
 25223  005EC0  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25224  005EC2  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25225  005EC4  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25226  005EC8  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25227  005ECC  0E00               	movlw	low (__smallconst shr (0+16))
 25228  005ECE  6EF8               	movwf	tblptru,c
 25229  005ED0  0E0F               	movlw	(high __ramtop+-1)
 25230  005ED2  64F7               	cpfsgt	tblptrh,c
 25231  005ED4  D009               	bra	u11197
 25232  005ED6  6AF5               	clrf	tablat,c
 25233  005ED8  000D               	tblwt		*+
 25234  005EDA  6AF5               	clrf	tablat,c
 25235  005EDC  000D               	tblwt		*+
 25236  005EDE  6AF5               	clrf	tablat,c
 25237  005EE0  000D               	tblwt		*+
 25238  005EE2  6AF5               	clrf	tablat,c
 25239  005EE4  000C               	tblwt		*
 25240  005EE6  D008               	bra	u11190
 25241  005EE8                     u11197:
 25242  005EE8  CFF6 FFE9          	movff	tblptrl,fsr0l
 25243  005EEC  CFF7 FFEA          	movff	tblptrh,fsr0h
 25244  005EF0  6AEE               	clrf	postinc0,c
 25245  005EF2  6AEE               	clrf	postinc0,c
 25246  005EF4  6AEE               	clrf	postinc0,c
 25247  005EF6  6AEF               	clrf	indf0,c
 25248  005EF8                     u11190:
 25249                           
 25250                           ;tcpv4.c: 141: tcbPtr->remoteAck = 0;
 25251  005EF8  0E0C               	movlw	12
 25252  005EFA  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25253  005EFC  6E04               	movwf	??_TCB_Reset& (0+255),c
 25254  005EFE  0E00               	movlw	0
 25255  005F00  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25256  005F02  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25257  005F04  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25258  005F08  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25259  005F0C  0E00               	movlw	low (__smallconst shr (0+16))
 25260  005F0E  6EF8               	movwf	tblptru,c
 25261  005F10  0E0F               	movlw	(high __ramtop+-1)
 25262  005F12  64F7               	cpfsgt	tblptrh,c
 25263  005F14  D009               	bra	u11207
 25264  005F16  6AF5               	clrf	tablat,c
 25265  005F18  000D               	tblwt		*+
 25266  005F1A  6AF5               	clrf	tablat,c
 25267  005F1C  000D               	tblwt		*+
 25268  005F1E  6AF5               	clrf	tablat,c
 25269  005F20  000D               	tblwt		*+
 25270  005F22  6AF5               	clrf	tablat,c
 25271  005F24  000C               	tblwt		*
 25272  005F26  D008               	bra	u11200
 25273  005F28                     u11207:
 25274  005F28  CFF6 FFE9          	movff	tblptrl,fsr0l
 25275  005F2C  CFF7 FFEA          	movff	tblptrh,fsr0h
 25276  005F30  6AEE               	clrf	postinc0,c
 25277  005F32  6AEE               	clrf	postinc0,c
 25278  005F34  6AEE               	clrf	postinc0,c
 25279  005F36  6AEF               	clrf	indf0,c
 25280  005F38                     u11200:
 25281                           
 25282                           ;tcpv4.c: 142: tcbPtr->remoteWnd = 0;
 25283  005F38  0E18               	movlw	24
 25284  005F3A  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25285  005F3C  6E04               	movwf	??_TCB_Reset& (0+255),c
 25286  005F3E  0E00               	movlw	0
 25287  005F40  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25288  005F42  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25289  005F44  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25290  005F48  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25291  005F4C  0E00               	movlw	low (__smallconst shr (0+16))
 25292  005F4E  6EF8               	movwf	tblptru,c
 25293  005F50  0E0F               	movlw	(high __ramtop+-1)
 25294  005F52  64F7               	cpfsgt	tblptrh,c
 25295  005F54  D005               	bra	u11217
 25296  005F56  6AF5               	clrf	tablat,c
 25297  005F58  000D               	tblwt		*+
 25298  005F5A  6AF5               	clrf	tablat,c
 25299  005F5C  000C               	tblwt		*
 25300  005F5E  D006               	bra	u11210
 25301  005F60                     u11217:
 25302  005F60  CFF6 FFE9          	movff	tblptrl,fsr0l
 25303  005F64  CFF7 FFEA          	movff	tblptrh,fsr0h
 25304  005F68  6AEE               	clrf	postinc0,c
 25305  005F6A  6AEF               	clrf	indf0,c
 25306  005F6C                     u11210:
 25307                           
 25308                           ;tcpv4.c: 144: tcbPtr->timeout = 0;
 25309  005F6C  0E30               	movlw	48
 25310  005F6E  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25311  005F70  6E04               	movwf	??_TCB_Reset& (0+255),c
 25312  005F72  0E00               	movlw	0
 25313  005F74  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25314  005F76  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25315  005F78  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25316  005F7C  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25317  005F80  0E00               	movlw	low (__smallconst shr (0+16))
 25318  005F82  6EF8               	movwf	tblptru,c
 25319  005F84  0E0F               	movlw	(high __ramtop+-1)
 25320  005F86  64F7               	cpfsgt	tblptrh,c
 25321  005F88  D005               	bra	u11227
 25322  005F8A  6AF5               	clrf	tablat,c
 25323  005F8C  000D               	tblwt		*+
 25324  005F8E  6AF5               	clrf	tablat,c
 25325  005F90  000C               	tblwt		*
 25326  005F92  D006               	bra	u11220
 25327  005F94                     u11227:
 25328  005F94  CFF6 FFE9          	movff	tblptrl,fsr0l
 25329  005F98  CFF7 FFEA          	movff	tblptrh,fsr0h
 25330  005F9C  6AEE               	clrf	postinc0,c
 25331  005F9E  6AEF               	clrf	indf0,c
 25332  005FA0                     u11220:
 25333                           
 25334                           ;tcpv4.c: 145: tcbPtr->timeoutReloadValue = 0;
 25335  005FA0  0E32               	movlw	50
 25336  005FA2  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25337  005FA4  6E04               	movwf	??_TCB_Reset& (0+255),c
 25338  005FA6  0E00               	movlw	0
 25339  005FA8  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25340  005FAA  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25341  005FAC  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25342  005FB0  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25343  005FB4  0E00               	movlw	low (__smallconst shr (0+16))
 25344  005FB6  6EF8               	movwf	tblptru,c
 25345  005FB8  0E0F               	movlw	(high __ramtop+-1)
 25346  005FBA  64F7               	cpfsgt	tblptrh,c
 25347  005FBC  D005               	bra	u11237
 25348  005FBE  6AF5               	clrf	tablat,c
 25349  005FC0  000D               	tblwt		*+
 25350  005FC2  6AF5               	clrf	tablat,c
 25351  005FC4  000C               	tblwt		*
 25352  005FC6  D006               	bra	u11230
 25353  005FC8                     u11237:
 25354  005FC8  CFF6 FFE9          	movff	tblptrl,fsr0l
 25355  005FCC  CFF7 FFEA          	movff	tblptrh,fsr0h
 25356  005FD0  6AEE               	clrf	postinc0,c
 25357  005FD2  6AEF               	clrf	indf0,c
 25358  005FD4                     u11230:
 25359                           
 25360                           ;tcpv4.c: 146: tcbPtr->timeoutsCount = 0;
 25361  005FD4  0E34               	movlw	52
 25362  005FD6  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25363  005FD8  6E04               	movwf	??_TCB_Reset& (0+255),c
 25364  005FDA  0E00               	movlw	0
 25365  005FDC  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25366  005FDE  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25367  005FE0  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25368  005FE4  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25369  005FE8  0E00               	movlw	low (__smallconst shr (0+16))
 25370  005FEA  6EF8               	movwf	tblptru,c
 25371  005FEC  0E0F               	movlw	(high __ramtop+-1)
 25372  005FEE  64F7               	cpfsgt	tblptrh,c
 25373  005FF0  D003               	bra	u11247
 25374  005FF2  6AF5               	clrf	tablat,c
 25375  005FF4  000C               	tblwt		*
 25376  005FF6  D005               	bra	u11240
 25377  005FF8                     u11247:
 25378  005FF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 25379  005FFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 25380  006000  6AEF               	clrf	indf0,c
 25381  006002                     u11240:
 25382                           
 25383                           ;tcpv4.c: 147: tcbPtr->flags = 0;
 25384  006002  0E35               	movlw	53
 25385  006004  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25386  006006  6E04               	movwf	??_TCB_Reset& (0+255),c
 25387  006008  0E00               	movlw	0
 25388  00600A  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25389  00600C  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25390  00600E  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25391  006012  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25392  006016  0E00               	movlw	low (__smallconst shr (0+16))
 25393  006018  6EF8               	movwf	tblptru,c
 25394  00601A  0E0F               	movlw	(high __ramtop+-1)
 25395  00601C  64F7               	cpfsgt	tblptrh,c
 25396  00601E  D003               	bra	u11257
 25397  006020  6AF5               	clrf	tablat,c
 25398  006022  000C               	tblwt		*
 25399  006024  D005               	bra	u11250
 25400  006026                     u11257:
 25401  006026  CFF6 FFE9          	movff	tblptrl,fsr0l
 25402  00602A  CFF7 FFEA          	movff	tblptrh,fsr0h
 25403  00602E  6AEF               	clrf	indf0,c
 25404  006030                     u11250:
 25405                           
 25406                           ;tcpv4.c: 149: tcbPtr->localPort = 0;
 25407  006030  C002  FFF6         	movff	TCB_Reset@tcbPtr,tblptrl
 25408  006034  C003  FFF7         	movff	TCB_Reset@tcbPtr+1,tblptrh
 25409  006038  0E00               	movlw	low (__smallconst shr (0+16))
 25410  00603A  6EF8               	movwf	tblptru,c
 25411  00603C  0E0F               	movlw	(high __ramtop+-1)
 25412  00603E  64F7               	cpfsgt	tblptrh,c
 25413  006040  D005               	bra	u11267
 25414  006042  6AF5               	clrf	tablat,c
 25415  006044  000D               	tblwt		*+
 25416  006046  6AF5               	clrf	tablat,c
 25417  006048  000C               	tblwt		*
 25418  00604A  D006               	bra	u11260
 25419  00604C                     u11267:
 25420  00604C  CFF6 FFE9          	movff	tblptrl,fsr0l
 25421  006050  CFF7 FFEA          	movff	tblptrh,fsr0h
 25422  006054  6AEE               	clrf	postinc0,c
 25423  006056  6AEF               	clrf	indf0,c
 25424  006058                     u11260:
 25425                           
 25426                           ;tcpv4.c: 150: tcbPtr->socketState = SOCKET_CLOSED;
 25427  006058  0E36               	movlw	54
 25428  00605A  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25429  00605C  6E04               	movwf	??_TCB_Reset& (0+255),c
 25430  00605E  0E00               	movlw	0
 25431  006060  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25432  006062  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25433  006064  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25434  006068  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25435  00606C  0E00               	movlw	low (__smallconst shr (0+16))
 25436  00606E  6EF8               	movwf	tblptru,c
 25437  006070  0E0F               	movlw	(high __ramtop+-1)
 25438  006072  64F7               	cpfsgt	tblptrh,c
 25439  006074  D004               	bra	u11277
 25440  006076  0E01               	movlw	1
 25441  006078  6EF5               	movwf	tablat,c
 25442  00607A  000C               	tblwt		*
 25443  00607C  D006               	bra	u11270
 25444  00607E                     u11277:
 25445  00607E  CFF6 FFE9          	movff	tblptrl,fsr0l
 25446  006082  CFF7 FFEA          	movff	tblptrh,fsr0h
 25447  006086  0E01               	movlw	1
 25448  006088  6EEF               	movwf	indf0,c
 25449  00608A                     u11270:
 25450  00608A  0012               	return		;funcret
 25451  00608C                     __end_of_TCB_Reset:
 25452                           	opt stack 0
 25453                           tosu	equ	0xFFF
 25454                           tosh	equ	0xFFE
 25455                           tosl	equ	0xFFD
 25456                           pclath	equ	0xFFA
 25457                           tblptru	equ	0xFF8
 25458                           tblptrh	equ	0xFF7
 25459                           tblptrl	equ	0xFF6
 25460                           tablat	equ	0xFF5
 25461                           prodh	equ	0xFF4
 25462                           prodl	equ	0xFF3
 25463                           intcon	equ	0xFF2
 25464                           intcon2	equ	0xFF1
 25465                           indf0	equ	0xFEF
 25466                           postinc0	equ	0xFEE
 25467                           fsr0h	equ	0xFEA
 25468                           fsr0l	equ	0xFE9
 25469                           wreg	equ	0xFE8
 25470                           indf1	equ	0xFE7
 25471                           postinc1	equ	0xFE6
 25472                           postdec1	equ	0xFE5
 25473                           plusw1	equ	0xFE3
 25474                           fsr1h	equ	0xFE2
 25475                           fsr1l	equ	0xFE1
 25476                           indf2	equ	0xFDF
 25477                           postinc2	equ	0xFDE
 25478                           postdec2	equ	0xFDD
 25479                           plusw2	equ	0xFDB
 25480                           fsr2h	equ	0xFDA
 25481                           fsr2l	equ	0xFD9
 25482                           status	equ	0xFD8
 25483                           
 25484 ;; *************** function _TCP_InsertRxBuffer *****************
 25485 ;; Defined at:
 25486 ;;		line 1361 in file "../../TCPIP Library/source/tcpv4.c"
 25487 ;; Parameters:    Size  Location     Type
 25488 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 25489 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 25490 ;;  data            2   11[COMRAM] PTR unsigned char 
 25491 ;;		 -> DEMO_TCP_EchoServer@rxdataPort7(20), 
 25492 ;;  data_len        2   13[COMRAM] unsigned int 
 25493 ;; Auto vars:     Size  Location     Type
 25494 ;;  ret             1    0        unsigned char 
 25495 ;; Return value:  Size  Location     Type
 25496 ;;                  1    wreg      unsigned char 
 25497 ;; Registers used:
 25498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25499 ;; Tracked objects:
 25500 ;;		On entry : 0/0
 25501 ;;		On exit  : 0/0
 25502 ;;		Unchanged: 0/0
 25503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25504 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25507 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25508 ;;Total ram usage:        7 bytes
 25509 ;; Hardware stack levels used:    1
 25510 ;; Hardware stack levels required when called:    4
 25511 ;; This function calls:
 25512 ;;		_TCB_Check
 25513 ;; This function is called by:
 25514 ;;		_DEMO_TCP_EchoServer
 25515 ;; This function uses a non-reentrant model
 25516 ;;
 25517                           
 25518                           	psect	text105
 25519  0076D6                     __ptext105:
 25520                           	opt stack 0
 25521  0076D6                     _TCP_InsertRxBuffer:
 25522                           	opt stack 25
 25523                           
 25524                           ;tcpv4.c: 1365: if (TCB_Check(tcbPtr))
 25525                           
 25526                           ;incstack = 0
 25527  0076D6  C00A  F002         	movff	TCP_InsertRxBuffer@tcbPtr,TCB_Check@ptr
 25528  0076DA  C00B  F003         	movff	TCP_InsertRxBuffer@tcbPtr+1,TCB_Check@ptr+1
 25529  0076DE  ECF1  F03B         	call	_TCB_Check	;wreg free
 25530  0076E2  0900               	iorlw	0
 25531  0076E4  B4D8               	btfsc	status,2,c
 25532  0076E6  0012               	return	
 25533                           
 25534                           ;tcpv4.c: 1366: {
 25535                           ;tcpv4.c: 1367: if (tcbPtr->rxBufState == NO_BUFF)
 25536  0076E8  EE20 F022          	lfsr	2,34
 25537  0076EC  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 25538  0076EE  26D9               	addwf	fsr2l,f,c
 25539  0076F0  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 25540  0076F2  22DA               	addwfc	fsr2h,f,c
 25541  0076F4  50DF               	movf	indf2,w,c
 25542  0076F6  A4D8               	btfss	status,2,c
 25543  0076F8  0012               	return	
 25544                           
 25545                           ;tcpv4.c: 1368: {
 25546                           ;tcpv4.c: 1369: if (data != (0))
 25547  0076FA  500C               	movf	TCP_InsertRxBuffer@data,w,c
 25548  0076FC  100D               	iorwf	TCP_InsertRxBuffer@data+1,w,c
 25549  0076FE  B4D8               	btfsc	status,2,c
 25550  007700  0012               	return	
 25551                           
 25552                           ;tcpv4.c: 1370: {
 25553                           ;tcpv4.c: 1371: tcbPtr->rxBufferStart = data;
 25554  007702  EE20 F01E          	lfsr	2,30
 25555  007706  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 25556  007708  26D9               	addwf	fsr2l,f,c
 25557  00770A  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 25558  00770C  22DA               	addwfc	fsr2h,f,c
 25559  00770E  C00C  FFDE         	movff	TCP_InsertRxBuffer@data,postinc2
 25560  007712  C00D  FFDD         	movff	TCP_InsertRxBuffer@data+1,postdec2
 25561                           
 25562                           ;tcpv4.c: 1372: tcbPtr->rxBufferPtr = tcbPtr->rxBufferStart;
 25563  007716  EE20 F01E          	lfsr	2,30
 25564  00771A  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 25565  00771C  26D9               	addwf	fsr2l,f,c
 25566  00771E  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 25567  007720  22DA               	addwfc	fsr2h,f,c
 25568  007722  EE10 F020          	lfsr	1,32
 25569  007726  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 25570  007728  26E1               	addwf	fsr1l,f,c
 25571  00772A  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 25572  00772C  22E2               	addwfc	fsr1h,f,c
 25573  00772E  CFDE FFE6          	movff	postinc2,postinc1
 25574  007732  CFDD FFE5          	movff	postdec2,postdec1
 25575                           
 25576                           ;tcpv4.c: 1373: tcbPtr->localWnd = data_len;
 25577  007736  EE20 F01A          	lfsr	2,26
 25578  00773A  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 25579  00773C  26D9               	addwf	fsr2l,f,c
 25580  00773E  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 25581  007740  22DA               	addwfc	fsr2h,f,c
 25582  007742  C00E  FFDE         	movff	TCP_InsertRxBuffer@data_len,postinc2
 25583  007746  C00F  FFDD         	movff	TCP_InsertRxBuffer@data_len+1,postdec2
 25584                           
 25585                           ;tcpv4.c: 1374: tcbPtr->rxBufState = RX_BUFF_IN_USE;
 25586  00774A  EE20 F022          	lfsr	2,34
 25587  00774E  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 25588  007750  26D9               	addwf	fsr2l,f,c
 25589  007752  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 25590  007754  22DA               	addwfc	fsr2h,f,c
 25591  007756  0E01               	movlw	1
 25592  007758  6EDF               	movwf	indf2,c
 25593  00775A  0C01               	retlw	1
 25594  00775C                     __end_of_TCP_InsertRxBuffer:
 25595                           	opt stack 0
 25596                           tosu	equ	0xFFF
 25597                           tosh	equ	0xFFE
 25598                           tosl	equ	0xFFD
 25599                           pclath	equ	0xFFA
 25600                           tblptru	equ	0xFF8
 25601                           tblptrh	equ	0xFF7
 25602                           tblptrl	equ	0xFF6
 25603                           tablat	equ	0xFF5
 25604                           prodh	equ	0xFF4
 25605                           prodl	equ	0xFF3
 25606                           intcon	equ	0xFF2
 25607                           intcon2	equ	0xFF1
 25608                           indf0	equ	0xFEF
 25609                           postinc0	equ	0xFEE
 25610                           fsr0h	equ	0xFEA
 25611                           fsr0l	equ	0xFE9
 25612                           wreg	equ	0xFE8
 25613                           indf1	equ	0xFE7
 25614                           postinc1	equ	0xFE6
 25615                           postdec1	equ	0xFE5
 25616                           plusw1	equ	0xFE3
 25617                           fsr1h	equ	0xFE2
 25618                           fsr1l	equ	0xFE1
 25619                           indf2	equ	0xFDF
 25620                           postinc2	equ	0xFDE
 25621                           postdec2	equ	0xFDD
 25622                           plusw2	equ	0xFDB
 25623                           fsr2h	equ	0xFDA
 25624                           fsr2l	equ	0xFD9
 25625                           status	equ	0xFD8
 25626                           
 25627 ;; *************** function _TCP_GetRxLength *****************
 25628 ;; Defined at:
 25629 ;;		line 1403 in file "../../TCPIP Library/source/tcpv4.c"
 25630 ;; Parameters:    Size  Location     Type
 25631 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 25632 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 25633 ;; Auto vars:     Size  Location     Type
 25634 ;;  ret             2   15[COMRAM] int 
 25635 ;; Return value:  Size  Location     Type
 25636 ;;                  2    9[COMRAM] int 
 25637 ;; Registers used:
 25638 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25639 ;; Tracked objects:
 25640 ;;		On entry : 0/0
 25641 ;;		On exit  : 0/0
 25642 ;;		Unchanged: 0/0
 25643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25645 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25647 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25648 ;;Total ram usage:        8 bytes
 25649 ;; Hardware stack levels used:    1
 25650 ;; Hardware stack levels required when called:    4
 25651 ;; This function calls:
 25652 ;;		_TCB_Check
 25653 ;; This function is called by:
 25654 ;;		_DEMO_TCP_EchoServer
 25655 ;; This function uses a non-reentrant model
 25656 ;;
 25657                           
 25658                           	psect	text106
 25659  007B9A                     __ptext106:
 25660                           	opt stack 0
 25661  007B9A                     _TCP_GetRxLength:
 25662                           	opt stack 25
 25663                           
 25664                           ;tcpv4.c: 1405: int16_t ret = 0;
 25665                           
 25666                           ;incstack = 0
 25667  007B9A  6A10               	clrf	TCP_GetRxLength@ret,c
 25668  007B9C  6A11               	clrf	TCP_GetRxLength@ret+1,c
 25669                           
 25670                           ;tcpv4.c: 1407: if (TCB_Check(tcbPtr))
 25671  007B9E  C00A  F002         	movff	TCP_GetRxLength@tcbPtr,TCB_Check@ptr
 25672  007BA2  C00B  F003         	movff	TCP_GetRxLength@tcbPtr+1,TCB_Check@ptr+1
 25673  007BA6  ECF1  F03B         	call	_TCB_Check	;wreg free
 25674  007BAA  0900               	iorlw	0
 25675  007BAC  E022               	bz	l9959
 25676                           
 25677                           ;tcpv4.c: 1408: {
 25678                           ;tcpv4.c: 1409: if (tcbPtr->rxBufState == RX_BUFF_IN_USE)
 25679  007BAE  EE20 F022          	lfsr	2,34
 25680  007BB2  500A               	movf	TCP_GetRxLength@tcbPtr,w,c
 25681  007BB4  26D9               	addwf	fsr2l,f,c
 25682  007BB6  500B               	movf	TCP_GetRxLength@tcbPtr+1,w,c
 25683  007BB8  22DA               	addwfc	fsr2h,f,c
 25684  007BBA  04DE               	decf	postinc2,w,c
 25685  007BBC  E11A               	bnz	l9959
 25686                           
 25687                           ;tcpv4.c: 1410: {
 25688                           ;tcpv4.c: 1411: ret = tcbPtr->rxBufferPtr - tcbPtr->rxBufferStart;
 25689  007BBE  EE20 F01E          	lfsr	2,30
 25690  007BC2  500A               	movf	TCP_GetRxLength@tcbPtr,w,c
 25691  007BC4  26D9               	addwf	fsr2l,f,c
 25692  007BC6  500B               	movf	TCP_GetRxLength@tcbPtr+1,w,c
 25693  007BC8  22DA               	addwfc	fsr2h,f,c
 25694  007BCA  CFDE F00C          	movff	postinc2,??_TCP_GetRxLength
 25695  007BCE  CFDD F00D          	movff	postdec2,??_TCP_GetRxLength+1
 25696  007BD2  EE20 F020          	lfsr	2,32
 25697  007BD6  500A               	movf	TCP_GetRxLength@tcbPtr,w,c
 25698  007BD8  26D9               	addwf	fsr2l,f,c
 25699  007BDA  500B               	movf	TCP_GetRxLength@tcbPtr+1,w,c
 25700  007BDC  22DA               	addwfc	fsr2h,f,c
 25701  007BDE  CFDE F00E          	movff	postinc2,??_TCP_GetRxLength+2
 25702  007BE2  CFDD F00F          	movff	postdec2,??_TCP_GetRxLength+3
 25703  007BE6  500C               	movf	??_TCP_GetRxLength,w,c
 25704  007BE8  5C0E               	subwf	??_TCP_GetRxLength+2,w,c
 25705  007BEA  6E10               	movwf	TCP_GetRxLength@ret,c
 25706  007BEC  500D               	movf	??_TCP_GetRxLength+1,w,c
 25707  007BEE  580F               	subwfb	??_TCP_GetRxLength+3,w,c
 25708  007BF0  6E11               	movwf	TCP_GetRxLength@ret+1,c
 25709  007BF2                     l9959:
 25710                           
 25711                           ;tcpv4.c: 1412: }
 25712                           ;tcpv4.c: 1413: }
 25713                           ;tcpv4.c: 1414: return ret;
 25714  007BF2  C010  F00A         	movff	TCP_GetRxLength@ret,?_TCP_GetRxLength
 25715  007BF6  C011  F00B         	movff	TCP_GetRxLength@ret+1,?_TCP_GetRxLength+1
 25716  007BFA  0012               	return		;funcret
 25717  007BFC                     __end_of_TCP_GetRxLength:
 25718                           	opt stack 0
 25719                           tosu	equ	0xFFF
 25720                           tosh	equ	0xFFE
 25721                           tosl	equ	0xFFD
 25722                           pclath	equ	0xFFA
 25723                           tblptru	equ	0xFF8
 25724                           tblptrh	equ	0xFF7
 25725                           tblptrl	equ	0xFF6
 25726                           tablat	equ	0xFF5
 25727                           prodh	equ	0xFF4
 25728                           prodl	equ	0xFF3
 25729                           intcon	equ	0xFF2
 25730                           intcon2	equ	0xFF1
 25731                           indf0	equ	0xFEF
 25732                           postinc0	equ	0xFEE
 25733                           fsr0h	equ	0xFEA
 25734                           fsr0l	equ	0xFE9
 25735                           wreg	equ	0xFE8
 25736                           indf1	equ	0xFE7
 25737                           postinc1	equ	0xFE6
 25738                           postdec1	equ	0xFE5
 25739                           plusw1	equ	0xFE3
 25740                           fsr1h	equ	0xFE2
 25741                           fsr1l	equ	0xFE1
 25742                           indf2	equ	0xFDF
 25743                           postinc2	equ	0xFDE
 25744                           postdec2	equ	0xFDD
 25745                           plusw2	equ	0xFDB
 25746                           fsr2h	equ	0xFDA
 25747                           fsr2l	equ	0xFD9
 25748                           status	equ	0xFD8
 25749                           
 25750 ;; *************** function _TCP_GetReceivedData *****************
 25751 ;; Defined at:
 25752 ;;		line 1383 in file "../../TCPIP Library/source/tcpv4.c"
 25753 ;; Parameters:    Size  Location     Type
 25754 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 25755 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 25756 ;; Auto vars:     Size  Location     Type
 25757 ;;  ret             2   15[COMRAM] int 
 25758 ;; Return value:  Size  Location     Type
 25759 ;;                  2    9[COMRAM] int 
 25760 ;; Registers used:
 25761 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25762 ;; Tracked objects:
 25763 ;;		On entry : F/0
 25764 ;;		On exit  : 0/0
 25765 ;;		Unchanged: 0/0
 25766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25769 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25770 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25771 ;;Total ram usage:        8 bytes
 25772 ;; Hardware stack levels used:    1
 25773 ;; Hardware stack levels required when called:    4
 25774 ;; This function calls:
 25775 ;;		_TCB_Check
 25776 ;; This function is called by:
 25777 ;;		_DEMO_TCP_EchoServer
 25778 ;; This function uses a non-reentrant model
 25779 ;;
 25780                           
 25781                           	psect	text107
 25782  00775C                     __ptext107:
 25783                           	opt stack 0
 25784  00775C                     _TCP_GetReceivedData:
 25785                           	opt stack 25
 25786                           
 25787                           ; BSR set to: 0
 25788                           ;tcpv4.c: 1385: int16_t ret = 0;
 25789                           
 25790                           ;incstack = 0
 25791  00775C  6A10               	clrf	TCP_GetReceivedData@ret,c
 25792  00775E  6A11               	clrf	TCP_GetReceivedData@ret+1,c
 25793                           
 25794                           ; BSR set to: 0
 25795                           ;tcpv4.c: 1387: if (TCB_Check(tcbPtr))
 25796  007760  C00A  F002         	movff	TCP_GetReceivedData@tcbPtr,TCB_Check@ptr
 25797  007764  C00B  F003         	movff	TCP_GetReceivedData@tcbPtr+1,TCB_Check@ptr+1
 25798  007768  ECF1  F03B         	call	_TCB_Check	;wreg free
 25799  00776C  0900               	iorlw	0
 25800  00776E  E034               	bz	l9947
 25801                           
 25802                           ;tcpv4.c: 1388: {
 25803                           ;tcpv4.c: 1389: if (tcbPtr->rxBufState == RX_BUFF_IN_USE)
 25804  007770  EE20 F022          	lfsr	2,34
 25805  007774  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 25806  007776  26D9               	addwf	fsr2l,f,c
 25807  007778  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 25808  00777A  22DA               	addwfc	fsr2h,f,c
 25809  00777C  04DE               	decf	postinc2,w,c
 25810  00777E  E12C               	bnz	l9947
 25811                           
 25812                           ;tcpv4.c: 1390: {
 25813                           ;tcpv4.c: 1391: ret = tcbPtr->rxBufferPtr - tcbPtr->rxBufferStart;
 25814  007780  EE20 F01E          	lfsr	2,30
 25815  007784  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 25816  007786  26D9               	addwf	fsr2l,f,c
 25817  007788  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 25818  00778A  22DA               	addwfc	fsr2h,f,c
 25819  00778C  CFDE F00C          	movff	postinc2,??_TCP_GetReceivedData
 25820  007790  CFDD F00D          	movff	postdec2,??_TCP_GetReceivedData+1
 25821  007794  EE20 F020          	lfsr	2,32
 25822  007798  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 25823  00779A  26D9               	addwf	fsr2l,f,c
 25824  00779C  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 25825  00779E  22DA               	addwfc	fsr2h,f,c
 25826  0077A0  CFDE F00E          	movff	postinc2,??_TCP_GetReceivedData+2
 25827  0077A4  CFDD F00F          	movff	postdec2,??_TCP_GetReceivedData+3
 25828  0077A8  500C               	movf	??_TCP_GetReceivedData,w,c
 25829  0077AA  5C0E               	subwf	??_TCP_GetReceivedData+2,w,c
 25830  0077AC  6E10               	movwf	TCP_GetReceivedData@ret,c
 25831  0077AE  500D               	movf	??_TCP_GetReceivedData+1,w,c
 25832  0077B0  580F               	subwfb	??_TCP_GetReceivedData+3,w,c
 25833  0077B2  6E11               	movwf	TCP_GetReceivedData@ret+1,c
 25834                           
 25835                           ;tcpv4.c: 1393: if (ret != 0)
 25836  0077B4  1010               	iorwf	TCP_GetReceivedData@ret,w,c
 25837  0077B6  E010               	bz	l9947
 25838                           
 25839                           ;tcpv4.c: 1394: {
 25840                           ;tcpv4.c: 1395: tcbPtr->localWnd = 0;
 25841  0077B8  EE20 F01A          	lfsr	2,26
 25842  0077BC  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 25843  0077BE  26D9               	addwf	fsr2l,f,c
 25844  0077C0  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 25845  0077C2  22DA               	addwfc	fsr2h,f,c
 25846  0077C4  6ADE               	clrf	postinc2,c
 25847  0077C6  6ADD               	clrf	postdec2,c
 25848                           
 25849                           ;tcpv4.c: 1396: tcbPtr->rxBufState = NO_BUFF;
 25850  0077C8  EE20 F022          	lfsr	2,34
 25851  0077CC  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 25852  0077CE  26D9               	addwf	fsr2l,f,c
 25853  0077D0  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 25854  0077D2  22DA               	addwfc	fsr2h,f,c
 25855  0077D4  0E00               	movlw	0
 25856  0077D6  6ADF               	clrf	indf2,c
 25857  0077D8                     l9947:
 25858                           
 25859                           ;tcpv4.c: 1397: }
 25860                           ;tcpv4.c: 1398: }
 25861                           ;tcpv4.c: 1399: }
 25862                           ;tcpv4.c: 1400: return ret;
 25863  0077D8  C010  F00A         	movff	TCP_GetReceivedData@ret,?_TCP_GetReceivedData
 25864  0077DC  C011  F00B         	movff	TCP_GetReceivedData@ret+1,?_TCP_GetReceivedData+1
 25865  0077E0  0012               	return		;funcret
 25866  0077E2                     __end_of_TCP_GetReceivedData:
 25867                           	opt stack 0
 25868                           tosu	equ	0xFFF
 25869                           tosh	equ	0xFFE
 25870                           tosl	equ	0xFFD
 25871                           pclath	equ	0xFFA
 25872                           tblptru	equ	0xFF8
 25873                           tblptrh	equ	0xFF7
 25874                           tblptrl	equ	0xFF6
 25875                           tablat	equ	0xFF5
 25876                           prodh	equ	0xFF4
 25877                           prodl	equ	0xFF3
 25878                           intcon	equ	0xFF2
 25879                           intcon2	equ	0xFF1
 25880                           indf0	equ	0xFEF
 25881                           postinc0	equ	0xFEE
 25882                           fsr0h	equ	0xFEA
 25883                           fsr0l	equ	0xFE9
 25884                           wreg	equ	0xFE8
 25885                           indf1	equ	0xFE7
 25886                           postinc1	equ	0xFE6
 25887                           postdec1	equ	0xFE5
 25888                           plusw1	equ	0xFE3
 25889                           fsr1h	equ	0xFE2
 25890                           fsr1l	equ	0xFE1
 25891                           indf2	equ	0xFDF
 25892                           postinc2	equ	0xFDE
 25893                           postdec2	equ	0xFDD
 25894                           plusw2	equ	0xFDB
 25895                           fsr2h	equ	0xFDA
 25896                           fsr2l	equ	0xFD9
 25897                           status	equ	0xFD8
 25898                           
 25899 ;; *************** function _TCP_Bind *****************
 25900 ;; Defined at:
 25901 ;;		line 1235 in file "../../TCPIP Library/source/tcpv4.c"
 25902 ;; Parameters:    Size  Location     Type
 25903 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 25904 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 25905 ;;  port            2   11[COMRAM] unsigned int 
 25906 ;; Auto vars:     Size  Location     Type
 25907 ;;  ret             1    0        unsigned char 
 25908 ;; Return value:  Size  Location     Type
 25909 ;;                  1    wreg      unsigned char 
 25910 ;; Registers used:
 25911 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25912 ;; Tracked objects:
 25913 ;;		On entry : D/0
 25914 ;;		On exit  : 0/0
 25915 ;;		Unchanged: 0/0
 25916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25920 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25921 ;;Total ram usage:        5 bytes
 25922 ;; Hardware stack levels used:    1
 25923 ;; Hardware stack levels required when called:    4
 25924 ;; This function calls:
 25925 ;;		_TCB_Check
 25926 ;; This function is called by:
 25927 ;;		_DEMO_TCP_EchoServer
 25928 ;; This function uses a non-reentrant model
 25929 ;;
 25930                           
 25931                           	psect	text108
 25932  008562                     __ptext108:
 25933                           	opt stack 0
 25934  008562                     _TCP_Bind:
 25935                           	opt stack 25
 25936                           
 25937                           ;tcpv4.c: 1239: ;
 25938                           ;tcpv4.c: 1241: if (TCB_Check(tcbPtr))
 25939                           
 25940                           ;incstack = 0
 25941  008562  C00A  F002         	movff	TCP_Bind@tcbPtr,TCB_Check@ptr
 25942  008566  C00B  F003         	movff	TCP_Bind@tcbPtr+1,TCB_Check@ptr+1
 25943  00856A  ECF1  F03B         	call	_TCB_Check	;wreg free
 25944  00856E  0900               	iorlw	0
 25945  008570  B4D8               	btfsc	status,2,c
 25946  008572  0012               	return	
 25947                           
 25948                           ;tcpv4.c: 1242: {
 25949                           ;tcpv4.c: 1243: tcbPtr->localPort = port;
 25950  008574  C00A  FFD9         	movff	TCP_Bind@tcbPtr,fsr2l
 25951  008578  C00B  FFDA         	movff	TCP_Bind@tcbPtr+1,fsr2h
 25952  00857C  C00C  FFDE         	movff	TCP_Bind@port,postinc2
 25953  008580  C00D  FFDD         	movff	TCP_Bind@port+1,postdec2
 25954  008584  0012               	return		;funcret
 25955  008586                     __end_of_TCP_Bind:
 25956                           	opt stack 0
 25957                           tosu	equ	0xFFF
 25958                           tosh	equ	0xFFE
 25959                           tosl	equ	0xFFD
 25960                           pclath	equ	0xFFA
 25961                           tblptru	equ	0xFF8
 25962                           tblptrh	equ	0xFF7
 25963                           tblptrl	equ	0xFF6
 25964                           tablat	equ	0xFF5
 25965                           prodh	equ	0xFF4
 25966                           prodl	equ	0xFF3
 25967                           intcon	equ	0xFF2
 25968                           intcon2	equ	0xFF1
 25969                           indf0	equ	0xFEF
 25970                           postinc0	equ	0xFEE
 25971                           fsr0h	equ	0xFEA
 25972                           fsr0l	equ	0xFE9
 25973                           wreg	equ	0xFE8
 25974                           indf1	equ	0xFE7
 25975                           postinc1	equ	0xFE6
 25976                           postdec1	equ	0xFE5
 25977                           plusw1	equ	0xFE3
 25978                           fsr1h	equ	0xFE2
 25979                           fsr1l	equ	0xFE1
 25980                           indf2	equ	0xFDF
 25981                           postinc2	equ	0xFDE
 25982                           postdec2	equ	0xFDD
 25983                           plusw2	equ	0xFDB
 25984                           fsr2h	equ	0xFDA
 25985                           fsr2l	equ	0xFD9
 25986                           status	equ	0xFD8
 25987                           
 25988 ;; *************** function _TCB_Check *****************
 25989 ;; Defined at:
 25990 ;;		line 162 in file "../../TCPIP Library/source/tcpv4.c"
 25991 ;; Parameters:    Size  Location     Type
 25992 ;;  ptr             2    1[COMRAM] PTR struct .
 25993 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 25994 ;; Auto vars:     Size  Location     Type
 25995 ;;  tcbPtr          2    7[COMRAM] PTR struct .
 25996 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
 25997 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), NULL(0), 
 25998 ;;  count           1    6[COMRAM] char 
 25999 ;;  ret             1    5[COMRAM] unsigned char 
 26000 ;; Return value:  Size  Location     Type
 26001 ;;                  1    wreg      unsigned char 
 26002 ;; Registers used:
 26003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 26004 ;; Tracked objects:
 26005 ;;		On entry : 0/0
 26006 ;;		On exit  : 0/0
 26007 ;;		Unchanged: 0/0
 26008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26010 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26012 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26013 ;;Total ram usage:        8 bytes
 26014 ;; Hardware stack levels used:    1
 26015 ;; Hardware stack levels required when called:    3
 26016 ;; This function calls:
 26017 ;;		Nothing
 26018 ;; This function is called by:
 26019 ;;		_TCP_SocketInit
 26020 ;;		_TCP_SocketPoll
 26021 ;;		_TCP_Bind
 26022 ;;		_TCP_Listen
 26023 ;;		_TCP_SendDone
 26024 ;;		_TCP_InsertRxBuffer
 26025 ;;		_TCP_GetReceivedData
 26026 ;;		_TCP_GetRxLength
 26027 ;; This function uses a non-reentrant model
 26028 ;;
 26029                           
 26030                           	psect	text109
 26031  0077E2                     __ptext109:
 26032                           	opt stack 0
 26033  0077E2                     _TCB_Check:
 26034                           	opt stack 25
 26035                           
 26036                           ;tcpv4.c: 164: tcpTCB_t *tcbPtr;
 26037                           ;tcpv4.c: 165: bool ret = 0;
 26038                           
 26039                           ;incstack = 0
 26040  0077E2  6A06               	clrf	TCB_Check@ret,c
 26041                           
 26042                           ;tcpv4.c: 166: socklistsize_t count = 0;
 26043  0077E4  6A07               	clrf	TCB_Check@count,c
 26044                           
 26045                           ;tcpv4.c: 168: if((tcbList != (0)) && (ptr != (0)))
 26046  0077E6  0101               	movlb	1	; () banked
 26047  0077E8  51A2               	movf	_tcbList& (0+255),w,b
 26048  0077EA  11A3               	iorwf	(_tcbList+1)& (0+255),w,b
 26049  0077EC  E03B               	bz	l9087
 26050                           
 26051                           ; BSR set to: 1
 26052  0077EE  5002               	movf	TCB_Check@ptr,w,c
 26053  0077F0  1003               	iorwf	TCB_Check@ptr+1,w,c
 26054  0077F2  E038               	bz	l9087
 26055                           
 26056                           ; BSR set to: 1
 26057                           ;tcpv4.c: 169: {
 26058                           ;tcpv4.c: 171: tcbPtr = tcbList;
 26059  0077F4  C1A2  F008         	movff	_tcbList,TCB_Check@tcbPtr
 26060  0077F8  C1A3  F009         	movff	_tcbList+1,TCB_Check@tcbPtr+1
 26061                           
 26062                           ;tcpv4.c: 172: while((tcbPtr != (0)) && (count < tcbListSize))
 26063  0077FC  D028               	goto	l9083
 26064  0077FE                     l9073:
 26065                           
 26066                           ; BSR set to: 1
 26067                           ;tcpv4.c: 173: {
 26068                           ;tcpv4.c: 174: if (tcbPtr == ptr)
 26069  0077FE  5002               	movf	TCB_Check@ptr,w,c
 26070  007800  1808               	xorwf	TCB_Check@tcbPtr,w,c
 26071  007802  E106               	bnz	l9079
 26072  007804  5003               	movf	TCB_Check@ptr+1,w,c
 26073  007806  1809               	xorwf	TCB_Check@tcbPtr+1,w,c
 26074  007808  E103               	bnz	l9079
 26075                           
 26076                           ; BSR set to: 1
 26077                           ;tcpv4.c: 175: {
 26078                           ;tcpv4.c: 176: ret = 1;
 26079  00780A  0E01               	movlw	1
 26080  00780C  6E06               	movwf	TCB_Check@ret,c
 26081                           
 26082                           ;tcpv4.c: 177: break;
 26083  00780E  D02A               	goto	l9087
 26084  007810                     l9079:
 26085                           
 26086                           ; BSR set to: 1
 26087                           ;tcpv4.c: 179: else
 26088                           ;tcpv4.c: 180: {
 26089                           ;tcpv4.c: 181: tcbPtr = tcbPtr->nextTCB;
 26090  007810  0E2C               	movlw	44
 26091  007812  2408               	addwf	TCB_Check@tcbPtr,w,c
 26092  007814  6E04               	movwf	??_TCB_Check& (0+255),c
 26093  007816  0E00               	movlw	0
 26094  007818  2009               	addwfc	TCB_Check@tcbPtr+1,w,c
 26095  00781A  6E05               	movwf	(??_TCB_Check+1)& (0+255),c
 26096  00781C  C004  FFF6         	movff	??_TCB_Check,tblptrl
 26097  007820  C005  FFF7         	movff	??_TCB_Check+1,tblptrh
 26098  007824  0E00               	movlw	low (__smallconst shr (0+16))
 26099  007826  6EF8               	movwf	tblptru,c
 26100  007828  0E0F               	movlw	(high __ramtop+-1)
 26101  00782A  64F7               	cpfsgt	tblptrh,c
 26102  00782C  D007               	bra	u13917
 26103  00782E  0009               	tblrd		*+
 26104  007830  CFF5 F008          	movff	tablat,TCB_Check@tcbPtr
 26105  007834  0009               	tblrd		*+
 26106  007836  CFF5 F009          	movff	tablat,TCB_Check@tcbPtr+1
 26107  00783A  D008               	bra	u13910
 26108  00783C                     u13917:
 26109  00783C  CFF6 FFE9          	movff	tblptrl,fsr0l
 26110  007840  CFF7 FFEA          	movff	tblptrh,fsr0h
 26111  007844  CFEE F008          	movff	postinc0,TCB_Check@tcbPtr
 26112  007848  CFEE F009          	movff	postinc0,TCB_Check@tcbPtr+1
 26113  00784C                     u13910:
 26114                           
 26115                           ;tcpv4.c: 182: count ++;
 26116  00784C  2A07               	incf	TCB_Check@count,f,c
 26117  00784E                     l9083:
 26118  00784E  5008               	movf	TCB_Check@tcbPtr,w,c
 26119  007850  1009               	iorwf	TCB_Check@tcbPtr+1,w,c
 26120  007852  E008               	bz	l9087
 26121  007854  5007               	movf	TCB_Check@count,w,c
 26122  007856  0A80               	xorlw	128
 26123  007858  6E04               	movwf	??_TCB_Check& (0+255),c
 26124  00785A  0101               	movlb	1	; () banked
 26125  00785C  51A7               	movf	_tcbListSize& (0+255),w,b
 26126  00785E  0A80               	xorlw	128
 26127  007860  5C04               	subwf	??_TCB_Check& (0+255),w,c
 26128  007862  E3CD               	bnc	l9073
 26129  007864                     l9087:
 26130                           
 26131                           ;tcpv4.c: 183: }
 26132                           ;tcpv4.c: 184: }
 26133                           ;tcpv4.c: 185: }
 26134                           ;tcpv4.c: 186: return ret;
 26135  007864  5006               	movf	TCB_Check@ret,w,c
 26136  007866  0012               	return		;funcret
 26137  007868                     __end_of_TCB_Check:
 26138                           	opt stack 0
 26139                           tosu	equ	0xFFF
 26140                           tosh	equ	0xFFE
 26141                           tosl	equ	0xFFD
 26142                           pclath	equ	0xFFA
 26143                           tblptru	equ	0xFF8
 26144                           tblptrh	equ	0xFF7
 26145                           tblptrl	equ	0xFF6
 26146                           tablat	equ	0xFF5
 26147                           prodh	equ	0xFF4
 26148                           prodl	equ	0xFF3
 26149                           intcon	equ	0xFF2
 26150                           intcon2	equ	0xFF1
 26151                           indf0	equ	0xFEF
 26152                           postinc0	equ	0xFEE
 26153                           fsr0h	equ	0xFEA
 26154                           fsr0l	equ	0xFE9
 26155                           wreg	equ	0xFE8
 26156                           indf1	equ	0xFE7
 26157                           postinc1	equ	0xFE6
 26158                           postdec1	equ	0xFE5
 26159                           plusw1	equ	0xFE3
 26160                           fsr1h	equ	0xFE2
 26161                           fsr1l	equ	0xFE1
 26162                           indf2	equ	0xFDF
 26163                           postinc2	equ	0xFDE
 26164                           postdec2	equ	0xFDD
 26165                           plusw2	equ	0xFDB
 26166                           fsr2h	equ	0xFDA
 26167                           fsr2l	equ	0xFD9
 26168                           status	equ	0xFD8
 26169                           
 26170 ;; *************** function _low_isr *****************
 26171 ;; Defined at:
 26172 ;;		line 62 in file "main.c"
 26173 ;; Parameters:    Size  Location     Type
 26174 ;;		None
 26175 ;; Auto vars:     Size  Location     Type
 26176 ;;		None
 26177 ;; Return value:  Size  Location     Type
 26178 ;;		None               void
 26179 ;; Registers used:
 26180 ;;		None
 26181 ;; Tracked objects:
 26182 ;;		On entry : 0/0
 26183 ;;		On exit  : 0/0
 26184 ;;		Unchanged: 0/0
 26185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26188 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26189 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26190 ;;Total ram usage:        1 bytes
 26191 ;; Hardware stack levels used:    1
 26192 ;; Hardware stack levels required when called:    2
 26193 ;; This function calls:
 26194 ;;		Nothing
 26195 ;; This function is called by:
 26196 ;;		Interrupt level 1
 26197 ;; This function uses a non-reentrant model
 26198 ;;
 26199                           
 26200                           	psect	intcodelo
 26201  000018                     __pintcodelo:
 26202                           	opt stack 0
 26203  000018                     _low_isr:
 26204                           	opt stack 15
 26205                           
 26206                           ;incstack = 0
 26207  000018  805E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 26208  00001A  CFE0 F001          	movff	bsr,??_low_isr
 26209                           
 26210                           ;main.c: 67: __nop();
 26211  00001E  F000               	nop	
 26212  000020  C001  FFE0         	movff	??_low_isr,bsr
 26213  000024  905E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 26214  000026  0010               	retfie	
 26215  000028                     __end_of_low_isr:
 26216                           	opt stack 0
 26217                           tosu	equ	0xFFF
 26218                           tosh	equ	0xFFE
 26219                           tosl	equ	0xFFD
 26220                           pclath	equ	0xFFA
 26221                           tblptru	equ	0xFF8
 26222                           tblptrh	equ	0xFF7
 26223                           tblptrl	equ	0xFF6
 26224                           tablat	equ	0xFF5
 26225                           prodh	equ	0xFF4
 26226                           prodl	equ	0xFF3
 26227                           intcon	equ	0xFF2
 26228                           intcon2	equ	0xFF1
 26229                           indf0	equ	0xFEF
 26230                           postinc0	equ	0xFEE
 26231                           fsr0h	equ	0xFEA
 26232                           fsr0l	equ	0xFE9
 26233                           wreg	equ	0xFE8
 26234                           indf1	equ	0xFE7
 26235                           postinc1	equ	0xFE6
 26236                           postdec1	equ	0xFE5
 26237                           plusw1	equ	0xFE3
 26238                           fsr1h	equ	0xFE2
 26239                           fsr1l	equ	0xFE1
 26240                           bsr	equ	0xFE0
 26241                           indf2	equ	0xFDF
 26242                           postinc2	equ	0xFDE
 26243                           postdec2	equ	0xFDD
 26244                           plusw2	equ	0xFDB
 26245                           fsr2h	equ	0xFDA
 26246                           fsr2l	equ	0xFD9
 26247                           status	equ	0xFD8
 26248                           
 26249 ;; *************** function _high_isr *****************
 26250 ;; Defined at:
 26251 ;;		line 57 in file "main.c"
 26252 ;; Parameters:    Size  Location     Type
 26253 ;;		None
 26254 ;; Auto vars:     Size  Location     Type
 26255 ;;		None
 26256 ;; Return value:  Size  Location     Type
 26257 ;;		None               void
 26258 ;; Registers used:
 26259 ;;		wreg, status,2, status,0, cstack
 26260 ;; Tracked objects:
 26261 ;;		On entry : 0/0
 26262 ;;		On exit  : 0/0
 26263 ;;		Unchanged: 0/0
 26264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26269 ;;Total ram usage:        0 bytes
 26270 ;; Hardware stack levels used:    1
 26271 ;; Hardware stack levels required when called:    1
 26272 ;; This function calls:
 26273 ;;		_rtcc_handler
 26274 ;; This function is called by:
 26275 ;;		Interrupt level 2
 26276 ;; This function uses a non-reentrant model
 26277 ;;
 26278                           
 26279                           	psect	intcode
 26280  000008                     __pintcode:
 26281                           	opt stack 0
 26282  000008                     _high_isr:
 26283                           	opt stack 15
 26284                           
 26285                           ;incstack = 0
 26286  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 26287  00000A  EFF5  F043         	goto	int_func
 26288                           tosu	equ	0xFFF
 26289                           tosh	equ	0xFFE
 26290                           tosl	equ	0xFFD
 26291                           pclath	equ	0xFFA
 26292                           tblptru	equ	0xFF8
 26293                           tblptrh	equ	0xFF7
 26294                           tblptrl	equ	0xFF6
 26295                           tablat	equ	0xFF5
 26296                           prodh	equ	0xFF4
 26297                           prodl	equ	0xFF3
 26298                           intcon	equ	0xFF2
 26299                           intcon2	equ	0xFF1
 26300                           indf0	equ	0xFEF
 26301                           postinc0	equ	0xFEE
 26302                           fsr0h	equ	0xFEA
 26303                           fsr0l	equ	0xFE9
 26304                           wreg	equ	0xFE8
 26305                           indf1	equ	0xFE7
 26306                           postinc1	equ	0xFE6
 26307                           postdec1	equ	0xFE5
 26308                           plusw1	equ	0xFE3
 26309                           fsr1h	equ	0xFE2
 26310                           fsr1l	equ	0xFE1
 26311                           bsr	equ	0xFE0
 26312                           indf2	equ	0xFDF
 26313                           postinc2	equ	0xFDE
 26314                           postdec2	equ	0xFDD
 26315                           plusw2	equ	0xFDB
 26316                           fsr2h	equ	0xFDA
 26317                           fsr2l	equ	0xFD9
 26318                           status	equ	0xFD8
 26319                           
 26320                           	psect	intcode_body
 26321  0087EA                     __pintcode_body:
 26322                           	opt stack 15
 26323  0087EA                     int_func:
 26324                           	opt stack 15
 26325                           
 26326                           ;main.c: 59: rtcc_handler();
 26327  0087EA  EC65  F042         	call	_rtcc_handler	;wreg free
 26328  0087EE  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 26329  0087F0  0011               	retfie		f
 26330  0087F2                     __end_of_high_isr:
 26331                           	opt stack 0
 26332                           tosu	equ	0xFFF
 26333                           tosh	equ	0xFFE
 26334                           tosl	equ	0xFFD
 26335                           pclath	equ	0xFFA
 26336                           tblptru	equ	0xFF8
 26337                           tblptrh	equ	0xFF7
 26338                           tblptrl	equ	0xFF6
 26339                           tablat	equ	0xFF5
 26340                           prodh	equ	0xFF4
 26341                           prodl	equ	0xFF3
 26342                           intcon	equ	0xFF2
 26343                           intcon2	equ	0xFF1
 26344                           indf0	equ	0xFEF
 26345                           postinc0	equ	0xFEE
 26346                           fsr0h	equ	0xFEA
 26347                           fsr0l	equ	0xFE9
 26348                           wreg	equ	0xFE8
 26349                           indf1	equ	0xFE7
 26350                           postinc1	equ	0xFE6
 26351                           postdec1	equ	0xFE5
 26352                           plusw1	equ	0xFE3
 26353                           fsr1h	equ	0xFE2
 26354                           fsr1l	equ	0xFE1
 26355                           bsr	equ	0xFE0
 26356                           indf2	equ	0xFDF
 26357                           postinc2	equ	0xFDE
 26358                           postdec2	equ	0xFDD
 26359                           plusw2	equ	0xFDB
 26360                           fsr2h	equ	0xFDA
 26361                           fsr2l	equ	0xFD9
 26362                           status	equ	0xFD8
 26363                           
 26364 ;; *************** function _rtcc_handler *****************
 26365 ;; Defined at:
 26366 ;;		line 122 in file "../board_support_package/picdem2_net/rtcc.c"
 26367 ;; Parameters:    Size  Location     Type
 26368 ;;		None
 26369 ;; Auto vars:     Size  Location     Type
 26370 ;;		None
 26371 ;; Return value:  Size  Location     Type
 26372 ;;		None               void
 26373 ;; Registers used:
 26374 ;;		wreg, status,2, status,0
 26375 ;; Tracked objects:
 26376 ;;		On entry : 0/0
 26377 ;;		On exit  : 0/0
 26378 ;;		Unchanged: 0/0
 26379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26384 ;;Total ram usage:        0 bytes
 26385 ;; Hardware stack levels used:    1
 26386 ;; This function calls:
 26387 ;;		Nothing
 26388 ;; This function is called by:
 26389 ;;		_high_isr
 26390 ;; This function uses a non-reentrant model
 26391 ;;
 26392                           
 26393                           	psect	text112
 26394  0084CA                     __ptext112:
 26395                           	opt stack 0
 26396  0084CA                     _rtcc_handler:
 26397                           	opt stack 15
 26398                           
 26399                           ;rtcc.c: 124: if(TMR1IE && TMR1IF)
 26400                           
 26401                           ;incstack = 0
 26402  0084CA  B09D               	btfsc	3997,0,c	;volatile
 26403  0084CC  A09E               	btfss	3998,0,c	;volatile
 26404  0084CE  0012               	return	
 26405                           
 26406                           ;rtcc.c: 125: {
 26407                           ;rtcc.c: 126: TMR1IF = 0;
 26408  0084D0  909E               	bcf	3998,0,c	;volatile
 26409                           
 26410                           ;rtcc.c: 127: TMR1ON = 0;
 26411  0084D2  90CD               	bcf	4045,0,c	;volatile
 26412                           
 26413                           ;rtcc.c: 128: TMR1 = 32768UL;
 26414  0084D4  0E80               	movlw	128
 26415  0084D6  6ECF               	movwf	4047,c	;volatile
 26416  0084D8  6ACE               	clrf	4046,c	;volatile
 26417                           
 26418                           ;rtcc.c: 129: TMR1ON = 1;
 26419  0084DA  80CD               	bsf	4045,0,c	;volatile
 26420                           
 26421                           ;rtcc.c: 130: deviceTime++;
 26422  0084DC  0102               	movlb	2	; () banked
 26423  0084DE  2BCC               	incf	_deviceTime& (0+255),f,b	;volatile
 26424  0084E0  0E00               	movlw	0
 26425  0084E2  23CD               	addwfc	(_deviceTime+1)& (0+255),f,b	;volatile
 26426  0084E4  23CE               	addwfc	(_deviceTime+2)& (0+255),f,b	;volatile
 26427  0084E6  23CF               	addwfc	(_deviceTime+3)& (0+255),f,b	;volatile
 26428                           
 26429                           ; BSR set to: 2
 26430                           ;rtcc.c: 131: localTime++;
 26431  0084E8  2BD0               	incf	_localTime& (0+255),f,b	;volatile
 26432  0084EA  23D1               	addwfc	(_localTime+1)& (0+255),f,b	;volatile
 26433  0084EC  23D2               	addwfc	(_localTime+2)& (0+255),f,b	;volatile
 26434  0084EE  23D3               	addwfc	(_localTime+3)& (0+255),f,b	;volatile
 26435  0084F0  0C00               	retlw	0	;funcret
 26436  0084F2                     __end_of_rtcc_handler:
 26437                           	opt stack 0
 26438                           tosu	equ	0xFFF
 26439                           tosh	equ	0xFFE
 26440                           tosl	equ	0xFFD
 26441                           pclath	equ	0xFFA
 26442                           tblptru	equ	0xFF8
 26443                           tblptrh	equ	0xFF7
 26444                           tblptrl	equ	0xFF6
 26445                           tablat	equ	0xFF5
 26446                           prodh	equ	0xFF4
 26447                           prodl	equ	0xFF3
 26448                           intcon	equ	0xFF2
 26449                           intcon2	equ	0xFF1
 26450                           indf0	equ	0xFEF
 26451                           postinc0	equ	0xFEE
 26452                           fsr0h	equ	0xFEA
 26453                           fsr0l	equ	0xFE9
 26454                           wreg	equ	0xFE8
 26455                           indf1	equ	0xFE7
 26456                           postinc1	equ	0xFE6
 26457                           postdec1	equ	0xFE5
 26458                           plusw1	equ	0xFE3
 26459                           fsr1h	equ	0xFE2
 26460                           fsr1l	equ	0xFE1
 26461                           bsr	equ	0xFE0
 26462                           indf2	equ	0xFDF
 26463                           postinc2	equ	0xFDE
 26464                           postdec2	equ	0xFDD
 26465                           plusw2	equ	0xFDB
 26466                           fsr2h	equ	0xFDA
 26467                           fsr2l	equ	0xFD9
 26468                           status	equ	0xFD8
 26469                           tosu	equ	0xFFF
 26470                           tosh	equ	0xFFE
 26471                           tosl	equ	0xFFD
 26472                           pclath	equ	0xFFA
 26473                           tblptru	equ	0xFF8
 26474                           tblptrh	equ	0xFF7
 26475                           tblptrl	equ	0xFF6
 26476                           tablat	equ	0xFF5
 26477                           prodh	equ	0xFF4
 26478                           prodl	equ	0xFF3
 26479                           intcon	equ	0xFF2
 26480                           intcon2	equ	0xFF1
 26481                           indf0	equ	0xFEF
 26482                           postinc0	equ	0xFEE
 26483                           fsr0h	equ	0xFEA
 26484                           fsr0l	equ	0xFE9
 26485                           wreg	equ	0xFE8
 26486                           indf1	equ	0xFE7
 26487                           postinc1	equ	0xFE6
 26488                           postdec1	equ	0xFE5
 26489                           plusw1	equ	0xFE3
 26490                           fsr1h	equ	0xFE2
 26491                           fsr1l	equ	0xFE1
 26492                           bsr	equ	0xFE0
 26493                           indf2	equ	0xFDF
 26494                           postinc2	equ	0xFDE
 26495                           postdec2	equ	0xFDD
 26496                           plusw2	equ	0xFDB
 26497                           fsr2h	equ	0xFDA
 26498                           fsr2l	equ	0xFD9
 26499                           status	equ	0xFD8
 26500                           
 26501                           	psect	text113
 26502  000000                     __ptext113:
 26503                           	opt stack 0
 26504                           tosu	equ	0xFFF
 26505                           tosh	equ	0xFFE
 26506                           tosl	equ	0xFFD
 26507                           pclath	equ	0xFFA
 26508                           tblptru	equ	0xFF8
 26509                           tblptrh	equ	0xFF7
 26510                           tblptrl	equ	0xFF6
 26511                           tablat	equ	0xFF5
 26512                           prodh	equ	0xFF4
 26513                           prodl	equ	0xFF3
 26514                           intcon	equ	0xFF2
 26515                           intcon2	equ	0xFF1
 26516                           indf0	equ	0xFEF
 26517                           postinc0	equ	0xFEE
 26518                           fsr0h	equ	0xFEA
 26519                           fsr0l	equ	0xFE9
 26520                           wreg	equ	0xFE8
 26521                           indf1	equ	0xFE7
 26522                           postinc1	equ	0xFE6
 26523                           postdec1	equ	0xFE5
 26524                           plusw1	equ	0xFE3
 26525                           fsr1h	equ	0xFE2
 26526                           fsr1l	equ	0xFE1
 26527                           bsr	equ	0xFE0
 26528                           indf2	equ	0xFDF
 26529                           postinc2	equ	0xFDE
 26530                           postdec2	equ	0xFDD
 26531                           plusw2	equ	0xFDB
 26532                           fsr2h	equ	0xFDA
 26533                           fsr2l	equ	0xFD9
 26534                           status	equ	0xFD8
 26535                           
 26536                           	psect	rparam
 26537  0000                     tosu	equ	0xFFF
 26538                           tosh	equ	0xFFE
 26539                           tosl	equ	0xFFD
 26540                           pclath	equ	0xFFA
 26541                           tblptru	equ	0xFF8
 26542                           tblptrh	equ	0xFF7
 26543                           tblptrl	equ	0xFF6
 26544                           tablat	equ	0xFF5
 26545                           prodh	equ	0xFF4
 26546                           prodl	equ	0xFF3
 26547                           intcon	equ	0xFF2
 26548                           intcon2	equ	0xFF1
 26549                           indf0	equ	0xFEF
 26550                           postinc0	equ	0xFEE
 26551                           fsr0h	equ	0xFEA
 26552                           fsr0l	equ	0xFE9
 26553                           wreg	equ	0xFE8
 26554                           indf1	equ	0xFE7
 26555                           postinc1	equ	0xFE6
 26556                           postdec1	equ	0xFE5
 26557                           plusw1	equ	0xFE3
 26558                           fsr1h	equ	0xFE2
 26559                           fsr1l	equ	0xFE1
 26560                           bsr	equ	0xFE0
 26561                           indf2	equ	0xFDF
 26562                           postinc2	equ	0xFDE
 26563                           postdec2	equ	0xFDD
 26564                           plusw2	equ	0xFDB
 26565                           fsr2h	equ	0xFDA
 26566                           fsr2l	equ	0xFD9
 26567                           status	equ	0xFD8
 26568                           
 26569                           	psect	temp
 26570  00005E                     btemp:
 26571                           	opt stack 0
 26572  00005E                     	ds	1
 26573  0000                     int$flags	set	btemp
 26574                           tosu	equ	0xFFF
 26575                           tosh	equ	0xFFE
 26576                           tosl	equ	0xFFD
 26577                           pclath	equ	0xFFA
 26578                           tblptru	equ	0xFF8
 26579                           tblptrh	equ	0xFF7
 26580                           tblptrl	equ	0xFF6
 26581                           tablat	equ	0xFF5
 26582                           prodh	equ	0xFF4
 26583                           prodl	equ	0xFF3
 26584                           intcon	equ	0xFF2
 26585                           intcon2	equ	0xFF1
 26586                           indf0	equ	0xFEF
 26587                           postinc0	equ	0xFEE
 26588                           fsr0h	equ	0xFEA
 26589                           fsr0l	equ	0xFE9
 26590                           wreg	equ	0xFE8
 26591                           indf1	equ	0xFE7
 26592                           postinc1	equ	0xFE6
 26593                           postdec1	equ	0xFE5
 26594                           plusw1	equ	0xFE3
 26595                           fsr1h	equ	0xFE2
 26596                           fsr1l	equ	0xFE1
 26597                           bsr	equ	0xFE0
 26598                           indf2	equ	0xFDF
 26599                           postinc2	equ	0xFDE
 26600                           postdec2	equ	0xFDD
 26601                           plusw2	equ	0xFDB
 26602                           fsr2h	equ	0xFDA
 26603                           fsr2l	equ	0xFD9
 26604                           status	equ	0xFD8


Data Sizes:
    Strings     112
    Constant    56
    Data        1
    BSS         346
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160    158     160
    BANK1           256    131     212
    BANK2           256     45     212
    BANK3           256      0     104
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    TCB_Check@ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    Network_Read@debug_str.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    Network_Read@debug_str.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    Network_Read@debug_str.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    Network_Read@debug_str.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    Network_Read@debug_str.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    Network_Read@debug_str.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    main@str.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    main@str.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    main@str.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    main@str.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    main@str.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    main@str.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_printf.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    ?_printf.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    ?_printf.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_printf.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_printf.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_printf.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_sprintf.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    ?_sprintf.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    ?_sprintf.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_sprintf.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_sprintf.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    ?_sprintf.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7445.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7445.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7445.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7445.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_6(CODE[12]), STR_1(CODE[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_3(CODE[10]), STR_2(CODE[28]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 

    memcmp@s2	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethMAC(BANK0[6]), 

    memcmp@s1	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_6(CODE[12]), STR_3(CODE[10]), STR_2(CODE[28]), STR_1(CODE[8]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), printf@ap(COMRAM[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), STR_7(CODE[7]), main@str(BANK2[32]), 
		 -> STR_5(CODE[13]), STR_4(CODE[17]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    S4531__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    S4531__prbuf$ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 6
		 -> sprintf@pb(COMRAM[5]), printf@pb(COMRAM[5]), 

    sp__memset	PTR void  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 

    F7445.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7445.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7445.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7445.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    UDP_Receive@hptr.callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    UDP_Receive@hptr	PTR const struct . size(1) Largest target is 5
		 -> UDP_CallBackTable(CODE[5]), 

    TCP_Update@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_GetReceivedData@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_InsertRxBuffer@data	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), 

    TCP_InsertRxBuffer@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_SendDone@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_Send@data	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), 

    TCP_Send@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_Close@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_Bind@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_SocketPoll@socket_ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_SocketInit@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_Recv@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    currentTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    currentTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    currentTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCP_Snd@data	PTR unsigned char  size(2) Largest target is 20
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCB_Check@ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCB_Reset@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    S3055$prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    S3055$nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    S3055$txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    S3055$txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    S3055$rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    S3055$rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    tcbList	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    SYSLOG_Write@message	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), STR_5(CODE[13]), STR_4(CODE[17]), 

    sp__MAC_getAddress	PTR const struct . size(1) Largest target is 6
		 -> macAddress(CODE[6]), 

    IPv4_Start@macAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), broadcastMAC(CODE[6]), arpMap(BANK3[104]), NULL(NULL[0]), 

    IPV4_PseudoHeaderChecksum@v	PTR unsigned int  size(1) Largest target is 12
		 -> IPV4_PseudoHeaderChecksum@tmp(COMRAM[12]), 

    ICMP_EchoReply@icmpHdr	PTR struct . size(1) Largest target is 8
		 -> ICMP_Receive@icmpHdr(BANK0[8]), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK1[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK1[20]), 

    S2143$callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    UDP_CallBackTable.callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), arpMap(BANK3[104]), NULL(NULL[0]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ETH_Insert@data	PTR unsigned char  size(1) Largest target is 2
		 -> UDP_Send@cksm(COMRAM[2]), UDP_Send@udpLength(COMRAM[2]), TCP_Snd@cksm(BANK0[2]), IPV4_Send@cksm(COMRAM[2]), 
		 -> IPV4_Send@totalLength(COMRAM[2]), ICMP_EchoReply@cksm(BANK0[2]), 

    ETH_WriteBlock@data	PTR void  size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), 
		 -> STR_5(CODE[13]), STR_4(CODE[17]), DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), TCP_Snd@txHeader(BANK0[20]), 
		 -> Network_Read@debug_str(BANK1[80]), dhcpName(CODE[21]), DHCP_Request@ethMAC(BANK0[6]), broadcastMAC(CODE[6]), 
		 -> ARPV4_Request@header(COMRAM[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(COMRAM[28]), arpMap(BANK3[104]), 
		 -> ethMAC(BANK2[6]), NULL(NULL[0]), 

    ETH_WriteBlock@p	PTR unsigned char  size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), 
		 -> STR_5(CODE[13]), STR_4(CODE[17]), DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), TCP_Snd@txHeader(BANK0[20]), 
		 -> Network_Read@debug_str(BANK1[80]), dhcpName(CODE[21]), DHCP_Request@ethMAC(BANK0[6]), broadcastMAC(CODE[6]), 
		 -> ARPV4_Request@header(COMRAM[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(COMRAM[28]), arpMap(BANK3[104]), 
		 -> ethMAC(BANK2[6]), NULL(NULL[0]), 

    ETH_ReadBlock@data	PTR void  size(2) Largest target is 28
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), udpHeader(BANK2[8]), tcpHeader(BANK1[20]), 
		 -> Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), ipv4Header(BANK1[20]), ICMP_Receive@icmpHdr(BANK0[8]), 
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(COMRAM[28]), NULL(NULL[0]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 28
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), udpHeader(BANK2[8]), tcpHeader(BANK1[20]), 
		 -> Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), ipv4Header(BANK1[20]), ICMP_Receive@icmpHdr(BANK0[8]), 
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(COMRAM[28]), NULL(NULL[0]), 

    ETH_GetMAC@macAddr	PTR unsigned char  size(2) Largest target is 28
		 -> DHCP_Handler@ethMAC(BANK0[6]), DHCP_Request@ethMAC(BANK0[6]), ARPV4_Request@header(COMRAM[28]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(COMRAM[28]), ethMAC(BANK2[6]), 

    ETH_WriteStart@destMAC	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), broadcastMAC(CODE[6]), header.sha(COMRAM[6]), ARPV4_Packet@header(COMRAM[28]), 
		 -> arpMap(BANK3[104]), NULL(NULL[0]), 

    time@t	PTR long  size(2) Largest target is 4
		 -> main@t(BANK2[4]), Network_Manage@now(BANK1[4]), arpTimer(BANK1[4]), NULL(NULL[0]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 


Critical Paths under _main in COMRAM

    _lcd_puts->_lcd_putch
    _lcd_putch->_lcd_write_data
    _lcd_goto1->_lcd_write_ctrl
    _initHW->_lcd_init
    _lcd_init->_lcd_write_ctrl
    _SYSLOG_Write->_printf
    _SYSLOG_Init->_printf
    _printf->__doprnt
    _Network_WaitForLink->_ETH_CheckLinkUp
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _UDP_Receive->_DHCP_Handler
    _ETH_Read32->_SPI_ExchangeByte
    _TCP_ParseTCPOptions->_ETH_Dump
    _ETH_Read8->_SPI_ExchangeByte
    _ETH_Read16->_SPI_ExchangeByte
    _ETH_Dump->_ENCx24_Read
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _ETH_SaveRDPT->_ENCx24_Read
    _ETH_Copy->_waitForDMA
    _ETH_RxComputeChecksum->_waitForDMA
    _ETH_NextPacketUpdate->_ETH_SetRXptr
    _ETH_SetRXptr->_SPI_ExchangeByte
    _ETH_Flush->_ENCx24_Write
    _ETH_SetPktDec->_SPI_ExchangeByte
    _ARPV4_Packet->_ETH_WriteStart
    _ETH_EventHandler->_ENCx24_Read
    _ETH_ResetReceiver->_ENCx24_BFC
    _ETH_ResetReceiver->_ENCx24_BFS
    _ETH_ResetReceiver->_ENCx24_Write
    _DHCP_Request->_UDP_Start
    _UDP_Start->_IPv4_Start
    _ETH_ResetByteCount->_ENCx24_Read
    _UDP_Send->_IPV4_Send
    _ETH_GetByteCount->_ENCx24_Read
    _DHCP_WriteZeros->_ETH_Write8
    _Network_Init->_ETH_Init
    _ETH_Init->_ETH_CheckLinkUp
    _ETH_SendSystemReset->_ENCx24_Read
    _ETH_CheckLinkUp->_ETH_readLinkStatus
    _ETH_readLinkStatus->_ENCx24_Read
    _ENCx24_PhyRead->_ENCx24_Read
    _ENCx24_PHYWrite->_ENCx24_Read
    _DEMO_TCP_EchoServer->_TCP_Listen
    _TCP_SocketInit->_TCB_Check
    _TCP_SendDone->_TCB_Check
    _TCP_Send->_TCP_Snd
    _TCP_SocketPoll->_TCB_Check
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd
    _TCP_Snd->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _ETH_Write8->_SPI_ExchangeByte
    _ETH_Write32->_SPI_ExchangeByte
    _ARPV4_Request->_ETH_WriteStart
    _ETH_WriteStart->_ENCx24_Read
    _ETH_WriteBlock->_SPI_ExchangeByte
    _ETH_Write16->_SPI_ExchangeByte
    _ETH_GetMAC->_ETH_MACRead8
    _ETH_MACRead8->_ENCx24_BankselSPI
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_TxComputeChecksum->_waitForDMA
    _waitForDMA->_ENCx24_Read
    _ENCx24_BFS->_ENCx24_BankselSPI
    _ENCx24_BFC->_ENCx24_BankselSPI
    _ETH_Send->_ENCx24_Write
    _ETH_Set_TXRTS->_SPI_ExchangeByte
    _ETH_Insert->_ENCx24_Read
    _ENCx24_Write->_ENCx24_BankselSPI
    _ENCx24_Read->_ENCx24_BankselSPI
    _ENCx24_BankselSPI->_SPI_ExchangeByte
    _ETH_ReadBlock->_SPI_ExchangeByte
    _TCP_InsertRxBuffer->_TCB_Check
    _TCP_GetRxLength->_TCB_Check
    _TCP_GetReceivedData->_TCB_Check
    _TCP_Bind->_TCB_Check

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _TCP_Update->_TCP_FiniteStateMachine
    _Network_Read->_IPV4_Packet
    _IPV4_Packet->_TCP_Recv
    _UDP_Receive->_DHCP_Handler
    _DHCP_Handler->_DHCP_Request
    _TCP_Recv->_TCP_FiniteStateMachine
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _DHCP_Manage->_DHCP_Request
    _DHCP_Request->_UDP_Start
    _UDP_Start->_IPv4_Start
    _DEMO_TCP_EchoServer->_TCP_Listen
    _TCP_Send->_TCP_Snd
    _TCP_Listen->_TCP_FiniteStateMachine
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd
    _TCP_Snd->_IPv4_Start

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Network_Manage
    _Network_Manage->_Network_Read
    _Network_Read->_IPV4_Packet

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0  776755
                                              0 BANK2     45    45      0
                _DEMO_TCP_EchoServer
                       _IPV4_GetMyIP
                       _Network_Init
                     _Network_Manage
                _Network_WaitForLink
                        _SYSLOG_Init
                       _SYSLOG_Write
                             _initHW
                          _lcd_goto1
                           _lcd_puts
                             _memset
                            _sprintf
                               _time
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     362
                                              1 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     234
                                              3 COMRAM     2     0      2
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _lcd_putch                                            1     1      0     124
                                              2 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_data                                       1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto1                                            1     1      0      62
                                              2 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (1) _initHW                                               0     0      0     133
                     _ADC_Initialize
                           _LED_Init
                           _lcd_init
                          _rtcc_init
                           _spi_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             5     5      0      31
                                              2 COMRAM     1     1      0
                           _lcd_busy
                      _lcd_init_pins
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (2) _lcd_write_ctrl                                       1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_init_pins                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_Init                                             1     1      0     102
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Write                                         4     2      2    4383
                                             38 COMRAM     4     2      2
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Init                                          4     4      0    4082
                                             38 COMRAM     4     4      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     7      4    3437
                                             27 COMRAM    11     7      4
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _Network_WaitForLink                                  0     0      0     520
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (1) _Network_Manage                                       5     5      0  534678
                                            126 BANK1      5     5      0
                       _ARPV4_Update
                        _DHCP_Manage
                   _ETH_EventHandler
                       _Network_Read
                         _TCP_Update
                               _time
 ---------------------------------------------------------------------------------
 (2) _TCP_Update                                          12    12      0  130817
                                            116 BANK0     12    12      0
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (2) _Network_Read                                        98    98      0  326503
                                             28 BANK1     98    98      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17     6     11    3711
                                             27 COMRAM    17     6     11
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             20    18      2    3151
                                             13 COMRAM    14    12      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      62
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                              8 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _IPV4_Packet                                         73    73      0  298891
                                            153 BANK0      5     5      0
                                              0 BANK1     28    28      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
          _IPV4_PseudoHeaderChecksum
                           _TCP_Recv
                        _UDP_Receive
 ---------------------------------------------------------------------------------
 (4) _UDP_Receive                                         11     9      2   77059
                                             55 BANK0     11     9      2
                       _DHCP_Handler *
                      _ETH_ReadBlock
 ---------------------------------------------------------------------------------
 (5) _DHCP_Handler                                        36    34      2   74943
                                             88 COMRAM     4     2      2
                                             23 BANK0     32    32      0
                       _DHCP_Request
                           _ETH_Dump
                         _ETH_GetMAC
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                      _ETH_ReadBlock
                             _memcmp
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               6     3      3     377
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _ETH_Read32                                           8     4      4     176
                                              2 COMRAM     8     4      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _TCP_Recv                                            37    31      6  138185
                                            116 BANK0     37    31      6
                      _ETH_ReadBlock
             _TCP_FiniteStateMachine
                _TCP_ParseTCPOptions
 ---------------------------------------------------------------------------------
 (5) _TCP_ParseTCPOptions                                  6     6      0    5596
                                             14 COMRAM     6     6      0
                           _ETH_Dump
                         _ETH_Read16
                          _ETH_Read8
 ---------------------------------------------------------------------------------
 (6) _ETH_Read8                                            1     1      0      65
                                              2 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ETH_Read16                                           4     2      2     102
                                              2 COMRAM     4     2      2
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ETH_Dump                                             4     2      2    4929
                                             10 COMRAM     4     2      2
                        _ENCx24_Read
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (4) _IPV4_PseudoHeaderChecksum                           24    22      2     578
                                              1 COMRAM    24    22      2
 ---------------------------------------------------------------------------------
 (4) _ICMP_Receive                                        15    13      2   68217
                                             89 COMRAM     2     0      2
                                             21 BANK0     13    13      0
                      _ETH_ReadBlock
                       _ETH_SaveRDPT
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (5) _ICMP_EchoReply                                      16    14      2   65699
                                             87 COMRAM     2     0      2
                                              7 BANK0     14    14      0
                           _ETH_Copy
                         _ETH_Insert
                       _ETH_SaveRDPT
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _ETH_SaveRDPT                                         0     0      0     449
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (6) _ETH_Copy                                             4     2      2    6745
                                             12 COMRAM     4     2      2
                         _ENCx24_BFC
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
                         _waitForDMA
 ---------------------------------------------------------------------------------
 (4) _ETH_RxComputeChecksum                               14    10      4    7551
                                             12 COMRAM    14    10      4
                         _ENCx24_BFC
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
                         _waitForDMA
 ---------------------------------------------------------------------------------
 (3) _ETH_NextPacketUpdate                                 0     0      0     217
                       _ETH_SetRXptr
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _ETH_SetRXptr                                         2     0      2     186
                                              2 COMRAM     2     0      2
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _ETH_Flush                                            2     2      0    3394
                                              8 COMRAM     2     2      0
                       _ENCx24_Write
                      _ETH_SetPktDec
 ---------------------------------------------------------------------------------
 (4) _ETH_SetPktDec                                        0     0      0      31
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Packet                                        70    70      0   17059
                                             14 COMRAM    70    70      0
                         _ETH_GetMAC
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (2) _ETH_EventHandler                                     8     8      0   10803
                                             10 COMRAM     8     8      0
                         _ENCx24_BFC
                        _ENCx24_Read
                       _ENCx24_Write
                  _ETH_ResetReceiver
 ---------------------------------------------------------------------------------
 (3) _ETH_ResetReceiver                                    0     0      0    5562
                         _ENCx24_BFC
                         _ENCx24_BFS
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (2) _DHCP_Manage                                          0     0      0   65709
                       _DHCP_Request
 ---------------------------------------------------------------------------------
 (6) _DHCP_Request                                        10    10      0   65709
                                             15 BANK0      8     8      0
                    _DHCP_WriteZeros
                         _ETH_GetMAC
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteBlock
                           _UDP_Send
                          _UDP_Start
 ---------------------------------------------------------------------------------
 (7) _UDP_Start                                            9     1      8   28641
                                             87 COMRAM     1     1      0
                                              7 BANK0      8     0      8
                 _ETH_ResetByteCount
                        _ETH_Write16
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (8) _ETH_ResetByteCount                                   0     0      0     449
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (7) _UDP_Send                                             9     9      0   30925
                                             39 COMRAM     9     9      0
                   _ETH_GetByteCount
                         _ETH_Insert
              _ETH_TxComputeChecksum
                          _IPV4_Send
 ---------------------------------------------------------------------------------
 (8) _ETH_GetByteCount                                     4     2      2     483
                                             10 COMRAM     4     2      2
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (7) _DHCP_WriteZeros                                      2     0      2     183
                                              3 COMRAM     2     0      2
                         _ETH_Write8
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Update                                         3     3      0     105
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Network_Init                                         0     0      0   22049
                         _ARPV4_Init
                           _ETH_Init
                          _IPV4_Init
                           _TCP_Init
                               _time
 ---------------------------------------------------------------------------------
 (1) _time                                                 9     5      4     611
                                              1 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _TCP_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IPV4_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ETH_Init                                             4     4      0   21339
                                             19 COMRAM     4     4      0
                         _ENCx24_BFS
                    _ENCx24_PHYWrite
                     _ENCx24_PhyRead
                        _ENCx24_Read
                       _ENCx24_Write
                    _ETH_CheckLinkUp
                         _ETH_GetMAC
                _ETH_SendSystemReset
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _ETH_SendSystemReset                                  2     2      0    4938
                                             10 COMRAM     2     2      0
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (2) _ETH_CheckLinkUp                                      5     5      0     520
                                             14 COMRAM     5     5      0
                 _ETH_readLinkStatus
 ---------------------------------------------------------------------------------
 (3) _ETH_readLinkStatus                                   4     0      4     449
                                             10 COMRAM     4     0      4
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (3) _ENCx24_PhyRead                                       3     1      2    6042
                                             10 COMRAM     3     1      2
                         _ENCx24_BFC
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (3) _ENCx24_PHYWrite                                      3     1      2    4017
                                             10 COMRAM     3     1      2
                        _ENCx24_Read
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Init                                           1     1      0      99
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _IPV4_GetMyIP                                         4     0      4       0
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _DEMO_TCP_EchoServer                                  7     7      0  204375
                                            120 BANK0      7     7      0
                           _TCP_Bind
                _TCP_GetReceivedData
                    _TCP_GetRxLength
                 _TCP_InsertRxBuffer
                         _TCP_Listen
                           _TCP_Send
                       _TCP_SendDone
                     _TCP_SocketInit
                     _TCP_SocketPoll
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketInit                                       3     1      2    3054
                                              9 COMRAM     3     1      2
                          _TCB_Check
                         _TCB_Insert
                          _TCB_Reset
 ---------------------------------------------------------------------------------
 (3) _TCB_Insert                                           2     0      2     164
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TCP_SendDone                                         3     1      2     730
                                              9 COMRAM     3     1      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Send                                             7     1      6   64427
                                             89 COMRAM     1     1      0
                                             84 BANK0      6     0      6
                            _TCP_Snd
                     _TCP_SocketPoll
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketPoll                                       3     1      2     842
                                              9 COMRAM     3     1      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Listen                                           5     3      2  131198
                                             91 COMRAM     1     1      0
                                            116 BANK0      4     2      2
                          _TCB_Check
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (3) _TCP_FiniteStateMachine                              17    17      0  130337
                                             99 BANK0     17    17      0
                          _TCB_Reset
                    _TCP_PayloadSave
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_PayloadSave                                     17    15      2   65053
                                             89 COMRAM     2     0      2
                                             84 BANK0     15    15      0
                      _ETH_ReadBlock
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_Snd                                             79    77      2   62918
                                             87 COMRAM     2     0      2
                                              7 BANK0     77    77      0
                         _ETH_Insert
              _ETH_TxComputeChecksum
                     _ETH_WriteBlock
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (5) _IPv4_Start                                          20    15      5   26425
                                             74 COMRAM    13     8      5
                                              0 BANK0      7     7      0
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_Write8                                           1     1      0      62
                                              2 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ETH_Write32                                          4     0      4    1494
                                              2 COMRAM     4     0      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Request                                       60    56      4   14609
                                             14 COMRAM    60    56      4
                         _ETH_GetMAC
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_WriteStart                                       4     0      4    7641
                                             10 COMRAM     4     0      4
                        _ENCx24_Read
                       _ENCx24_Write
                        _ETH_Write16
                     _ETH_WriteBlock
 ---------------------------------------------------------------------------------
 (7) _ETH_WriteBlock                                       6     2      4    1928
                                              2 COMRAM     6     2      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ETH_Write16                                          2     0      2    1336
                                              2 COMRAM     2     0      2
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ETH_GetMAC                                           2     0      2     816
                                              7 COMRAM     2     0      2
                       _ETH_MACRead8
 ---------------------------------------------------------------------------------
 (8) _ETH_MACRead8                                         3     3      0     412
                                              4 COMRAM     3     3      0
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Lookup                                        11     7      4     257
                                              1 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (5) _IPV4_Send                                           11     9      2   16946
                                             28 COMRAM    11     9      2
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (6) _ETH_TxComputeChecksum                               16    10      6    7877
                                             12 COMRAM    16    10      6
                         _ENCx24_BFC
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
                         _waitForDMA
 ---------------------------------------------------------------------------------
 (7) _waitForDMA                                           2     2      0     483
                                             10 COMRAM     2     2      0
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (7) _ENCx24_BFS                                           4     2      2    1163
                                              4 COMRAM     4     2      2
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ENCx24_BFC                                           4     2      2    1073
                                              4 COMRAM     4     2      2
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ETH_Send                                             0     0      0    3357
                       _ENCx24_Write
                      _ETH_Set_TXRTS
 ---------------------------------------------------------------------------------
 (8) _ETH_Set_TXRTS                                        0     0      0      31
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ETH_Insert                                           7     3      4    5235
                                             10 COMRAM     7     3      4
                        _ENCx24_Read
                       _ENCx24_Write
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ENCx24_Write                                         4     2      2    3326
                                              4 COMRAM     4     2      2
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _ENCx24_Read                                          6     4      2     449
                                              4 COMRAM     6     4      2
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _ENCx24_BankselSPI                                    2     2      0     189
                                              2 COMRAM     2     2      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _ETH_ReadBlock                                        9     5      4    1840
                                              2 COMRAM     9     5      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _SPI_ExchangeByte                                     1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TCB_Reset                                            4     2      2    1843
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _TCP_InsertRxBuffer                                   7     1      6    1354
                                              9 COMRAM     7     1      6
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_GetRxLength                                      8     6      2     792
                                              9 COMRAM     8     6      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_GetReceivedData                                  8     6      2     885
                                              9 COMRAM     8     6      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Bind                                             5     1      4     827
                                              9 COMRAM     5     1      4
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (3) _TCB_Check                                            8     6      2     591
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _low_isr                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _high_isr                                            0     0      0       0
                       _rtcc_handler
 ---------------------------------------------------------------------------------
 (16) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DEMO_TCP_EchoServer
     _TCP_Bind
       _TCB_Check
     _TCP_GetReceivedData
       _TCB_Check
     _TCP_GetRxLength
       _TCB_Check
     _TCP_InsertRxBuffer
       _TCB_Check
     _TCP_Listen
       _TCB_Check
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _SPI_ExchangeByte
           _TCP_Snd
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
             _ETH_WriteBlock
               _SPI_ExchangeByte
             _IPV4_Send
               _ETH_Insert
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_TxComputeChecksum
                 _ENCx24_BFC
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_BFS
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _waitForDMA
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                   _ETH_MACRead8
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Send
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Set_TXRTS
                     _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
                 _ETH_WriteStart
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_Write32
                 _SPI_ExchangeByte
               _ETH_Write8
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
         _TCP_Snd
           _ETH_Insert
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_TxComputeChecksum
             _ENCx24_BFC
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_BFS
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _waitForDMA
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
           _ETH_WriteBlock
             _SPI_ExchangeByte
           _IPV4_Send
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Send
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Set_TXRTS
                 _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
                 _ETH_MACRead8
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _ETH_Write32
               _SPI_ExchangeByte
             _ETH_Write8
               _SPI_ExchangeByte
             _ETH_WriteStart
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
     _TCP_Send
       _TCP_Snd
         _ETH_Insert
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ETH_TxComputeChecksum
           _ENCx24_BFC
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_BFS
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _waitForDMA
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
         _ETH_WriteBlock
           _SPI_ExchangeByte
         _IPV4_Send
           _ETH_Insert
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_Send
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Set_TXRTS
               _SPI_ExchangeByte
           _ETH_TxComputeChecksum
             _ENCx24_BFC
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_BFS
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _waitForDMA
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
         _IPv4_Start
           _ARPV4_Lookup
           _ARPV4_Request
             _ETH_GetMAC
               _ETH_MACRead8
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_Send
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Set_TXRTS
                 _SPI_ExchangeByte
             _ETH_WriteBlock
               _SPI_ExchangeByte
             _ETH_WriteStart
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
           _ETH_Write16
             _SPI_ExchangeByte
           _ETH_Write32
             _SPI_ExchangeByte
           _ETH_Write8
             _SPI_ExchangeByte
           _ETH_WriteStart
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _ETH_WriteBlock
               _SPI_ExchangeByte
       _TCP_SocketPoll
         _TCB_Check
     _TCP_SendDone
       _TCB_Check
     _TCP_SocketInit
       _TCB_Check
       _TCB_Insert
       _TCB_Reset
     _TCP_SocketPoll
       _TCB_Check
   _IPV4_GetMyIP
   _Network_Init
     _ARPV4_Init
     _ETH_Init
       _ENCx24_BFS
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ENCx24_PHYWrite
         _ENCx24_Read
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
       _ENCx24_PhyRead
         _ENCx24_BFC
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_BFS
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Read
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
       _ENCx24_Read
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ENCx24_Write
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ETH_CheckLinkUp
         _ETH_readLinkStatus
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
       _ETH_GetMAC
         _ETH_MACRead8
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
       _ETH_SendSystemReset
         _ENCx24_BFS
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Read
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
       _SPI_ExchangeByte
     _IPV4_Init
     _TCP_Init
     _time
   _Network_Manage
     _ARPV4_Update
     _DHCP_Manage
       _DHCP_Request
         _DHCP_WriteZeros
           _ETH_Write8
             _SPI_ExchangeByte
         _ETH_GetMAC
           _ETH_MACRead8
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
         _ETH_Write16
           _SPI_ExchangeByte
         _ETH_Write32
           _SPI_ExchangeByte
         _ETH_Write8
           _SPI_ExchangeByte
         _ETH_WriteBlock
           _SPI_ExchangeByte
         _UDP_Send
           _ETH_GetByteCount
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
           _ETH_Insert
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_TxComputeChecksum
             _ENCx24_BFC
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_BFS
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _waitForDMA
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
           _IPV4_Send
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Send
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Set_TXRTS
                 _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
         _UDP_Start
           _ETH_ResetByteCount
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
           _ETH_Write16
             _SPI_ExchangeByte
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
                 _ETH_MACRead8
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _ETH_Write32
               _SPI_ExchangeByte
             _ETH_Write8
               _SPI_ExchangeByte
             _ETH_WriteStart
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
     _ETH_EventHandler
       _ENCx24_BFC
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ENCx24_Read
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ENCx24_Write
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ETH_ResetReceiver
         _ENCx24_BFC
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_BFS
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
     _Network_Read
       _ARPV4_Packet
         _ETH_GetMAC
           _ETH_MACRead8
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
         _ETH_ReadBlock
           _SPI_ExchangeByte
         _ETH_Send
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_Set_TXRTS
             _SPI_ExchangeByte
         _ETH_WriteBlock
           _SPI_ExchangeByte
         _ETH_WriteStart
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_Write16
             _SPI_ExchangeByte
           _ETH_WriteBlock
             _SPI_ExchangeByte
       _ETH_Flush
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ETH_SetPktDec
           _SPI_ExchangeByte
       _ETH_NextPacketUpdate
         _ETH_SetRXptr
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ETH_ReadBlock
         _SPI_ExchangeByte
       _IPV4_Packet
         _ETH_Dump
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
         _ETH_ReadBlock
           _SPI_ExchangeByte
         _ETH_RxComputeChecksum
           _ENCx24_BFC
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_BFS
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _waitForDMA
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
         _ICMP_Receive
           _ETH_ReadBlock
             _SPI_ExchangeByte
           _ETH_SaveRDPT
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
           _ICMP_EchoReply
             _ETH_Copy
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_SaveRDPT
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _IPV4_Send
               _ETH_Insert
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_TxComputeChecksum
                 _ENCx24_BFC
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_BFS
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _waitForDMA
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                   _ETH_MACRead8
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Send
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Set_TXRTS
                     _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
                 _ETH_WriteStart
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_Write32
                 _SPI_ExchangeByte
               _ETH_Write8
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
         _IPV4_PseudoHeaderChecksum
         _TCP_Recv
           _ETH_ReadBlock
             _SPI_ExchangeByte
           _TCP_FiniteStateMachine
             _TCB_Reset
             _TCP_PayloadSave
               _ETH_ReadBlock
                 _SPI_ExchangeByte
               _TCP_Snd
                 _ETH_Insert
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_TxComputeChecksum
                   _ENCx24_BFC
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_BFS
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _waitForDMA
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
                 _IPV4_Send
                   _ETH_Insert
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Send
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Set_TXRTS
                       _SPI_ExchangeByte
                   _ETH_TxComputeChecksum
                     _ENCx24_BFC
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_BFS
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _waitForDMA
                       _ENCx24_Read
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                       _ETH_MACRead8
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                     _ETH_Send
                       _ENCx24_Write
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ETH_Set_TXRTS
                         _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
                     _ETH_WriteStart
                       _ENCx24_Read
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ENCx24_Write
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ETH_Write16
                         _SPI_ExchangeByte
                       _ETH_WriteBlock
                         _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_Write32
                     _SPI_ExchangeByte
                   _ETH_Write8
                     _SPI_ExchangeByte
                   _ETH_WriteStart
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Write16
                       _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
             _TCP_Snd
               _ETH_Insert
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_TxComputeChecksum
                 _ENCx24_BFC
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_BFS
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _waitForDMA
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _IPV4_Send
                 _ETH_Insert
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Send
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Set_TXRTS
                     _SPI_ExchangeByte
                 _ETH_TxComputeChecksum
                   _ENCx24_BFC
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_BFS
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _waitForDMA
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
               _IPv4_Start
                 _ARPV4_Lookup
                 _ARPV4_Request
                   _ETH_GetMAC
                     _ETH_MACRead8
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                   _ETH_Send
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Set_TXRTS
                       _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
                   _ETH_WriteStart
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Write16
                       _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_Write32
                   _SPI_ExchangeByte
                 _ETH_Write8
                   _SPI_ExchangeByte
                 _ETH_WriteStart
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
           _TCP_ParseTCPOptions
             _ETH_Dump
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_Read16
               _SPI_ExchangeByte
             _ETH_Read8
               _SPI_ExchangeByte
         _UDP_Receive
           _DHCP_Handler *
             _DHCP_Request
               _DHCP_WriteZeros
                 _ETH_Write8
                   _SPI_ExchangeByte
               _ETH_GetMAC
                 _ETH_MACRead8
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_Write32
                 _SPI_ExchangeByte
               _ETH_Write8
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _UDP_Send
                 _ETH_GetByteCount
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Insert
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_TxComputeChecksum
                   _ENCx24_BFC
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_BFS
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _waitForDMA
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                 _IPV4_Send
                   _ETH_Insert
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Send
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Set_TXRTS
                       _SPI_ExchangeByte
                   _ETH_TxComputeChecksum
                     _ENCx24_BFC
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_BFS
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _waitForDMA
                       _ENCx24_Read
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
               _UDP_Start
                 _ETH_ResetByteCount
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                       _ETH_MACRead8
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                     _ETH_Send
                       _ENCx24_Write
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ETH_Set_TXRTS
                         _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
                     _ETH_WriteStart
                       _ENCx24_Read
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ENCx24_Write
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ETH_Write16
                         _SPI_ExchangeByte
                       _ETH_WriteBlock
                         _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_Write32
                     _SPI_ExchangeByte
                   _ETH_Write8
                     _SPI_ExchangeByte
                   _ETH_WriteStart
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Write16
                       _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
             _ETH_Dump
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_GetMAC
               _ETH_MACRead8
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_Read16
               _SPI_ExchangeByte
             _ETH_Read32
               _SPI_ExchangeByte
             _ETH_Read8
               _SPI_ExchangeByte
             _ETH_ReadBlock
               _SPI_ExchangeByte
             _memcmp
           _ETH_ReadBlock *
             _SPI_ExchangeByte
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
     _TCP_Update
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _SPI_ExchangeByte
           _TCP_Snd
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
             _ETH_WriteBlock
               _SPI_ExchangeByte
             _IPV4_Send
               _ETH_Insert
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_TxComputeChecksum
                 _ENCx24_BFC
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_BFS
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _waitForDMA
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                   _ETH_MACRead8
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Send
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Set_TXRTS
                     _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
                 _ETH_WriteStart
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_Write32
                 _SPI_ExchangeByte
               _ETH_Write8
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
         _TCP_Snd
           _ETH_Insert
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_TxComputeChecksum
             _ENCx24_BFC
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_BFS
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _waitForDMA
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
           _ETH_WriteBlock
             _SPI_ExchangeByte
           _IPV4_Send
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Send
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Set_TXRTS
                 _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
                 _ETH_MACRead8
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _ETH_Write32
               _SPI_ExchangeByte
             _ETH_Write8
               _SPI_ExchangeByte
             _ETH_WriteStart
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
     _time
   _Network_WaitForLink
     _ETH_CheckLinkUp
       _ETH_readLinkStatus
         _ENCx24_Read
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
   _SYSLOG_Init
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
     _time
   _SYSLOG_Write
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
     _time
   _initHW
     _ADC_Initialize
     _LED_Init
     _lcd_init
       _lcd_busy
       _lcd_init_pins
       _lcd_write_ctrl
     _rtcc_init
     _spi_init
     _uart_init
   _lcd_goto1
     _lcd_busy
     _lcd_write_ctrl
   _lcd_puts
     _lcd_putch
       _lcd_busy
       _lcd_write_data
   _memset
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _time

 _low_isr (ROOT)

 _high_isr (ROOT)
   _rtcc_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      68      11       40.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2D      D4       9       82.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     83      D4       7       82.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     30D      29        0.0%
DATA                 0      0     30D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Sep 09 15:20:34 2015

                         __CFG_BW$16 000000                 __end_of_DHCP_Handler 62F6  
                waitForDMA@econ1_val 000B                                   bsr 000FE0  
                   ??_ICMP_EchoReply 0067           TCP_InsertRxBuffer@data_len 000E  
        ??_IPV4_PseudoHeaderChecksum 0004                       ??_ICMP_Receive 0075  
                       __CFG_CP0$OFF 000000                       ??_ENCx24_Write 0007  
                                l501 0000                                  l503 0016  
                                l351 868E                                  l354 8696  
                                l283 879E                                  l436 0012  
                                l454 7462                                  l439 8338  
                                l448 7452                                  l608 8366  
                                l473 7FB2                                  l617 8046  
                                l626 7B8C                                  l635 763E  
                                l547 7CA6                                  l555 7FEC  
                                l491 7516                                  l556 7FDE  
                                l900 625E                                  l566 8154  
                                l902 6272                                  l567 8146  
                                l577 8194                                  l578 8186  
                                l738 828E                                  l739 8280  
                                l588 81D4                                  l860 6432  
                                l589 81C6                                  l859 6384  
                                l779 4D70                                  _GIE 007F97  
                        ?_ETH_GetMAC 0008                 __end_of_DHCP_Request 64CE  
                 ICMP_EchoReply@cksm 006F              IPv4_Start@targetAddress 0060  
                        ?_ETH_Read32 0003                          ?_ETH_Read16 0003  
                       UDP_Start@ret 0058                                  prod 000FF3  
               TCP_Snd@tcpDataLength 009E                                  tosl 000FFD  
                                wreg 000FE8                          ?_ETH_Insert 000B  
                       __CFG_IESO$ON 000000                         __CFG_MODE$MM 000000  
                        ?_ETH_Write8 0001                       _ipv4SubnetMask 0192  
          TCP_FiniteStateMachine@ret 00CF                      ?_Network_Manage 0001  
                       __CFG_WDT$OFF 000000                                 l1035 68AC  
                               l1212 4310                                 l1108 878C  
                               l1214 40CA                                 l1215 4150  
                               l1241 6C7C                                 l1242 6C76  
                               l1253 6CEC                                 l2133 7F6A  
                               l1270 488C                                 l2143 8256  
                               l1185 7EFA                                 l1274 4900  
                               l1268 47D2                                 l1293 1482  
                               l1278 4974                                 l1455 84C6  
                               l1675 6D6E                                 l1694 53B6  
                               l1689 5026                                 l8011 75EE  
                               l8005 75DC                                 l8015 7620  
                               l8113 451A                                 l8033 8708  
                               l8115 45D4                                 l8107 4430  
                               l8035 870E                                 l8027 7E40  
                               l8123 7F88                                 l9021 46BE  
                               l8055 73B2                                 l9015 4670  
                               l9111 505A                                 l9103 502A  
                               l8217 6370                                 l9025 4700  
                               l9201 536C                                 l9105 502E  
                               l8075 4000                                 l9051 48CA  
                               l9115 50B0                                 l9123 5100  
                               l9131 5168                                 l8421 681A  
                               l9061 49AC                                 l9045 4856  
                               l9029 471A                                 l8261 7EC6  
                               l8341 61D4                                 l9205 5392  
                               l9141 519C                                 l9125 512A  
                               l9117 50B6                                 l8255 7E96  
                               l8263 7ECA                                 l8343 61EA  
                               l8335 6196                                 l9143 51B6  
                               l9207 5398                                 l9073 77FE  
                               l7641 7C7C                                 l7801 0000  
                               l8281 5B76                                 l8513 1496  
                               l8505 1470                                 l9241 7A12  
                               l9057 493E                                 l8361 6248  
                               l8353 6224                                 l9401 53FE  
                               l9129 5130                                 l9083 784E  
                               l7643 7C84                                 l7803 000E  
                               l8099 43DA                                 l8515 14A6  
                               l9251 80FC                                 l8443 6C32  
                               l8435 6C14                                 l8355 622C  
                               l8339 61BE                                 l9163 51EC  
                               l7645 7C8C                                 l8701 3160  
                               l8605 1FFC                                 l8533 16EC  
                               l9237 79E6                                 l9333 4C2E  
                               l9317 4BBA                                 l8445 6C38  
                               l8437 6C1C                                 l8373 628C  
                               l8381 62AE                                 l9181 5266  
                               l9157 51E8                                 l9149 51BA  
                               l9173 521A                                 l9093 4FC2  
                               l9079 7810                                 l9087 7864  
                               l7639 7C74                                 l7911 6686  
                               l8279 5B3A                                 l8607 2036  
                               l9327 4C20                                 l8375 629C  
                               l8383 62CA                                 l9431 56D4  
                               l9423 5680                                 l9415 563A  
                               l9407 55E0                                 l9175 5228  
                               l7649 7C94                                 l7921 7E4E  
                               l8633 254E                                 l8617 2214  
                               l8481 6CE8                                 l8385 62D8  
                               l8377 62A2                                 l8369 6286  
                               l9185 528C                                 l7827 7196  
                               l8731 3476                                 l8723 33FC  
                               l8635 265E                                 l8619 2240  
                               l8555 1AEE                                 l8547 1A54  
                               l8491 1116                                 l9259 8440  
                               l9347 4D4A                                 l9363 4EAE  
                               l8459 6C84                                 l8475 6CBE  
                               l9443 5752                                 l9195 5328  
                               l9187 5292                                 l9099 4FFE  
                               l7685 7C18                                 l8805 37AE  
                               l8741 3532                                 l8725 342E  
                               l8709 3382                                 l8661 2B92  
                               l8645 2922                                 l8637 2664  
                               l9613 6B78                                 l8477 6CCC  
                               l8389 62E6                                 l9189 52DA  
                               l9197 5336                                 l7871 7D88  
                               l7927 7E7C                                 l8735 34E8  
                               l8663 2BC0                                 l8647 292A  
                               l8639 2674                                 l8567 1E42  
                               l8831 39B4                                 l9615 6B88  
                               l9711 767C                                 l9295 82F2  
                               l8479 6CDC                                 l9447 575E  
                               l7689 7C42                                 l7961 68F8  
                               l8825 3930                                 l8817 38B4  
                               l8809 37C4                                 l8761 35D4  
                               l8593 1FBA                                 l8577 1ED4  
                               l9705 766E                                 l8913 701A  
                               l9801 5A42                                 l9537 8630  
                               l7867 7D7A                                 l7955 68BC  
                               l7947 6834                                 l8755 35AC  
                               l8739 352C                                 l9563 7CEC  
                               l9731 76C4                                 l9715 7686  
                               l8931 8066                                 l9395 53E2  
                               l8843 7F3A                                 l7965 68FE  
                               l8781 365C                                 l8757 35C6  
                               l8677 2FBA                                 l8829 3940  
                               l9477 853A                                 l9725 76A8  
                               l9709 7676                                 l9645 7420  
                               l9653 744A                                 l8845 7F42  
                               l9805 5A86                                 l7967 690C  
                               l8791 3734                                 l8783 3668  
                               l8775 364E                                 l8695 312A  
                               l8687 30E8                                 l9559 7CCE  
                               l9719 768E                                 l8935 8074  
                               l8855 7F60                                 l8847 7F46  
                               l8871 824C                                 l8863 822E  
                               l9751 7216                                 l9649 742E  
                               l8865 8236                                 l9753 721E  
                               l9675 86BC                                 l8875 0000  
                               l9667 7468                                 l8955 7580  
                               l8867 823A                                 l9755 7226  
                               l8949 755E                                 l8973 6E0E  
                               l9687 8480                                 l8983 6E44  
                               l9759 724A                                 STR_1 109A  
                               STR_2 1039                                 l9785 5796  
                               STR_3 1090                                 STR_4 1066  
                               l9947 77D8                                 l9787 57A0  
                               STR_5 1077                                 STR_6 1084  
                               l8989 6EC0                                 STR_7 10A2  
                               STR_8 1055                                 l9959 7BF2  
                               _GIEH 007F97                                 _GIEL 007F96  
        __end_of_TCP_GetReceivedData 77E2                                 _LATE 000F8D  
                               _LATH 000F90                                 _LATJ 000F91  
                               _IPEN 007E87                                 _RBPU 007F8F  
                               _TMR1 000FCE                      lcd_write_data@d 0002  
                      ?_ETH_MACRead8 0001                         lcd_goto1@pos 0003  
                      __CFG_FCMEN$ON 000000                         __CFG_STVR$ON 000000  
             __end_of_lcd_write_data 860C                      __end_of_TCP_Snd 45DA  
             __end_of_lcd_write_ctrl 862C                      _TCP_PayloadSave 5AB0  
                    lcd_write_ctrl@c 0002                                 _main 6CF0  
                               _time 7CAA                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 005E                          _SYSLOG_Init 836C  
                               prodl 000FF3                                 start 0028  
                      __CFG_FOSC2$ON 000000                         ?_IPV4_Packet 0001  
                 __size_of_ETH_Read8 0030                   __size_of_ETH_Flush 0034  
             __size_of_ETH_ReadBlock 0096                    SPI_ExchangeByte@v 0002  
                       ___param_bank 000010                __size_of_SYSLOG_Write 0026  
                 __size_of_IPV4_Init 000C                   __size_of_IPV4_Send 006E  
                        ?_TCB_Insert 0002                     ??_ENCx24_PhyRead 000D  
                       ?_ETH_Write32 0003                         ?_ETH_Write16 0003  
                 ETH_Flush@newRXTail 0009                   ETH_Init@phcon1_val 0016  
                   ARPV4_Request@ret 002E                  __size_of_ARPV4_Init 001A  
           __size_of_ETH_CheckLinkUp 0034              ?_TCP_FiniteStateMachine 0001  
                   __end_of_LED_Init 864C                         _BAUDCON1bits 000F7E  
                      __CFG_WAIT$OFF 000000        ETH_TxComputeChecksum@econ1Val 001B  
                   _ETH_GetByteCount 864C                       __CFG_CCP2MX$ON 000000  
                              l10005 8588                                l10009 859A  
                              l10043 792C                                l10061 69CA  
                              l10029 878E                                l10141 6DDE  
                              l10223 7266                                l10047 795A  
                              l10119 6D2C                                l10081 6A70  
                              l10225 7270                                l10067 6A04  
                              l10059 69BE                     __end_of_ETH_Copy 751A  
                              l10227 7274                                l10077 6A50  
                              l10093 8456                                l10089 6ABA  
                              l10097 8466                     __end_of_ETH_Dump 7FBE  
                   __end_of_ETH_Init 6BE0                    _nextPacketPointer 019E  
                   __end_of_ETH_Send 85EC                   __size_of_TCB_Check 0086  
                              ?_main 0001                                ?_time 0002  
             __size_of_ETH_Set_TXRTS 000C  IPV4_PseudoHeaderChecksum@payloadLen 0002  
                              _CREN1 007D5C                                u11000 4518  
                              u11010 456A                                u11020 45D4  
                              u11007 450A                                u11200 5F38  
                              u12000 1AD8                                u11017 4552  
                              u11210 5F6C                                u10250 7C3A  
                              u11027 45BC                                u11220 5FA0  
                              u10340 0016                                u11300 5B24  
                              u12100 1DD2                                u12020 1B22  
                              u10341 0014                                u11230 5FD4  
                              u11150 5E04                                u12110 1E10  
                              u12030 1B74                                u11070 8014  
                              u11207 5F28                                u12007 1ACC  
                              u11240 6002                                u11160 5E38  
                              u10520 761C                                u10600 3B20  
                              u11400 5DB8                                u11320 5B76  
                              u12120 1E3E                                u11080 7B42  
                              u11217 5F60                                u10257 7C30  
                              u12041 1BB6                                u11250 6030  
                              u11170 5E78                                u10370 654E  
                              u10450 6842                                u10610 3B86  
                              u11330 5BB4                                u13010 315C  
                              u12210 1F80                                u12130 1E92  
                              u12050 1C08                                u11227 5F94  
                              u11307 5B14                                u12107 1DC2  
                              u12027 1B16                                u11260 6058  
                              u11180 5EB8                                u10380 65F4  
                              u10460 6852                                u10700 3ECA  
                              u10620 3BEC                                u11340 5BFE  
                              u13100 33B0                                u13020 31B0  
                              u12140 1EC6                                u12060 1C72  
                              u11237 5FC8                                u11157 5DF4  
                              u12301 212C                                u12117 1E00  
                              u12037 1B5C                                u11270 608A  
                              u11190 5EF8                                u10710 3F60  
                              u10630 3C56                                u11350 5C44  
                              u13030 3202                                u12310 216A  
                              u12230 1FB6                                u12070 1CA6  
                              u11247 5FF8                                u11167 5E2C  
                              u10527 7610                                u10375 6544  
                              u10607 3B10                                u11407 5DAC  
                              u11327 5B66                                u12127 1E3C  
                              u10800 4108                                u10720 3FA4  
                              u10640 3CC0                                u11360 5C82  
                              u11280 5AE0                                u13200 3560  
                              u13120 33EC                                u13040 326C  
                              u12400 2360                                u12240 1FEE  
                              u12160 1F02                                u12080 1CF8  
                              u11440 60A6                                u14000 50AE  
                              u11257 6026                                u11177 5E68  
                              u10385 65EA                                u10705 3EC0  
                              u10617 3B6E                                u11337 5BA4  
                              u13017 3150                                u12217 1F76  
                              u12137 1E7A                                u12057 1BF0  
                              u11521 62D6                                u10730 3FF0  
                              u10650 3CDA                                u10570 3A52  
                              u11370 5CC8                                u13050 32A0  
                              u12330 21CE                                u12090 1D70  
                              u14010 50EE                                u11267 604C  
                              u11187 5EA8                                u10627 3BD4  
                              u11347 5BEE                                u13107 33A6  
                              u13027 3198                                u12411 2388  
                              u12147 1EBA                                u12067 1C5A  
                              u11451 60BE                                u10900 4310  
                              u10820 4150                                u10660 3D76  
                              u10580 3A8A                                u11380 5D1A  
                              u13220 359C                                u13140 3460  
                              u13060 32DA                                u12500 25F0  
                              u12420 23DC                                u12260 2066  
                              u11700 1238                                u14020 5122  
                              u11277 607E                                u11197 5EE8  
                              u10717 3F50                                u10637 3C3E  
                              u11357 5C34                                u13301 36E0  
                              u13037 31EA                                u12317 215A  
                              u12237 1FB4                                u12077 1C9A  
                              u11461 60F8                                u10910 4340  
                              u10830 418E                                u10750 403C  
                              u10670 3DDC                                u10590 3ADC  
                              u11390 5D84                                u13310 371E  
                              u13070 3314                                u12510 262A  
                              u12350 223C                                u12190 1F48  
                              u11710 128A                                u10807 40F8  
                              u10727 3F94                                u10655 3CD0  
                              u10647 3CA8                                u11367 5C72  
                              u11287 5AD6                                u13207 3556  
                              u13127 33E0                                u13047 3254  
                              u12431 241E                                u12407 2348  
                              u12271 207A                                u12247 1FE2  
                              u12167 1EF8                                u12087 1CE0  
                              u14007 50A4                                u10920 43A0  
                              u10840 41CC                                u10680 3E46  
                              u13400 389E                                u13160 34AE  
                              u13080 3348                                u12600 2832  
                              u12520 265E                                u12440 2472  
                              u12360 2290                                u12280 20B2  
                              u11800 156E                                u11720 12F4  
                              u10737 3FE6                                u10577 3A42  
                              u11377 5CB8                                u13321 3732  
                              u13057 3294                                u12337 21B6  
                              u12097 1D58                                u11481 618A  
                              u14017 50E4                                u10850 4212  
                              u10770 4082                                u10690 3EB0  
                              u13410 38F4                                u13330 3762  
                              u13250 3602                                u13170 34E2  
                              u13090 337C                                u12610 2874  
                              u12530 26A4                                u12450 24DC  
                              u12290 2104                                u11810 15D0  
                              u11730 1356                                u11650 10DC  
                              u10907 4304                                u10827 4140  
                              u10667 3D5E                                u10587 3A7A  
                              u11387 5D02                                u13227 3590  
                              u13147 3454                                u13067 32CC  
                              u12507 25E2                                u12427 23C4  
                              u12371 22B8                                u12267 2056  
                              u11707 1220                                u14027 5118  
                              u10860 4250                                u13420 392A  
                              u13180 351A                                u12700 2A1C  
                              u12620 28B6                                u12460 2512  
                              u12380 22F8                                u11900 1806  
                              u11820 160E                                u11740 1394  
                              u11660 110E                                u14300 4CCA  
                              u10917 4336                                u10837 417E  
                              u10757 402C                                u10677 3DC4  
                              u10597 3ACC                                u11397 5D6C  
                              u13317 370E                                u13077 3306  
                              u12541 26B8                                u12517 261C  
                              u12357 223A                                u12197 1F3E  
                              u11717 1272                                u10870 4296  
                              u10790 40CA                                u13430 396E  
                              u13350 379E                                u13270 363E  
                              u12710 2A5E                                u12630 28EC  
                              u12550 270C                                u12470 254A  
                              u11910 1870                                u11830 1648  
                              u11750 13C8                                u11670 1166  
                              u11590 6C42                                u10927 4388  
                              u10847 41BC                                u10687 3E2E  
                              u13407 3892                                u13167 34A0  
                              u13087 333C                                u12607 2822  
                              u12527 2652                                u12447 245A  
                              u12391 230C                                u12367 2278  
                              u12287 20A6                                u11807 1556  
                              u11727 12DC                                u14311 4D2E  
                              _LATB3 007C53                                u10960 4462  
                              u10880 42D4                                u13440 39E8  
                              u12720 2AA0                                u12640 2922  
                              u12480 2582                                u11920 18A4  
                              u11840 1682                                u11760 1402  
                              u11680 11A4                                u14400 4F58  
                              u14128 5252                                u10857 4202  
                              u10777 4072                                u10697 3E98  
                              u13417 38E4                                u13337 3758  
                              u13257 35F8                                u13177 34D6  
                              u13097 3370                                u12801 2CB4  
                              u12617 2864                                u12561 2734  
                              u12537 2694                                u12457 24C4  
                              u12297 20EC                                u11817 15C0  
                              u11737 1346                                u11657 10D2  
                              u14305 4CC0                                u10970 449A  
                              u13450 3A1C                                u13370 37FC  
                              u13290 36B8                                u12810 2D08  
                              u12730 2AE2                                u12650 2958  
                              u12570 2778                                u12490 25B6  
                              u11930 18F6                                u11850 16B6  
                              u11770 143C                                u11690 11E6  
                              u13610 46A0                                u10867 4240  
                              u13427 391E                                u13187 350E  
                              u12707 2A10                                u12627 28A6  
                              u12467 2506                                u12387 22E8  
                              u11907 17EE                                u11827 15FE  
                              u11747 1384                                u11667 1104  
                              u10980 44D8                                u13380 3836  
                              u12900 2F50                                u12740 2B24  
                              u12580 27AE                                u11940 196E  
                              u11860 16EA                                u11780 1470  
                              u14148 5356                                u10877 4286  
                              u10797 40BA                                u13437 3964  
                              u13357 3792                                u13277 3632  
                              u12717 2A4E                                u12637 28E0  
                              u12557 26F4                                u12477 253E  
                              u11917 1858                                u11837 163A  
                              u11757 13BC                                u11677 114E  
                              u14405 4F4E                                u13390 386A  
                              u12830 2D7E                                u12750 2B5A  
                              u12670 2992                                u12590 27F0  
                              u11950 19D0                                u11870 1720  
                              u11790 14F6                                u13630 46FC  
                              u14430 548E                                u10967 4458  
                              u10887 42C4                                u13447 39DC  
                              u12727 2A90                                u12647 2916  
                              u12487 2576                                u11927 1898  
                              u11847 1674                                u11767 13F4  
                              u11687 1194                                u14351 4D9A  
                              u14271 4C12                                u12920 2F86  
                              u12760 2B90                                u11960 1A0E  
                              u11880 1772                                u14360 4E32  
                              u14440 556A                                _LATH0 007C80  
                              u10977 448E                                u13457 3A10  
                              u13377 37EE                                u13297 36A0  
                              u12817 2CF0                                u12737 2AD2  
                              u12657 294E                                u12577 2768  
                              u12497 25AA                                u11937 18DE  
                              u11857 16AA                                u11777 142E  
                              u11697 11D6                                u13617 4690  
                              _LATH1 007C81                                u12850 2DF8  
                              u12770 2C10                                u12690 29E6  
                              u14450 55CE                                _LATH2 007C82  
                              u10987 44C8                                u13387 3828  
                              u12907 2F40                                u12747 2B14  
                              u12587 27A2                                u11947 1956  
                              u11891 17B4                                u11867 16DE  
                              u11787 1464                                u14435 5484  
                              u15307 7288                                u12940 2FBA  
                              u12860 2E48                                u11980 1A50  
                              u13820 493C                                u13740 4854  
                              u13397 385E                                u12837 2D66  
                              u12781 2C38                                u12757 2B4E  
                              u12677 2986                                u12597 27E0  
                              u11957 19C0                                u11877 1714  
                              u11797 14DE                                u14365 4E28  
                              u13637 46EC                                u14461 55DE  
                              u14445 5560                                u15317 7298  
                              u13910 784C                                u12950 3028  
                              u12870 2E8E                                u12790 2C8C  
                              u11990 1AA4                                u14550 7CCC  
                              u13830 4972                                u13750 488A  
                              u13670 4760                                u15270 6D6E  
                              u12927 2F7C                                u12767 2B84  
                              u11967 19FE                                u11887 175A  
                              u15407 6AD2                                u14391 4EDA  
                              u15327 72A8                                u12960 307A  
                              u12880 2ECC                                u13680 4774  
                              u12857 2DE8                                u12777 2BF8  
                              u12697 29D6                                u15417 6AE8  
                              u15337 72B8                                u12890 2F12  
                              u13850 49AC                                u13690 47C4  
                              u12947 2FB0                                u12867 2E38  
                              u11987 1A4C          __size_of_ETH_readLinkStatus 0000  
                              u15427 6B7E                                u13827 4930  
                              u13747 4848                                u15347 72CE  
                              u12980 30D8                                u13860 4A40  
                              u13780 48C8                                u13917 783C  
                              u12957 3010                                u12877 2E7E  
                              u12797 2C74                                u11997 1A8C  
                              u15437 7A34                                u13837 4966  
                              u13757 487E                                u13677 4750  
                              u15357 72E4                                u12990 311A  
                              u13870 4B2C                                u13790 48FE  
                              u14910 5918                                u14830 57DC  
                              u12967 3062                                u12887 2EBC  
                              u15447 7A4E                                u15367 731E  
                              u15287 85F8                                u12897 2F02  
                              u13865 4A36                                u13857 49A0  
                              u13697 47AC                                u15377 8614  
                              u15297 8602                                u14930 595C  
                              u14850 5826                                u12987 30C0  
                              u13875 4B22                                u13787 48BC  
                              u15387 8622                                u14940 599A  
                              u14860 586C                                u12997 310E  
                              u13797 48F2                                u14917 590E  
                              u14837 57CC                                u15397 87E2  
                              u14950 59CA                                u14870 58AA  
             __size_of_ETH_SetPktDec 000C                                u13968 4FE8  
                              u14960 5A02                                u14937 594C  
                              u14857 5816                                u14970 5A36  
                              u14890 58E2                   __size_of_TCB_Reset 02C8  
                              u14947 598A                                u14867 585C  
                              u14980 5A80                                u14957 59C0  
                              u14877 589A                                u13998 507A  
                              u14967 59F6                                u14977 5A2A  
                              u14897 58D8                      __end_of___lwdiv 7F74  
                              u14987 5A70                      __end_of___lwmod 8260  
                __size_of_ENCx24_BFC 0040                  __size_of_ENCx24_BFS 0040  
                              _SPEN1 007D5F                                _TX1IF 007CF4  
                    __end_of__doprnt 53BC                                _TRISA 000F92  
                              _TRISE 000F96                                _TRISH 000F99  
                              _TRISJ 000F9A                       __CFG_ECCPMX$ON 000000  
     __size_of_ETH_TxComputeChecksum 00AE        __end_of_ETH_TxComputeChecksum 71D2  
                  ??_ENCx24_PHYWrite 000D                 __size_of_DHCP_Manage 008E  
                   __end_of_TCP_Bind 8586                     __end_of_TCP_Init 86BA  
                   __end_of_TCP_Recv 4B8A                          ?_TCP_Listen 00D4  
                   __end_of_TCP_Send 7124                          ?_IPv4_Start 004B  
                    __end_of_dpowers 100B                     __end_of_UDP_Send 73D0  
                  ETH_GetMAC@macAddr 0008                          ?_TCP_Update 0001  
                              _putch 8686                                main@t 02A3  
                  _ETH_ResetReceiver 7DA6                       ??_ETH_MACRead8 0005  
                   ?_TCP_GetRxLength 000A                   __size_of_UDP_Start 004E  
                    __end_of_low_isr 0028            __size_of_ETH_EventHandler 00A6  
          _IPV4_PseudoHeaderChecksum 751A                                pclath 000FFA  
    TCP_FiniteStateMachine@nextState 00D3                                tablat 000FF5  
             TCP_InsertRxBuffer@data 000C                                time@t 0002  
                              plusw1 000FE3                                plusw2 000FDB  
                       _SYSLOG_Write 84F2                      ?_lcd_write_data 0001  
                 ?_ETH_ResetReceiver 0001                      ??_lcd_init_pins 0002  
                    ?_lcd_write_ctrl 0001                                status 000FD8  
                 _TCP_InsertRxBuffer 76D6                      __end_of_sprintf 83F4  
                      ?_IPV4_GetMyIP 0002                        ?_ETH_SaveRDPT 0001  
         ETH_RxComputeChecksum@rxPtr 0017                        ?_ETH_SetRXptr 0003  
                __size_of_ETH_GetMAC 007A                       __CFG_ETHLED$ON 000000  
      ETH_TxComputeChecksum@position 000D                  __size_of_ETH_Read16 0048  
                __size_of_ETH_Read32 0064                 __end_of_ARPV4_Packet 4FBE  
                    __initialization 8098                  ??_ETH_ResetReceiver 0009  
    DEMO_TCP_EchoServer@socket_state 00DA                  __size_of_ETH_Insert 0054  
                    TCP_Send@dataLen 00B8                 __end_of_ARPV4_Lookup 7E92  
                ?_TCP_InsertRxBuffer 000A                         __end_of_main 6DE4  
               __end_of_ARPV4_Update 84A0                         __end_of_time 7CFE  
     __end_of_TCP_FiniteStateMachine 3A22                  __size_of_ETH_Write8 001A  
                        ETH_Copy@len 000D                  _DEMO_TCP_EchoServer 69AC  
                    _DHCP_WriteZeros 8706                               ??_main 005D  
                             ??_time 0006                        __activetblptr 000003  
                    TCP_SendDone@ret 000C                  _TCP_ParseTCPOptions 6BE0  
               DEMO_TCP_EchoServer@i 00DD                        _ETH_ReadBlock 75B2  
                    TCP_Snd@txHeader 00A0                 ??_TCP_InsertRxBuffer 0010  
                  __end_of_ETH_Read8 836C                    __end_of_ETH_Flush 8308  
          __end_of_ETH_ResetReceiver 7DF6              __end_of_TCP_PayloadSave 5DC4  
                  __end_of_IPV4_Init 87CA             __end_of_SPI_ExchangeByte 87A6  
                  __end_of_IPV4_Send 7B36                            ??_TCP_Snd 0067  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                       ETH_Dump@length 000B  
                             ?_putch 0001                  __size_of_TCB_Insert 004C  
                             _T1SYNC 007E6A                 ?_DEMO_TCP_EchoServer 0001  
        DEMO_TCP_EchoServer@port7TCB 0232                               _OSCCON 000FD3  
                     ??_IPV4_GetMyIP 0006                               _SPBRG1 000FAF  
                             _TMR1IE 007CE8                               _TMR1IF 007CF0  
                             _TMR1CS 007E69                       ??_ETH_SaveRDPT 000B  
                             _TMR1IP 007CF8                               _TMR1ON 007E68  
                      _ETH_Set_TXRTS 87CA                 __size_of_ENCx24_Read 004A  
                  __end_of_TCB_Check 7868                               _SSPBUF 000FC9  
               __end_of_ICMP_Receive 8098                       ??_ETH_SetRXptr 0005  
                      _ETH_SetPktDec 87B2                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                     __end_of_dhcpName 1028  
               ?_TCP_ParseTCPOptions 0001                    __end_of_TCB_Reset 608C  
               __end_of_ENCx24_Write 8164                __size_of_DHCP_Handler 026A  
                  main@no_ip_display 02A7                       __CFG_XINST$OFF 000000  
                    __CFG_EASHFT$OFF 000000                  _ETH_SendSystemReset 79E6  
                   __end_of_lcd_busy 87EA                     __end_of_lcd_init 7328  
                     ETH_ReadBlock@p 0008                     __end_of_high_isr 87F2  
              ICMP_EchoReply@icmpHdr 0074                     __end_of_lcd_puts 85A8  
                 _ETH_ResetByteCount 876C                 TCP_Snd@payloadLength 009B  
              ICMP_EchoReply@ipv4Hdr 0058                  __size_of_TCP_Listen 0084  
                __size_of_IPv4_Start 018E                               _ethMAC 0299  
                             _arpMap 0300                            ??___lwdiv 0006  
                          ??___lwmod 000D                __size_of_DHCP_Request 01D8  
                __size_of_TCP_Update 033E                               _initHW 81E4  
                             _memcmp 7E92                            ??__doprnt 0010  
                             _memset 844C                  ETH_SetRXptr@address 0003  
                  __end_of_UDP_Start 7E44                               clear_0 809E  
                             clear_1 80AA                               clear_2 80B6  
                             _tcpMss 01A4                         __doprnt@flag 0017  
               __end_of_broadcastMAC 102E                               _printf 853E  
             ETH_EventHandler@eirVal 0011                  ?_ETH_ResetByteCount 0001  
                       __doprnt@prec 0014                               main@ip 02C8  
                    UDP_Start@destIP 0067                 ETH_GetByteCount@wPtr 000D  
                       __pdataCOMRAM 005D                TCP_GetRxLength@tcbPtr 000A  
                     ?_ETH_ReadBlock 0003                         ?_UDP_Receive 0097  
                       __mediumconst 0000                    ??_ETH_CheckLinkUp 000F  
               ?_ETH_SendSystemReset 0001                            ??_low_isr 0001  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                     __end_of_spi_init 87B2  
       __size_of_Network_WaitForLink 000E                   ETH_CheckLinkUp@ret 0013  
                          ??_sprintf 0027                         ??_ARPV4_Init 0002  
              DHCP_WriteZeros@length 0004                         _DHCP_Handler 608C  
              ??_DEMO_TCP_EchoServer 005D                        DHCP_Handler@v 007F  
                     ETH_Insert@data 0011                      __CFG_FOSC$HSPLL 000000  
                     ?_ETH_Set_TXRTS 0001                           __accesstop 0060  
            __end_of__initialization 80D4                       ?_ETH_SetPktDec 0001  
               ??_ETH_ResetByteCount 000B                         ??_ENCx24_BFC 0007  
                       ??_ENCx24_BFS 0007                   TCP_SendDone@tcbPtr 000A  
                          ?_LED_Init 0001                ??_TCP_ParseTCPOptions 000F  
                ENCx24_PHYWrite@data 000B                            ?_ETH_Copy 000D  
                          ?_ETH_Dump 000B                            ?_ETH_Init 0001  
                          ?_ETH_Send 0001                        ___rparam_used 000001  
                       _DHCP_Request 62F6                        ?_Network_Init 0001  
                      ?_Network_Read 0001               IPV4_Send@payloadLength 001D  
              IPv4_Start@destAddress 004B              __end_of_DHCP_WriteZeros 871E  
                     __pcstackCOMRAM 0001                _ETH_RxComputeChecksum 6F9A  
            __size_of_ETH_WriteBlock 0058                 __size_of_IPV4_Packet 03B6  
                          ?_TCP_Bind 000A                __end_of_ARPV4_Request 668A  
                          LED_Init@x 0002                            ?_TCP_Init 0001  
                          ?_TCP_Recv 00D4                            ?_TCP_Send 00B4  
            __size_of_ETH_WriteStart 0054                            ?_UDP_Send 0001  
                      __end_of_putch 86A0                 __end_of_ETH_MACRead8 829C  
               __size_of_ETH_Write16 0022                 __size_of_ETH_Write32 002E  
                 __end_of_ARPV4_Init 86D4    TCP_ParseTCPOptions@tcpOptionsSize 0013  
                       _TXPacketSize 019A         __end_of_ETH_NextPacketUpdate 7AC8  
                       ??_ETH_GetMAC 000A                         _dhcpServerId 0222  
                       ETH_Read8@ret 0003                         ??_ETH_Read32 0007  
                       ??_ETH_Read16 0005                     ??_Network_Manage 017E  
                 __end_of_ENCx24_BFC 81E4                   __end_of_ENCx24_BFS 81A4  
              ??_ETH_SendSystemReset 000B                         ??_ETH_Insert 000F  
                   TCP_Listen@tcbPtr 00D4                   __size_of_lcd_goto1 000E  
         __size_of_ETH_ResetReceiver 0050                        TCB_Insert@ptr 0002  
                       ??_ETH_Write8 0003             DHCP_Handler@optionLength 0092  
                   ?_TCP_PayloadSave 005A                           __doprnt@ap 000F  
                         __doprnt@cp 0015                           __doprnt@pb 001B  
                 __size_of_lcd_putch 001C                              ??_putch 0002  
                         __pbssBANK0 00FE                           __pbssBANK1 0183  
                         __pbssBANK2 0200                           __pbssBANK3 0300  
                   _ETH_EventHandler 73D0       DEMO_TCP_EchoServer@rxdataPort7 0269  
           __end_of_ETH_GetByteCount 866A                __size_of_ARPV4_Packet 0434  
                         ??_LED_Init 0002                       TCP_Bind@tcbPtr 000A  
              __size_of_ARPV4_Lookup 004E                         ?_SYSLOG_Init 0001  
                         ??_ETH_Copy 000F                           ??_ETH_Dump 000D  
                         ??_ETH_Init 0014                       ??_Network_Init 0018  
                     ??_Network_Read 011C                           ??_ETH_Send 0009  
              __size_of_ARPV4_Update 002A                   ENCx24_BankselSPI@a 0003  
                         _macAddress 102E                      TCB_Reset@tcbPtr 0002  
                 __end_of_ETH_GetMAC 79E6                        ETH_MACRead8@a 0007  
                      ETH_MACRead8@v 0005                   __end_of_ETH_Read16 8050  
                 __end_of_ETH_Read32 7B9A                         ??_TCB_Insert 0004  
                 __end_of_ETH_Insert 7DA6                         IPV4_Send@ret 0023  
                         ??_TCP_Bind 000E                           ??_TCP_Init 0002  
                         ??_TCP_Recv 00DA                           ??_TCP_Send 005A  
                    _ENCx24_PHYWrite 8420                   __end_of_ETH_Write8 86EE  
                            ?_initHW 0001                           ??_UDP_Send 0028  
                            ?_memcmp 0002                           _deviceTime 02CC  
                            ?_memset 0002            ETH_EventHandler@macon2Val 000D  
     DEMO_TCP_EchoServer@txdataPort7 027D             TCP_SocketPoll@socket_ptr 000A  
                            ?_printf 001C              __size_of_ADC_Initialize 0016  
                            _T1CKPS0 007E6C                              _T1CKPS1 007E6D  
               __end_of_IPV4_GetMyIP 875C                      ??_ETH_ReadBlock 0007  
               __end_of_ETH_SaveRDPT 876C                              _T1OSCEN 007E6B  
               __end_of_ETH_SetRXptr 8706                   __size_of_uart_init 0016  
             TCP_GetReceivedData@ret 0010                   __size_of_rtcc_init 0038  
                       SYSLOG_Init@t 0027                       TCB_Check@count 0007  
            __size_of_TCP_SocketInit 00C8              __size_of_TCP_SocketPoll 0026  
                         _ipv4Header 01A8                         _ARPV4_Packet 4B8A  
                            _OSCTUNE 000F9B                         ??_TCP_Listen 00D6  
                       ??_IPv4_Start 0050                     ??_lcd_write_data 0002  
                            _SSP1BUF 000FC9                     ??_lcd_write_ctrl 0002  
                       _ARPV4_Lookup 7E44                              _TCP_Snd 3A22  
                       ??_TCP_Update 00D4                __size_of_ICMP_Receive 0048  
                       _ARPV4_Update 8476                            ?_lcd_busy 0001  
                          ?_lcd_init 0001                            ?_high_isr 0001  
                    ??_ETH_Set_TXRTS 0003                            ?_lcd_puts 0004  
                    ??_ETH_SetPktDec 0003                __size_of_ENCx24_Write 0042  
             ARPV4_Lookup@ip_address 0002                           _ipv4Router 0226  
                         _led_values 0200                   __end_of_TCB_Insert 7F2A  
                    TCP_Update@count 00DC                   UDP_Receive@udpcksm 0097  
                  ETH_Dump@newRXTail 000D                  SYSLOG_Write@message 0027  
               TCP_SocketInit@tcbPtr 000A                              __Hparam 0000  
       __size_of_TCP_GetReceivedData 0086                              __Lparam 0000  
             ?_ETH_RxComputeChecksum 000D                     ?_DHCP_WriteZeros 0004  
                  __end_of_lcd_goto1 878A                   TCP_GetRxLength@ret 0010  
                          ?_spi_init 0001                    __end_of_lcd_putch 8686  
                        time@gie_val 0006                              ___lwdiv 7F2A  
                            ___lwmod 8222                   __end_of_TCP_Listen 78EC  
                         _currentTCB 00FE                         __psmallconst 1000  
                      ?_TCP_SendDone 000A                   __end_of_IPv4_Start 69AC  
                            __doprnt 4FBE           __end_of_ETH_readLinkStatus 0000  
                    __size_of_initHW 003E                   __end_of_TCP_Update 5AB0  
                            __pcinit 8098                      __size_of_memcmp 004C  
                    __size_of_memset 002A                              __ramtop 1000  
                            __ptext0 6CF0                              __ptext1 844C  
                            __ptext2 8586                              __ptext3 866A  
                            __ptext4 85EC                              __ptext5 877C  
                            __ptext6 81E4                              __ptext7 871E  
                            __ptext8 87A6                              __ptext9 829C  
                            _ethData 0183                              _ipv4DNS 0210  
                    __size_of_printf 0024    TCP_FiniteStateMachine@notAckBytes 00D0  
                      ??_DHCP_Manage 0059                    _ENCx24_BankselSPI 7C54  
                       _ICMP_Receive 8050                    __end_of_hexpowers 1013  
                            _dpowers 1001                              _tcbList 01A2  
                       _ENCx24_Write 8122                   ?_ENCx24_BankselSPI 0001  
                            _low_isr 0018                 __size_of_UDP_Receive 00EE  
              _ETH_TxComputeChecksum 7124              __size_of_ICMP_EchoReply 0194  
                            _sprintf 83C8                    ?_SPI_ExchangeByte 0001  
                         ??_lcd_busy 0002                           ??_lcd_init 0003  
                            main@str 02A8                           ??_high_isr 0002  
                     __pintcode_body 87EA                           ??_lcd_puts 0006  
               end_of_initialization 80D4                  ??_ENCx24_BankselSPI 0003  
                        TCP_Snd@data 0097                          TCP_Snd@cksm 0099  
                          _ETH_Read8 833C                            _ETH_Flush 82D4  
                            memcmp@n 0003                   ??_SPI_ExchangeByte 0002  
                          _IPV4_Init 87BE                            _IPV4_Send 7AC8  
                 IPv4_Start@protocol 004F                              memset@c 0004  
                            memset@n 0006                              memset@p 0008  
                            int_func 87EA                         _broadcastMAC 1028  
                   UDP_Start@dstPort 006D                 _ETH_NextPacketUpdate 7A58  
              __end_of_lcd_init_pins 87E0                  ETH_ReadBlock@length 0005  
            __end_of_ENCx24_PHYWrite 844C                    __end_of_uart_init 8734  
                         _waitForDMA 0000                       ETH_Write8@data 0003  
                      ?_rtcc_handler 0001                    __end_of_rtcc_init 82D4  
                   DHCP_Request@type 0070             TCP_InsertRxBuffer@tcbPtr 000A  
           __size_of_TCP_GetRxLength 0062                            _TCB_Check 77E2  
                   UDP_Start@srcPort 006B                __size_of_ETH_MACRead8 003C  
                            printf@f 0020                       _ETH_WriteBlock 7BFC  
          TCP_GetReceivedData@tcbPtr 000A                  _Network_WaitForLink 878A  
                          _TCB_Reset 5DC4                              postdec1 000FE5  
                            postdec2 000FDD                           ??_spi_init 0002  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                       ??_TCP_SendDone 000C  
                    _ETH_CheckLinkUp 8308                       _ETH_WriteStart 7CFE  
                 TCP_PayloadSave@len 005A                ARPV4_Packet@mergeFlag 0031  
                 _nextSequenceNumber 022A            __end_of_ENCx24_BankselSPI 7CAA  
           ETH_RxComputeChecksum@len 000D                            _PORTBbits 000F81  
                     DHCP_Handler@ip 0077                            _UDP_Start 7DF6  
               __end_of_Network_Init 8420                 __end_of_Network_Read 727E  
            __size_of_ENCx24_PhyRead 0044                            _TRISAbits 000F92  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                          _TRISDbits 000F95                        _rcvPayloadLen 01A0  
               ?_Network_WaitForLink 0001          __size_of_TCP_InsertRxBuffer 0086  
                  IPV4_Packet@hdrLen 00F9                  __end_of_DHCP_Manage 76D6  
                      ??_ENCx24_Read 0007                    IPV4_Packet@length 00FA  
                  ICMP_EchoReply@ret 0073                           ?_ETH_Read8 0001  
                         ?_ETH_Flush 0001                           ?_IPV4_Init 0001  
                       _ETH_MACRead8 8260                           ?_IPV4_Send 001D  
              ?_ETH_NextPacketUpdate 0001                           main@old_ip 029F  
                     ??_rtcc_handler 0002                           lcd_putch@c 0003  
             __end_of_ETH_WriteBlock 7C54                    __size_of_LED_Init 0020  
                      _dhcpLeaseTime 018A                     ENCx24_PHYWrite@a 000D  
               __size_of_SYSLOG_Init 002E                           ?_TCB_Check 0002  
                  __size_of_ETH_Copy 00A4                    __size_of_ETH_Dump 004A  
                  __size_of_ETH_Init 0118               __end_of_ETH_WriteStart 7D52  
                  __size_of_ETH_Send 0022                           ?_TCB_Reset 0002  
              __size_of_IPV4_GetMyIP 0012                __size_of_ETH_SaveRDPT 0010  
              __size_of_ETH_SetRXptr 0018             __end_of_ETH_EventHandler 7476  
           ARPV4_Request@destAddress 000F                       TCP_Recv@length 00D8  
                      __pidataCOMRAM 87F2                    _UDP_CallBackTable 1034  
                     TCP_Recv@tcbPtr 00F7                    __size_of_TCP_Bind 0024  
                     _ADC_Initialize 8734                    __size_of_TCP_Init 001A  
                  __size_of_TCP_Recv 05B0                    __size_of_TCP_Send 00C4  
                     __end_of_initHW 8222                       __end_of_memcmp 7EDE  
                     __end_of_memset 8476                    __size_of_UDP_Send 00A8  
                     __end_of_printf 8562            ETH_RxComputeChecksum@cksm 0015  
                         ?_UDP_Start 0067                  ICMP_Receive@icmpHdr 007A  
          ETH_RxComputeChecksum@seed 000F                       _TCP_SocketInit 6ED2  
                     _TCP_SocketPoll 8518                  ICMP_Receive@ipv4Hdr 005A  
        __end_of_DEMO_TCP_EchoServer 6AC8                  start_initialization 8098  
              ??_Network_WaitForLink 0014               ?_ETH_TxComputeChecksum 000D  
                      ETH_Read32@ret 0007                        ETH_Read16@ret 0005  
        __end_of_TCP_ParseTCPOptions 6CF0                       TCP_Send@tcbPtr 00B4  
       TCP_SocketPoll@tmpSocketState 000C          ETH_TxComputeChecksum@length 000F  
        __size_of_ETH_ResetByteCount 0010                    ?_ETH_GetByteCount 000B  
                       _IPV4_GetMyIP 874A                         _ETH_SaveRDPT 875C  
                       TCB_Check@ret 0006                         TCB_Check@ptr 0002  
           ??_TCP_FiniteStateMachine 00C3              __end_of_ETH_CheckLinkUp 833C  
                __end_of_ENCx24_Read 8008                         _ETH_SetRXptr 86EE  
                        ?_waitForDMA 0001                     ?_ENCx24_PHYWrite 000B  
                 ??_ETH_GetByteCount 000D                        ??_IPV4_Packet 0100  
                    ?_ETH_WriteBlock 0003                DHCP_Handler@ethPktMAC 0086  
                    ?_ETH_WriteStart 000B             DEMO_TCP_EchoServer@rxLen 00DB  
           DEMO_TCP_EchoServer@txLen 00D8                        ??_ETH_Write32 0007  
                      ??_ETH_Write16 0005            __end_of_UDP_CallBackTable 1039  
                        __doprnt@idx 0013               __end_of_ADC_Initialize 874A  
                        __doprnt@val 0018                  ARPV4_Request@header 002F  
                           ??_initHW 0004                             ??_memcmp 0005  
         __size_of_ENCx24_BankselSPI 0056                    ETH_ReadBlock@data 0003  
                           ??_memset 0008          __end_of_ETH_SendSystemReset 7A58  
                  ??_TCP_GetRxLength 000C                             ??_printf 0020  
             __end_of_TCP_SocketInit 6F9A               __end_of_TCP_SocketPoll 853E  
              ENCx24_BankselSPI@bank 0004                          _DHCP_Manage 7648  
               IPv4_Start@macAddress 0064                        ETH_Insert@len 000B  
                    IPV4_Packet@cksm 00FC                  _TCP_GetReceivedData 775C  
                      __pcstackBANK0 0060                        __pcstackBANK1 0100  
                      __pcstackBANK2 029F                TCP_Recv@remoteAddress 00D4  
                     _ICMP_EchoReply 668A                             ?_TCP_Snd 0058  
               __end_of_TCP_SendDone 84CA               __size_of_ARPV4_Request 01BC  
                        ??_ETH_Read8 0003                          ??_ETH_Flush 0009  
             ??_ETH_NextPacketUpdate 0005                          ??_IPV4_Init 0002  
                      ?_SYSLOG_Write 0027                          ??_IPV4_Send 001F  
                  __size_of_lcd_busy 000A                    __size_of_lcd_init 00AA  
                  ENCx24_BFC@bitMask 0005                    __size_of_high_isr 87EA  
                          __doprnt@c 001A                            __doprnt@f 000E  
                  __size_of_lcd_puts 0022              ??_ETH_RxComputeChecksum 0011  
           __size_of_TCP_PayloadSave 0314                            __pnvBANK2 02CC  
               ?_TCP_GetReceivedData 000A      ICMP_EchoReply@ipv4PayloadLength 0071  
                   ___lwdiv@dividend 0002                          ??_TCB_Check 0004  
                          __pintcode 0008                          ??_TCB_Reset 0004  
                   ETH_MACRead8@bank 0006                            __ptext100 7FBE  
                          __ptext101 7C54                            __ptext102 75B2  
                          __ptext103 8798                            __ptext112 84CA  
                          __ptext104 5DC4                            __ptext113 0000  
                          __ptext105 76D6                            __ptext106 7B9A  
                          __ptext107 775C                            __ptext108 8562  
                          __ptext109 77E2                   ARPV4_Packet@x_2060 0036  
                           ?___lwdiv 0002                             ?___lwmod 0009  
                      IPV4_Send@cksm 0024                      ?_ADC_Initialize 0001  
                 ETH_WriteBlock@data 0003                             ?__doprnt 000E  
              __size_of_Network_Init 002C                __size_of_Network_Read 00AC  
                 ARPV4_Packet@header 0039                          __pintcodelo 0018  
                __end_of_IPV4_Packet 5772                   ARPV4_Packet@arpPtr 0033  
                  __size_of_spi_init 000C                            _lcd_goto1 877C  
                 ARPV4_Packet@length 002F         IPV4_PseudoHeaderChecksum@len 0009  
                          _lcd_putch 866A         IPV4_PseudoHeaderChecksum@tmp 000E  
                    ?_TCP_SocketInit 000A             ARPV4_Update@entryPointer 0002  
                    ?_TCP_SocketPoll 000A                  __end_of_ETH_Write16 85CA  
                __end_of_ETH_Write32 83C8                          __smallconst 1000  
                           _BAUDCON1 000F7E                          _clientState 005D  
                        ??_UDP_Start 0058           ETH_EventHandler@mabbipgVal 000B  
                     _ENCx24_PhyRead 80DE                __end_of_ETH_ReadBlock 7648  
               __end_of_rtcc_handler 84F2               __end_of_ICMP_EchoReply 681E  
                           ?_low_isr 0001                  __size_of_waitForDMA 0000  
                          _last_bank 01A6                            _hexpowers 100B  
                   ___lwdiv@quotient 0007                            _localTime 02D0  
                DHCP_Request@started 006F                   _ETH_readLinkStatus 0000  
                           ?_sprintf 001C                       __size_of_putch 001A  
                        _ENCx24_Read 7FBE                       ??_SYSLOG_Write 0029  
                          _tcpHeader 01BC                __end_of_ETH_Set_TXRTS 87D6  
      ETH_RxComputeChecksum@econ1Val 0019                __end_of_ETH_SetPktDec 87BE  
            __size_of_Network_Manage 0080                    ENCx24_BFS@bitMask 0005  
                          _udpHeader 0291                             _LATBbits 000F8A  
                           _LED_Init 862C                             _LATDbits 000F8C  
                ?_ETH_readLinkStatus 000B                             _ETH_Copy 7476  
                         TCP_Snd@ret 009D                             _ETH_Dump 7F74  
                           _ETH_Init 6AC8                             _ETH_Send 85CA  
              ??_TCP_GetReceivedData 000C                     ?_ETH_CheckLinkUp 0001  
                    TCB_Check@tcbPtr 0008      __size_of_TCP_FiniteStateMachine 2978  
                        _ipv4Address 018E                         _Network_Init 83F4  
                       _Network_Read 71D2                    _nextAvailablePort 019C  
                   __CFG_WDTPS$32768 000000            __size_of_SPI_ExchangeByte 000E  
                          _uart_init 871E                             _SSP1CON1 000FC6  
                      ARPV4_Packet@x 0035                        SYSLOG_Write@t 0029  
                           _TCP_Bind 8562                             _TCP_Init 86A0  
                          _rtcc_init 829C                             _TCP_Recv 45DA  
                           _TCP_Send 7060   __size_of_IPV4_PseudoHeaderChecksum 0098  
                      _ARPV4_Request 64CE                             _UDP_Send 7328  
         ?_IPV4_PseudoHeaderChecksum 0002                           ?_lcd_goto1 0001  
                         ?_lcd_putch 0001               __end_of_ENCx24_PhyRead 8122  
               ??_ETH_readLinkStatus 000F             __size_of_DHCP_WriteZeros 0018  
                      ARPV4_Lookup@x 000C          TCP_FiniteStateMachine@event 00D2  
                      ??_UDP_Receive 0099                      ?_ICMP_EchoReply 0058  
                          lcd_puts@s 0004                        ARPV4_Update@x 0004  
                 __end_of_macAddress 1034           IPV4_PseudoHeaderChecksum@v 0008  
                      TCP_Recv@count 00F6                     TCP_Update@tcbPtr 00DE  
                      ?_DHCP_Handler 0059                     __size_of_TCP_Snd 0BB8  
              ETH_WriteStart@destMAC 000B                        TCP_Snd@tcbPtr 0058  
                      ?_DHCP_Request 0001              __size_of_lcd_write_data 0020  
                      IPv4_Start@ret 0066              __size_of_lcd_write_ctrl 0020  
                           __Hrparam 0000                          _IPV4_Packet 53BC  
                           __Lrparam 0000                           ?_uart_init 0001  
                        _ETH_Write32 839A                          _ETH_Write16 85A8  
                   ETH_ReadBlock@len 000A                       ?_ARPV4_Request 000F  
                  ??_TCP_PayloadSave 00B4                           ?_rtcc_init 0001  
                   __size_of___lwdiv 004A                     ENCx24_Write@bank 0007  
                   __size_of___lwmod 003E                     ENCx24_Write@data 0005  
                  ?_ETH_EventHandler 0001                     __size_of__doprnt 03FE  
  __end_of_IPV4_PseudoHeaderChecksum 75B2               TCP_ParseTCPOptions@ret 0011  
             TCP_ParseTCPOptions@opt 0012                      ?_ENCx24_PhyRead 000B  
                        _tcbListSize 01A7             ARPV4_Packet@entryPointer 0037  
            ??_ETH_TxComputeChecksum 0013                   DHCP_Handler@ethMAC 008C  
                 ??_ETH_EventHandler 000B               _TCP_FiniteStateMachine 10AA  
         __end_of_TCP_InsertRxBuffer 775C                   DHCP_Handler@length 0059  
                           _dhcpName 1013                __size_of_TCP_SendDone 002A  
             __size_of_lcd_init_pins 000A                       ENCx24_BFC@bank 0007  
                       TCP_Bind@port 000C                   DHCP_Handler@option 0085  
                    ___lwdiv@divisor 0004                      ___lwdiv@counter 0006  
                    ENCx24_Read@bank 0007                     __size_of_low_isr 0010  
                           __ptext10 727E                             __ptext11 860C  
                           __ptext20 78EC                             __ptext12 87D6  
                           __ptext21 5772                             __ptext13 87E0  
                           __ptext30 608C                             __ptext22 71D2  
                           __ptext14 862C                             __ptext31 7E92  
                           __ptext23 83C8                             __ptext15 8734  
                           __ptext40 668A                             __ptext32 7B36  
                           __ptext24 4FBE                             __ptext16 84F2  
                           _arpTimer 01D0                             __ptext41 875C  
                           __ptext33 45DA                             __ptext25 8686  
                           __ptext17 836C                             __ptext50 7DA6  
                           __ptext42 7476                             __ptext34 6BE0  
                           __ptext26 8222                             __ptext18 853E  
                           __ptext51 7648                             __ptext43 6F9A  
                           __ptext35 833C                             __ptext27 7F2A  
                           __ptext19 878A                             __ptext60 7CAA  
                           __ptext52 62F6                             __ptext44 7A58  
                           __ptext36 8008                             __ptext28 53BC  
                           __ptext61 86A0                             __ptext53 7DF6  
                           __ptext45 86EE                             __ptext37 7F74  
                           __ptext29 6DE4                             __ptext70 874A  
                           __ptext62 87BE                             __ptext54 876C  
                           __ptext46 82D4                             __ptext38 751A  
                           __ptext71 69AC                             __ptext63 6AC8  
                           __ptext55 7328                             __ptext47 87B2  
                           __ptext39 8050                             __ptext80 3A22  
                           __ptext72 6ED2                             __ptext64 79E6  
                           __ptext56 864C                             __ptext48 4B8A  
                           __ptext81 681E                             __ptext73 7EDE  
                           __ptext65 8308                             __ptext57 8706  
                           __ptext49 73D0                             __ptext90 7E44  
                           __ptext82 86D4                             __ptext74 84A0  
                           __ptext66 0000                             __ptext58 8476  
                           __ptext91 7AC8                             __ptext83 839A  
                           __ptext75 7060                             __ptext67 80DE  
                           __ptext59 83F4                             __ptext92 7124  
                           __ptext84 64CE                             __ptext76 8518  
                           __ptext68 8420                             __ptext93 0000  
                           __ptext85 7CFE                             __ptext77 7868  
                           __ptext69 86BA                             __ptext94 8164  
                           __ptext86 7BFC                             __ptext78 10AA  
                           __ptext95 81A4                             __ptext87 85A8  
                           __ptext79 5AB0                             __ptext96 85CA  
                           __ptext88 796C                             __ptext97 87CA  
                           __ptext89 8260                             __ptext98 7D52  
                           __ptext99 8122                       ??_DHCP_Handler 005B  
                       _SSP1CON1bits 000FC6                       ENCx24_BFS@bank 0007  
                  ETH_WriteBlock@len 0005                             _lcd_busy 87E0  
                           _lcd_init 727E                   DHCP_Request@ethMAC 0071  
                           _high_isr 0008                           _ARPV4_Init 86BA  
                       time@the_time 0007                             _lcd_puts 8586  
                   __size_of_sprintf 002C                  __end_of_UDP_Receive 6ED2  
                   ??_ETH_WriteBlock 0007                    _remoteIpv4Address 022E  
                 ETH_WriteStart@type 000D            ARPV4_Lookup@entry_pointer 000A  
                         _ENCx24_BFC 81A4                           _ENCx24_BFS 8164  
                   ??_ETH_WriteStart 000F                        __size_of_main 00F4  
                      ??_SYSLOG_Init 0027                       ??_DHCP_Request 0059  
                      __size_of_time 0054                      ENCx24_PhyRead@a 000D  
                    _TCP_GetRxLength 7B9A                         ??_waitForDMA 000B  
              Network_Read@debug_str 0120                    UDP_Send@udpLength 002F  
       ETH_Insert@current_tx_pointer 000F                             _spi_init 87A6  
                           int$flags 005E                 _rxPacketStatusVector 0218  
                       _TCP_SendDone 84A0                         _SSP1STATbits 000FC7  
                        ??_lcd_goto1 0003                __size_of_rtcc_handler 0028  
               __end_of_SYSLOG_Write 8518            __size_of_ETH_GetByteCount 001E  
        __end_of_Network_WaitForLink 8798                          ??_lcd_putch 0003  
           ETH_EventHandler@estatVal 000F                         ?_DHCP_Manage 0001  
                         _ETH_GetMAC 796C                            putch@data 0002  
                       TCP_Send@data 00B6                  Network_Manage@nowPv 021E  
                         _ETH_Read32 7B36                           _ETH_Read16 8008  
          ETH_TxComputeChecksum@cksm 0017            ETH_TxComputeChecksum@seed 0011  
                           memcmp@s1 0007                             memcmp@s2 0002  
                         _ETH_Insert 7D52              ETH_Copy@txBufferAddress 000F  
                      ?_ARPV4_Packet 0001                      ETH_Write32@data 0003  
                    ETH_Write16@data 0003                        ?_ARPV4_Lookup 0002  
                 __end_of_waitForDMA 0000                             memset@p1 0002  
                         _ETH_Write8 86D4                    ??_DHCP_WriteZeros 0006  
                      ?_ARPV4_Update 0001                _receivedRemoteAddress 0196  
         __end_of_ETH_ResetByteCount 877C                             intlevel1 0000  
                           intlevel2 0000                            sprintf@ap 0027  
                          sprintf@pb 0028                            sprintf@wh 001C  
       __size_of_DEMO_TCP_EchoServer 011C                       _Network_Manage 78EC  
                   ___lwmod@dividend 0009                      UDP_Receive@hptr 00A1  
       __size_of_TCP_ParseTCPOptions 0110       __size_of_ETH_RxComputeChecksum 00C6  
                   ??_ADC_Initialize 0002                        _lcd_init_pins 87D6  
      __end_of_ETH_RxComputeChecksum 7060                         _rtcc_handler 84CA  
                    ??_ARPV4_Request 0013                          ARPV4_Init@x 0002  
                   _SPI_ExchangeByte 8798                          ??_uart_init 0002  
                __end_of_SYSLOG_Init 839A                     ??_TCP_SocketInit 000C  
                           printf@ap 0021                           _TCB_Insert 7EDE  
                           printf@pb 0022                     ??_TCP_SocketPoll 000C  
                        ??_rtcc_init 0002             __size_of_ENCx24_PHYWrite 002C  
               IPV4_Send@totalLength 0026                        ?_ICMP_Receive 005A  
                           sprintf@f 001E                 ETH_CheckLinkUp@value 000F  
                   DHCP_Handler@myip 0093                        ?_ENCx24_Write 0005  
                    ETH_WriteBlock@p 0007        IPV4_PseudoHeaderChecksum@cksm 000A  
                    ___lwmod@divisor 000B                      ARPV4_Packet@ret 0032  
                     ??_ARPV4_Packet 000F                      ___lwmod@counter 000D  
                        _UDP_Receive 6DE4                       ??_ARPV4_Lookup 0006  
       __size_of_ETH_SendSystemReset 0072           TCP_PayloadSave@buffer_size 00C1  
                     ??_ARPV4_Update 0002                           _TCP_Listen 7868  
                         _IPv4_Start 681E                    Network_Manage@now 017F  
                         _TCP_Update 5772               __end_of_Network_Manage 796C  
                        ?_ARPV4_Init 0001                      DHCP_Handler@v16 0083  
                      ENCx24_Write@a 0008                         ?_ENCx24_Read 0005  
            __end_of_TCP_GetRxLength 7BFC                          ENCx24_BFC@a 0008  
                       ENCx24_Read@a 000A                         ENCx24_Read@v 0008  
                        ENCx24_BFS@a 0008                   Network_Read@header 0170  
                        ?_ENCx24_BFC 0005                          ?_ENCx24_BFS 0005  
      __size_of_ETH_NextPacketUpdate 0070                         UDP_Receive@x 009F  
                     _lcd_write_data 85EC                       ?_lcd_init_pins 0001  
                     _lcd_write_ctrl 860C                         UDP_Send@cksm 002D  
                   ETH_Insert@offset 000D  
